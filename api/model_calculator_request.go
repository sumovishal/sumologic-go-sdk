/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// CalculatorRequest Details of the request
type CalculatorRequest struct {
	// Identifier of the deployment in which the parent org is present.
	ParentDeploymentId *string `json:"parentDeploymentId,omitempty"`
	// Identifier of the deployment in which the child org is present.
	DeploymentId *string `json:"deploymentId,omitempty"`
	// length of the trial period.
	TrialPlanPeriod *int32 `json:"trialPlanPeriod,omitempty"`
	Baselines *Baselines `json:"baselines,omitempty"`
}

// NewCalculatorRequest instantiates a new CalculatorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCalculatorRequest() *CalculatorRequest {
	this := CalculatorRequest{}
	return &this
}

// NewCalculatorRequestWithDefaults instantiates a new CalculatorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCalculatorRequestWithDefaults() *CalculatorRequest {
	this := CalculatorRequest{}
	return &this
}

// GetParentDeploymentId returns the ParentDeploymentId field value if set, zero value otherwise.
func (o *CalculatorRequest) GetParentDeploymentId() string {
	if o == nil || o.ParentDeploymentId == nil {
		var ret string
		return ret
	}
	return *o.ParentDeploymentId
}

// GetParentDeploymentIdOk returns a tuple with the ParentDeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalculatorRequest) GetParentDeploymentIdOk() (*string, bool) {
	if o == nil || o.ParentDeploymentId == nil {
		return nil, false
	}
	return o.ParentDeploymentId, true
}

// HasParentDeploymentId returns a boolean if a field has been set.
func (o *CalculatorRequest) HasParentDeploymentId() bool {
	if o != nil && o.ParentDeploymentId != nil {
		return true
	}

	return false
}

// SetParentDeploymentId gets a reference to the given string and assigns it to the ParentDeploymentId field.
func (o *CalculatorRequest) SetParentDeploymentId(v string) {
	o.ParentDeploymentId = &v
}

// GetDeploymentId returns the DeploymentId field value if set, zero value otherwise.
func (o *CalculatorRequest) GetDeploymentId() string {
	if o == nil || o.DeploymentId == nil {
		var ret string
		return ret
	}
	return *o.DeploymentId
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalculatorRequest) GetDeploymentIdOk() (*string, bool) {
	if o == nil || o.DeploymentId == nil {
		return nil, false
	}
	return o.DeploymentId, true
}

// HasDeploymentId returns a boolean if a field has been set.
func (o *CalculatorRequest) HasDeploymentId() bool {
	if o != nil && o.DeploymentId != nil {
		return true
	}

	return false
}

// SetDeploymentId gets a reference to the given string and assigns it to the DeploymentId field.
func (o *CalculatorRequest) SetDeploymentId(v string) {
	o.DeploymentId = &v
}

// GetTrialPlanPeriod returns the TrialPlanPeriod field value if set, zero value otherwise.
func (o *CalculatorRequest) GetTrialPlanPeriod() int32 {
	if o == nil || o.TrialPlanPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TrialPlanPeriod
}

// GetTrialPlanPeriodOk returns a tuple with the TrialPlanPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalculatorRequest) GetTrialPlanPeriodOk() (*int32, bool) {
	if o == nil || o.TrialPlanPeriod == nil {
		return nil, false
	}
	return o.TrialPlanPeriod, true
}

// HasTrialPlanPeriod returns a boolean if a field has been set.
func (o *CalculatorRequest) HasTrialPlanPeriod() bool {
	if o != nil && o.TrialPlanPeriod != nil {
		return true
	}

	return false
}

// SetTrialPlanPeriod gets a reference to the given int32 and assigns it to the TrialPlanPeriod field.
func (o *CalculatorRequest) SetTrialPlanPeriod(v int32) {
	o.TrialPlanPeriod = &v
}

// GetBaselines returns the Baselines field value if set, zero value otherwise.
func (o *CalculatorRequest) GetBaselines() Baselines {
	if o == nil || o.Baselines == nil {
		var ret Baselines
		return ret
	}
	return *o.Baselines
}

// GetBaselinesOk returns a tuple with the Baselines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalculatorRequest) GetBaselinesOk() (*Baselines, bool) {
	if o == nil || o.Baselines == nil {
		return nil, false
	}
	return o.Baselines, true
}

// HasBaselines returns a boolean if a field has been set.
func (o *CalculatorRequest) HasBaselines() bool {
	if o != nil && o.Baselines != nil {
		return true
	}

	return false
}

// SetBaselines gets a reference to the given Baselines and assigns it to the Baselines field.
func (o *CalculatorRequest) SetBaselines(v Baselines) {
	o.Baselines = &v
}

func (o CalculatorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ParentDeploymentId != nil {
		toSerialize["parentDeploymentId"] = o.ParentDeploymentId
	}
	if o.DeploymentId != nil {
		toSerialize["deploymentId"] = o.DeploymentId
	}
	if o.TrialPlanPeriod != nil {
		toSerialize["trialPlanPeriod"] = o.TrialPlanPeriod
	}
	if o.Baselines != nil {
		toSerialize["baselines"] = o.Baselines
	}
	return json.Marshal(toSerialize)
}

type NullableCalculatorRequest struct {
	value *CalculatorRequest
	isSet bool
}

func (v NullableCalculatorRequest) Get() *CalculatorRequest {
	return v.value
}

func (v *NullableCalculatorRequest) Set(val *CalculatorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCalculatorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCalculatorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCalculatorRequest(val *CalculatorRequest) *NullableCalculatorRequest {
	return &NullableCalculatorRequest{value: val, isSet: true}
}

func (v NullableCalculatorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCalculatorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


