/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AsyncUpgradeAppJobStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AsyncUpgradeAppJobStatus{}

// AsyncUpgradeAppJobStatus Status of the upgrade app async job.
type AsyncUpgradeAppJobStatus struct {
	// Whether or not the request is in progress (`InProgress`), has completed successfully (`Success`), or has completed with an error (`Failed`).
	Status string `json:"status"`
	// Instance identifier of the upgraded app. This field is not set yet but is a placeholder for future use.
	InstanceId *string `json:"instanceId,omitempty"`
	// Path of the folder in which the app was upgraded.
	Path *string `json:"path,omitempty"`
	// Identifier of the folder in which the app was upgraded.
	FolderId *string `json:"folderId,omitempty"`
	Error *ErrorDescription `json:"error,omitempty"`
}

type _AsyncUpgradeAppJobStatus AsyncUpgradeAppJobStatus

// NewAsyncUpgradeAppJobStatus instantiates a new AsyncUpgradeAppJobStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAsyncUpgradeAppJobStatus(status string) *AsyncUpgradeAppJobStatus {
	this := AsyncUpgradeAppJobStatus{}
	this.Status = status
	return &this
}

// NewAsyncUpgradeAppJobStatusWithDefaults instantiates a new AsyncUpgradeAppJobStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAsyncUpgradeAppJobStatusWithDefaults() *AsyncUpgradeAppJobStatus {
	this := AsyncUpgradeAppJobStatus{}
	return &this
}

// GetStatus returns the Status field value
func (o *AsyncUpgradeAppJobStatus) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AsyncUpgradeAppJobStatus) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AsyncUpgradeAppJobStatus) SetStatus(v string) {
	o.Status = v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *AsyncUpgradeAppJobStatus) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId) {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncUpgradeAppJobStatus) GetInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *AsyncUpgradeAppJobStatus) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *AsyncUpgradeAppJobStatus) SetInstanceId(v string) {
	o.InstanceId = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *AsyncUpgradeAppJobStatus) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncUpgradeAppJobStatus) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *AsyncUpgradeAppJobStatus) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *AsyncUpgradeAppJobStatus) SetPath(v string) {
	o.Path = &v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *AsyncUpgradeAppJobStatus) GetFolderId() string {
	if o == nil || IsNil(o.FolderId) {
		var ret string
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncUpgradeAppJobStatus) GetFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.FolderId) {
		return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *AsyncUpgradeAppJobStatus) HasFolderId() bool {
	if o != nil && !IsNil(o.FolderId) {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *AsyncUpgradeAppJobStatus) SetFolderId(v string) {
	o.FolderId = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *AsyncUpgradeAppJobStatus) GetError() ErrorDescription {
	if o == nil || IsNil(o.Error) {
		var ret ErrorDescription
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncUpgradeAppJobStatus) GetErrorOk() (*ErrorDescription, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *AsyncUpgradeAppJobStatus) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorDescription and assigns it to the Error field.
func (o *AsyncUpgradeAppJobStatus) SetError(v ErrorDescription) {
	o.Error = &v
}

func (o AsyncUpgradeAppJobStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AsyncUpgradeAppJobStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.FolderId) {
		toSerialize["folderId"] = o.FolderId
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

func (o *AsyncUpgradeAppJobStatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAsyncUpgradeAppJobStatus := _AsyncUpgradeAppJobStatus{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAsyncUpgradeAppJobStatus)

	if err != nil {
		return err
	}

	*o = AsyncUpgradeAppJobStatus(varAsyncUpgradeAppJobStatus)

	return err
}

type NullableAsyncUpgradeAppJobStatus struct {
	value *AsyncUpgradeAppJobStatus
	isSet bool
}

func (v NullableAsyncUpgradeAppJobStatus) Get() *AsyncUpgradeAppJobStatus {
	return v.value
}

func (v *NullableAsyncUpgradeAppJobStatus) Set(val *AsyncUpgradeAppJobStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAsyncUpgradeAppJobStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAsyncUpgradeAppJobStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAsyncUpgradeAppJobStatus(val *AsyncUpgradeAppJobStatus) *NullableAsyncUpgradeAppJobStatus {
	return &NullableAsyncUpgradeAppJobStatus{value: val, isSet: true}
}

func (v NullableAsyncUpgradeAppJobStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAsyncUpgradeAppJobStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


