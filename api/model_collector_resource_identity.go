/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CollectorResourceIdentity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectorResourceIdentity{}

// CollectorResourceIdentity struct for CollectorResourceIdentity
type CollectorResourceIdentity struct {
	ResourceIdentity
}

// NewCollectorResourceIdentity instantiates a new CollectorResourceIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectorResourceIdentity(id string, type_ string) *CollectorResourceIdentity {
	this := CollectorResourceIdentity{}
	this.Id = id
	var name string = "Unknown"
	this.Name = &name
	this.Type = type_
	return &this
}

// NewCollectorResourceIdentityWithDefaults instantiates a new CollectorResourceIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectorResourceIdentityWithDefaults() *CollectorResourceIdentity {
	this := CollectorResourceIdentity{}
	return &this
}

func (o CollectorResourceIdentity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectorResourceIdentity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedResourceIdentity, errResourceIdentity := json.Marshal(o.ResourceIdentity)
	if errResourceIdentity != nil {
		return map[string]interface{}{}, errResourceIdentity
	}
	errResourceIdentity = json.Unmarshal([]byte(serializedResourceIdentity), &toSerialize)
	if errResourceIdentity != nil {
		return map[string]interface{}{}, errResourceIdentity
	}
	return toSerialize, nil
}

type NullableCollectorResourceIdentity struct {
	value *CollectorResourceIdentity
	isSet bool
}

func (v NullableCollectorResourceIdentity) Get() *CollectorResourceIdentity {
	return v.value
}

func (v *NullableCollectorResourceIdentity) Set(val *CollectorResourceIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectorResourceIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectorResourceIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectorResourceIdentity(val *CollectorResourceIdentity) *NullableCollectorResourceIdentity {
	return &NullableCollectorResourceIdentity{value: val, isSet: true}
}

func (v NullableCollectorResourceIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectorResourceIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


