/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EndpointDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointDefinition{}

// EndpointDefinition Endpoint creation request object.
type EndpointDefinition struct {
	// Unique name of endpoint.
	Name string `json:"name"`
	// Address of endpoint.
	Url string `json:"url"`
	// Schema of the input table to endpoint.
	InputSchema string `json:"inputSchema"`
	// Schema of the output table from endpoint.
	OutputSchema string `json:"outputSchema"`
	// HTTP headers for endpoint.
	Headers string `json:"headers"`
}

// NewEndpointDefinition instantiates a new EndpointDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointDefinition(name string, url string, inputSchema string, outputSchema string, headers string) *EndpointDefinition {
	this := EndpointDefinition{}
	this.Name = name
	this.Url = url
	this.InputSchema = inputSchema
	this.OutputSchema = outputSchema
	this.Headers = headers
	return &this
}

// NewEndpointDefinitionWithDefaults instantiates a new EndpointDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointDefinitionWithDefaults() *EndpointDefinition {
	this := EndpointDefinition{}
	return &this
}

// GetName returns the Name field value
func (o *EndpointDefinition) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EndpointDefinition) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EndpointDefinition) SetName(v string) {
	o.Name = v
}

// GetUrl returns the Url field value
func (o *EndpointDefinition) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *EndpointDefinition) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *EndpointDefinition) SetUrl(v string) {
	o.Url = v
}

// GetInputSchema returns the InputSchema field value
func (o *EndpointDefinition) GetInputSchema() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InputSchema
}

// GetInputSchemaOk returns a tuple with the InputSchema field value
// and a boolean to check if the value has been set.
func (o *EndpointDefinition) GetInputSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputSchema, true
}

// SetInputSchema sets field value
func (o *EndpointDefinition) SetInputSchema(v string) {
	o.InputSchema = v
}

// GetOutputSchema returns the OutputSchema field value
func (o *EndpointDefinition) GetOutputSchema() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputSchema
}

// GetOutputSchemaOk returns a tuple with the OutputSchema field value
// and a boolean to check if the value has been set.
func (o *EndpointDefinition) GetOutputSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputSchema, true
}

// SetOutputSchema sets field value
func (o *EndpointDefinition) SetOutputSchema(v string) {
	o.OutputSchema = v
}

// GetHeaders returns the Headers field value
func (o *EndpointDefinition) GetHeaders() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value
// and a boolean to check if the value has been set.
func (o *EndpointDefinition) GetHeadersOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Headers, true
}

// SetHeaders sets field value
func (o *EndpointDefinition) SetHeaders(v string) {
	o.Headers = v
}

func (o EndpointDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["url"] = o.Url
	toSerialize["inputSchema"] = o.InputSchema
	toSerialize["outputSchema"] = o.OutputSchema
	toSerialize["headers"] = o.Headers
	return toSerialize, nil
}

type NullableEndpointDefinition struct {
	value *EndpointDefinition
	isSet bool
}

func (v NullableEndpointDefinition) Get() *EndpointDefinition {
	return v.value
}

func (v *NullableEndpointDefinition) Set(val *EndpointDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointDefinition(val *EndpointDefinition) *NullableEndpointDefinition {
	return &NullableEndpointDefinition{value: val, isSet: true}
}

func (v NullableEndpointDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


