/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the ScheduledSearchEstimatedUsageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledSearchEstimatedUsageResponse{}

// ScheduledSearchEstimatedUsageResponse struct for ScheduledSearchEstimatedUsageResponse
type ScheduledSearchEstimatedUsageResponse struct {
	// Scan estimate detail for a particular tier.
	ScanEstimates []ScanEstimateDetails `json:"scanEstimates,omitempty"`
}

// NewScheduledSearchEstimatedUsageResponse instantiates a new ScheduledSearchEstimatedUsageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledSearchEstimatedUsageResponse() *ScheduledSearchEstimatedUsageResponse {
	this := ScheduledSearchEstimatedUsageResponse{}
	return &this
}

// NewScheduledSearchEstimatedUsageResponseWithDefaults instantiates a new ScheduledSearchEstimatedUsageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledSearchEstimatedUsageResponseWithDefaults() *ScheduledSearchEstimatedUsageResponse {
	this := ScheduledSearchEstimatedUsageResponse{}
	return &this
}

// GetScanEstimates returns the ScanEstimates field value if set, zero value otherwise.
func (o *ScheduledSearchEstimatedUsageResponse) GetScanEstimates() []ScanEstimateDetails {
	if o == nil || IsNil(o.ScanEstimates) {
		var ret []ScanEstimateDetails
		return ret
	}
	return o.ScanEstimates
}

// GetScanEstimatesOk returns a tuple with the ScanEstimates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledSearchEstimatedUsageResponse) GetScanEstimatesOk() ([]ScanEstimateDetails, bool) {
	if o == nil || IsNil(o.ScanEstimates) {
		return nil, false
	}
	return o.ScanEstimates, true
}

// HasScanEstimates returns a boolean if a field has been set.
func (o *ScheduledSearchEstimatedUsageResponse) HasScanEstimates() bool {
	if o != nil && !IsNil(o.ScanEstimates) {
		return true
	}

	return false
}

// SetScanEstimates gets a reference to the given []ScanEstimateDetails and assigns it to the ScanEstimates field.
func (o *ScheduledSearchEstimatedUsageResponse) SetScanEstimates(v []ScanEstimateDetails) {
	o.ScanEstimates = v
}

func (o ScheduledSearchEstimatedUsageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledSearchEstimatedUsageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScanEstimates) {
		toSerialize["scanEstimates"] = o.ScanEstimates
	}
	return toSerialize, nil
}

type NullableScheduledSearchEstimatedUsageResponse struct {
	value *ScheduledSearchEstimatedUsageResponse
	isSet bool
}

func (v NullableScheduledSearchEstimatedUsageResponse) Get() *ScheduledSearchEstimatedUsageResponse {
	return v.value
}

func (v *NullableScheduledSearchEstimatedUsageResponse) Set(val *ScheduledSearchEstimatedUsageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledSearchEstimatedUsageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledSearchEstimatedUsageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledSearchEstimatedUsageResponse(val *ScheduledSearchEstimatedUsageResponse) *NullableScheduledSearchEstimatedUsageResponse {
	return &NullableScheduledSearchEstimatedUsageResponse{value: val, isSet: true}
}

func (v NullableScheduledSearchEstimatedUsageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledSearchEstimatedUsageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


