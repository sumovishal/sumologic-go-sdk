/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// TestConnectionResponse struct for TestConnectionResponse
type TestConnectionResponse struct {
	// Status code of the response of the connection test.
	StatusCode int32 `json:"statusCode"`
	// Content of the response of the connection test.
	ResponseContent string `json:"responseContent"`
}

// NewTestConnectionResponse instantiates a new TestConnectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestConnectionResponse(statusCode int32, responseContent string) *TestConnectionResponse {
	this := TestConnectionResponse{}
	this.StatusCode = statusCode
	this.ResponseContent = responseContent
	return &this
}

// NewTestConnectionResponseWithDefaults instantiates a new TestConnectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestConnectionResponseWithDefaults() *TestConnectionResponse {
	this := TestConnectionResponse{}
	return &this
}

// GetStatusCode returns the StatusCode field value
func (o *TestConnectionResponse) GetStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *TestConnectionResponse) GetStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *TestConnectionResponse) SetStatusCode(v int32) {
	o.StatusCode = v
}

// GetResponseContent returns the ResponseContent field value
func (o *TestConnectionResponse) GetResponseContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseContent
}

// GetResponseContentOk returns a tuple with the ResponseContent field value
// and a boolean to check if the value has been set.
func (o *TestConnectionResponse) GetResponseContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseContent, true
}

// SetResponseContent sets field value
func (o *TestConnectionResponse) SetResponseContent(v string) {
	o.ResponseContent = v
}

func (o TestConnectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["statusCode"] = o.StatusCode
	}
	if true {
		toSerialize["responseContent"] = o.ResponseContent
	}
	return json.Marshal(toSerialize)
}

type NullableTestConnectionResponse struct {
	value *TestConnectionResponse
	isSet bool
}

func (v NullableTestConnectionResponse) Get() *TestConnectionResponse {
	return v.value
}

func (v *NullableTestConnectionResponse) Set(val *TestConnectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTestConnectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTestConnectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestConnectionResponse(val *TestConnectionResponse) *NullableTestConnectionResponse {
	return &NullableTestConnectionResponse{value: val, isSet: true}
}

func (v NullableTestConnectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestConnectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


