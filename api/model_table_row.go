/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TableRow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TableRow{}

// TableRow Lookup table row column and column value.
type TableRow struct {
	// Name of the column of the table.
	ColumnName string `json:"columnName"`
	// Value of the specified column.
	ColumnValue string `json:"columnValue"`
}

// NewTableRow instantiates a new TableRow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableRow(columnName string, columnValue string) *TableRow {
	this := TableRow{}
	this.ColumnName = columnName
	this.ColumnValue = columnValue
	return &this
}

// NewTableRowWithDefaults instantiates a new TableRow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableRowWithDefaults() *TableRow {
	this := TableRow{}
	return &this
}

// GetColumnName returns the ColumnName field value
func (o *TableRow) GetColumnName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ColumnName
}

// GetColumnNameOk returns a tuple with the ColumnName field value
// and a boolean to check if the value has been set.
func (o *TableRow) GetColumnNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ColumnName, true
}

// SetColumnName sets field value
func (o *TableRow) SetColumnName(v string) {
	o.ColumnName = v
}

// GetColumnValue returns the ColumnValue field value
func (o *TableRow) GetColumnValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ColumnValue
}

// GetColumnValueOk returns a tuple with the ColumnValue field value
// and a boolean to check if the value has been set.
func (o *TableRow) GetColumnValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ColumnValue, true
}

// SetColumnValue sets field value
func (o *TableRow) SetColumnValue(v string) {
	o.ColumnValue = v
}

func (o TableRow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TableRow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["columnName"] = o.ColumnName
	toSerialize["columnValue"] = o.ColumnValue
	return toSerialize, nil
}

type NullableTableRow struct {
	value *TableRow
	isSet bool
}

func (v NullableTableRow) Get() *TableRow {
	return v.value
}

func (v *NullableTableRow) Set(val *TableRow) {
	v.value = val
	v.isSet = true
}

func (v NullableTableRow) IsSet() bool {
	return v.isSet
}

func (v *NullableTableRow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableRow(val *TableRow) *NullableTableRow {
	return &NullableTableRow{value: val, isSet: true}
}

func (v NullableTableRow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableRow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


