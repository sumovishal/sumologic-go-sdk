/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// EpochTimeRangeBoundary struct for EpochTimeRangeBoundary
type EpochTimeRangeBoundary struct {
	TimeRangeBoundary
	// Starting point in time as a number of milliseconds since the epoch. For example `1538392220000`
	EpochMillis int64 `json:"epochMillis"`
}

// NewEpochTimeRangeBoundary instantiates a new EpochTimeRangeBoundary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEpochTimeRangeBoundary(epochMillis int64, type_ string) *EpochTimeRangeBoundary {
	this := EpochTimeRangeBoundary{}
	this.Type = type_
	this.EpochMillis = epochMillis
	return &this
}

// NewEpochTimeRangeBoundaryWithDefaults instantiates a new EpochTimeRangeBoundary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEpochTimeRangeBoundaryWithDefaults() *EpochTimeRangeBoundary {
	this := EpochTimeRangeBoundary{}
	return &this
}

// GetEpochMillis returns the EpochMillis field value
func (o *EpochTimeRangeBoundary) GetEpochMillis() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EpochMillis
}

// GetEpochMillisOk returns a tuple with the EpochMillis field value
// and a boolean to check if the value has been set.
func (o *EpochTimeRangeBoundary) GetEpochMillisOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EpochMillis, true
}

// SetEpochMillis sets field value
func (o *EpochTimeRangeBoundary) SetEpochMillis(v int64) {
	o.EpochMillis = v
}

func (o EpochTimeRangeBoundary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedTimeRangeBoundary, errTimeRangeBoundary := json.Marshal(o.TimeRangeBoundary)
	if errTimeRangeBoundary != nil {
		return []byte{}, errTimeRangeBoundary
	}
	errTimeRangeBoundary = json.Unmarshal([]byte(serializedTimeRangeBoundary), &toSerialize)
	if errTimeRangeBoundary != nil {
		return []byte{}, errTimeRangeBoundary
	}
	if true {
		toSerialize["epochMillis"] = o.EpochMillis
	}
	return json.Marshal(toSerialize)
}

type NullableEpochTimeRangeBoundary struct {
	value *EpochTimeRangeBoundary
	isSet bool
}

func (v NullableEpochTimeRangeBoundary) Get() *EpochTimeRangeBoundary {
	return v.value
}

func (v *NullableEpochTimeRangeBoundary) Set(val *EpochTimeRangeBoundary) {
	v.value = val
	v.isSet = true
}

func (v NullableEpochTimeRangeBoundary) IsSet() bool {
	return v.isSet
}

func (v *NullableEpochTimeRangeBoundary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEpochTimeRangeBoundary(val *EpochTimeRangeBoundary) *NullableEpochTimeRangeBoundary {
	return &NullableEpochTimeRangeBoundary{value: val, isSet: true}
}

func (v NullableEpochTimeRangeBoundary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEpochTimeRangeBoundary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


