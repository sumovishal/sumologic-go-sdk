/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// CompleteLiteralTimeRangeAllOf struct for CompleteLiteralTimeRangeAllOf
type CompleteLiteralTimeRangeAllOf struct {
	// Name of the complete time range. Possible values are: - `today`, - `yesterday`, - `previous_week`, - `previous_month`.
	RangeName string `json:"rangeName"`
}

// NewCompleteLiteralTimeRangeAllOf instantiates a new CompleteLiteralTimeRangeAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompleteLiteralTimeRangeAllOf(rangeName string) *CompleteLiteralTimeRangeAllOf {
	this := CompleteLiteralTimeRangeAllOf{}
	this.RangeName = rangeName
	return &this
}

// NewCompleteLiteralTimeRangeAllOfWithDefaults instantiates a new CompleteLiteralTimeRangeAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompleteLiteralTimeRangeAllOfWithDefaults() *CompleteLiteralTimeRangeAllOf {
	this := CompleteLiteralTimeRangeAllOf{}
	return &this
}

// GetRangeName returns the RangeName field value
func (o *CompleteLiteralTimeRangeAllOf) GetRangeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RangeName
}

// GetRangeNameOk returns a tuple with the RangeName field value
// and a boolean to check if the value has been set.
func (o *CompleteLiteralTimeRangeAllOf) GetRangeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RangeName, true
}

// SetRangeName sets field value
func (o *CompleteLiteralTimeRangeAllOf) SetRangeName(v string) {
	o.RangeName = v
}

func (o CompleteLiteralTimeRangeAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rangeName"] = o.RangeName
	}
	return json.Marshal(toSerialize)
}

type NullableCompleteLiteralTimeRangeAllOf struct {
	value *CompleteLiteralTimeRangeAllOf
	isSet bool
}

func (v NullableCompleteLiteralTimeRangeAllOf) Get() *CompleteLiteralTimeRangeAllOf {
	return v.value
}

func (v *NullableCompleteLiteralTimeRangeAllOf) Set(val *CompleteLiteralTimeRangeAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCompleteLiteralTimeRangeAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCompleteLiteralTimeRangeAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompleteLiteralTimeRangeAllOf(val *CompleteLiteralTimeRangeAllOf) *NullableCompleteLiteralTimeRangeAllOf {
	return &NullableCompleteLiteralTimeRangeAllOf{value: val, isSet: true}
}

func (v NullableCompleteLiteralTimeRangeAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompleteLiteralTimeRangeAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


