/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the OTCProcessHighMemoryUsageTracker type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OTCProcessHighMemoryUsageTracker{}

// OTCProcessHighMemoryUsageTracker struct for OTCProcessHighMemoryUsageTracker
type OTCProcessHighMemoryUsageTracker struct {
	TrackerIdentity
	// Event type.
	EventType *string `json:"eventType,omitempty"`
	// The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.
	InstanceId *string `json:"instanceId,omitempty"`
	// The collector instance address, e.g. `172.16.1.14`.
	InstanceAddress *string `json:"instanceAddress,omitempty"`
	// The collector memory usage in bytes, e.g. `142606592`
	MemoryUsage *string `json:"memoryUsage,omitempty"`
	// The collector memory limit (if set) in bytes, e.g. `4000000000`
	MemoryLimit *string `json:"memoryLimit,omitempty"`
}

// NewOTCProcessHighMemoryUsageTracker instantiates a new OTCProcessHighMemoryUsageTracker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOTCProcessHighMemoryUsageTracker(trackerId string, error_ string, description string) *OTCProcessHighMemoryUsageTracker {
	this := OTCProcessHighMemoryUsageTracker{}
	this.TrackerId = trackerId
	this.Error = error_
	this.Description = description
	return &this
}

// NewOTCProcessHighMemoryUsageTrackerWithDefaults instantiates a new OTCProcessHighMemoryUsageTracker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOTCProcessHighMemoryUsageTrackerWithDefaults() *OTCProcessHighMemoryUsageTracker {
	this := OTCProcessHighMemoryUsageTracker{}
	return &this
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *OTCProcessHighMemoryUsageTracker) GetEventType() string {
	if o == nil || IsNil(o.EventType) {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTCProcessHighMemoryUsageTracker) GetEventTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EventType) {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *OTCProcessHighMemoryUsageTracker) HasEventType() bool {
	if o != nil && !IsNil(o.EventType) {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *OTCProcessHighMemoryUsageTracker) SetEventType(v string) {
	o.EventType = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *OTCProcessHighMemoryUsageTracker) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId) {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTCProcessHighMemoryUsageTracker) GetInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *OTCProcessHighMemoryUsageTracker) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *OTCProcessHighMemoryUsageTracker) SetInstanceId(v string) {
	o.InstanceId = &v
}

// GetInstanceAddress returns the InstanceAddress field value if set, zero value otherwise.
func (o *OTCProcessHighMemoryUsageTracker) GetInstanceAddress() string {
	if o == nil || IsNil(o.InstanceAddress) {
		var ret string
		return ret
	}
	return *o.InstanceAddress
}

// GetInstanceAddressOk returns a tuple with the InstanceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTCProcessHighMemoryUsageTracker) GetInstanceAddressOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceAddress) {
		return nil, false
	}
	return o.InstanceAddress, true
}

// HasInstanceAddress returns a boolean if a field has been set.
func (o *OTCProcessHighMemoryUsageTracker) HasInstanceAddress() bool {
	if o != nil && !IsNil(o.InstanceAddress) {
		return true
	}

	return false
}

// SetInstanceAddress gets a reference to the given string and assigns it to the InstanceAddress field.
func (o *OTCProcessHighMemoryUsageTracker) SetInstanceAddress(v string) {
	o.InstanceAddress = &v
}

// GetMemoryUsage returns the MemoryUsage field value if set, zero value otherwise.
func (o *OTCProcessHighMemoryUsageTracker) GetMemoryUsage() string {
	if o == nil || IsNil(o.MemoryUsage) {
		var ret string
		return ret
	}
	return *o.MemoryUsage
}

// GetMemoryUsageOk returns a tuple with the MemoryUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTCProcessHighMemoryUsageTracker) GetMemoryUsageOk() (*string, bool) {
	if o == nil || IsNil(o.MemoryUsage) {
		return nil, false
	}
	return o.MemoryUsage, true
}

// HasMemoryUsage returns a boolean if a field has been set.
func (o *OTCProcessHighMemoryUsageTracker) HasMemoryUsage() bool {
	if o != nil && !IsNil(o.MemoryUsage) {
		return true
	}

	return false
}

// SetMemoryUsage gets a reference to the given string and assigns it to the MemoryUsage field.
func (o *OTCProcessHighMemoryUsageTracker) SetMemoryUsage(v string) {
	o.MemoryUsage = &v
}

// GetMemoryLimit returns the MemoryLimit field value if set, zero value otherwise.
func (o *OTCProcessHighMemoryUsageTracker) GetMemoryLimit() string {
	if o == nil || IsNil(o.MemoryLimit) {
		var ret string
		return ret
	}
	return *o.MemoryLimit
}

// GetMemoryLimitOk returns a tuple with the MemoryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTCProcessHighMemoryUsageTracker) GetMemoryLimitOk() (*string, bool) {
	if o == nil || IsNil(o.MemoryLimit) {
		return nil, false
	}
	return o.MemoryLimit, true
}

// HasMemoryLimit returns a boolean if a field has been set.
func (o *OTCProcessHighMemoryUsageTracker) HasMemoryLimit() bool {
	if o != nil && !IsNil(o.MemoryLimit) {
		return true
	}

	return false
}

// SetMemoryLimit gets a reference to the given string and assigns it to the MemoryLimit field.
func (o *OTCProcessHighMemoryUsageTracker) SetMemoryLimit(v string) {
	o.MemoryLimit = &v
}

func (o OTCProcessHighMemoryUsageTracker) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OTCProcessHighMemoryUsageTracker) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedTrackerIdentity, errTrackerIdentity := json.Marshal(o.TrackerIdentity)
	if errTrackerIdentity != nil {
		return map[string]interface{}{}, errTrackerIdentity
	}
	errTrackerIdentity = json.Unmarshal([]byte(serializedTrackerIdentity), &toSerialize)
	if errTrackerIdentity != nil {
		return map[string]interface{}{}, errTrackerIdentity
	}
	if !IsNil(o.EventType) {
		toSerialize["eventType"] = o.EventType
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	if !IsNil(o.InstanceAddress) {
		toSerialize["instanceAddress"] = o.InstanceAddress
	}
	if !IsNil(o.MemoryUsage) {
		toSerialize["memoryUsage"] = o.MemoryUsage
	}
	if !IsNil(o.MemoryLimit) {
		toSerialize["memoryLimit"] = o.MemoryLimit
	}
	return toSerialize, nil
}

type NullableOTCProcessHighMemoryUsageTracker struct {
	value *OTCProcessHighMemoryUsageTracker
	isSet bool
}

func (v NullableOTCProcessHighMemoryUsageTracker) Get() *OTCProcessHighMemoryUsageTracker {
	return v.value
}

func (v *NullableOTCProcessHighMemoryUsageTracker) Set(val *OTCProcessHighMemoryUsageTracker) {
	v.value = val
	v.isSet = true
}

func (v NullableOTCProcessHighMemoryUsageTracker) IsSet() bool {
	return v.isSet
}

func (v *NullableOTCProcessHighMemoryUsageTracker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOTCProcessHighMemoryUsageTracker(val *OTCProcessHighMemoryUsageTracker) *NullableOTCProcessHighMemoryUsageTracker {
	return &NullableOTCProcessHighMemoryUsageTracker{value: val, isSet: true}
}

func (v NullableOTCProcessHighMemoryUsageTracker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOTCProcessHighMemoryUsageTracker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


