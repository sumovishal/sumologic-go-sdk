/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the ListTagResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTagResult{}

// ListTagResult struct for ListTagResult
type ListTagResult struct {
	// List of Tag Dictionary Values (e.g. Tag Keys or Tag Values).
	Result []string `json:"result"`
}

// NewListTagResult instantiates a new ListTagResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTagResult(result []string) *ListTagResult {
	this := ListTagResult{}
	this.Result = result
	return &this
}

// NewListTagResultWithDefaults instantiates a new ListTagResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTagResultWithDefaults() *ListTagResult {
	this := ListTagResult{}
	return &this
}

// GetResult returns the Result field value
func (o *ListTagResult) GetResult() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *ListTagResult) GetResultOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Result, true
}

// SetResult sets field value
func (o *ListTagResult) SetResult(v []string) {
	o.Result = v
}

func (o ListTagResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTagResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	return toSerialize, nil
}

type NullableListTagResult struct {
	value *ListTagResult
	isSet bool
}

func (v NullableListTagResult) Get() *ListTagResult {
	return v.value
}

func (v *NullableListTagResult) Set(val *ListTagResult) {
	v.value = val
	v.isSet = true
}

func (v NullableListTagResult) IsSet() bool {
	return v.isSet
}

func (v *NullableListTagResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTagResult(val *ListTagResult) *NullableListTagResult {
	return &NullableListTagResult{value: val, isSet: true}
}

func (v NullableListTagResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTagResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


