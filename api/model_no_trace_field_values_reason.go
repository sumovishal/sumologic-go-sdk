/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// NoTraceFieldValuesReason struct for NoTraceFieldValuesReason
type NoTraceFieldValuesReason struct {
	// A code uniquely identifying the reason for the lack of trace field values. Possible values: `HighCardinalityField`, `AutocompleteDisabled`.
	Code string `json:"code"`
	// A short English-language description of the reason.
	Message string `json:"message"`
}

// NewNoTraceFieldValuesReason instantiates a new NoTraceFieldValuesReason object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoTraceFieldValuesReason(code string, message string) *NoTraceFieldValuesReason {
	this := NoTraceFieldValuesReason{}
	this.Code = code
	this.Message = message
	return &this
}

// NewNoTraceFieldValuesReasonWithDefaults instantiates a new NoTraceFieldValuesReason object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoTraceFieldValuesReasonWithDefaults() *NoTraceFieldValuesReason {
	this := NoTraceFieldValuesReason{}
	return &this
}

// GetCode returns the Code field value
func (o *NoTraceFieldValuesReason) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *NoTraceFieldValuesReason) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *NoTraceFieldValuesReason) SetCode(v string) {
	o.Code = v
}

// GetMessage returns the Message field value
func (o *NoTraceFieldValuesReason) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *NoTraceFieldValuesReason) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *NoTraceFieldValuesReason) SetMessage(v string) {
	o.Message = v
}

func (o NoTraceFieldValuesReason) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableNoTraceFieldValuesReason struct {
	value *NoTraceFieldValuesReason
	isSet bool
}

func (v NullableNoTraceFieldValuesReason) Get() *NoTraceFieldValuesReason {
	return v.value
}

func (v *NullableNoTraceFieldValuesReason) Set(val *NoTraceFieldValuesReason) {
	v.value = val
	v.isSet = true
}

func (v NullableNoTraceFieldValuesReason) IsSet() bool {
	return v.isSet
}

func (v *NullableNoTraceFieldValuesReason) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoTraceFieldValuesReason(val *NoTraceFieldValuesReason) *NullableNoTraceFieldValuesReason {
	return &NullableNoTraceFieldValuesReason{value: val, isSet: true}
}

func (v NullableNoTraceFieldValuesReason) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoTraceFieldValuesReason) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


