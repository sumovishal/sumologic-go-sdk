/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StaticSeriesDataPointAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StaticSeriesDataPointAllOf{}

// StaticSeriesDataPointAllOf Data point of static series.
type StaticSeriesDataPointAllOf struct {
	// Epoch unix time stamp.
	X int64 `json:"x"`
	// The value of the data point.
	Y float64 `json:"y"`
}

// NewStaticSeriesDataPointAllOf instantiates a new StaticSeriesDataPointAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStaticSeriesDataPointAllOf(x int64, y float64) *StaticSeriesDataPointAllOf {
	this := StaticSeriesDataPointAllOf{}
	this.X = x
	this.Y = y
	return &this
}

// NewStaticSeriesDataPointAllOfWithDefaults instantiates a new StaticSeriesDataPointAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStaticSeriesDataPointAllOfWithDefaults() *StaticSeriesDataPointAllOf {
	this := StaticSeriesDataPointAllOf{}
	return &this
}

// GetX returns the X field value
func (o *StaticSeriesDataPointAllOf) GetX() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.X
}

// GetXOk returns a tuple with the X field value
// and a boolean to check if the value has been set.
func (o *StaticSeriesDataPointAllOf) GetXOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.X, true
}

// SetX sets field value
func (o *StaticSeriesDataPointAllOf) SetX(v int64) {
	o.X = v
}

// GetY returns the Y field value
func (o *StaticSeriesDataPointAllOf) GetY() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Y
}

// GetYOk returns a tuple with the Y field value
// and a boolean to check if the value has been set.
func (o *StaticSeriesDataPointAllOf) GetYOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Y, true
}

// SetY sets field value
func (o *StaticSeriesDataPointAllOf) SetY(v float64) {
	o.Y = v
}

func (o StaticSeriesDataPointAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StaticSeriesDataPointAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["x"] = o.X
	toSerialize["y"] = o.Y
	return toSerialize, nil
}

type NullableStaticSeriesDataPointAllOf struct {
	value *StaticSeriesDataPointAllOf
	isSet bool
}

func (v NullableStaticSeriesDataPointAllOf) Get() *StaticSeriesDataPointAllOf {
	return v.value
}

func (v *NullableStaticSeriesDataPointAllOf) Set(val *StaticSeriesDataPointAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableStaticSeriesDataPointAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableStaticSeriesDataPointAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStaticSeriesDataPointAllOf(val *StaticSeriesDataPointAllOf) *NullableStaticSeriesDataPointAllOf {
	return &NullableStaticSeriesDataPointAllOf{value: val, isSet: true}
}

func (v NullableStaticSeriesDataPointAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStaticSeriesDataPointAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


