/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the OTCollectorHealthIncidentsTracker type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OTCollectorHealthIncidentsTracker{}

// OTCollectorHealthIncidentsTracker Health incident information.
type OTCollectorHealthIncidentsTracker struct {
	// Number of errors associated with the OT Collector.
	ErrorsCount *int32 `json:"errorsCount,omitempty"`
	// Number of warnings associated with the OT Collector.
	WarningsCount *int32 `json:"warningsCount,omitempty"`
}

// NewOTCollectorHealthIncidentsTracker instantiates a new OTCollectorHealthIncidentsTracker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOTCollectorHealthIncidentsTracker() *OTCollectorHealthIncidentsTracker {
	this := OTCollectorHealthIncidentsTracker{}
	return &this
}

// NewOTCollectorHealthIncidentsTrackerWithDefaults instantiates a new OTCollectorHealthIncidentsTracker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOTCollectorHealthIncidentsTrackerWithDefaults() *OTCollectorHealthIncidentsTracker {
	this := OTCollectorHealthIncidentsTracker{}
	return &this
}

// GetErrorsCount returns the ErrorsCount field value if set, zero value otherwise.
func (o *OTCollectorHealthIncidentsTracker) GetErrorsCount() int32 {
	if o == nil || IsNil(o.ErrorsCount) {
		var ret int32
		return ret
	}
	return *o.ErrorsCount
}

// GetErrorsCountOk returns a tuple with the ErrorsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTCollectorHealthIncidentsTracker) GetErrorsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorsCount) {
		return nil, false
	}
	return o.ErrorsCount, true
}

// HasErrorsCount returns a boolean if a field has been set.
func (o *OTCollectorHealthIncidentsTracker) HasErrorsCount() bool {
	if o != nil && !IsNil(o.ErrorsCount) {
		return true
	}

	return false
}

// SetErrorsCount gets a reference to the given int32 and assigns it to the ErrorsCount field.
func (o *OTCollectorHealthIncidentsTracker) SetErrorsCount(v int32) {
	o.ErrorsCount = &v
}

// GetWarningsCount returns the WarningsCount field value if set, zero value otherwise.
func (o *OTCollectorHealthIncidentsTracker) GetWarningsCount() int32 {
	if o == nil || IsNil(o.WarningsCount) {
		var ret int32
		return ret
	}
	return *o.WarningsCount
}

// GetWarningsCountOk returns a tuple with the WarningsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTCollectorHealthIncidentsTracker) GetWarningsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.WarningsCount) {
		return nil, false
	}
	return o.WarningsCount, true
}

// HasWarningsCount returns a boolean if a field has been set.
func (o *OTCollectorHealthIncidentsTracker) HasWarningsCount() bool {
	if o != nil && !IsNil(o.WarningsCount) {
		return true
	}

	return false
}

// SetWarningsCount gets a reference to the given int32 and assigns it to the WarningsCount field.
func (o *OTCollectorHealthIncidentsTracker) SetWarningsCount(v int32) {
	o.WarningsCount = &v
}

func (o OTCollectorHealthIncidentsTracker) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OTCollectorHealthIncidentsTracker) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorsCount) {
		toSerialize["errorsCount"] = o.ErrorsCount
	}
	if !IsNil(o.WarningsCount) {
		toSerialize["warningsCount"] = o.WarningsCount
	}
	return toSerialize, nil
}

type NullableOTCollectorHealthIncidentsTracker struct {
	value *OTCollectorHealthIncidentsTracker
	isSet bool
}

func (v NullableOTCollectorHealthIncidentsTracker) Get() *OTCollectorHealthIncidentsTracker {
	return v.value
}

func (v *NullableOTCollectorHealthIncidentsTracker) Set(val *OTCollectorHealthIncidentsTracker) {
	v.value = val
	v.isSet = true
}

func (v NullableOTCollectorHealthIncidentsTracker) IsSet() bool {
	return v.isSet
}

func (v *NullableOTCollectorHealthIncidentsTracker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOTCollectorHealthIncidentsTracker(val *OTCollectorHealthIncidentsTracker) *NullableOTCollectorHealthIncidentsTracker {
	return &NullableOTCollectorHealthIncidentsTracker{value: val, isSet: true}
}

func (v NullableOTCollectorHealthIncidentsTracker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOTCollectorHealthIncidentsTracker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


