/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// ListIngestBudgetsResponse struct for ListIngestBudgetsResponse
type ListIngestBudgetsResponse struct {
	// List of ingest budgets.
	Data []IngestBudget `json:"data"`
	// Next continuation token.
	Next *string `json:"next,omitempty"`
}

// NewListIngestBudgetsResponse instantiates a new ListIngestBudgetsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIngestBudgetsResponse(data []IngestBudget) *ListIngestBudgetsResponse {
	this := ListIngestBudgetsResponse{}
	this.Data = data
	return &this
}

// NewListIngestBudgetsResponseWithDefaults instantiates a new ListIngestBudgetsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIngestBudgetsResponseWithDefaults() *ListIngestBudgetsResponse {
	this := ListIngestBudgetsResponse{}
	return &this
}

// GetData returns the Data field value
func (o *ListIngestBudgetsResponse) GetData() []IngestBudget {
	if o == nil {
		var ret []IngestBudget
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ListIngestBudgetsResponse) GetDataOk() ([]IngestBudget, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ListIngestBudgetsResponse) SetData(v []IngestBudget) {
	o.Data = v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *ListIngestBudgetsResponse) GetNext() string {
	if o == nil || o.Next == nil {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIngestBudgetsResponse) GetNextOk() (*string, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *ListIngestBudgetsResponse) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *ListIngestBudgetsResponse) SetNext(v string) {
	o.Next = &v
}

func (o ListIngestBudgetsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	return json.Marshal(toSerialize)
}

type NullableListIngestBudgetsResponse struct {
	value *ListIngestBudgetsResponse
	isSet bool
}

func (v NullableListIngestBudgetsResponse) Get() *ListIngestBudgetsResponse {
	return v.value
}

func (v *NullableListIngestBudgetsResponse) Set(val *ListIngestBudgetsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListIngestBudgetsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListIngestBudgetsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIngestBudgetsResponse(val *ListIngestBudgetsResponse) *NullableListIngestBudgetsResponse {
	return &NullableListIngestBudgetsResponse{value: val, isSet: true}
}

func (v NullableListIngestBudgetsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIngestBudgetsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


