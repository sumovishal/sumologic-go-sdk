/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CollectorRegistrationTokenResponseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectorRegistrationTokenResponseAllOf{}

// CollectorRegistrationTokenResponseAllOf struct for CollectorRegistrationTokenResponseAllOf
type CollectorRegistrationTokenResponseAllOf struct {
	// The token and URL used to register the Collector as an encoded string.
	EncodedTokenAndUrl string `json:"encodedTokenAndUrl"`
}

// NewCollectorRegistrationTokenResponseAllOf instantiates a new CollectorRegistrationTokenResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectorRegistrationTokenResponseAllOf(encodedTokenAndUrl string) *CollectorRegistrationTokenResponseAllOf {
	this := CollectorRegistrationTokenResponseAllOf{}
	this.EncodedTokenAndUrl = encodedTokenAndUrl
	return &this
}

// NewCollectorRegistrationTokenResponseAllOfWithDefaults instantiates a new CollectorRegistrationTokenResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectorRegistrationTokenResponseAllOfWithDefaults() *CollectorRegistrationTokenResponseAllOf {
	this := CollectorRegistrationTokenResponseAllOf{}
	return &this
}

// GetEncodedTokenAndUrl returns the EncodedTokenAndUrl field value
func (o *CollectorRegistrationTokenResponseAllOf) GetEncodedTokenAndUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncodedTokenAndUrl
}

// GetEncodedTokenAndUrlOk returns a tuple with the EncodedTokenAndUrl field value
// and a boolean to check if the value has been set.
func (o *CollectorRegistrationTokenResponseAllOf) GetEncodedTokenAndUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncodedTokenAndUrl, true
}

// SetEncodedTokenAndUrl sets field value
func (o *CollectorRegistrationTokenResponseAllOf) SetEncodedTokenAndUrl(v string) {
	o.EncodedTokenAndUrl = v
}

func (o CollectorRegistrationTokenResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectorRegistrationTokenResponseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["encodedTokenAndUrl"] = o.EncodedTokenAndUrl
	return toSerialize, nil
}

type NullableCollectorRegistrationTokenResponseAllOf struct {
	value *CollectorRegistrationTokenResponseAllOf
	isSet bool
}

func (v NullableCollectorRegistrationTokenResponseAllOf) Get() *CollectorRegistrationTokenResponseAllOf {
	return v.value
}

func (v *NullableCollectorRegistrationTokenResponseAllOf) Set(val *CollectorRegistrationTokenResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectorRegistrationTokenResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectorRegistrationTokenResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectorRegistrationTokenResponseAllOf(val *CollectorRegistrationTokenResponseAllOf) *NullableCollectorRegistrationTokenResponseAllOf {
	return &NullableCollectorRegistrationTokenResponseAllOf{value: val, isSet: true}
}

func (v NullableCollectorRegistrationTokenResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectorRegistrationTokenResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


