/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LogSearchNotificationThresholdSyncDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogSearchNotificationThresholdSyncDefinition{}

// LogSearchNotificationThresholdSyncDefinition struct for LogSearchNotificationThresholdSyncDefinition
type LogSearchNotificationThresholdSyncDefinition struct {
	// This property is deprecated. The system will automatically infer the value of this field from the query going forward, so the user-specified value will no longer be honored. Threshold type. Possible values are:  1. `message`  2. `group`  Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it to `message`.
	ThresholdType *string `json:"thresholdType,omitempty" validate:"regexp=^(message|group)$"`
	// Criterion to be applied when comparing actual result count with expected count. Possible values are:  1. `eq`  2. `gt`  3. `ge`  4. `lt`  5. `le`
	Operator string `json:"operator" validate:"regexp=^(eq|gt|ge|lt|le)$"`
	// Expected result count.
	Count int32 `json:"count"`
}

type _LogSearchNotificationThresholdSyncDefinition LogSearchNotificationThresholdSyncDefinition

// NewLogSearchNotificationThresholdSyncDefinition instantiates a new LogSearchNotificationThresholdSyncDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogSearchNotificationThresholdSyncDefinition(operator string, count int32) *LogSearchNotificationThresholdSyncDefinition {
	this := LogSearchNotificationThresholdSyncDefinition{}
	this.Operator = operator
	this.Count = count
	return &this
}

// NewLogSearchNotificationThresholdSyncDefinitionWithDefaults instantiates a new LogSearchNotificationThresholdSyncDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogSearchNotificationThresholdSyncDefinitionWithDefaults() *LogSearchNotificationThresholdSyncDefinition {
	this := LogSearchNotificationThresholdSyncDefinition{}
	return &this
}

// GetThresholdType returns the ThresholdType field value if set, zero value otherwise.
func (o *LogSearchNotificationThresholdSyncDefinition) GetThresholdType() string {
	if o == nil || IsNil(o.ThresholdType) {
		var ret string
		return ret
	}
	return *o.ThresholdType
}

// GetThresholdTypeOk returns a tuple with the ThresholdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSearchNotificationThresholdSyncDefinition) GetThresholdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ThresholdType) {
		return nil, false
	}
	return o.ThresholdType, true
}

// HasThresholdType returns a boolean if a field has been set.
func (o *LogSearchNotificationThresholdSyncDefinition) HasThresholdType() bool {
	if o != nil && !IsNil(o.ThresholdType) {
		return true
	}

	return false
}

// SetThresholdType gets a reference to the given string and assigns it to the ThresholdType field.
func (o *LogSearchNotificationThresholdSyncDefinition) SetThresholdType(v string) {
	o.ThresholdType = &v
}

// GetOperator returns the Operator field value
func (o *LogSearchNotificationThresholdSyncDefinition) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *LogSearchNotificationThresholdSyncDefinition) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *LogSearchNotificationThresholdSyncDefinition) SetOperator(v string) {
	o.Operator = v
}

// GetCount returns the Count field value
func (o *LogSearchNotificationThresholdSyncDefinition) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *LogSearchNotificationThresholdSyncDefinition) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *LogSearchNotificationThresholdSyncDefinition) SetCount(v int32) {
	o.Count = v
}

func (o LogSearchNotificationThresholdSyncDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogSearchNotificationThresholdSyncDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ThresholdType) {
		toSerialize["thresholdType"] = o.ThresholdType
	}
	toSerialize["operator"] = o.Operator
	toSerialize["count"] = o.Count
	return toSerialize, nil
}

func (o *LogSearchNotificationThresholdSyncDefinition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operator",
		"count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogSearchNotificationThresholdSyncDefinition := _LogSearchNotificationThresholdSyncDefinition{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLogSearchNotificationThresholdSyncDefinition)

	if err != nil {
		return err
	}

	*o = LogSearchNotificationThresholdSyncDefinition(varLogSearchNotificationThresholdSyncDefinition)

	return err
}

type NullableLogSearchNotificationThresholdSyncDefinition struct {
	value *LogSearchNotificationThresholdSyncDefinition
	isSet bool
}

func (v NullableLogSearchNotificationThresholdSyncDefinition) Get() *LogSearchNotificationThresholdSyncDefinition {
	return v.value
}

func (v *NullableLogSearchNotificationThresholdSyncDefinition) Set(val *LogSearchNotificationThresholdSyncDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableLogSearchNotificationThresholdSyncDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableLogSearchNotificationThresholdSyncDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogSearchNotificationThresholdSyncDefinition(val *LogSearchNotificationThresholdSyncDefinition) *NullableLogSearchNotificationThresholdSyncDefinition {
	return &NullableLogSearchNotificationThresholdSyncDefinition{value: val, isSet: true}
}

func (v NullableLogSearchNotificationThresholdSyncDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogSearchNotificationThresholdSyncDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


