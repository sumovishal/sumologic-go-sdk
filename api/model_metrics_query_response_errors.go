/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the MetricsQueryResponseErrors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsQueryResponseErrors{}

// MetricsQueryResponseErrors Errors, warnings, and information logged for the query.
type MetricsQueryResponseErrors struct {
	// An identifier for the error; this is unique to the specific API request.
	Id string `json:"id"`
	// A list of one or more causes of the error.
	Errors []ErrorDescription `json:"errors"`
}

// NewMetricsQueryResponseErrors instantiates a new MetricsQueryResponseErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsQueryResponseErrors(id string, errors []ErrorDescription) *MetricsQueryResponseErrors {
	this := MetricsQueryResponseErrors{}
	this.Id = id
	this.Errors = errors
	return &this
}

// NewMetricsQueryResponseErrorsWithDefaults instantiates a new MetricsQueryResponseErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsQueryResponseErrorsWithDefaults() *MetricsQueryResponseErrors {
	this := MetricsQueryResponseErrors{}
	return &this
}

// GetId returns the Id field value
func (o *MetricsQueryResponseErrors) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MetricsQueryResponseErrors) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MetricsQueryResponseErrors) SetId(v string) {
	o.Id = v
}

// GetErrors returns the Errors field value
func (o *MetricsQueryResponseErrors) GetErrors() []ErrorDescription {
	if o == nil {
		var ret []ErrorDescription
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *MetricsQueryResponseErrors) GetErrorsOk() ([]ErrorDescription, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *MetricsQueryResponseErrors) SetErrors(v []ErrorDescription) {
	o.Errors = v
}

func (o MetricsQueryResponseErrors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsQueryResponseErrors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["errors"] = o.Errors
	return toSerialize, nil
}

type NullableMetricsQueryResponseErrors struct {
	value *MetricsQueryResponseErrors
	isSet bool
}

func (v NullableMetricsQueryResponseErrors) Get() *MetricsQueryResponseErrors {
	return v.value
}

func (v *NullableMetricsQueryResponseErrors) Set(val *MetricsQueryResponseErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsQueryResponseErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsQueryResponseErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsQueryResponseErrors(val *MetricsQueryResponseErrors) *NullableMetricsQueryResponseErrors {
	return &NullableMetricsQueryResponseErrors{value: val, isSet: true}
}

func (v NullableMetricsQueryResponseErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsQueryResponseErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


