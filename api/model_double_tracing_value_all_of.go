/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// DoubleTracingValueAllOf struct for DoubleTracingValueAllOf
type DoubleTracingValueAllOf struct {
	Value float64 `json:"value"`
}

// NewDoubleTracingValueAllOf instantiates a new DoubleTracingValueAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDoubleTracingValueAllOf(value float64) *DoubleTracingValueAllOf {
	this := DoubleTracingValueAllOf{}
	this.Value = value
	return &this
}

// NewDoubleTracingValueAllOfWithDefaults instantiates a new DoubleTracingValueAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDoubleTracingValueAllOfWithDefaults() *DoubleTracingValueAllOf {
	this := DoubleTracingValueAllOf{}
	return &this
}

// GetValue returns the Value field value
func (o *DoubleTracingValueAllOf) GetValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *DoubleTracingValueAllOf) GetValueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *DoubleTracingValueAllOf) SetValue(v float64) {
	o.Value = v
}

func (o DoubleTracingValueAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableDoubleTracingValueAllOf struct {
	value *DoubleTracingValueAllOf
	isSet bool
}

func (v NullableDoubleTracingValueAllOf) Get() *DoubleTracingValueAllOf {
	return v.value
}

func (v *NullableDoubleTracingValueAllOf) Set(val *DoubleTracingValueAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDoubleTracingValueAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDoubleTracingValueAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDoubleTracingValueAllOf(val *DoubleTracingValueAllOf) *NullableDoubleTracingValueAllOf {
	return &NullableDoubleTracingValueAllOf{value: val, isSet: true}
}

func (v NullableDoubleTracingValueAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDoubleTracingValueAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


