/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MutingSchedulesLibraryBaseExport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MutingSchedulesLibraryBaseExport{}

// MutingSchedulesLibraryBaseExport struct for MutingSchedulesLibraryBaseExport
type MutingSchedulesLibraryBaseExport struct {
	// Name of the mutingschedule or folder.
	Name string `json:"name"`
	// Description of the mutingschedule or folder.
	Description *string `json:"description,omitempty"`
	// Type of the object model.
	Type string `json:"type"`
}

// NewMutingSchedulesLibraryBaseExport instantiates a new MutingSchedulesLibraryBaseExport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMutingSchedulesLibraryBaseExport(name string, type_ string) *MutingSchedulesLibraryBaseExport {
	this := MutingSchedulesLibraryBaseExport{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewMutingSchedulesLibraryBaseExportWithDefaults instantiates a new MutingSchedulesLibraryBaseExport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMutingSchedulesLibraryBaseExportWithDefaults() *MutingSchedulesLibraryBaseExport {
	this := MutingSchedulesLibraryBaseExport{}
	return &this
}

// GetName returns the Name field value
func (o *MutingSchedulesLibraryBaseExport) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MutingSchedulesLibraryBaseExport) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MutingSchedulesLibraryBaseExport) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MutingSchedulesLibraryBaseExport) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutingSchedulesLibraryBaseExport) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MutingSchedulesLibraryBaseExport) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MutingSchedulesLibraryBaseExport) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value
func (o *MutingSchedulesLibraryBaseExport) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MutingSchedulesLibraryBaseExport) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MutingSchedulesLibraryBaseExport) SetType(v string) {
	o.Type = v
}

func (o MutingSchedulesLibraryBaseExport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MutingSchedulesLibraryBaseExport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableMutingSchedulesLibraryBaseExport struct {
	value *MutingSchedulesLibraryBaseExport
	isSet bool
}

func (v NullableMutingSchedulesLibraryBaseExport) Get() *MutingSchedulesLibraryBaseExport {
	return v.value
}

func (v *NullableMutingSchedulesLibraryBaseExport) Set(val *MutingSchedulesLibraryBaseExport) {
	v.value = val
	v.isSet = true
}

func (v NullableMutingSchedulesLibraryBaseExport) IsSet() bool {
	return v.isSet
}

func (v *NullableMutingSchedulesLibraryBaseExport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutingSchedulesLibraryBaseExport(val *MutingSchedulesLibraryBaseExport) *NullableMutingSchedulesLibraryBaseExport {
	return &NullableMutingSchedulesLibraryBaseExport{value: val, isSet: true}
}

func (v NullableMutingSchedulesLibraryBaseExport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutingSchedulesLibraryBaseExport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


