/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// CpcQueryBucketStatus struct for CpcQueryBucketStatus
type CpcQueryBucketStatus struct {
	// A unique identifier of the bucket.
	BucketId string `json:"bucketId"`
	// Status of the query. Possible values: `Processing`, `Finished`, `Error`, `Canceled`.
	Status string `json:"status"`
	// Descriptive message of the status.
	StatusMessage *string `json:"statusMessage,omitempty"`
}

// NewCpcQueryBucketStatus instantiates a new CpcQueryBucketStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCpcQueryBucketStatus(bucketId string, status string) *CpcQueryBucketStatus {
	this := CpcQueryBucketStatus{}
	this.BucketId = bucketId
	this.Status = status
	return &this
}

// NewCpcQueryBucketStatusWithDefaults instantiates a new CpcQueryBucketStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCpcQueryBucketStatusWithDefaults() *CpcQueryBucketStatus {
	this := CpcQueryBucketStatus{}
	return &this
}

// GetBucketId returns the BucketId field value
func (o *CpcQueryBucketStatus) GetBucketId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BucketId
}

// GetBucketIdOk returns a tuple with the BucketId field value
// and a boolean to check if the value has been set.
func (o *CpcQueryBucketStatus) GetBucketIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketId, true
}

// SetBucketId sets field value
func (o *CpcQueryBucketStatus) SetBucketId(v string) {
	o.BucketId = v
}

// GetStatus returns the Status field value
func (o *CpcQueryBucketStatus) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CpcQueryBucketStatus) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CpcQueryBucketStatus) SetStatus(v string) {
	o.Status = v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *CpcQueryBucketStatus) GetStatusMessage() string {
	if o == nil || o.StatusMessage == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpcQueryBucketStatus) GetStatusMessageOk() (*string, bool) {
	if o == nil || o.StatusMessage == nil {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *CpcQueryBucketStatus) HasStatusMessage() bool {
	if o != nil && o.StatusMessage != nil {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *CpcQueryBucketStatus) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

func (o CpcQueryBucketStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bucketId"] = o.BucketId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.StatusMessage != nil {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	return json.Marshal(toSerialize)
}

type NullableCpcQueryBucketStatus struct {
	value *CpcQueryBucketStatus
	isSet bool
}

func (v NullableCpcQueryBucketStatus) Get() *CpcQueryBucketStatus {
	return v.value
}

func (v *NullableCpcQueryBucketStatus) Set(val *CpcQueryBucketStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCpcQueryBucketStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCpcQueryBucketStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCpcQueryBucketStatus(val *CpcQueryBucketStatus) *NullableCpcQueryBucketStatus {
	return &NullableCpcQueryBucketStatus{value: val, isSet: true}
}

func (v NullableCpcQueryBucketStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCpcQueryBucketStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


