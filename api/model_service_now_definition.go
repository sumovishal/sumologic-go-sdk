/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceNowDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceNowDefinition{}

// ServiceNowDefinition struct for ServiceNowDefinition
type ServiceNowDefinition struct {
	ConnectionDefinition
	// URL for the ServiceNow connection.
	Url string `json:"url"`
	// User name for the ServiceNow connection.
	Username string `json:"username"`
	// User password for the ServiceNow connection.
	Password string `json:"password"`
}

// NewServiceNowDefinition instantiates a new ServiceNowDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceNowDefinition(url string, username string, password string, type_ string, name string) *ServiceNowDefinition {
	this := ServiceNowDefinition{}
	this.Type = type_
	this.Name = name
	var description string = ""
	this.Description = &description
	this.Url = url
	this.Username = username
	this.Password = password
	return &this
}

// NewServiceNowDefinitionWithDefaults instantiates a new ServiceNowDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceNowDefinitionWithDefaults() *ServiceNowDefinition {
	this := ServiceNowDefinition{}
	return &this
}

// GetUrl returns the Url field value
func (o *ServiceNowDefinition) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ServiceNowDefinition) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ServiceNowDefinition) SetUrl(v string) {
	o.Url = v
}

// GetUsername returns the Username field value
func (o *ServiceNowDefinition) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *ServiceNowDefinition) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *ServiceNowDefinition) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *ServiceNowDefinition) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ServiceNowDefinition) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ServiceNowDefinition) SetPassword(v string) {
	o.Password = v
}

func (o ServiceNowDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceNowDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedConnectionDefinition, errConnectionDefinition := json.Marshal(o.ConnectionDefinition)
	if errConnectionDefinition != nil {
		return map[string]interface{}{}, errConnectionDefinition
	}
	errConnectionDefinition = json.Unmarshal([]byte(serializedConnectionDefinition), &toSerialize)
	if errConnectionDefinition != nil {
		return map[string]interface{}{}, errConnectionDefinition
	}
	toSerialize["url"] = o.Url
	toSerialize["username"] = o.Username
	toSerialize["password"] = o.Password
	return toSerialize, nil
}

type NullableServiceNowDefinition struct {
	value *ServiceNowDefinition
	isSet bool
}

func (v NullableServiceNowDefinition) Get() *ServiceNowDefinition {
	return v.value
}

func (v *NullableServiceNowDefinition) Set(val *ServiceNowDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceNowDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceNowDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceNowDefinition(val *ServiceNowDefinition) *NullableServiceNowDefinition {
	return &NullableServiceNowDefinition{value: val, isSet: true}
}

func (v NullableServiceNowDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceNowDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


