/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// CollectionCloudWatchListMetricsDeniedTracker struct for CollectionCloudWatchListMetricsDeniedTracker
type CollectionCloudWatchListMetricsDeniedTracker struct {
	TrackerIdentity
	// Event type.
	EventType *string `json:"eventType,omitempty"`
	// The error code from AWS for the request made to get metrics.
	ErrorCode *string `json:"errorCode,omitempty"`
	// The error message from AWS for the request made to get metrics.
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// NewCollectionCloudWatchListMetricsDeniedTracker instantiates a new CollectionCloudWatchListMetricsDeniedTracker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionCloudWatchListMetricsDeniedTracker(trackerId string, error_ string, description string) *CollectionCloudWatchListMetricsDeniedTracker {
	this := CollectionCloudWatchListMetricsDeniedTracker{}
	this.TrackerId = trackerId
	this.Error = error_
	this.Description = description
	return &this
}

// NewCollectionCloudWatchListMetricsDeniedTrackerWithDefaults instantiates a new CollectionCloudWatchListMetricsDeniedTracker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionCloudWatchListMetricsDeniedTrackerWithDefaults() *CollectionCloudWatchListMetricsDeniedTracker {
	this := CollectionCloudWatchListMetricsDeniedTracker{}
	return &this
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *CollectionCloudWatchListMetricsDeniedTracker) GetEventType() string {
	if o == nil || o.EventType == nil {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCloudWatchListMetricsDeniedTracker) GetEventTypeOk() (*string, bool) {
	if o == nil || o.EventType == nil {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *CollectionCloudWatchListMetricsDeniedTracker) HasEventType() bool {
	if o != nil && o.EventType != nil {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *CollectionCloudWatchListMetricsDeniedTracker) SetEventType(v string) {
	o.EventType = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *CollectionCloudWatchListMetricsDeniedTracker) GetErrorCode() string {
	if o == nil || o.ErrorCode == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCloudWatchListMetricsDeniedTracker) GetErrorCodeOk() (*string, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *CollectionCloudWatchListMetricsDeniedTracker) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *CollectionCloudWatchListMetricsDeniedTracker) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *CollectionCloudWatchListMetricsDeniedTracker) GetErrorMessage() string {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionCloudWatchListMetricsDeniedTracker) GetErrorMessageOk() (*string, bool) {
	if o == nil || o.ErrorMessage == nil {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *CollectionCloudWatchListMetricsDeniedTracker) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *CollectionCloudWatchListMetricsDeniedTracker) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

func (o CollectionCloudWatchListMetricsDeniedTracker) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedTrackerIdentity, errTrackerIdentity := json.Marshal(o.TrackerIdentity)
	if errTrackerIdentity != nil {
		return []byte{}, errTrackerIdentity
	}
	errTrackerIdentity = json.Unmarshal([]byte(serializedTrackerIdentity), &toSerialize)
	if errTrackerIdentity != nil {
		return []byte{}, errTrackerIdentity
	}
	if o.EventType != nil {
		toSerialize["eventType"] = o.EventType
	}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorMessage != nil {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionCloudWatchListMetricsDeniedTracker struct {
	value *CollectionCloudWatchListMetricsDeniedTracker
	isSet bool
}

func (v NullableCollectionCloudWatchListMetricsDeniedTracker) Get() *CollectionCloudWatchListMetricsDeniedTracker {
	return v.value
}

func (v *NullableCollectionCloudWatchListMetricsDeniedTracker) Set(val *CollectionCloudWatchListMetricsDeniedTracker) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionCloudWatchListMetricsDeniedTracker) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionCloudWatchListMetricsDeniedTracker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionCloudWatchListMetricsDeniedTracker(val *CollectionCloudWatchListMetricsDeniedTracker) *NullableCollectionCloudWatchListMetricsDeniedTracker {
	return &NullableCollectionCloudWatchListMetricsDeniedTracker{value: val, isSet: true}
}

func (v NullableCollectionCloudWatchListMetricsDeniedTracker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionCloudWatchListMetricsDeniedTracker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


