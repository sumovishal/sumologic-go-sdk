/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"time"
)

// checks if the Iso8601TimeRangeBoundary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Iso8601TimeRangeBoundary{}

// Iso8601TimeRangeBoundary struct for Iso8601TimeRangeBoundary
type Iso8601TimeRangeBoundary struct {
	TimeRangeBoundary
	// Starting point in time as a string in ISO 8601 format. For example `2018-10-01T11:10:20.52+01:00`
	Iso8601Time time.Time `json:"iso8601Time"`
}

// NewIso8601TimeRangeBoundary instantiates a new Iso8601TimeRangeBoundary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIso8601TimeRangeBoundary(iso8601Time time.Time, type_ string) *Iso8601TimeRangeBoundary {
	this := Iso8601TimeRangeBoundary{}
	this.Type = type_
	this.Iso8601Time = iso8601Time
	return &this
}

// NewIso8601TimeRangeBoundaryWithDefaults instantiates a new Iso8601TimeRangeBoundary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIso8601TimeRangeBoundaryWithDefaults() *Iso8601TimeRangeBoundary {
	this := Iso8601TimeRangeBoundary{}
	return &this
}

// GetIso8601Time returns the Iso8601Time field value
func (o *Iso8601TimeRangeBoundary) GetIso8601Time() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Iso8601Time
}

// GetIso8601TimeOk returns a tuple with the Iso8601Time field value
// and a boolean to check if the value has been set.
func (o *Iso8601TimeRangeBoundary) GetIso8601TimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Iso8601Time, true
}

// SetIso8601Time sets field value
func (o *Iso8601TimeRangeBoundary) SetIso8601Time(v time.Time) {
	o.Iso8601Time = v
}

func (o Iso8601TimeRangeBoundary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Iso8601TimeRangeBoundary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedTimeRangeBoundary, errTimeRangeBoundary := json.Marshal(o.TimeRangeBoundary)
	if errTimeRangeBoundary != nil {
		return map[string]interface{}{}, errTimeRangeBoundary
	}
	errTimeRangeBoundary = json.Unmarshal([]byte(serializedTimeRangeBoundary), &toSerialize)
	if errTimeRangeBoundary != nil {
		return map[string]interface{}{}, errTimeRangeBoundary
	}
	toSerialize["iso8601Time"] = o.Iso8601Time
	return toSerialize, nil
}

type NullableIso8601TimeRangeBoundary struct {
	value *Iso8601TimeRangeBoundary
	isSet bool
}

func (v NullableIso8601TimeRangeBoundary) Get() *Iso8601TimeRangeBoundary {
	return v.value
}

func (v *NullableIso8601TimeRangeBoundary) Set(val *Iso8601TimeRangeBoundary) {
	v.value = val
	v.isSet = true
}

func (v NullableIso8601TimeRangeBoundary) IsSet() bool {
	return v.isSet
}

func (v *NullableIso8601TimeRangeBoundary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIso8601TimeRangeBoundary(val *Iso8601TimeRangeBoundary) *NullableIso8601TimeRangeBoundary {
	return &NullableIso8601TimeRangeBoundary{value: val, isSet: true}
}

func (v NullableIso8601TimeRangeBoundary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIso8601TimeRangeBoundary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


