/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// RoleModelAllOf struct for RoleModelAllOf
type RoleModelAllOf struct {
	// Unique identifier for the role.
	Id string `json:"id"`
	// Role is system or user defined.
	SystemDefined *bool `json:"systemDefined,omitempty"`
}

// NewRoleModelAllOf instantiates a new RoleModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleModelAllOf(id string) *RoleModelAllOf {
	this := RoleModelAllOf{}
	this.Id = id
	return &this
}

// NewRoleModelAllOfWithDefaults instantiates a new RoleModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleModelAllOfWithDefaults() *RoleModelAllOf {
	this := RoleModelAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *RoleModelAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RoleModelAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RoleModelAllOf) SetId(v string) {
	o.Id = v
}

// GetSystemDefined returns the SystemDefined field value if set, zero value otherwise.
func (o *RoleModelAllOf) GetSystemDefined() bool {
	if o == nil || o.SystemDefined == nil {
		var ret bool
		return ret
	}
	return *o.SystemDefined
}

// GetSystemDefinedOk returns a tuple with the SystemDefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleModelAllOf) GetSystemDefinedOk() (*bool, bool) {
	if o == nil || o.SystemDefined == nil {
		return nil, false
	}
	return o.SystemDefined, true
}

// HasSystemDefined returns a boolean if a field has been set.
func (o *RoleModelAllOf) HasSystemDefined() bool {
	if o != nil && o.SystemDefined != nil {
		return true
	}

	return false
}

// SetSystemDefined gets a reference to the given bool and assigns it to the SystemDefined field.
func (o *RoleModelAllOf) SetSystemDefined(v bool) {
	o.SystemDefined = &v
}

func (o RoleModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.SystemDefined != nil {
		toSerialize["systemDefined"] = o.SystemDefined
	}
	return json.Marshal(toSerialize)
}

type NullableRoleModelAllOf struct {
	value *RoleModelAllOf
	isSet bool
}

func (v NullableRoleModelAllOf) Get() *RoleModelAllOf {
	return v.value
}

func (v *NullableRoleModelAllOf) Set(val *RoleModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleModelAllOf(val *RoleModelAllOf) *NullableRoleModelAllOf {
	return &NullableRoleModelAllOf{value: val, isSet: true}
}

func (v NullableRoleModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


