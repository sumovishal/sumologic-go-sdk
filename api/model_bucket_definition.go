/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the BucketDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketDefinition{}

// BucketDefinition struct for BucketDefinition
type BucketDefinition struct {
	// Name of the S3 data forwarding destination.
	DestinationName string `json:"destinationName"`
	// Description of the S3 data forwarding destination.
	Description *string `json:"description,omitempty"`
	// AWS IAM authentication method used for access. Possible values are: 1. `AccessKey` 2. `RoleBased`
	AuthenticationMode string `json:"authenticationMode"`
	// The AWS Access ID to access the S3 bucket.
	AccessKeyId *string `json:"accessKeyId,omitempty"`
	// The AWS Secret Key to access the S3 bucket.
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`
	// The AWS Role ARN to access the S3 bucket.
	RoleArn *string `json:"roleArn,omitempty"`
	// The region where the S3 bucket is located.
	Region *string `json:"region,omitempty"`
	// Enable S3 server-side encryption.
	Encrypted *bool `json:"encrypted,omitempty"`
	// True if the destination is Active.
	Enabled *bool `json:"enabled,omitempty"`
	// The name of the Amazon S3 bucket.
	BucketName string `json:"bucketName"`
	// Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
	CreatedAt time.Time `json:"createdAt"`
	// Identifier of the user who created the resource.
	CreatedBy string `json:"createdBy"`
	// Last modification timestamp in UTC.
	ModifiedAt time.Time `json:"modifiedAt"`
	// Identifier of the user who last modified the resource.
	ModifiedBy string `json:"modifiedBy"`
	// The unique identifier of the data forwarding destination.
	Id string `json:"id"`
	// True if invalidated by the system.
	InvalidatedBySystem *bool `json:"invalidatedBySystem,omitempty"`
}

// NewBucketDefinition instantiates a new BucketDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketDefinition(destinationName string, authenticationMode string, bucketName string, createdAt time.Time, createdBy string, modifiedAt time.Time, modifiedBy string, id string) *BucketDefinition {
	this := BucketDefinition{}
	this.DestinationName = destinationName
	this.AuthenticationMode = authenticationMode
	this.BucketName = bucketName
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Id = id
	return &this
}

// NewBucketDefinitionWithDefaults instantiates a new BucketDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketDefinitionWithDefaults() *BucketDefinition {
	this := BucketDefinition{}
	return &this
}

// GetDestinationName returns the DestinationName field value
func (o *BucketDefinition) GetDestinationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationName
}

// GetDestinationNameOk returns a tuple with the DestinationName field value
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetDestinationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationName, true
}

// SetDestinationName sets field value
func (o *BucketDefinition) SetDestinationName(v string) {
	o.DestinationName = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BucketDefinition) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BucketDefinition) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BucketDefinition) SetDescription(v string) {
	o.Description = &v
}

// GetAuthenticationMode returns the AuthenticationMode field value
func (o *BucketDefinition) GetAuthenticationMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationMode
}

// GetAuthenticationModeOk returns a tuple with the AuthenticationMode field value
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetAuthenticationModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationMode, true
}

// SetAuthenticationMode sets field value
func (o *BucketDefinition) SetAuthenticationMode(v string) {
	o.AuthenticationMode = v
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *BucketDefinition) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId) {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeyId) {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *BucketDefinition) HasAccessKeyId() bool {
	if o != nil && !IsNil(o.AccessKeyId) {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *BucketDefinition) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *BucketDefinition) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretAccessKey) {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *BucketDefinition) HasSecretAccessKey() bool {
	if o != nil && !IsNil(o.SecretAccessKey) {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *BucketDefinition) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *BucketDefinition) GetRoleArn() string {
	if o == nil || IsNil(o.RoleArn) {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.RoleArn) {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *BucketDefinition) HasRoleArn() bool {
	if o != nil && !IsNil(o.RoleArn) {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *BucketDefinition) SetRoleArn(v string) {
	o.RoleArn = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *BucketDefinition) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *BucketDefinition) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *BucketDefinition) SetRegion(v string) {
	o.Region = &v
}

// GetEncrypted returns the Encrypted field value if set, zero value otherwise.
func (o *BucketDefinition) GetEncrypted() bool {
	if o == nil || IsNil(o.Encrypted) {
		var ret bool
		return ret
	}
	return *o.Encrypted
}

// GetEncryptedOk returns a tuple with the Encrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetEncryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.Encrypted) {
		return nil, false
	}
	return o.Encrypted, true
}

// HasEncrypted returns a boolean if a field has been set.
func (o *BucketDefinition) HasEncrypted() bool {
	if o != nil && !IsNil(o.Encrypted) {
		return true
	}

	return false
}

// SetEncrypted gets a reference to the given bool and assigns it to the Encrypted field.
func (o *BucketDefinition) SetEncrypted(v bool) {
	o.Encrypted = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *BucketDefinition) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *BucketDefinition) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *BucketDefinition) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetBucketName returns the BucketName field value
func (o *BucketDefinition) GetBucketName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetBucketNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketName, true
}

// SetBucketName sets field value
func (o *BucketDefinition) SetBucketName(v string) {
	o.BucketName = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BucketDefinition) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BucketDefinition) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *BucketDefinition) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *BucketDefinition) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *BucketDefinition) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *BucketDefinition) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *BucketDefinition) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *BucketDefinition) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetId returns the Id field value
func (o *BucketDefinition) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BucketDefinition) SetId(v string) {
	o.Id = v
}

// GetInvalidatedBySystem returns the InvalidatedBySystem field value if set, zero value otherwise.
func (o *BucketDefinition) GetInvalidatedBySystem() bool {
	if o == nil || IsNil(o.InvalidatedBySystem) {
		var ret bool
		return ret
	}
	return *o.InvalidatedBySystem
}

// GetInvalidatedBySystemOk returns a tuple with the InvalidatedBySystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketDefinition) GetInvalidatedBySystemOk() (*bool, bool) {
	if o == nil || IsNil(o.InvalidatedBySystem) {
		return nil, false
	}
	return o.InvalidatedBySystem, true
}

// HasInvalidatedBySystem returns a boolean if a field has been set.
func (o *BucketDefinition) HasInvalidatedBySystem() bool {
	if o != nil && !IsNil(o.InvalidatedBySystem) {
		return true
	}

	return false
}

// SetInvalidatedBySystem gets a reference to the given bool and assigns it to the InvalidatedBySystem field.
func (o *BucketDefinition) SetInvalidatedBySystem(v bool) {
	o.InvalidatedBySystem = &v
}

func (o BucketDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destinationName"] = o.DestinationName
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["authenticationMode"] = o.AuthenticationMode
	if !IsNil(o.AccessKeyId) {
		toSerialize["accessKeyId"] = o.AccessKeyId
	}
	if !IsNil(o.SecretAccessKey) {
		toSerialize["secretAccessKey"] = o.SecretAccessKey
	}
	if !IsNil(o.RoleArn) {
		toSerialize["roleArn"] = o.RoleArn
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Encrypted) {
		toSerialize["encrypted"] = o.Encrypted
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["bucketName"] = o.BucketName
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["modifiedAt"] = o.ModifiedAt
	toSerialize["modifiedBy"] = o.ModifiedBy
	toSerialize["id"] = o.Id
	if !IsNil(o.InvalidatedBySystem) {
		toSerialize["invalidatedBySystem"] = o.InvalidatedBySystem
	}
	return toSerialize, nil
}

type NullableBucketDefinition struct {
	value *BucketDefinition
	isSet bool
}

func (v NullableBucketDefinition) Get() *BucketDefinition {
	return v.value
}

func (v *NullableBucketDefinition) Set(val *BucketDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketDefinition(val *BucketDefinition) *NullableBucketDefinition {
	return &NullableBucketDefinition{value: val, isSet: true}
}

func (v NullableBucketDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


