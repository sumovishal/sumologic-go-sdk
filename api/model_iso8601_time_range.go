/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"time"
)

// Iso8601TimeRange A simple time range class, where the start and end points are specified in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format 
type Iso8601TimeRange struct {
	// Start time in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format
	Start time.Time `json:"start"`
	// End time in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format
	End time.Time `json:"end"`
}

// NewIso8601TimeRange instantiates a new Iso8601TimeRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIso8601TimeRange(start time.Time, end time.Time) *Iso8601TimeRange {
	this := Iso8601TimeRange{}
	this.Start = start
	this.End = end
	return &this
}

// NewIso8601TimeRangeWithDefaults instantiates a new Iso8601TimeRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIso8601TimeRangeWithDefaults() *Iso8601TimeRange {
	this := Iso8601TimeRange{}
	return &this
}

// GetStart returns the Start field value
func (o *Iso8601TimeRange) GetStart() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *Iso8601TimeRange) GetStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *Iso8601TimeRange) SetStart(v time.Time) {
	o.Start = v
}

// GetEnd returns the End field value
func (o *Iso8601TimeRange) GetEnd() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *Iso8601TimeRange) GetEndOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *Iso8601TimeRange) SetEnd(v time.Time) {
	o.End = v
}

func (o Iso8601TimeRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["start"] = o.Start
	}
	if true {
		toSerialize["end"] = o.End
	}
	return json.Marshal(toSerialize)
}

type NullableIso8601TimeRange struct {
	value *Iso8601TimeRange
	isSet bool
}

func (v NullableIso8601TimeRange) Get() *Iso8601TimeRange {
	return v.value
}

func (v *NullableIso8601TimeRange) Set(val *Iso8601TimeRange) {
	v.value = val
	v.isSet = true
}

func (v NullableIso8601TimeRange) IsSet() bool {
	return v.isSet
}

func (v *NullableIso8601TimeRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIso8601TimeRange(val *Iso8601TimeRange) *NullableIso8601TimeRange {
	return &NullableIso8601TimeRange{value: val, isSet: true}
}

func (v NullableIso8601TimeRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIso8601TimeRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


