/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the MutingSchedulesLibraryMutingScheduleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MutingSchedulesLibraryMutingScheduleResponse{}

// MutingSchedulesLibraryMutingScheduleResponse struct for MutingSchedulesLibraryMutingScheduleResponse
type MutingSchedulesLibraryMutingScheduleResponse struct {
	MutingSchedulesLibraryBaseResponse
	Schedule ScheduleDefinition `json:"schedule"`
	Monitor *MonitorScope `json:"monitor,omitempty"`
}

// NewMutingSchedulesLibraryMutingScheduleResponse instantiates a new MutingSchedulesLibraryMutingScheduleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMutingSchedulesLibraryMutingScheduleResponse(schedule ScheduleDefinition, id string, name string, description string, version int64, createdAt time.Time, createdBy string, modifiedAt time.Time, modifiedBy string, parentId string, contentType string, type_ string, isSystem bool, isMutable bool) *MutingSchedulesLibraryMutingScheduleResponse {
	this := MutingSchedulesLibraryMutingScheduleResponse{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.Version = version
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.ParentId = parentId
	this.ContentType = contentType
	this.Type = type_
	this.IsSystem = isSystem
	this.IsMutable = isMutable
	this.Schedule = schedule
	return &this
}

// NewMutingSchedulesLibraryMutingScheduleResponseWithDefaults instantiates a new MutingSchedulesLibraryMutingScheduleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMutingSchedulesLibraryMutingScheduleResponseWithDefaults() *MutingSchedulesLibraryMutingScheduleResponse {
	this := MutingSchedulesLibraryMutingScheduleResponse{}
	return &this
}

// GetSchedule returns the Schedule field value
func (o *MutingSchedulesLibraryMutingScheduleResponse) GetSchedule() ScheduleDefinition {
	if o == nil {
		var ret ScheduleDefinition
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *MutingSchedulesLibraryMutingScheduleResponse) GetScheduleOk() (*ScheduleDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *MutingSchedulesLibraryMutingScheduleResponse) SetSchedule(v ScheduleDefinition) {
	o.Schedule = v
}

// GetMonitor returns the Monitor field value if set, zero value otherwise.
func (o *MutingSchedulesLibraryMutingScheduleResponse) GetMonitor() MonitorScope {
	if o == nil || IsNil(o.Monitor) {
		var ret MonitorScope
		return ret
	}
	return *o.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutingSchedulesLibraryMutingScheduleResponse) GetMonitorOk() (*MonitorScope, bool) {
	if o == nil || IsNil(o.Monitor) {
		return nil, false
	}
	return o.Monitor, true
}

// HasMonitor returns a boolean if a field has been set.
func (o *MutingSchedulesLibraryMutingScheduleResponse) HasMonitor() bool {
	if o != nil && !IsNil(o.Monitor) {
		return true
	}

	return false
}

// SetMonitor gets a reference to the given MonitorScope and assigns it to the Monitor field.
func (o *MutingSchedulesLibraryMutingScheduleResponse) SetMonitor(v MonitorScope) {
	o.Monitor = &v
}

func (o MutingSchedulesLibraryMutingScheduleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MutingSchedulesLibraryMutingScheduleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedMutingSchedulesLibraryBaseResponse, errMutingSchedulesLibraryBaseResponse := json.Marshal(o.MutingSchedulesLibraryBaseResponse)
	if errMutingSchedulesLibraryBaseResponse != nil {
		return map[string]interface{}{}, errMutingSchedulesLibraryBaseResponse
	}
	errMutingSchedulesLibraryBaseResponse = json.Unmarshal([]byte(serializedMutingSchedulesLibraryBaseResponse), &toSerialize)
	if errMutingSchedulesLibraryBaseResponse != nil {
		return map[string]interface{}{}, errMutingSchedulesLibraryBaseResponse
	}
	toSerialize["schedule"] = o.Schedule
	if !IsNil(o.Monitor) {
		toSerialize["monitor"] = o.Monitor
	}
	return toSerialize, nil
}

type NullableMutingSchedulesLibraryMutingScheduleResponse struct {
	value *MutingSchedulesLibraryMutingScheduleResponse
	isSet bool
}

func (v NullableMutingSchedulesLibraryMutingScheduleResponse) Get() *MutingSchedulesLibraryMutingScheduleResponse {
	return v.value
}

func (v *NullableMutingSchedulesLibraryMutingScheduleResponse) Set(val *MutingSchedulesLibraryMutingScheduleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMutingSchedulesLibraryMutingScheduleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMutingSchedulesLibraryMutingScheduleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutingSchedulesLibraryMutingScheduleResponse(val *MutingSchedulesLibraryMutingScheduleResponse) *NullableMutingSchedulesLibraryMutingScheduleResponse {
	return &NullableMutingSchedulesLibraryMutingScheduleResponse{value: val, isSet: true}
}

func (v NullableMutingSchedulesLibraryMutingScheduleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutingSchedulesLibraryMutingScheduleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


