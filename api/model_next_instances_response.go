/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the NextInstancesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NextInstancesResponse{}

// NextInstancesResponse struct for NextInstancesResponse
type NextInstancesResponse struct {
	// list of next instances in epoch
	NextInstances []int64 `json:"nextInstances,omitempty"`
}

// NewNextInstancesResponse instantiates a new NextInstancesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNextInstancesResponse() *NextInstancesResponse {
	this := NextInstancesResponse{}
	return &this
}

// NewNextInstancesResponseWithDefaults instantiates a new NextInstancesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNextInstancesResponseWithDefaults() *NextInstancesResponse {
	this := NextInstancesResponse{}
	return &this
}

// GetNextInstances returns the NextInstances field value if set, zero value otherwise.
func (o *NextInstancesResponse) GetNextInstances() []int64 {
	if o == nil || IsNil(o.NextInstances) {
		var ret []int64
		return ret
	}
	return o.NextInstances
}

// GetNextInstancesOk returns a tuple with the NextInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NextInstancesResponse) GetNextInstancesOk() ([]int64, bool) {
	if o == nil || IsNil(o.NextInstances) {
		return nil, false
	}
	return o.NextInstances, true
}

// HasNextInstances returns a boolean if a field has been set.
func (o *NextInstancesResponse) HasNextInstances() bool {
	if o != nil && !IsNil(o.NextInstances) {
		return true
	}

	return false
}

// SetNextInstances gets a reference to the given []int64 and assigns it to the NextInstances field.
func (o *NextInstancesResponse) SetNextInstances(v []int64) {
	o.NextInstances = v
}

func (o NextInstancesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NextInstancesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NextInstances) {
		toSerialize["nextInstances"] = o.NextInstances
	}
	return toSerialize, nil
}

type NullableNextInstancesResponse struct {
	value *NextInstancesResponse
	isSet bool
}

func (v NullableNextInstancesResponse) Get() *NextInstancesResponse {
	return v.value
}

func (v *NullableNextInstancesResponse) Set(val *NextInstancesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNextInstancesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNextInstancesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNextInstancesResponse(val *NextInstancesResponse) *NullableNextInstancesResponse {
	return &NullableNextInstancesResponse{value: val, isSet: true}
}

func (v NullableNextInstancesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNextInstancesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


