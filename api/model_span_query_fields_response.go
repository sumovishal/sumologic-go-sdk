/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the SpanQueryFieldsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpanQueryFieldsResponse{}

// SpanQueryFieldsResponse struct for SpanQueryFieldsResponse
type SpanQueryFieldsResponse struct {
	// List of span fields.
	Fields []SpanQueryFieldDetail `json:"fields"`
}

// NewSpanQueryFieldsResponse instantiates a new SpanQueryFieldsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpanQueryFieldsResponse(fields []SpanQueryFieldDetail) *SpanQueryFieldsResponse {
	this := SpanQueryFieldsResponse{}
	this.Fields = fields
	return &this
}

// NewSpanQueryFieldsResponseWithDefaults instantiates a new SpanQueryFieldsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpanQueryFieldsResponseWithDefaults() *SpanQueryFieldsResponse {
	this := SpanQueryFieldsResponse{}
	return &this
}

// GetFields returns the Fields field value
func (o *SpanQueryFieldsResponse) GetFields() []SpanQueryFieldDetail {
	if o == nil {
		var ret []SpanQueryFieldDetail
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *SpanQueryFieldsResponse) GetFieldsOk() ([]SpanQueryFieldDetail, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fields, true
}

// SetFields sets field value
func (o *SpanQueryFieldsResponse) SetFields(v []SpanQueryFieldDetail) {
	o.Fields = v
}

func (o SpanQueryFieldsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpanQueryFieldsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fields"] = o.Fields
	return toSerialize, nil
}

type NullableSpanQueryFieldsResponse struct {
	value *SpanQueryFieldsResponse
	isSet bool
}

func (v NullableSpanQueryFieldsResponse) Get() *SpanQueryFieldsResponse {
	return v.value
}

func (v *NullableSpanQueryFieldsResponse) Set(val *SpanQueryFieldsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSpanQueryFieldsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSpanQueryFieldsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpanQueryFieldsResponse(val *SpanQueryFieldsResponse) *NullableSpanQueryFieldsResponse {
	return &NullableSpanQueryFieldsResponse{value: val, isSet: true}
}

func (v NullableSpanQueryFieldsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpanQueryFieldsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


