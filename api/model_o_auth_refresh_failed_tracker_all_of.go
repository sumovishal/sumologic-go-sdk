/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OAuthRefreshFailedTrackerAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OAuthRefreshFailedTrackerAllOf{}

// OAuthRefreshFailedTrackerAllOf struct for OAuthRefreshFailedTrackerAllOf
type OAuthRefreshFailedTrackerAllOf struct {
	// The type of exception received while attempting OAuth.
	ExceptionType *string `json:"exceptionType,omitempty"`
	// The error message received with the failed OAuth request.
	ExceptionMessage *string `json:"exceptionMessage,omitempty"`
}

// NewOAuthRefreshFailedTrackerAllOf instantiates a new OAuthRefreshFailedTrackerAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthRefreshFailedTrackerAllOf() *OAuthRefreshFailedTrackerAllOf {
	this := OAuthRefreshFailedTrackerAllOf{}
	return &this
}

// NewOAuthRefreshFailedTrackerAllOfWithDefaults instantiates a new OAuthRefreshFailedTrackerAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthRefreshFailedTrackerAllOfWithDefaults() *OAuthRefreshFailedTrackerAllOf {
	this := OAuthRefreshFailedTrackerAllOf{}
	return &this
}

// GetExceptionType returns the ExceptionType field value if set, zero value otherwise.
func (o *OAuthRefreshFailedTrackerAllOf) GetExceptionType() string {
	if o == nil || IsNil(o.ExceptionType) {
		var ret string
		return ret
	}
	return *o.ExceptionType
}

// GetExceptionTypeOk returns a tuple with the ExceptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthRefreshFailedTrackerAllOf) GetExceptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExceptionType) {
		return nil, false
	}
	return o.ExceptionType, true
}

// HasExceptionType returns a boolean if a field has been set.
func (o *OAuthRefreshFailedTrackerAllOf) HasExceptionType() bool {
	if o != nil && !IsNil(o.ExceptionType) {
		return true
	}

	return false
}

// SetExceptionType gets a reference to the given string and assigns it to the ExceptionType field.
func (o *OAuthRefreshFailedTrackerAllOf) SetExceptionType(v string) {
	o.ExceptionType = &v
}

// GetExceptionMessage returns the ExceptionMessage field value if set, zero value otherwise.
func (o *OAuthRefreshFailedTrackerAllOf) GetExceptionMessage() string {
	if o == nil || IsNil(o.ExceptionMessage) {
		var ret string
		return ret
	}
	return *o.ExceptionMessage
}

// GetExceptionMessageOk returns a tuple with the ExceptionMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthRefreshFailedTrackerAllOf) GetExceptionMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ExceptionMessage) {
		return nil, false
	}
	return o.ExceptionMessage, true
}

// HasExceptionMessage returns a boolean if a field has been set.
func (o *OAuthRefreshFailedTrackerAllOf) HasExceptionMessage() bool {
	if o != nil && !IsNil(o.ExceptionMessage) {
		return true
	}

	return false
}

// SetExceptionMessage gets a reference to the given string and assigns it to the ExceptionMessage field.
func (o *OAuthRefreshFailedTrackerAllOf) SetExceptionMessage(v string) {
	o.ExceptionMessage = &v
}

func (o OAuthRefreshFailedTrackerAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OAuthRefreshFailedTrackerAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExceptionType) {
		toSerialize["exceptionType"] = o.ExceptionType
	}
	if !IsNil(o.ExceptionMessage) {
		toSerialize["exceptionMessage"] = o.ExceptionMessage
	}
	return toSerialize, nil
}

type NullableOAuthRefreshFailedTrackerAllOf struct {
	value *OAuthRefreshFailedTrackerAllOf
	isSet bool
}

func (v NullableOAuthRefreshFailedTrackerAllOf) Get() *OAuthRefreshFailedTrackerAllOf {
	return v.value
}

func (v *NullableOAuthRefreshFailedTrackerAllOf) Set(val *OAuthRefreshFailedTrackerAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthRefreshFailedTrackerAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthRefreshFailedTrackerAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthRefreshFailedTrackerAllOf(val *OAuthRefreshFailedTrackerAllOf) *NullableOAuthRefreshFailedTrackerAllOf {
	return &NullableOAuthRefreshFailedTrackerAllOf{value: val, isSet: true}
}

func (v NullableOAuthRefreshFailedTrackerAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthRefreshFailedTrackerAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


