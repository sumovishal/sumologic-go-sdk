/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertSearchNotificationSyncDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertSearchNotificationSyncDefinition{}

// AlertSearchNotificationSyncDefinition struct for AlertSearchNotificationSyncDefinition
type AlertSearchNotificationSyncDefinition struct {
	ScheduleNotificationSyncDefinition
	// A String value to uniquely identify a Collector's Source.
	SourceId string `json:"sourceId"`
}

type _AlertSearchNotificationSyncDefinition AlertSearchNotificationSyncDefinition

// NewAlertSearchNotificationSyncDefinition instantiates a new AlertSearchNotificationSyncDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertSearchNotificationSyncDefinition(sourceId string, taskType string) *AlertSearchNotificationSyncDefinition {
	this := AlertSearchNotificationSyncDefinition{}
	this.TaskType = taskType
	this.SourceId = sourceId
	return &this
}

// NewAlertSearchNotificationSyncDefinitionWithDefaults instantiates a new AlertSearchNotificationSyncDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertSearchNotificationSyncDefinitionWithDefaults() *AlertSearchNotificationSyncDefinition {
	this := AlertSearchNotificationSyncDefinition{}
	return &this
}

// GetSourceId returns the SourceId field value
func (o *AlertSearchNotificationSyncDefinition) GetSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
func (o *AlertSearchNotificationSyncDefinition) GetSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceId, true
}

// SetSourceId sets field value
func (o *AlertSearchNotificationSyncDefinition) SetSourceId(v string) {
	o.SourceId = v
}

func (o AlertSearchNotificationSyncDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertSearchNotificationSyncDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedScheduleNotificationSyncDefinition, errScheduleNotificationSyncDefinition := json.Marshal(o.ScheduleNotificationSyncDefinition)
	if errScheduleNotificationSyncDefinition != nil {
		return map[string]interface{}{}, errScheduleNotificationSyncDefinition
	}
	errScheduleNotificationSyncDefinition = json.Unmarshal([]byte(serializedScheduleNotificationSyncDefinition), &toSerialize)
	if errScheduleNotificationSyncDefinition != nil {
		return map[string]interface{}{}, errScheduleNotificationSyncDefinition
	}
	toSerialize["sourceId"] = o.SourceId
	return toSerialize, nil
}

func (o *AlertSearchNotificationSyncDefinition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sourceId",
		"taskType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertSearchNotificationSyncDefinition := _AlertSearchNotificationSyncDefinition{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertSearchNotificationSyncDefinition)

	if err != nil {
		return err
	}

	*o = AlertSearchNotificationSyncDefinition(varAlertSearchNotificationSyncDefinition)

	return err
}

type NullableAlertSearchNotificationSyncDefinition struct {
	value *AlertSearchNotificationSyncDefinition
	isSet bool
}

func (v NullableAlertSearchNotificationSyncDefinition) Get() *AlertSearchNotificationSyncDefinition {
	return v.value
}

func (v *NullableAlertSearchNotificationSyncDefinition) Set(val *AlertSearchNotificationSyncDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertSearchNotificationSyncDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertSearchNotificationSyncDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertSearchNotificationSyncDefinition(val *AlertSearchNotificationSyncDefinition) *NullableAlertSearchNotificationSyncDefinition {
	return &NullableAlertSearchNotificationSyncDefinition{value: val, isSet: true}
}

func (v NullableAlertSearchNotificationSyncDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertSearchNotificationSyncDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


