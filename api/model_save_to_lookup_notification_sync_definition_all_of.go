/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// SaveToLookupNotificationSyncDefinitionAllOf struct for SaveToLookupNotificationSyncDefinitionAllOf
type SaveToLookupNotificationSyncDefinitionAllOf struct {
	// The path of the lookup table that will store the results of the scheduled search.
	LookupFilePath string `json:"lookupFilePath"`
	// This indicates whether the file contents will be merged with existing data in the lookup table or not. If this is true then data with the same primary keys will be updated while the rest of the rows will be appended.
	IsLookupMergeOperation bool `json:"isLookupMergeOperation"`
}

// NewSaveToLookupNotificationSyncDefinitionAllOf instantiates a new SaveToLookupNotificationSyncDefinitionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaveToLookupNotificationSyncDefinitionAllOf(lookupFilePath string, isLookupMergeOperation bool) *SaveToLookupNotificationSyncDefinitionAllOf {
	this := SaveToLookupNotificationSyncDefinitionAllOf{}
	this.LookupFilePath = lookupFilePath
	this.IsLookupMergeOperation = isLookupMergeOperation
	return &this
}

// NewSaveToLookupNotificationSyncDefinitionAllOfWithDefaults instantiates a new SaveToLookupNotificationSyncDefinitionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaveToLookupNotificationSyncDefinitionAllOfWithDefaults() *SaveToLookupNotificationSyncDefinitionAllOf {
	this := SaveToLookupNotificationSyncDefinitionAllOf{}
	return &this
}

// GetLookupFilePath returns the LookupFilePath field value
func (o *SaveToLookupNotificationSyncDefinitionAllOf) GetLookupFilePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LookupFilePath
}

// GetLookupFilePathOk returns a tuple with the LookupFilePath field value
// and a boolean to check if the value has been set.
func (o *SaveToLookupNotificationSyncDefinitionAllOf) GetLookupFilePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LookupFilePath, true
}

// SetLookupFilePath sets field value
func (o *SaveToLookupNotificationSyncDefinitionAllOf) SetLookupFilePath(v string) {
	o.LookupFilePath = v
}

// GetIsLookupMergeOperation returns the IsLookupMergeOperation field value
func (o *SaveToLookupNotificationSyncDefinitionAllOf) GetIsLookupMergeOperation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsLookupMergeOperation
}

// GetIsLookupMergeOperationOk returns a tuple with the IsLookupMergeOperation field value
// and a boolean to check if the value has been set.
func (o *SaveToLookupNotificationSyncDefinitionAllOf) GetIsLookupMergeOperationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLookupMergeOperation, true
}

// SetIsLookupMergeOperation sets field value
func (o *SaveToLookupNotificationSyncDefinitionAllOf) SetIsLookupMergeOperation(v bool) {
	o.IsLookupMergeOperation = v
}

func (o SaveToLookupNotificationSyncDefinitionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["lookupFilePath"] = o.LookupFilePath
	}
	if true {
		toSerialize["isLookupMergeOperation"] = o.IsLookupMergeOperation
	}
	return json.Marshal(toSerialize)
}

type NullableSaveToLookupNotificationSyncDefinitionAllOf struct {
	value *SaveToLookupNotificationSyncDefinitionAllOf
	isSet bool
}

func (v NullableSaveToLookupNotificationSyncDefinitionAllOf) Get() *SaveToLookupNotificationSyncDefinitionAllOf {
	return v.value
}

func (v *NullableSaveToLookupNotificationSyncDefinitionAllOf) Set(val *SaveToLookupNotificationSyncDefinitionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSaveToLookupNotificationSyncDefinitionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSaveToLookupNotificationSyncDefinitionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaveToLookupNotificationSyncDefinitionAllOf(val *SaveToLookupNotificationSyncDefinitionAllOf) *NullableSaveToLookupNotificationSyncDefinitionAllOf {
	return &NullableSaveToLookupNotificationSyncDefinitionAllOf{value: val, isSet: true}
}

func (v NullableSaveToLookupNotificationSyncDefinitionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaveToLookupNotificationSyncDefinitionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


