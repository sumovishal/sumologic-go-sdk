/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// IngestBudgetResourceIdentityAllOf struct for IngestBudgetResourceIdentityAllOf
type IngestBudgetResourceIdentityAllOf struct {
	// The unique field value of the ingest budget v1. This will be empty for v2 budgets.
	IngestBudgetFieldValue *string `json:"ingestBudgetFieldValue,omitempty"`
	// The scope of the ingest budget v2. This will be empty for v1 budgets.
	Scope *string `json:"scope,omitempty"`
}

// NewIngestBudgetResourceIdentityAllOf instantiates a new IngestBudgetResourceIdentityAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestBudgetResourceIdentityAllOf() *IngestBudgetResourceIdentityAllOf {
	this := IngestBudgetResourceIdentityAllOf{}
	var ingestBudgetFieldValue string = "Unknown"
	this.IngestBudgetFieldValue = &ingestBudgetFieldValue
	var scope string = "Unknown"
	this.Scope = &scope
	return &this
}

// NewIngestBudgetResourceIdentityAllOfWithDefaults instantiates a new IngestBudgetResourceIdentityAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestBudgetResourceIdentityAllOfWithDefaults() *IngestBudgetResourceIdentityAllOf {
	this := IngestBudgetResourceIdentityAllOf{}
	var ingestBudgetFieldValue string = "Unknown"
	this.IngestBudgetFieldValue = &ingestBudgetFieldValue
	var scope string = "Unknown"
	this.Scope = &scope
	return &this
}

// GetIngestBudgetFieldValue returns the IngestBudgetFieldValue field value if set, zero value otherwise.
func (o *IngestBudgetResourceIdentityAllOf) GetIngestBudgetFieldValue() string {
	if o == nil || o.IngestBudgetFieldValue == nil {
		var ret string
		return ret
	}
	return *o.IngestBudgetFieldValue
}

// GetIngestBudgetFieldValueOk returns a tuple with the IngestBudgetFieldValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestBudgetResourceIdentityAllOf) GetIngestBudgetFieldValueOk() (*string, bool) {
	if o == nil || o.IngestBudgetFieldValue == nil {
		return nil, false
	}
	return o.IngestBudgetFieldValue, true
}

// HasIngestBudgetFieldValue returns a boolean if a field has been set.
func (o *IngestBudgetResourceIdentityAllOf) HasIngestBudgetFieldValue() bool {
	if o != nil && o.IngestBudgetFieldValue != nil {
		return true
	}

	return false
}

// SetIngestBudgetFieldValue gets a reference to the given string and assigns it to the IngestBudgetFieldValue field.
func (o *IngestBudgetResourceIdentityAllOf) SetIngestBudgetFieldValue(v string) {
	o.IngestBudgetFieldValue = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *IngestBudgetResourceIdentityAllOf) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestBudgetResourceIdentityAllOf) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *IngestBudgetResourceIdentityAllOf) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *IngestBudgetResourceIdentityAllOf) SetScope(v string) {
	o.Scope = &v
}

func (o IngestBudgetResourceIdentityAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IngestBudgetFieldValue != nil {
		toSerialize["ingestBudgetFieldValue"] = o.IngestBudgetFieldValue
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	return json.Marshal(toSerialize)
}

type NullableIngestBudgetResourceIdentityAllOf struct {
	value *IngestBudgetResourceIdentityAllOf
	isSet bool
}

func (v NullableIngestBudgetResourceIdentityAllOf) Get() *IngestBudgetResourceIdentityAllOf {
	return v.value
}

func (v *NullableIngestBudgetResourceIdentityAllOf) Set(val *IngestBudgetResourceIdentityAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestBudgetResourceIdentityAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestBudgetResourceIdentityAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestBudgetResourceIdentityAllOf(val *IngestBudgetResourceIdentityAllOf) *NullableIngestBudgetResourceIdentityAllOf {
	return &NullableIngestBudgetResourceIdentityAllOf{value: val, isSet: true}
}

func (v NullableIngestBudgetResourceIdentityAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestBudgetResourceIdentityAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


