/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// LogSearchQueryTimeRangeBase Definition of a log search with query and timerange.
type LogSearchQueryTimeRangeBase struct {
	// Query to perform.
	QueryString string `json:"queryString"`
	TimeRange ResolvableTimeRange `json:"timeRange"`
	// This has the value `true` if the search is to be run by receipt time and `false` if it is to be run by message time.
	RunByReceiptTime *bool `json:"runByReceiptTime,omitempty"`
	// Definition of the query parameters.
	QueryParameters []LogSearchQueryParameterSyncDefinition `json:"queryParameters,omitempty"`
	// Define the parsing mode to scan the JSON format log messages. Possible values are:   1. `AutoParse`   2. `Manual` In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
	ParsingMode *string `json:"parsingMode,omitempty"`
}

// NewLogSearchQueryTimeRangeBase instantiates a new LogSearchQueryTimeRangeBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogSearchQueryTimeRangeBase(queryString string, timeRange ResolvableTimeRange) *LogSearchQueryTimeRangeBase {
	this := LogSearchQueryTimeRangeBase{}
	this.QueryString = queryString
	this.TimeRange = timeRange
	var runByReceiptTime bool = false
	this.RunByReceiptTime = &runByReceiptTime
	var parsingMode string = "Manual"
	this.ParsingMode = &parsingMode
	return &this
}

// NewLogSearchQueryTimeRangeBaseWithDefaults instantiates a new LogSearchQueryTimeRangeBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogSearchQueryTimeRangeBaseWithDefaults() *LogSearchQueryTimeRangeBase {
	this := LogSearchQueryTimeRangeBase{}
	var runByReceiptTime bool = false
	this.RunByReceiptTime = &runByReceiptTime
	var parsingMode string = "Manual"
	this.ParsingMode = &parsingMode
	return &this
}

// GetQueryString returns the QueryString field value
func (o *LogSearchQueryTimeRangeBase) GetQueryString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueryString
}

// GetQueryStringOk returns a tuple with the QueryString field value
// and a boolean to check if the value has been set.
func (o *LogSearchQueryTimeRangeBase) GetQueryStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueryString, true
}

// SetQueryString sets field value
func (o *LogSearchQueryTimeRangeBase) SetQueryString(v string) {
	o.QueryString = v
}

// GetTimeRange returns the TimeRange field value
func (o *LogSearchQueryTimeRangeBase) GetTimeRange() ResolvableTimeRange {
	if o == nil {
		var ret ResolvableTimeRange
		return ret
	}

	return o.TimeRange
}

// GetTimeRangeOk returns a tuple with the TimeRange field value
// and a boolean to check if the value has been set.
func (o *LogSearchQueryTimeRangeBase) GetTimeRangeOk() (*ResolvableTimeRange, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeRange, true
}

// SetTimeRange sets field value
func (o *LogSearchQueryTimeRangeBase) SetTimeRange(v ResolvableTimeRange) {
	o.TimeRange = v
}

// GetRunByReceiptTime returns the RunByReceiptTime field value if set, zero value otherwise.
func (o *LogSearchQueryTimeRangeBase) GetRunByReceiptTime() bool {
	if o == nil || o.RunByReceiptTime == nil {
		var ret bool
		return ret
	}
	return *o.RunByReceiptTime
}

// GetRunByReceiptTimeOk returns a tuple with the RunByReceiptTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSearchQueryTimeRangeBase) GetRunByReceiptTimeOk() (*bool, bool) {
	if o == nil || o.RunByReceiptTime == nil {
		return nil, false
	}
	return o.RunByReceiptTime, true
}

// HasRunByReceiptTime returns a boolean if a field has been set.
func (o *LogSearchQueryTimeRangeBase) HasRunByReceiptTime() bool {
	if o != nil && o.RunByReceiptTime != nil {
		return true
	}

	return false
}

// SetRunByReceiptTime gets a reference to the given bool and assigns it to the RunByReceiptTime field.
func (o *LogSearchQueryTimeRangeBase) SetRunByReceiptTime(v bool) {
	o.RunByReceiptTime = &v
}

// GetQueryParameters returns the QueryParameters field value if set, zero value otherwise.
func (o *LogSearchQueryTimeRangeBase) GetQueryParameters() []LogSearchQueryParameterSyncDefinition {
	if o == nil || o.QueryParameters == nil {
		var ret []LogSearchQueryParameterSyncDefinition
		return ret
	}
	return o.QueryParameters
}

// GetQueryParametersOk returns a tuple with the QueryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSearchQueryTimeRangeBase) GetQueryParametersOk() ([]LogSearchQueryParameterSyncDefinition, bool) {
	if o == nil || o.QueryParameters == nil {
		return nil, false
	}
	return o.QueryParameters, true
}

// HasQueryParameters returns a boolean if a field has been set.
func (o *LogSearchQueryTimeRangeBase) HasQueryParameters() bool {
	if o != nil && o.QueryParameters != nil {
		return true
	}

	return false
}

// SetQueryParameters gets a reference to the given []LogSearchQueryParameterSyncDefinition and assigns it to the QueryParameters field.
func (o *LogSearchQueryTimeRangeBase) SetQueryParameters(v []LogSearchQueryParameterSyncDefinition) {
	o.QueryParameters = v
}

// GetParsingMode returns the ParsingMode field value if set, zero value otherwise.
func (o *LogSearchQueryTimeRangeBase) GetParsingMode() string {
	if o == nil || o.ParsingMode == nil {
		var ret string
		return ret
	}
	return *o.ParsingMode
}

// GetParsingModeOk returns a tuple with the ParsingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSearchQueryTimeRangeBase) GetParsingModeOk() (*string, bool) {
	if o == nil || o.ParsingMode == nil {
		return nil, false
	}
	return o.ParsingMode, true
}

// HasParsingMode returns a boolean if a field has been set.
func (o *LogSearchQueryTimeRangeBase) HasParsingMode() bool {
	if o != nil && o.ParsingMode != nil {
		return true
	}

	return false
}

// SetParsingMode gets a reference to the given string and assigns it to the ParsingMode field.
func (o *LogSearchQueryTimeRangeBase) SetParsingMode(v string) {
	o.ParsingMode = &v
}

func (o LogSearchQueryTimeRangeBase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["queryString"] = o.QueryString
	}
	if true {
		toSerialize["timeRange"] = o.TimeRange
	}
	if o.RunByReceiptTime != nil {
		toSerialize["runByReceiptTime"] = o.RunByReceiptTime
	}
	if o.QueryParameters != nil {
		toSerialize["queryParameters"] = o.QueryParameters
	}
	if o.ParsingMode != nil {
		toSerialize["parsingMode"] = o.ParsingMode
	}
	return json.Marshal(toSerialize)
}

type NullableLogSearchQueryTimeRangeBase struct {
	value *LogSearchQueryTimeRangeBase
	isSet bool
}

func (v NullableLogSearchQueryTimeRangeBase) Get() *LogSearchQueryTimeRangeBase {
	return v.value
}

func (v *NullableLogSearchQueryTimeRangeBase) Set(val *LogSearchQueryTimeRangeBase) {
	v.value = val
	v.isSet = true
}

func (v NullableLogSearchQueryTimeRangeBase) IsSet() bool {
	return v.isSet
}

func (v *NullableLogSearchQueryTimeRangeBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogSearchQueryTimeRangeBase(val *LogSearchQueryTimeRangeBase) *NullableLogSearchQueryTimeRangeBase {
	return &NullableLogSearchQueryTimeRangeBase{value: val, isSet: true}
}

func (v NullableLogSearchQueryTimeRangeBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogSearchQueryTimeRangeBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


