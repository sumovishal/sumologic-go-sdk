/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the RequestAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestAllOf{}

// RequestAllOf struct for RequestAllOf
type RequestAllOf struct {
	// Compared against threshold query's raw data points to determine success.
	Threshold *float32 `json:"threshold,omitempty"`
	// Comparison function with threshold (LessThan/GreaterThan/LessThanOrEqual/GreaterThanOrEqual).
	Op *string `json:"op,omitempty"`
}

// NewRequestAllOf instantiates a new RequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestAllOf() *RequestAllOf {
	this := RequestAllOf{}
	return &this
}

// NewRequestAllOfWithDefaults instantiates a new RequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestAllOfWithDefaults() *RequestAllOf {
	this := RequestAllOf{}
	return &this
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *RequestAllOf) GetThreshold() float32 {
	if o == nil || IsNil(o.Threshold) {
		var ret float32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *RequestAllOf) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given float32 and assigns it to the Threshold field.
func (o *RequestAllOf) SetThreshold(v float32) {
	o.Threshold = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *RequestAllOf) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAllOf) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *RequestAllOf) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *RequestAllOf) SetOp(v string) {
	o.Op = &v
}

func (o RequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	return toSerialize, nil
}

type NullableRequestAllOf struct {
	value *RequestAllOf
	isSet bool
}

func (v NullableRequestAllOf) Get() *RequestAllOf {
	return v.value
}

func (v *NullableRequestAllOf) Set(val *RequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestAllOf(val *RequestAllOf) *NullableRequestAllOf {
	return &NullableRequestAllOf{value: val, isSet: true}
}

func (v NullableRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


