/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// DoubleArrayEventAttributeValueAllOf struct for DoubleArrayEventAttributeValueAllOf
type DoubleArrayEventAttributeValueAllOf struct {
	Values []float64 `json:"values"`
}

// NewDoubleArrayEventAttributeValueAllOf instantiates a new DoubleArrayEventAttributeValueAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDoubleArrayEventAttributeValueAllOf(values []float64) *DoubleArrayEventAttributeValueAllOf {
	this := DoubleArrayEventAttributeValueAllOf{}
	this.Values = values
	return &this
}

// NewDoubleArrayEventAttributeValueAllOfWithDefaults instantiates a new DoubleArrayEventAttributeValueAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDoubleArrayEventAttributeValueAllOfWithDefaults() *DoubleArrayEventAttributeValueAllOf {
	this := DoubleArrayEventAttributeValueAllOf{}
	return &this
}

// GetValues returns the Values field value
func (o *DoubleArrayEventAttributeValueAllOf) GetValues() []float64 {
	if o == nil {
		var ret []float64
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *DoubleArrayEventAttributeValueAllOf) GetValuesOk() ([]float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *DoubleArrayEventAttributeValueAllOf) SetValues(v []float64) {
	o.Values = v
}

func (o DoubleArrayEventAttributeValueAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableDoubleArrayEventAttributeValueAllOf struct {
	value *DoubleArrayEventAttributeValueAllOf
	isSet bool
}

func (v NullableDoubleArrayEventAttributeValueAllOf) Get() *DoubleArrayEventAttributeValueAllOf {
	return v.value
}

func (v *NullableDoubleArrayEventAttributeValueAllOf) Set(val *DoubleArrayEventAttributeValueAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDoubleArrayEventAttributeValueAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDoubleArrayEventAttributeValueAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDoubleArrayEventAttributeValueAllOf(val *DoubleArrayEventAttributeValueAllOf) *NullableDoubleArrayEventAttributeValueAllOf {
	return &NullableDoubleArrayEventAttributeValueAllOf{value: val, isSet: true}
}

func (v NullableDoubleArrayEventAttributeValueAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDoubleArrayEventAttributeValueAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


