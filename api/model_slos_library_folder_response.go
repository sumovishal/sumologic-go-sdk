/*
Sumo Logic API

Go client for Sumo Logic API.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"time"
)

// checks if the SlosLibraryFolderResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlosLibraryFolderResponse{}

// SlosLibraryFolderResponse struct for SlosLibraryFolderResponse
type SlosLibraryFolderResponse struct {
	SlosLibraryBaseResponse
	// Aggregated permission summary for the calling user. If detailed permission statements are required, please call list permissions endpoint.
	Permissions []string `json:"permissions"`
	// Children of the folder. NOTE: Permissions field will not be filled (empty list) for children.
	Children []SlosLibraryBaseResponse `json:"children"`
}

// NewSlosLibraryFolderResponse instantiates a new SlosLibraryFolderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlosLibraryFolderResponse(permissions []string, children []SlosLibraryBaseResponse, id string, name string, description string, version int64, createdAt time.Time, createdBy string, modifiedAt time.Time, modifiedBy string, parentId string, contentType string, type_ string, isSystem bool, isMutable bool) *SlosLibraryFolderResponse {
	this := SlosLibraryFolderResponse{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.Version = version
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.ParentId = parentId
	this.ContentType = contentType
	this.Type = type_
	this.IsSystem = isSystem
	this.IsMutable = isMutable
	this.Permissions = permissions
	this.Children = children
	return &this
}

// NewSlosLibraryFolderResponseWithDefaults instantiates a new SlosLibraryFolderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlosLibraryFolderResponseWithDefaults() *SlosLibraryFolderResponse {
	this := SlosLibraryFolderResponse{}
	return &this
}

// GetPermissions returns the Permissions field value
func (o *SlosLibraryFolderResponse) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *SlosLibraryFolderResponse) GetPermissionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *SlosLibraryFolderResponse) SetPermissions(v []string) {
	o.Permissions = v
}

// GetChildren returns the Children field value
func (o *SlosLibraryFolderResponse) GetChildren() []SlosLibraryBaseResponse {
	if o == nil {
		var ret []SlosLibraryBaseResponse
		return ret
	}

	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value
// and a boolean to check if the value has been set.
func (o *SlosLibraryFolderResponse) GetChildrenOk() ([]SlosLibraryBaseResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Children, true
}

// SetChildren sets field value
func (o *SlosLibraryFolderResponse) SetChildren(v []SlosLibraryBaseResponse) {
	o.Children = v
}

func (o SlosLibraryFolderResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlosLibraryFolderResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedSlosLibraryBaseResponse, errSlosLibraryBaseResponse := json.Marshal(o.SlosLibraryBaseResponse)
	if errSlosLibraryBaseResponse != nil {
		return map[string]interface{}{}, errSlosLibraryBaseResponse
	}
	errSlosLibraryBaseResponse = json.Unmarshal([]byte(serializedSlosLibraryBaseResponse), &toSerialize)
	if errSlosLibraryBaseResponse != nil {
		return map[string]interface{}{}, errSlosLibraryBaseResponse
	}
	toSerialize["permissions"] = o.Permissions
	toSerialize["children"] = o.Children
	return toSerialize, nil
}

type NullableSlosLibraryFolderResponse struct {
	value *SlosLibraryFolderResponse
	isSet bool
}

func (v NullableSlosLibraryFolderResponse) Get() *SlosLibraryFolderResponse {
	return v.value
}

func (v *NullableSlosLibraryFolderResponse) Set(val *SlosLibraryFolderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSlosLibraryFolderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSlosLibraryFolderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlosLibraryFolderResponse(val *SlosLibraryFolderResponse) *NullableSlosLibraryFolderResponse {
	return &NullableSlosLibraryFolderResponse{value: val, isSet: true}
}

func (v NullableSlosLibraryFolderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlosLibraryFolderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


