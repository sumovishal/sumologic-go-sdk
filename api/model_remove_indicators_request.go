/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the RemoveIndicatorsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveIndicatorsRequest{}

// RemoveIndicatorsRequest struct for RemoveIndicatorsRequest
type RemoveIndicatorsRequest struct {
	// A list of indicator IDs
	IndicatorIds []string `json:"indicatorIds"`
}

// NewRemoveIndicatorsRequest instantiates a new RemoveIndicatorsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveIndicatorsRequest(indicatorIds []string) *RemoveIndicatorsRequest {
	this := RemoveIndicatorsRequest{}
	this.IndicatorIds = indicatorIds
	return &this
}

// NewRemoveIndicatorsRequestWithDefaults instantiates a new RemoveIndicatorsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveIndicatorsRequestWithDefaults() *RemoveIndicatorsRequest {
	this := RemoveIndicatorsRequest{}
	return &this
}

// GetIndicatorIds returns the IndicatorIds field value
func (o *RemoveIndicatorsRequest) GetIndicatorIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IndicatorIds
}

// GetIndicatorIdsOk returns a tuple with the IndicatorIds field value
// and a boolean to check if the value has been set.
func (o *RemoveIndicatorsRequest) GetIndicatorIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndicatorIds, true
}

// SetIndicatorIds sets field value
func (o *RemoveIndicatorsRequest) SetIndicatorIds(v []string) {
	o.IndicatorIds = v
}

func (o RemoveIndicatorsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveIndicatorsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["indicatorIds"] = o.IndicatorIds
	return toSerialize, nil
}

type NullableRemoveIndicatorsRequest struct {
	value *RemoveIndicatorsRequest
	isSet bool
}

func (v NullableRemoveIndicatorsRequest) Get() *RemoveIndicatorsRequest {
	return v.value
}

func (v *NullableRemoveIndicatorsRequest) Set(val *RemoveIndicatorsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveIndicatorsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveIndicatorsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveIndicatorsRequest(val *RemoveIndicatorsRequest) *NullableRemoveIndicatorsRequest {
	return &NullableRemoveIndicatorsRequest{value: val, isSet: true}
}

func (v NullableRemoveIndicatorsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveIndicatorsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


