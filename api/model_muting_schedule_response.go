/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MutingScheduleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MutingScheduleResponse{}

// MutingScheduleResponse Muting information fields for the monitor.
type MutingScheduleResponse struct {
	// Id of the muting schedule in hex.
	Id string `json:"id"`
}

// NewMutingScheduleResponse instantiates a new MutingScheduleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMutingScheduleResponse(id string) *MutingScheduleResponse {
	this := MutingScheduleResponse{}
	this.Id = id
	return &this
}

// NewMutingScheduleResponseWithDefaults instantiates a new MutingScheduleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMutingScheduleResponseWithDefaults() *MutingScheduleResponse {
	this := MutingScheduleResponse{}
	return &this
}

// GetId returns the Id field value
func (o *MutingScheduleResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MutingScheduleResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MutingScheduleResponse) SetId(v string) {
	o.Id = v
}

func (o MutingScheduleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MutingScheduleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableMutingScheduleResponse struct {
	value *MutingScheduleResponse
	isSet bool
}

func (v NullableMutingScheduleResponse) Get() *MutingScheduleResponse {
	return v.value
}

func (v *NullableMutingScheduleResponse) Set(val *MutingScheduleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMutingScheduleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMutingScheduleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutingScheduleResponse(val *MutingScheduleResponse) *NullableMutingScheduleResponse {
	return &NullableMutingScheduleResponse{value: val, isSet: true}
}

func (v NullableMutingScheduleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutingScheduleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


