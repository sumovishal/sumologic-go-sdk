/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// CollectionS3ListingFailedTrackerAllOf struct for CollectionS3ListingFailedTrackerAllOf
type CollectionS3ListingFailedTrackerAllOf struct {
	// The bucket name of the associated Source.
	BucketName *string `json:"bucketName,omitempty"`
}

// NewCollectionS3ListingFailedTrackerAllOf instantiates a new CollectionS3ListingFailedTrackerAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionS3ListingFailedTrackerAllOf() *CollectionS3ListingFailedTrackerAllOf {
	this := CollectionS3ListingFailedTrackerAllOf{}
	return &this
}

// NewCollectionS3ListingFailedTrackerAllOfWithDefaults instantiates a new CollectionS3ListingFailedTrackerAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionS3ListingFailedTrackerAllOfWithDefaults() *CollectionS3ListingFailedTrackerAllOf {
	this := CollectionS3ListingFailedTrackerAllOf{}
	return &this
}

// GetBucketName returns the BucketName field value if set, zero value otherwise.
func (o *CollectionS3ListingFailedTrackerAllOf) GetBucketName() string {
	if o == nil || o.BucketName == nil {
		var ret string
		return ret
	}
	return *o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionS3ListingFailedTrackerAllOf) GetBucketNameOk() (*string, bool) {
	if o == nil || o.BucketName == nil {
		return nil, false
	}
	return o.BucketName, true
}

// HasBucketName returns a boolean if a field has been set.
func (o *CollectionS3ListingFailedTrackerAllOf) HasBucketName() bool {
	if o != nil && o.BucketName != nil {
		return true
	}

	return false
}

// SetBucketName gets a reference to the given string and assigns it to the BucketName field.
func (o *CollectionS3ListingFailedTrackerAllOf) SetBucketName(v string) {
	o.BucketName = &v
}

func (o CollectionS3ListingFailedTrackerAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BucketName != nil {
		toSerialize["bucketName"] = o.BucketName
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionS3ListingFailedTrackerAllOf struct {
	value *CollectionS3ListingFailedTrackerAllOf
	isSet bool
}

func (v NullableCollectionS3ListingFailedTrackerAllOf) Get() *CollectionS3ListingFailedTrackerAllOf {
	return v.value
}

func (v *NullableCollectionS3ListingFailedTrackerAllOf) Set(val *CollectionS3ListingFailedTrackerAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionS3ListingFailedTrackerAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionS3ListingFailedTrackerAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionS3ListingFailedTrackerAllOf(val *CollectionS3ListingFailedTrackerAllOf) *NullableCollectionS3ListingFailedTrackerAllOf {
	return &NullableCollectionS3ListingFailedTrackerAllOf{value: val, isSet: true}
}

func (v NullableCollectionS3ListingFailedTrackerAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionS3ListingFailedTrackerAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


