/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// ServiceManifestDataSourceParameter struct for ServiceManifestDataSourceParameter
type ServiceManifestDataSourceParameter struct {
	// Parameter type.
	ParameterType string `json:"parameterType"`
	// Parameter identifier.
	ParameterId string `json:"parameterId"`
	// Data source type.
	DataSourceType *string `json:"dataSourceType,omitempty"`
	// Label.
	Label *string `json:"label,omitempty"`
	// Description.
	Description *string `json:"description,omitempty"`
	// Example.
	Example *string `json:"example,omitempty"`
	// Should the UI display?
	Hidden *bool `json:"hidden,omitempty"`
}

// NewServiceManifestDataSourceParameter instantiates a new ServiceManifestDataSourceParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceManifestDataSourceParameter(parameterType string, parameterId string) *ServiceManifestDataSourceParameter {
	this := ServiceManifestDataSourceParameter{}
	this.ParameterType = parameterType
	this.ParameterId = parameterId
	var hidden bool = false
	this.Hidden = &hidden
	return &this
}

// NewServiceManifestDataSourceParameterWithDefaults instantiates a new ServiceManifestDataSourceParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceManifestDataSourceParameterWithDefaults() *ServiceManifestDataSourceParameter {
	this := ServiceManifestDataSourceParameter{}
	var hidden bool = false
	this.Hidden = &hidden
	return &this
}

// GetParameterType returns the ParameterType field value
func (o *ServiceManifestDataSourceParameter) GetParameterType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParameterType
}

// GetParameterTypeOk returns a tuple with the ParameterType field value
// and a boolean to check if the value has been set.
func (o *ServiceManifestDataSourceParameter) GetParameterTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParameterType, true
}

// SetParameterType sets field value
func (o *ServiceManifestDataSourceParameter) SetParameterType(v string) {
	o.ParameterType = v
}

// GetParameterId returns the ParameterId field value
func (o *ServiceManifestDataSourceParameter) GetParameterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParameterId
}

// GetParameterIdOk returns a tuple with the ParameterId field value
// and a boolean to check if the value has been set.
func (o *ServiceManifestDataSourceParameter) GetParameterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParameterId, true
}

// SetParameterId sets field value
func (o *ServiceManifestDataSourceParameter) SetParameterId(v string) {
	o.ParameterId = v
}

// GetDataSourceType returns the DataSourceType field value if set, zero value otherwise.
func (o *ServiceManifestDataSourceParameter) GetDataSourceType() string {
	if o == nil || o.DataSourceType == nil {
		var ret string
		return ret
	}
	return *o.DataSourceType
}

// GetDataSourceTypeOk returns a tuple with the DataSourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManifestDataSourceParameter) GetDataSourceTypeOk() (*string, bool) {
	if o == nil || o.DataSourceType == nil {
		return nil, false
	}
	return o.DataSourceType, true
}

// HasDataSourceType returns a boolean if a field has been set.
func (o *ServiceManifestDataSourceParameter) HasDataSourceType() bool {
	if o != nil && o.DataSourceType != nil {
		return true
	}

	return false
}

// SetDataSourceType gets a reference to the given string and assigns it to the DataSourceType field.
func (o *ServiceManifestDataSourceParameter) SetDataSourceType(v string) {
	o.DataSourceType = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ServiceManifestDataSourceParameter) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManifestDataSourceParameter) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ServiceManifestDataSourceParameter) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ServiceManifestDataSourceParameter) SetLabel(v string) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceManifestDataSourceParameter) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManifestDataSourceParameter) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceManifestDataSourceParameter) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceManifestDataSourceParameter) SetDescription(v string) {
	o.Description = &v
}

// GetExample returns the Example field value if set, zero value otherwise.
func (o *ServiceManifestDataSourceParameter) GetExample() string {
	if o == nil || o.Example == nil {
		var ret string
		return ret
	}
	return *o.Example
}

// GetExampleOk returns a tuple with the Example field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManifestDataSourceParameter) GetExampleOk() (*string, bool) {
	if o == nil || o.Example == nil {
		return nil, false
	}
	return o.Example, true
}

// HasExample returns a boolean if a field has been set.
func (o *ServiceManifestDataSourceParameter) HasExample() bool {
	if o != nil && o.Example != nil {
		return true
	}

	return false
}

// SetExample gets a reference to the given string and assigns it to the Example field.
func (o *ServiceManifestDataSourceParameter) SetExample(v string) {
	o.Example = &v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *ServiceManifestDataSourceParameter) GetHidden() bool {
	if o == nil || o.Hidden == nil {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceManifestDataSourceParameter) GetHiddenOk() (*bool, bool) {
	if o == nil || o.Hidden == nil {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *ServiceManifestDataSourceParameter) HasHidden() bool {
	if o != nil && o.Hidden != nil {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *ServiceManifestDataSourceParameter) SetHidden(v bool) {
	o.Hidden = &v
}

func (o ServiceManifestDataSourceParameter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["parameterType"] = o.ParameterType
	}
	if true {
		toSerialize["parameterId"] = o.ParameterId
	}
	if o.DataSourceType != nil {
		toSerialize["dataSourceType"] = o.DataSourceType
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Example != nil {
		toSerialize["example"] = o.Example
	}
	if o.Hidden != nil {
		toSerialize["hidden"] = o.Hidden
	}
	return json.Marshal(toSerialize)
}

type NullableServiceManifestDataSourceParameter struct {
	value *ServiceManifestDataSourceParameter
	isSet bool
}

func (v NullableServiceManifestDataSourceParameter) Get() *ServiceManifestDataSourceParameter {
	return v.value
}

func (v *NullableServiceManifestDataSourceParameter) Set(val *ServiceManifestDataSourceParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceManifestDataSourceParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceManifestDataSourceParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceManifestDataSourceParameter(val *ServiceManifestDataSourceParameter) *NullableServiceManifestDataSourceParameter {
	return &NullableServiceManifestDataSourceParameter{value: val, isSet: true}
}

func (v NullableServiceManifestDataSourceParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceManifestDataSourceParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


