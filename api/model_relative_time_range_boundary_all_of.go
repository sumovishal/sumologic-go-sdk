/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RelativeTimeRangeBoundaryAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelativeTimeRangeBoundaryAllOf{}

// RelativeTimeRangeBoundaryAllOf struct for RelativeTimeRangeBoundaryAllOf
type RelativeTimeRangeBoundaryAllOf struct {
	// Relative time as a string consisting of following elements: - `-` (optional): minus sign indicates time in the past, - `<number>`: number of time units, - `<time_unit>`: time unit; possible values are: `w` (week), `d` (day), `h` (hour), `m` (minute), `s` (second). Multiple pairs of `<number><time_unit>` may be provided, and they may be in any order. For example, `-2w5d3h` points to the moment in time 2 weeks, 5 days and 3 hours ago.
	RelativeTime string `json:"relativeTime"`
}

// NewRelativeTimeRangeBoundaryAllOf instantiates a new RelativeTimeRangeBoundaryAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelativeTimeRangeBoundaryAllOf(relativeTime string) *RelativeTimeRangeBoundaryAllOf {
	this := RelativeTimeRangeBoundaryAllOf{}
	this.RelativeTime = relativeTime
	return &this
}

// NewRelativeTimeRangeBoundaryAllOfWithDefaults instantiates a new RelativeTimeRangeBoundaryAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelativeTimeRangeBoundaryAllOfWithDefaults() *RelativeTimeRangeBoundaryAllOf {
	this := RelativeTimeRangeBoundaryAllOf{}
	return &this
}

// GetRelativeTime returns the RelativeTime field value
func (o *RelativeTimeRangeBoundaryAllOf) GetRelativeTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelativeTime
}

// GetRelativeTimeOk returns a tuple with the RelativeTime field value
// and a boolean to check if the value has been set.
func (o *RelativeTimeRangeBoundaryAllOf) GetRelativeTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelativeTime, true
}

// SetRelativeTime sets field value
func (o *RelativeTimeRangeBoundaryAllOf) SetRelativeTime(v string) {
	o.RelativeTime = v
}

func (o RelativeTimeRangeBoundaryAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelativeTimeRangeBoundaryAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["relativeTime"] = o.RelativeTime
	return toSerialize, nil
}

type NullableRelativeTimeRangeBoundaryAllOf struct {
	value *RelativeTimeRangeBoundaryAllOf
	isSet bool
}

func (v NullableRelativeTimeRangeBoundaryAllOf) Get() *RelativeTimeRangeBoundaryAllOf {
	return v.value
}

func (v *NullableRelativeTimeRangeBoundaryAllOf) Set(val *RelativeTimeRangeBoundaryAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRelativeTimeRangeBoundaryAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRelativeTimeRangeBoundaryAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelativeTimeRangeBoundaryAllOf(val *RelativeTimeRangeBoundaryAllOf) *NullableRelativeTimeRangeBoundaryAllOf {
	return &NullableRelativeTimeRangeBoundaryAllOf{value: val, isSet: true}
}

func (v NullableRelativeTimeRangeBoundaryAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelativeTimeRangeBoundaryAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


