/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// PendingUpdateRequest The pending plan update request for the account
type PendingUpdateRequest struct {
	// The date on which the update request was created.
	CreatedOn string `json:"createdOn"`
	Plan CurrentPlan `json:"plan"`
}

// NewPendingUpdateRequest instantiates a new PendingUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPendingUpdateRequest(createdOn string, plan CurrentPlan) *PendingUpdateRequest {
	this := PendingUpdateRequest{}
	this.CreatedOn = createdOn
	this.Plan = plan
	return &this
}

// NewPendingUpdateRequestWithDefaults instantiates a new PendingUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPendingUpdateRequestWithDefaults() *PendingUpdateRequest {
	this := PendingUpdateRequest{}
	return &this
}

// GetCreatedOn returns the CreatedOn field value
func (o *PendingUpdateRequest) GetCreatedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value
// and a boolean to check if the value has been set.
func (o *PendingUpdateRequest) GetCreatedOnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedOn, true
}

// SetCreatedOn sets field value
func (o *PendingUpdateRequest) SetCreatedOn(v string) {
	o.CreatedOn = v
}

// GetPlan returns the Plan field value
func (o *PendingUpdateRequest) GetPlan() CurrentPlan {
	if o == nil {
		var ret CurrentPlan
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *PendingUpdateRequest) GetPlanOk() (*CurrentPlan, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plan, true
}

// SetPlan sets field value
func (o *PendingUpdateRequest) SetPlan(v CurrentPlan) {
	o.Plan = v
}

func (o PendingUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if true {
		toSerialize["plan"] = o.Plan
	}
	return json.Marshal(toSerialize)
}

type NullablePendingUpdateRequest struct {
	value *PendingUpdateRequest
	isSet bool
}

func (v NullablePendingUpdateRequest) Get() *PendingUpdateRequest {
	return v.value
}

func (v *NullablePendingUpdateRequest) Set(val *PendingUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePendingUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePendingUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePendingUpdateRequest(val *PendingUpdateRequest) *NullablePendingUpdateRequest {
	return &NullablePendingUpdateRequest{value: val, isSet: true}
}

func (v NullablePendingUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePendingUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


