/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the PermissionIdentifierAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionIdentifierAllOf{}

// PermissionIdentifierAllOf struct for PermissionIdentifierAllOf
type PermissionIdentifierAllOf struct {
	// The identifier that belongs to the resource this permission assignment applies to.
	TargetId string `json:"targetId"`
}

// NewPermissionIdentifierAllOf instantiates a new PermissionIdentifierAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionIdentifierAllOf(targetId string) *PermissionIdentifierAllOf {
	this := PermissionIdentifierAllOf{}
	this.TargetId = targetId
	return &this
}

// NewPermissionIdentifierAllOfWithDefaults instantiates a new PermissionIdentifierAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionIdentifierAllOfWithDefaults() *PermissionIdentifierAllOf {
	this := PermissionIdentifierAllOf{}
	return &this
}

// GetTargetId returns the TargetId field value
func (o *PermissionIdentifierAllOf) GetTargetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value
// and a boolean to check if the value has been set.
func (o *PermissionIdentifierAllOf) GetTargetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetId, true
}

// SetTargetId sets field value
func (o *PermissionIdentifierAllOf) SetTargetId(v string) {
	o.TargetId = v
}

func (o PermissionIdentifierAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionIdentifierAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["targetId"] = o.TargetId
	return toSerialize, nil
}

type NullablePermissionIdentifierAllOf struct {
	value *PermissionIdentifierAllOf
	isSet bool
}

func (v NullablePermissionIdentifierAllOf) Get() *PermissionIdentifierAllOf {
	return v.value
}

func (v *NullablePermissionIdentifierAllOf) Set(val *PermissionIdentifierAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionIdentifierAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionIdentifierAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionIdentifierAllOf(val *PermissionIdentifierAllOf) *NullablePermissionIdentifierAllOf {
	return &NullablePermissionIdentifierAllOf{value: val, isSet: true}
}

func (v NullablePermissionIdentifierAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionIdentifierAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


