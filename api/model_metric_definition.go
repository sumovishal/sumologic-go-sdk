/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// MetricDefinition struct for MetricDefinition
type MetricDefinition struct {
	// Name of the metric returning the timeseries.
	Metric *string `json:"metric,omitempty"`
	// Metric dimensions / metadata related to each timeseries.
	Dimensions *map[string]string `json:"dimensions,omitempty"`
}

// NewMetricDefinition instantiates a new MetricDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricDefinition() *MetricDefinition {
	this := MetricDefinition{}
	return &this
}

// NewMetricDefinitionWithDefaults instantiates a new MetricDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricDefinitionWithDefaults() *MetricDefinition {
	this := MetricDefinition{}
	return &this
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *MetricDefinition) GetMetric() string {
	if o == nil || o.Metric == nil {
		var ret string
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDefinition) GetMetricOk() (*string, bool) {
	if o == nil || o.Metric == nil {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *MetricDefinition) HasMetric() bool {
	if o != nil && o.Metric != nil {
		return true
	}

	return false
}

// SetMetric gets a reference to the given string and assigns it to the Metric field.
func (o *MetricDefinition) SetMetric(v string) {
	o.Metric = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *MetricDefinition) GetDimensions() map[string]string {
	if o == nil || o.Dimensions == nil {
		var ret map[string]string
		return ret
	}
	return *o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDefinition) GetDimensionsOk() (*map[string]string, bool) {
	if o == nil || o.Dimensions == nil {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *MetricDefinition) HasDimensions() bool {
	if o != nil && o.Dimensions != nil {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given map[string]string and assigns it to the Dimensions field.
func (o *MetricDefinition) SetDimensions(v map[string]string) {
	o.Dimensions = &v
}

func (o MetricDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metric != nil {
		toSerialize["metric"] = o.Metric
	}
	if o.Dimensions != nil {
		toSerialize["dimensions"] = o.Dimensions
	}
	return json.Marshal(toSerialize)
}

type NullableMetricDefinition struct {
	value *MetricDefinition
	isSet bool
}

func (v NullableMetricDefinition) Get() *MetricDefinition {
	return v.value
}

func (v *NullableMetricDefinition) Set(val *MetricDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDefinition(val *MetricDefinition) *NullableMetricDefinition {
	return &NullableMetricDefinition{value: val, isSet: true}
}

func (v NullableMetricDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


