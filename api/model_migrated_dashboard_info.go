/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MigratedDashboardInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MigratedDashboardInfo{}

// MigratedDashboardInfo struct for MigratedDashboardInfo
type MigratedDashboardInfo struct {
	// The id of the Dashboard(New)
	Id string `json:"id"`
	// The name of the Dashboard(New)
	Name string `json:"name"`
}

// NewMigratedDashboardInfo instantiates a new MigratedDashboardInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigratedDashboardInfo(id string, name string) *MigratedDashboardInfo {
	this := MigratedDashboardInfo{}
	this.Id = id
	this.Name = name
	return &this
}

// NewMigratedDashboardInfoWithDefaults instantiates a new MigratedDashboardInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigratedDashboardInfoWithDefaults() *MigratedDashboardInfo {
	this := MigratedDashboardInfo{}
	return &this
}

// GetId returns the Id field value
func (o *MigratedDashboardInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MigratedDashboardInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MigratedDashboardInfo) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *MigratedDashboardInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MigratedDashboardInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MigratedDashboardInfo) SetName(v string) {
	o.Name = v
}

func (o MigratedDashboardInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MigratedDashboardInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableMigratedDashboardInfo struct {
	value *MigratedDashboardInfo
	isSet bool
}

func (v NullableMigratedDashboardInfo) Get() *MigratedDashboardInfo {
	return v.value
}

func (v *NullableMigratedDashboardInfo) Set(val *MigratedDashboardInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMigratedDashboardInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMigratedDashboardInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigratedDashboardInfo(val *MigratedDashboardInfo) *NullableMigratedDashboardInfo {
	return &NullableMigratedDashboardInfo{value: val, isSet: true}
}

func (v NullableMigratedDashboardInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigratedDashboardInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


