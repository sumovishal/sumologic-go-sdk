/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"time"
)

// checks if the PlaybookRunningResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaybookRunningResult{}

// PlaybookRunningResult struct for PlaybookRunningResult
type PlaybookRunningResult struct {
	// The running start date time of the playbook.
	StartDate *time.Time `json:"startDate,omitempty"`
	// The running end date time of the playbook.
	EndDate *time.Time `json:"endDate,omitempty"`
	// The id of the playbook running.
	Id string `json:"id"`
	// The id of the playbook.
	PlaybookId string `json:"playbookId"`
	// The isChild of other playbook.
	IsChild bool `json:"isChild"`
	// The name of the playbook running.
	Name string `json:"name"`
	// The status of the playbook running.
	Status string `json:"status"`
	// The status code of the playbook running.
	StatusCode int32 `json:"statusCode"`
}

// NewPlaybookRunningResult instantiates a new PlaybookRunningResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaybookRunningResult(id string, playbookId string, isChild bool, name string, status string, statusCode int32) *PlaybookRunningResult {
	this := PlaybookRunningResult{}
	this.Id = id
	this.PlaybookId = playbookId
	this.IsChild = isChild
	this.Name = name
	this.Status = status
	this.StatusCode = statusCode
	return &this
}

// NewPlaybookRunningResultWithDefaults instantiates a new PlaybookRunningResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaybookRunningResultWithDefaults() *PlaybookRunningResult {
	this := PlaybookRunningResult{}
	var isChild bool = false
	this.IsChild = isChild
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *PlaybookRunningResult) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaybookRunningResult) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *PlaybookRunningResult) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *PlaybookRunningResult) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *PlaybookRunningResult) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaybookRunningResult) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *PlaybookRunningResult) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *PlaybookRunningResult) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetId returns the Id field value
func (o *PlaybookRunningResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PlaybookRunningResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PlaybookRunningResult) SetId(v string) {
	o.Id = v
}

// GetPlaybookId returns the PlaybookId field value
func (o *PlaybookRunningResult) GetPlaybookId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlaybookId
}

// GetPlaybookIdOk returns a tuple with the PlaybookId field value
// and a boolean to check if the value has been set.
func (o *PlaybookRunningResult) GetPlaybookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlaybookId, true
}

// SetPlaybookId sets field value
func (o *PlaybookRunningResult) SetPlaybookId(v string) {
	o.PlaybookId = v
}

// GetIsChild returns the IsChild field value
func (o *PlaybookRunningResult) GetIsChild() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsChild
}

// GetIsChildOk returns a tuple with the IsChild field value
// and a boolean to check if the value has been set.
func (o *PlaybookRunningResult) GetIsChildOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsChild, true
}

// SetIsChild sets field value
func (o *PlaybookRunningResult) SetIsChild(v bool) {
	o.IsChild = v
}

// GetName returns the Name field value
func (o *PlaybookRunningResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PlaybookRunningResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PlaybookRunningResult) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *PlaybookRunningResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PlaybookRunningResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PlaybookRunningResult) SetStatus(v string) {
	o.Status = v
}

// GetStatusCode returns the StatusCode field value
func (o *PlaybookRunningResult) GetStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *PlaybookRunningResult) GetStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *PlaybookRunningResult) SetStatusCode(v int32) {
	o.StatusCode = v
}

func (o PlaybookRunningResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaybookRunningResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	toSerialize["id"] = o.Id
	toSerialize["playbookId"] = o.PlaybookId
	toSerialize["isChild"] = o.IsChild
	toSerialize["name"] = o.Name
	toSerialize["status"] = o.Status
	toSerialize["statusCode"] = o.StatusCode
	return toSerialize, nil
}

type NullablePlaybookRunningResult struct {
	value *PlaybookRunningResult
	isSet bool
}

func (v NullablePlaybookRunningResult) Get() *PlaybookRunningResult {
	return v.value
}

func (v *NullablePlaybookRunningResult) Set(val *PlaybookRunningResult) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaybookRunningResult) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaybookRunningResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaybookRunningResult(val *PlaybookRunningResult) *NullablePlaybookRunningResult {
	return &NullablePlaybookRunningResult{value: val, isSet: true}
}

func (v NullablePlaybookRunningResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaybookRunningResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


