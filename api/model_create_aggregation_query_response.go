/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateAggregationQueryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAggregationQueryResponse{}

// CreateAggregationQueryResponse struct for CreateAggregationQueryResponse
type CreateAggregationQueryResponse struct {
	// The id of the created query.
	QueryId string `json:"queryId"`
}

type _CreateAggregationQueryResponse CreateAggregationQueryResponse

// NewCreateAggregationQueryResponse instantiates a new CreateAggregationQueryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAggregationQueryResponse(queryId string) *CreateAggregationQueryResponse {
	this := CreateAggregationQueryResponse{}
	this.QueryId = queryId
	return &this
}

// NewCreateAggregationQueryResponseWithDefaults instantiates a new CreateAggregationQueryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAggregationQueryResponseWithDefaults() *CreateAggregationQueryResponse {
	this := CreateAggregationQueryResponse{}
	return &this
}

// GetQueryId returns the QueryId field value
func (o *CreateAggregationQueryResponse) GetQueryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueryId
}

// GetQueryIdOk returns a tuple with the QueryId field value
// and a boolean to check if the value has been set.
func (o *CreateAggregationQueryResponse) GetQueryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueryId, true
}

// SetQueryId sets field value
func (o *CreateAggregationQueryResponse) SetQueryId(v string) {
	o.QueryId = v
}

func (o CreateAggregationQueryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAggregationQueryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["queryId"] = o.QueryId
	return toSerialize, nil
}

func (o *CreateAggregationQueryResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"queryId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAggregationQueryResponse := _CreateAggregationQueryResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAggregationQueryResponse)

	if err != nil {
		return err
	}

	*o = CreateAggregationQueryResponse(varCreateAggregationQueryResponse)

	return err
}

type NullableCreateAggregationQueryResponse struct {
	value *CreateAggregationQueryResponse
	isSet bool
}

func (v NullableCreateAggregationQueryResponse) Get() *CreateAggregationQueryResponse {
	return v.value
}

func (v *NullableCreateAggregationQueryResponse) Set(val *CreateAggregationQueryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAggregationQueryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAggregationQueryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAggregationQueryResponse(val *CreateAggregationQueryResponse) *NullableCreateAggregationQueryResponse {
	return &NullableCreateAggregationQueryResponse{value: val, isSet: true}
}

func (v NullableCreateAggregationQueryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAggregationQueryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


