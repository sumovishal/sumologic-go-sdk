/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// SlosLibraryFolderResponseAllOf struct for SlosLibraryFolderResponseAllOf
type SlosLibraryFolderResponseAllOf struct {
	// Aggregated permission summary for the calling user. If detailed permission statements are required, please call list permissions endpoint.
	Permissions []string `json:"permissions"`
	// Children of the folder. NOTE: Permissions field will not be filled (empty list) for children.
	Children []SlosLibraryBaseResponse `json:"children"`
}

// NewSlosLibraryFolderResponseAllOf instantiates a new SlosLibraryFolderResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlosLibraryFolderResponseAllOf(permissions []string, children []SlosLibraryBaseResponse) *SlosLibraryFolderResponseAllOf {
	this := SlosLibraryFolderResponseAllOf{}
	this.Permissions = permissions
	this.Children = children
	return &this
}

// NewSlosLibraryFolderResponseAllOfWithDefaults instantiates a new SlosLibraryFolderResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlosLibraryFolderResponseAllOfWithDefaults() *SlosLibraryFolderResponseAllOf {
	this := SlosLibraryFolderResponseAllOf{}
	return &this
}

// GetPermissions returns the Permissions field value
func (o *SlosLibraryFolderResponseAllOf) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *SlosLibraryFolderResponseAllOf) GetPermissionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *SlosLibraryFolderResponseAllOf) SetPermissions(v []string) {
	o.Permissions = v
}

// GetChildren returns the Children field value
func (o *SlosLibraryFolderResponseAllOf) GetChildren() []SlosLibraryBaseResponse {
	if o == nil {
		var ret []SlosLibraryBaseResponse
		return ret
	}

	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value
// and a boolean to check if the value has been set.
func (o *SlosLibraryFolderResponseAllOf) GetChildrenOk() ([]SlosLibraryBaseResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Children, true
}

// SetChildren sets field value
func (o *SlosLibraryFolderResponseAllOf) SetChildren(v []SlosLibraryBaseResponse) {
	o.Children = v
}

func (o SlosLibraryFolderResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["permissions"] = o.Permissions
	}
	if true {
		toSerialize["children"] = o.Children
	}
	return json.Marshal(toSerialize)
}

type NullableSlosLibraryFolderResponseAllOf struct {
	value *SlosLibraryFolderResponseAllOf
	isSet bool
}

func (v NullableSlosLibraryFolderResponseAllOf) Get() *SlosLibraryFolderResponseAllOf {
	return v.value
}

func (v *NullableSlosLibraryFolderResponseAllOf) Set(val *SlosLibraryFolderResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSlosLibraryFolderResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSlosLibraryFolderResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlosLibraryFolderResponseAllOf(val *SlosLibraryFolderResponseAllOf) *NullableSlosLibraryFolderResponseAllOf {
	return &NullableSlosLibraryFolderResponseAllOf{value: val, isSet: true}
}

func (v NullableSlosLibraryFolderResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlosLibraryFolderResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


