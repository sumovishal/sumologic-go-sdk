/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// LiteralTimeRangeBoundaryAllOf struct for LiteralTimeRangeBoundaryAllOf
type LiteralTimeRangeBoundaryAllOf struct {
	// Name of the time range. Possible values are:   - `now`,   - `second`,   - `minute`,   - `hour`,   - `day`,   - `today`,   - `week`,   - `month`,   - `year`
	RangeName string `json:"rangeName"`
}

// NewLiteralTimeRangeBoundaryAllOf instantiates a new LiteralTimeRangeBoundaryAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiteralTimeRangeBoundaryAllOf(rangeName string) *LiteralTimeRangeBoundaryAllOf {
	this := LiteralTimeRangeBoundaryAllOf{}
	this.RangeName = rangeName
	return &this
}

// NewLiteralTimeRangeBoundaryAllOfWithDefaults instantiates a new LiteralTimeRangeBoundaryAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiteralTimeRangeBoundaryAllOfWithDefaults() *LiteralTimeRangeBoundaryAllOf {
	this := LiteralTimeRangeBoundaryAllOf{}
	return &this
}

// GetRangeName returns the RangeName field value
func (o *LiteralTimeRangeBoundaryAllOf) GetRangeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RangeName
}

// GetRangeNameOk returns a tuple with the RangeName field value
// and a boolean to check if the value has been set.
func (o *LiteralTimeRangeBoundaryAllOf) GetRangeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RangeName, true
}

// SetRangeName sets field value
func (o *LiteralTimeRangeBoundaryAllOf) SetRangeName(v string) {
	o.RangeName = v
}

func (o LiteralTimeRangeBoundaryAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rangeName"] = o.RangeName
	}
	return json.Marshal(toSerialize)
}

type NullableLiteralTimeRangeBoundaryAllOf struct {
	value *LiteralTimeRangeBoundaryAllOf
	isSet bool
}

func (v NullableLiteralTimeRangeBoundaryAllOf) Get() *LiteralTimeRangeBoundaryAllOf {
	return v.value
}

func (v *NullableLiteralTimeRangeBoundaryAllOf) Set(val *LiteralTimeRangeBoundaryAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableLiteralTimeRangeBoundaryAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableLiteralTimeRangeBoundaryAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiteralTimeRangeBoundaryAllOf(val *LiteralTimeRangeBoundaryAllOf) *NullableLiteralTimeRangeBoundaryAllOf {
	return &NullableLiteralTimeRangeBoundaryAllOf{value: val, isSet: true}
}

func (v NullableLiteralTimeRangeBoundaryAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiteralTimeRangeBoundaryAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


