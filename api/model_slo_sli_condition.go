/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SloSliCondition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloSliCondition{}

// SloSliCondition struct for SloSliCondition
type SloSliCondition struct {
	TriggerCondition
	// The remaining SLI error budget threshold percentage.
	SliThreshold float64 `json:"sliThreshold"`
}

// NewSloSliCondition instantiates a new SloSliCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloSliCondition(sliThreshold float64, triggerType string) *SloSliCondition {
	this := SloSliCondition{}
	var detectionMethod string = "StaticCondition"
	this.DetectionMethod = &detectionMethod
	this.TriggerType = triggerType
	this.SliThreshold = sliThreshold
	return &this
}

// NewSloSliConditionWithDefaults instantiates a new SloSliCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloSliConditionWithDefaults() *SloSliCondition {
	this := SloSliCondition{}
	return &this
}

// GetSliThreshold returns the SliThreshold field value
func (o *SloSliCondition) GetSliThreshold() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SliThreshold
}

// GetSliThresholdOk returns a tuple with the SliThreshold field value
// and a boolean to check if the value has been set.
func (o *SloSliCondition) GetSliThresholdOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SliThreshold, true
}

// SetSliThreshold sets field value
func (o *SloSliCondition) SetSliThreshold(v float64) {
	o.SliThreshold = v
}

func (o SloSliCondition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloSliCondition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedTriggerCondition, errTriggerCondition := json.Marshal(o.TriggerCondition)
	if errTriggerCondition != nil {
		return map[string]interface{}{}, errTriggerCondition
	}
	errTriggerCondition = json.Unmarshal([]byte(serializedTriggerCondition), &toSerialize)
	if errTriggerCondition != nil {
		return map[string]interface{}{}, errTriggerCondition
	}
	toSerialize["sliThreshold"] = o.SliThreshold
	return toSerialize, nil
}

type NullableSloSliCondition struct {
	value *SloSliCondition
	isSet bool
}

func (v NullableSloSliCondition) Get() *SloSliCondition {
	return v.value
}

func (v *NullableSloSliCondition) Set(val *SloSliCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableSloSliCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableSloSliCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloSliCondition(val *SloSliCondition) *NullableSloSliCondition {
	return &NullableSloSliCondition{value: val, isSet: true}
}

func (v NullableSloSliCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloSliCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


