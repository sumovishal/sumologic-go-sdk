/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the LogSearchQueryTimeRangeBaseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogSearchQueryTimeRangeBaseAllOf{}

// LogSearchQueryTimeRangeBaseAllOf struct for LogSearchQueryTimeRangeBaseAllOf
type LogSearchQueryTimeRangeBaseAllOf struct {
	// Define the parsing mode to scan the JSON format log messages. Possible values are:   1. `AutoParse`   2. `Manual` In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
	ParsingMode *string `json:"parsingMode,omitempty"`
}

// NewLogSearchQueryTimeRangeBaseAllOf instantiates a new LogSearchQueryTimeRangeBaseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogSearchQueryTimeRangeBaseAllOf() *LogSearchQueryTimeRangeBaseAllOf {
	this := LogSearchQueryTimeRangeBaseAllOf{}
	var parsingMode string = "Manual"
	this.ParsingMode = &parsingMode
	return &this
}

// NewLogSearchQueryTimeRangeBaseAllOfWithDefaults instantiates a new LogSearchQueryTimeRangeBaseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogSearchQueryTimeRangeBaseAllOfWithDefaults() *LogSearchQueryTimeRangeBaseAllOf {
	this := LogSearchQueryTimeRangeBaseAllOf{}
	var parsingMode string = "Manual"
	this.ParsingMode = &parsingMode
	return &this
}

// GetParsingMode returns the ParsingMode field value if set, zero value otherwise.
func (o *LogSearchQueryTimeRangeBaseAllOf) GetParsingMode() string {
	if o == nil || IsNil(o.ParsingMode) {
		var ret string
		return ret
	}
	return *o.ParsingMode
}

// GetParsingModeOk returns a tuple with the ParsingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSearchQueryTimeRangeBaseAllOf) GetParsingModeOk() (*string, bool) {
	if o == nil || IsNil(o.ParsingMode) {
		return nil, false
	}
	return o.ParsingMode, true
}

// HasParsingMode returns a boolean if a field has been set.
func (o *LogSearchQueryTimeRangeBaseAllOf) HasParsingMode() bool {
	if o != nil && !IsNil(o.ParsingMode) {
		return true
	}

	return false
}

// SetParsingMode gets a reference to the given string and assigns it to the ParsingMode field.
func (o *LogSearchQueryTimeRangeBaseAllOf) SetParsingMode(v string) {
	o.ParsingMode = &v
}

func (o LogSearchQueryTimeRangeBaseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogSearchQueryTimeRangeBaseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParsingMode) {
		toSerialize["parsingMode"] = o.ParsingMode
	}
	return toSerialize, nil
}

type NullableLogSearchQueryTimeRangeBaseAllOf struct {
	value *LogSearchQueryTimeRangeBaseAllOf
	isSet bool
}

func (v NullableLogSearchQueryTimeRangeBaseAllOf) Get() *LogSearchQueryTimeRangeBaseAllOf {
	return v.value
}

func (v *NullableLogSearchQueryTimeRangeBaseAllOf) Set(val *LogSearchQueryTimeRangeBaseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableLogSearchQueryTimeRangeBaseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableLogSearchQueryTimeRangeBaseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogSearchQueryTimeRangeBaseAllOf(val *LogSearchQueryTimeRangeBaseAllOf) *NullableLogSearchQueryTimeRangeBaseAllOf {
	return &NullableLogSearchQueryTimeRangeBaseAllOf{value: val, isSet: true}
}

func (v NullableLogSearchQueryTimeRangeBaseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogSearchQueryTimeRangeBaseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


