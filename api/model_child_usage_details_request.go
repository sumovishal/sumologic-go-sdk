/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the ChildUsageDetailsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChildUsageDetailsRequest{}

// ChildUsageDetailsRequest The child usage details request for the parent account
type ChildUsageDetailsRequest struct {
	// Start date, without the time, of the usage data to fetch.
	StartDate *string `json:"startDate,omitempty"`
	// End date, without the time, of usage data to fetch.
	EndDate *string `json:"endDate,omitempty"`
}

// NewChildUsageDetailsRequest instantiates a new ChildUsageDetailsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChildUsageDetailsRequest() *ChildUsageDetailsRequest {
	this := ChildUsageDetailsRequest{}
	return &this
}

// NewChildUsageDetailsRequestWithDefaults instantiates a new ChildUsageDetailsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChildUsageDetailsRequestWithDefaults() *ChildUsageDetailsRequest {
	this := ChildUsageDetailsRequest{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ChildUsageDetailsRequest) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChildUsageDetailsRequest) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ChildUsageDetailsRequest) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ChildUsageDetailsRequest) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ChildUsageDetailsRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChildUsageDetailsRequest) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ChildUsageDetailsRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *ChildUsageDetailsRequest) SetEndDate(v string) {
	o.EndDate = &v
}

func (o ChildUsageDetailsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChildUsageDetailsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableChildUsageDetailsRequest struct {
	value *ChildUsageDetailsRequest
	isSet bool
}

func (v NullableChildUsageDetailsRequest) Get() *ChildUsageDetailsRequest {
	return v.value
}

func (v *NullableChildUsageDetailsRequest) Set(val *ChildUsageDetailsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChildUsageDetailsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChildUsageDetailsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChildUsageDetailsRequest(val *ChildUsageDetailsRequest) *NullableChildUsageDetailsRequest {
	return &NullableChildUsageDetailsRequest{value: val, isSet: true}
}

func (v NullableChildUsageDetailsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChildUsageDetailsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


