/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the TraceHttpSpanInfoAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TraceHttpSpanInfoAllOf{}

// TraceHttpSpanInfoAllOf struct for TraceHttpSpanInfoAllOf
type TraceHttpSpanInfoAllOf struct {
	// HTTP method of the request for the associated span.
	Method *string `json:"method,omitempty"`
	// URL of the request being handled in this span, in the standard URI format.
	Url *string `json:"url,omitempty"`
	// HTTP response status code for the associated span.
	StatusCode *int32 `json:"statusCode,omitempty"`
}

// NewTraceHttpSpanInfoAllOf instantiates a new TraceHttpSpanInfoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTraceHttpSpanInfoAllOf() *TraceHttpSpanInfoAllOf {
	this := TraceHttpSpanInfoAllOf{}
	return &this
}

// NewTraceHttpSpanInfoAllOfWithDefaults instantiates a new TraceHttpSpanInfoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTraceHttpSpanInfoAllOfWithDefaults() *TraceHttpSpanInfoAllOf {
	this := TraceHttpSpanInfoAllOf{}
	return &this
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *TraceHttpSpanInfoAllOf) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceHttpSpanInfoAllOf) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *TraceHttpSpanInfoAllOf) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *TraceHttpSpanInfoAllOf) SetMethod(v string) {
	o.Method = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TraceHttpSpanInfoAllOf) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceHttpSpanInfoAllOf) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TraceHttpSpanInfoAllOf) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TraceHttpSpanInfoAllOf) SetUrl(v string) {
	o.Url = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *TraceHttpSpanInfoAllOf) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceHttpSpanInfoAllOf) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *TraceHttpSpanInfoAllOf) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *TraceHttpSpanInfoAllOf) SetStatusCode(v int32) {
	o.StatusCode = &v
}

func (o TraceHttpSpanInfoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TraceHttpSpanInfoAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	return toSerialize, nil
}

type NullableTraceHttpSpanInfoAllOf struct {
	value *TraceHttpSpanInfoAllOf
	isSet bool
}

func (v NullableTraceHttpSpanInfoAllOf) Get() *TraceHttpSpanInfoAllOf {
	return v.value
}

func (v *NullableTraceHttpSpanInfoAllOf) Set(val *TraceHttpSpanInfoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTraceHttpSpanInfoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTraceHttpSpanInfoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTraceHttpSpanInfoAllOf(val *TraceHttpSpanInfoAllOf) *NullableTraceHttpSpanInfoAllOf {
	return &NullableTraceHttpSpanInfoAllOf{value: val, isSet: true}
}

func (v NullableTraceHttpSpanInfoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTraceHttpSpanInfoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


