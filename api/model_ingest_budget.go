/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"time"
)

// checks if the IngestBudget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngestBudget{}

// IngestBudget struct for IngestBudget
type IngestBudget struct {
	// Display name of the ingest budget.
	Name string `json:"name"`
	// Custom field value that is used to assign Collectors to the ingest budget.
	FieldValue string `json:"fieldValue"`
	// Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit.
	CapacityBytes int64 `json:"capacityBytes"`
	// Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
	Timezone string `json:"timezone"`
	// Reset time of the ingest budget in HH:MM format.
	ResetTime string `json:"resetTime"`
	// Description of the ingest budget.
	Description *string `json:"description,omitempty"`
	// Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:   * `stopCollecting`   * `keepCollecting`
	Action string `json:"action"`
	// The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index.
	AuditThreshold *int32 `json:"auditThreshold,omitempty"`
	// Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
	CreatedAt NullableTime `json:"createdAt"`
	CreatedByUser UserInfo `json:"createdByUser"`
	// Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
	ModifiedAt NullableTime `json:"modifiedAt"`
	ModifiedByUser UserInfo `json:"modifiedByUser"`
	// Unique identifier for the ingest budget.
	Id string `json:"id"`
	// Current usage since the last reset, in bytes.
	UsageBytes *int64 `json:"usageBytes,omitempty"`
	// Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage).
	UsageStatus *string `json:"usageStatus,omitempty"`
	// Number of collectors assigned to the ingest budget.
	NumberOfCollectors *int64 `json:"numberOfCollectors,omitempty"`
}

// NewIngestBudget instantiates a new IngestBudget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestBudget(name string, fieldValue string, capacityBytes int64, timezone string, resetTime string, action string, createdAt NullableTime, createdByUser UserInfo, modifiedAt NullableTime, modifiedByUser UserInfo, id string) *IngestBudget {
	this := IngestBudget{}
	this.Name = name
	this.FieldValue = fieldValue
	this.CapacityBytes = capacityBytes
	this.Timezone = timezone
	this.ResetTime = resetTime
	this.Action = action
	this.CreatedAt = createdAt
	this.CreatedByUser = createdByUser
	this.ModifiedAt = modifiedAt
	this.ModifiedByUser = modifiedByUser
	this.Id = id
	return &this
}

// NewIngestBudgetWithDefaults instantiates a new IngestBudget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestBudgetWithDefaults() *IngestBudget {
	this := IngestBudget{}
	return &this
}

// GetName returns the Name field value
func (o *IngestBudget) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IngestBudget) SetName(v string) {
	o.Name = v
}

// GetFieldValue returns the FieldValue field value
func (o *IngestBudget) GetFieldValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldValue
}

// GetFieldValueOk returns a tuple with the FieldValue field value
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetFieldValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldValue, true
}

// SetFieldValue sets field value
func (o *IngestBudget) SetFieldValue(v string) {
	o.FieldValue = v
}

// GetCapacityBytes returns the CapacityBytes field value
func (o *IngestBudget) GetCapacityBytes() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CapacityBytes
}

// GetCapacityBytesOk returns a tuple with the CapacityBytes field value
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetCapacityBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CapacityBytes, true
}

// SetCapacityBytes sets field value
func (o *IngestBudget) SetCapacityBytes(v int64) {
	o.CapacityBytes = v
}

// GetTimezone returns the Timezone field value
func (o *IngestBudget) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *IngestBudget) SetTimezone(v string) {
	o.Timezone = v
}

// GetResetTime returns the ResetTime field value
func (o *IngestBudget) GetResetTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResetTime
}

// GetResetTimeOk returns a tuple with the ResetTime field value
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetResetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResetTime, true
}

// SetResetTime sets field value
func (o *IngestBudget) SetResetTime(v string) {
	o.ResetTime = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IngestBudget) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IngestBudget) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IngestBudget) SetDescription(v string) {
	o.Description = &v
}

// GetAction returns the Action field value
func (o *IngestBudget) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *IngestBudget) SetAction(v string) {
	o.Action = v
}

// GetAuditThreshold returns the AuditThreshold field value if set, zero value otherwise.
func (o *IngestBudget) GetAuditThreshold() int32 {
	if o == nil || IsNil(o.AuditThreshold) {
		var ret int32
		return ret
	}
	return *o.AuditThreshold
}

// GetAuditThresholdOk returns a tuple with the AuditThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetAuditThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuditThreshold) {
		return nil, false
	}
	return o.AuditThreshold, true
}

// HasAuditThreshold returns a boolean if a field has been set.
func (o *IngestBudget) HasAuditThreshold() bool {
	if o != nil && !IsNil(o.AuditThreshold) {
		return true
	}

	return false
}

// SetAuditThreshold gets a reference to the given int32 and assigns it to the AuditThreshold field.
func (o *IngestBudget) SetAuditThreshold(v int32) {
	o.AuditThreshold = &v
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *IngestBudget) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IngestBudget) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *IngestBudget) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// GetCreatedByUser returns the CreatedByUser field value
func (o *IngestBudget) GetCreatedByUser() UserInfo {
	if o == nil {
		var ret UserInfo
		return ret
	}

	return o.CreatedByUser
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetCreatedByUserOk() (*UserInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedByUser, true
}

// SetCreatedByUser sets field value
func (o *IngestBudget) SetCreatedByUser(v UserInfo) {
	o.CreatedByUser = v
}

// GetModifiedAt returns the ModifiedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *IngestBudget) GetModifiedAt() time.Time {
	if o == nil || o.ModifiedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.ModifiedAt.Get()
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IngestBudget) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedAt.Get(), o.ModifiedAt.IsSet()
}

// SetModifiedAt sets field value
func (o *IngestBudget) SetModifiedAt(v time.Time) {
	o.ModifiedAt.Set(&v)
}

// GetModifiedByUser returns the ModifiedByUser field value
func (o *IngestBudget) GetModifiedByUser() UserInfo {
	if o == nil {
		var ret UserInfo
		return ret
	}

	return o.ModifiedByUser
}

// GetModifiedByUserOk returns a tuple with the ModifiedByUser field value
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetModifiedByUserOk() (*UserInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedByUser, true
}

// SetModifiedByUser sets field value
func (o *IngestBudget) SetModifiedByUser(v UserInfo) {
	o.ModifiedByUser = v
}

// GetId returns the Id field value
func (o *IngestBudget) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IngestBudget) SetId(v string) {
	o.Id = v
}

// GetUsageBytes returns the UsageBytes field value if set, zero value otherwise.
func (o *IngestBudget) GetUsageBytes() int64 {
	if o == nil || IsNil(o.UsageBytes) {
		var ret int64
		return ret
	}
	return *o.UsageBytes
}

// GetUsageBytesOk returns a tuple with the UsageBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetUsageBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.UsageBytes) {
		return nil, false
	}
	return o.UsageBytes, true
}

// HasUsageBytes returns a boolean if a field has been set.
func (o *IngestBudget) HasUsageBytes() bool {
	if o != nil && !IsNil(o.UsageBytes) {
		return true
	}

	return false
}

// SetUsageBytes gets a reference to the given int64 and assigns it to the UsageBytes field.
func (o *IngestBudget) SetUsageBytes(v int64) {
	o.UsageBytes = &v
}

// GetUsageStatus returns the UsageStatus field value if set, zero value otherwise.
func (o *IngestBudget) GetUsageStatus() string {
	if o == nil || IsNil(o.UsageStatus) {
		var ret string
		return ret
	}
	return *o.UsageStatus
}

// GetUsageStatusOk returns a tuple with the UsageStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetUsageStatusOk() (*string, bool) {
	if o == nil || IsNil(o.UsageStatus) {
		return nil, false
	}
	return o.UsageStatus, true
}

// HasUsageStatus returns a boolean if a field has been set.
func (o *IngestBudget) HasUsageStatus() bool {
	if o != nil && !IsNil(o.UsageStatus) {
		return true
	}

	return false
}

// SetUsageStatus gets a reference to the given string and assigns it to the UsageStatus field.
func (o *IngestBudget) SetUsageStatus(v string) {
	o.UsageStatus = &v
}

// GetNumberOfCollectors returns the NumberOfCollectors field value if set, zero value otherwise.
func (o *IngestBudget) GetNumberOfCollectors() int64 {
	if o == nil || IsNil(o.NumberOfCollectors) {
		var ret int64
		return ret
	}
	return *o.NumberOfCollectors
}

// GetNumberOfCollectorsOk returns a tuple with the NumberOfCollectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestBudget) GetNumberOfCollectorsOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberOfCollectors) {
		return nil, false
	}
	return o.NumberOfCollectors, true
}

// HasNumberOfCollectors returns a boolean if a field has been set.
func (o *IngestBudget) HasNumberOfCollectors() bool {
	if o != nil && !IsNil(o.NumberOfCollectors) {
		return true
	}

	return false
}

// SetNumberOfCollectors gets a reference to the given int64 and assigns it to the NumberOfCollectors field.
func (o *IngestBudget) SetNumberOfCollectors(v int64) {
	o.NumberOfCollectors = &v
}

func (o IngestBudget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngestBudget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["fieldValue"] = o.FieldValue
	toSerialize["capacityBytes"] = o.CapacityBytes
	toSerialize["timezone"] = o.Timezone
	toSerialize["resetTime"] = o.ResetTime
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["action"] = o.Action
	if !IsNil(o.AuditThreshold) {
		toSerialize["auditThreshold"] = o.AuditThreshold
	}
	toSerialize["createdAt"] = o.CreatedAt.Get()
	toSerialize["createdByUser"] = o.CreatedByUser
	toSerialize["modifiedAt"] = o.ModifiedAt.Get()
	toSerialize["modifiedByUser"] = o.ModifiedByUser
	toSerialize["id"] = o.Id
	if !IsNil(o.UsageBytes) {
		toSerialize["usageBytes"] = o.UsageBytes
	}
	if !IsNil(o.UsageStatus) {
		toSerialize["usageStatus"] = o.UsageStatus
	}
	if !IsNil(o.NumberOfCollectors) {
		toSerialize["numberOfCollectors"] = o.NumberOfCollectors
	}
	return toSerialize, nil
}

type NullableIngestBudget struct {
	value *IngestBudget
	isSet bool
}

func (v NullableIngestBudget) Get() *IngestBudget {
	return v.value
}

func (v *NullableIngestBudget) Set(val *IngestBudget) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestBudget) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestBudget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestBudget(val *IngestBudget) *NullableIngestBudget {
	return &NullableIngestBudget{value: val, isSet: true}
}

func (v NullableIngestBudget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestBudget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


