/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the ParsersLibraryFolderResponseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParsersLibraryFolderResponseAllOf{}

// ParsersLibraryFolderResponseAllOf struct for ParsersLibraryFolderResponseAllOf
type ParsersLibraryFolderResponseAllOf struct {
	// Children of the folder.
	Children []ParsersLibraryBaseResponse `json:"children"`
}

// NewParsersLibraryFolderResponseAllOf instantiates a new ParsersLibraryFolderResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParsersLibraryFolderResponseAllOf(children []ParsersLibraryBaseResponse) *ParsersLibraryFolderResponseAllOf {
	this := ParsersLibraryFolderResponseAllOf{}
	this.Children = children
	return &this
}

// NewParsersLibraryFolderResponseAllOfWithDefaults instantiates a new ParsersLibraryFolderResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParsersLibraryFolderResponseAllOfWithDefaults() *ParsersLibraryFolderResponseAllOf {
	this := ParsersLibraryFolderResponseAllOf{}
	return &this
}

// GetChildren returns the Children field value
func (o *ParsersLibraryFolderResponseAllOf) GetChildren() []ParsersLibraryBaseResponse {
	if o == nil {
		var ret []ParsersLibraryBaseResponse
		return ret
	}

	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value
// and a boolean to check if the value has been set.
func (o *ParsersLibraryFolderResponseAllOf) GetChildrenOk() ([]ParsersLibraryBaseResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Children, true
}

// SetChildren sets field value
func (o *ParsersLibraryFolderResponseAllOf) SetChildren(v []ParsersLibraryBaseResponse) {
	o.Children = v
}

func (o ParsersLibraryFolderResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParsersLibraryFolderResponseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["children"] = o.Children
	return toSerialize, nil
}

type NullableParsersLibraryFolderResponseAllOf struct {
	value *ParsersLibraryFolderResponseAllOf
	isSet bool
}

func (v NullableParsersLibraryFolderResponseAllOf) Get() *ParsersLibraryFolderResponseAllOf {
	return v.value
}

func (v *NullableParsersLibraryFolderResponseAllOf) Set(val *ParsersLibraryFolderResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableParsersLibraryFolderResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableParsersLibraryFolderResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParsersLibraryFolderResponseAllOf(val *ParsersLibraryFolderResponseAllOf) *NullableParsersLibraryFolderResponseAllOf {
	return &NullableParsersLibraryFolderResponseAllOf{value: val, isSet: true}
}

func (v NullableParsersLibraryFolderResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParsersLibraryFolderResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


