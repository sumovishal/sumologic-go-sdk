/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MonitorsLibraryMonitorAllOfRunAs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorsLibraryMonitorAllOfRunAs{}

// MonitorsLibraryMonitorAllOfRunAs struct for MonitorsLibraryMonitorAllOfRunAs
type MonitorsLibraryMonitorAllOfRunAs struct {
	// The runAsId indicates the context in which monitors will run. If not provided, then it will run in the context of the monitor author.
	RunAsId string `json:"runAsId"`
}

// NewMonitorsLibraryMonitorAllOfRunAs instantiates a new MonitorsLibraryMonitorAllOfRunAs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorsLibraryMonitorAllOfRunAs(runAsId string) *MonitorsLibraryMonitorAllOfRunAs {
	this := MonitorsLibraryMonitorAllOfRunAs{}
	this.RunAsId = runAsId
	return &this
}

// NewMonitorsLibraryMonitorAllOfRunAsWithDefaults instantiates a new MonitorsLibraryMonitorAllOfRunAs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorsLibraryMonitorAllOfRunAsWithDefaults() *MonitorsLibraryMonitorAllOfRunAs {
	this := MonitorsLibraryMonitorAllOfRunAs{}
	return &this
}

// GetRunAsId returns the RunAsId field value
func (o *MonitorsLibraryMonitorAllOfRunAs) GetRunAsId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RunAsId
}

// GetRunAsIdOk returns a tuple with the RunAsId field value
// and a boolean to check if the value has been set.
func (o *MonitorsLibraryMonitorAllOfRunAs) GetRunAsIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunAsId, true
}

// SetRunAsId sets field value
func (o *MonitorsLibraryMonitorAllOfRunAs) SetRunAsId(v string) {
	o.RunAsId = v
}

func (o MonitorsLibraryMonitorAllOfRunAs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorsLibraryMonitorAllOfRunAs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["runAsId"] = o.RunAsId
	return toSerialize, nil
}

type NullableMonitorsLibraryMonitorAllOfRunAs struct {
	value *MonitorsLibraryMonitorAllOfRunAs
	isSet bool
}

func (v NullableMonitorsLibraryMonitorAllOfRunAs) Get() *MonitorsLibraryMonitorAllOfRunAs {
	return v.value
}

func (v *NullableMonitorsLibraryMonitorAllOfRunAs) Set(val *MonitorsLibraryMonitorAllOfRunAs) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorsLibraryMonitorAllOfRunAs) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorsLibraryMonitorAllOfRunAs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorsLibraryMonitorAllOfRunAs(val *MonitorsLibraryMonitorAllOfRunAs) *NullableMonitorsLibraryMonitorAllOfRunAs {
	return &NullableMonitorsLibraryMonitorAllOfRunAs{value: val, isSet: true}
}

func (v NullableMonitorsLibraryMonitorAllOfRunAs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorsLibraryMonitorAllOfRunAs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


