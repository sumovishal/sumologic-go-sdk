/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateBucketDefinitionItems type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBucketDefinitionItems{}

// CreateBucketDefinitionItems struct for CreateBucketDefinitionItems
type CreateBucketDefinitionItems struct {
	// The name of the Amazon S3 bucket.
	BucketName string `json:"bucketName" validate:"regexp=(?!(^xn--|-s3alias$))^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$"`
}

type _CreateBucketDefinitionItems CreateBucketDefinitionItems

// NewCreateBucketDefinitionItems instantiates a new CreateBucketDefinitionItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBucketDefinitionItems(bucketName string) *CreateBucketDefinitionItems {
	this := CreateBucketDefinitionItems{}
	this.BucketName = bucketName
	return &this
}

// NewCreateBucketDefinitionItemsWithDefaults instantiates a new CreateBucketDefinitionItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBucketDefinitionItemsWithDefaults() *CreateBucketDefinitionItems {
	this := CreateBucketDefinitionItems{}
	return &this
}

// GetBucketName returns the BucketName field value
func (o *CreateBucketDefinitionItems) GetBucketName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinitionItems) GetBucketNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketName, true
}

// SetBucketName sets field value
func (o *CreateBucketDefinitionItems) SetBucketName(v string) {
	o.BucketName = v
}

func (o CreateBucketDefinitionItems) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBucketDefinitionItems) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bucketName"] = o.BucketName
	return toSerialize, nil
}

func (o *CreateBucketDefinitionItems) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bucketName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateBucketDefinitionItems := _CreateBucketDefinitionItems{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateBucketDefinitionItems)

	if err != nil {
		return err
	}

	*o = CreateBucketDefinitionItems(varCreateBucketDefinitionItems)

	return err
}

type NullableCreateBucketDefinitionItems struct {
	value *CreateBucketDefinitionItems
	isSet bool
}

func (v NullableCreateBucketDefinitionItems) Get() *CreateBucketDefinitionItems {
	return v.value
}

func (v *NullableCreateBucketDefinitionItems) Set(val *CreateBucketDefinitionItems) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBucketDefinitionItems) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBucketDefinitionItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBucketDefinitionItems(val *CreateBucketDefinitionItems) *NullableCreateBucketDefinitionItems {
	return &NullableCreateBucketDefinitionItems{value: val, isSet: true}
}

func (v NullableCreateBucketDefinitionItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBucketDefinitionItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


