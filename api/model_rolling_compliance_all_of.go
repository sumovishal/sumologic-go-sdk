/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RollingComplianceAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RollingComplianceAllOf{}

// RollingComplianceAllOf struct for RollingComplianceAllOf
type RollingComplianceAllOf struct {
	// Size of Rolling Window. Must be a multiple of days.
	Size string `json:"size"`
}

// NewRollingComplianceAllOf instantiates a new RollingComplianceAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRollingComplianceAllOf(size string) *RollingComplianceAllOf {
	this := RollingComplianceAllOf{}
	this.Size = size
	return &this
}

// NewRollingComplianceAllOfWithDefaults instantiates a new RollingComplianceAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRollingComplianceAllOfWithDefaults() *RollingComplianceAllOf {
	this := RollingComplianceAllOf{}
	return &this
}

// GetSize returns the Size field value
func (o *RollingComplianceAllOf) GetSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *RollingComplianceAllOf) GetSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *RollingComplianceAllOf) SetSize(v string) {
	o.Size = v
}

func (o RollingComplianceAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RollingComplianceAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

type NullableRollingComplianceAllOf struct {
	value *RollingComplianceAllOf
	isSet bool
}

func (v NullableRollingComplianceAllOf) Get() *RollingComplianceAllOf {
	return v.value
}

func (v *NullableRollingComplianceAllOf) Set(val *RollingComplianceAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRollingComplianceAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRollingComplianceAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRollingComplianceAllOf(val *RollingComplianceAllOf) *NullableRollingComplianceAllOf {
	return &NullableRollingComplianceAllOf{value: val, isSet: true}
}

func (v NullableRollingComplianceAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRollingComplianceAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


