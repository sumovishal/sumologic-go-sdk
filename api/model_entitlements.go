/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// Entitlements struct for Entitlements
type Entitlements struct {
	// Details of the contract type. `AnnualBucket` are contracts that buy and consume ingest on yearly basis. `Credits` are contracts that buy a single unit called credits for all our features. `DailyAverage` are contracts that buy and consume ingest on a monthly basis.
	ContractType string `json:"contractType"`
	// Text denoting the type of entitlement. - `continuous` for Continuous Analytics, - `frequent` for Frequent Analytics, - `storage` for Total Storage, - `metrics` for Metrics.
	EntitlementType string `json:"entitlementType"`
	// The label of an entitlement is the plan name displayed on the accounts page in our user interface.
	Label string `json:"label"`
	Capacity Capacity `json:"capacity"`
	// Contains the capacities that were part of the contract.
	Capacities []Capacity `json:"capacities,omitempty"`
}

// NewEntitlements instantiates a new Entitlements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlements(contractType string, entitlementType string, label string, capacity Capacity) *Entitlements {
	this := Entitlements{}
	this.ContractType = contractType
	this.EntitlementType = entitlementType
	this.Label = label
	this.Capacity = capacity
	return &this
}

// NewEntitlementsWithDefaults instantiates a new Entitlements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementsWithDefaults() *Entitlements {
	this := Entitlements{}
	return &this
}

// GetContractType returns the ContractType field value
func (o *Entitlements) GetContractType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractType
}

// GetContractTypeOk returns a tuple with the ContractType field value
// and a boolean to check if the value has been set.
func (o *Entitlements) GetContractTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractType, true
}

// SetContractType sets field value
func (o *Entitlements) SetContractType(v string) {
	o.ContractType = v
}

// GetEntitlementType returns the EntitlementType field value
func (o *Entitlements) GetEntitlementType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntitlementType
}

// GetEntitlementTypeOk returns a tuple with the EntitlementType field value
// and a boolean to check if the value has been set.
func (o *Entitlements) GetEntitlementTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntitlementType, true
}

// SetEntitlementType sets field value
func (o *Entitlements) SetEntitlementType(v string) {
	o.EntitlementType = v
}

// GetLabel returns the Label field value
func (o *Entitlements) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *Entitlements) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *Entitlements) SetLabel(v string) {
	o.Label = v
}

// GetCapacity returns the Capacity field value
func (o *Entitlements) GetCapacity() Capacity {
	if o == nil {
		var ret Capacity
		return ret
	}

	return o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value
// and a boolean to check if the value has been set.
func (o *Entitlements) GetCapacityOk() (*Capacity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capacity, true
}

// SetCapacity sets field value
func (o *Entitlements) SetCapacity(v Capacity) {
	o.Capacity = v
}

// GetCapacities returns the Capacities field value if set, zero value otherwise.
func (o *Entitlements) GetCapacities() []Capacity {
	if o == nil || o.Capacities == nil {
		var ret []Capacity
		return ret
	}
	return o.Capacities
}

// GetCapacitiesOk returns a tuple with the Capacities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetCapacitiesOk() ([]Capacity, bool) {
	if o == nil || o.Capacities == nil {
		return nil, false
	}
	return o.Capacities, true
}

// HasCapacities returns a boolean if a field has been set.
func (o *Entitlements) HasCapacities() bool {
	if o != nil && o.Capacities != nil {
		return true
	}

	return false
}

// SetCapacities gets a reference to the given []Capacity and assigns it to the Capacities field.
func (o *Entitlements) SetCapacities(v []Capacity) {
	o.Capacities = v
}

func (o Entitlements) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contractType"] = o.ContractType
	}
	if true {
		toSerialize["entitlementType"] = o.EntitlementType
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if true {
		toSerialize["capacity"] = o.Capacity
	}
	if o.Capacities != nil {
		toSerialize["capacities"] = o.Capacities
	}
	return json.Marshal(toSerialize)
}

type NullableEntitlements struct {
	value *Entitlements
	isSet bool
}

func (v NullableEntitlements) Get() *Entitlements {
	return v.value
}

func (v *NullableEntitlements) Set(val *Entitlements) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlements) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlements(val *Entitlements) *NullableEntitlements {
	return &NullableEntitlements{value: val, isSet: true}
}

func (v NullableEntitlements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


