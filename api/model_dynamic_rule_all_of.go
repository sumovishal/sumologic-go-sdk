/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// DynamicRuleAllOf struct for DynamicRuleAllOf
type DynamicRuleAllOf struct {
	// Unique identifier for the dynamic parsing rule.
	Id string `json:"id"`
	// Whether the rule has been defined by the system, rather than by a user.
	IsSystemRule bool `json:"isSystemRule"`
}

// NewDynamicRuleAllOf instantiates a new DynamicRuleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicRuleAllOf(id string, isSystemRule bool) *DynamicRuleAllOf {
	this := DynamicRuleAllOf{}
	this.Id = id
	this.IsSystemRule = isSystemRule
	return &this
}

// NewDynamicRuleAllOfWithDefaults instantiates a new DynamicRuleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicRuleAllOfWithDefaults() *DynamicRuleAllOf {
	this := DynamicRuleAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *DynamicRuleAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DynamicRuleAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DynamicRuleAllOf) SetId(v string) {
	o.Id = v
}

// GetIsSystemRule returns the IsSystemRule field value
func (o *DynamicRuleAllOf) GetIsSystemRule() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSystemRule
}

// GetIsSystemRuleOk returns a tuple with the IsSystemRule field value
// and a boolean to check if the value has been set.
func (o *DynamicRuleAllOf) GetIsSystemRuleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSystemRule, true
}

// SetIsSystemRule sets field value
func (o *DynamicRuleAllOf) SetIsSystemRule(v bool) {
	o.IsSystemRule = v
}

func (o DynamicRuleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["isSystemRule"] = o.IsSystemRule
	}
	return json.Marshal(toSerialize)
}

type NullableDynamicRuleAllOf struct {
	value *DynamicRuleAllOf
	isSet bool
}

func (v NullableDynamicRuleAllOf) Get() *DynamicRuleAllOf {
	return v.value
}

func (v *NullableDynamicRuleAllOf) Set(val *DynamicRuleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicRuleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicRuleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicRuleAllOf(val *DynamicRuleAllOf) *NullableDynamicRuleAllOf {
	return &NullableDynamicRuleAllOf{value: val, isSet: true}
}

func (v NullableDynamicRuleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicRuleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


