/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the ServiceAccountModelAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceAccountModelAllOf{}

// ServiceAccountModelAllOf struct for ServiceAccountModelAllOf
type ServiceAccountModelAllOf struct {
	// Unique identifier for the service account.
	Id string `json:"id"`
	// True if the service account is active.
	IsActive *bool `json:"isActive,omitempty"`
}

// NewServiceAccountModelAllOf instantiates a new ServiceAccountModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccountModelAllOf(id string) *ServiceAccountModelAllOf {
	this := ServiceAccountModelAllOf{}
	this.Id = id
	return &this
}

// NewServiceAccountModelAllOfWithDefaults instantiates a new ServiceAccountModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccountModelAllOfWithDefaults() *ServiceAccountModelAllOf {
	this := ServiceAccountModelAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *ServiceAccountModelAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountModelAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ServiceAccountModelAllOf) SetId(v string) {
	o.Id = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *ServiceAccountModelAllOf) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountModelAllOf) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *ServiceAccountModelAllOf) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *ServiceAccountModelAllOf) SetIsActive(v bool) {
	o.IsActive = &v
}

func (o ServiceAccountModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceAccountModelAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	return toSerialize, nil
}

type NullableServiceAccountModelAllOf struct {
	value *ServiceAccountModelAllOf
	isSet bool
}

func (v NullableServiceAccountModelAllOf) Get() *ServiceAccountModelAllOf {
	return v.value
}

func (v *NullableServiceAccountModelAllOf) Set(val *ServiceAccountModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountModelAllOf(val *ServiceAccountModelAllOf) *NullableServiceAccountModelAllOf {
	return &NullableServiceAccountModelAllOf{value: val, isSet: true}
}

func (v NullableServiceAccountModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


