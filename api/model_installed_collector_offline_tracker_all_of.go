/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InstalledCollectorOfflineTrackerAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstalledCollectorOfflineTrackerAllOf{}

// InstalledCollectorOfflineTrackerAllOf struct for InstalledCollectorOfflineTrackerAllOf
type InstalledCollectorOfflineTrackerAllOf struct {
	// The number of minutes since the last heartbeat for the collector was received.
	MinutesSinceLastHeartbeat *string `json:"minutesSinceLastHeartbeat,omitempty"`
}

// NewInstalledCollectorOfflineTrackerAllOf instantiates a new InstalledCollectorOfflineTrackerAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstalledCollectorOfflineTrackerAllOf() *InstalledCollectorOfflineTrackerAllOf {
	this := InstalledCollectorOfflineTrackerAllOf{}
	return &this
}

// NewInstalledCollectorOfflineTrackerAllOfWithDefaults instantiates a new InstalledCollectorOfflineTrackerAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstalledCollectorOfflineTrackerAllOfWithDefaults() *InstalledCollectorOfflineTrackerAllOf {
	this := InstalledCollectorOfflineTrackerAllOf{}
	return &this
}

// GetMinutesSinceLastHeartbeat returns the MinutesSinceLastHeartbeat field value if set, zero value otherwise.
func (o *InstalledCollectorOfflineTrackerAllOf) GetMinutesSinceLastHeartbeat() string {
	if o == nil || IsNil(o.MinutesSinceLastHeartbeat) {
		var ret string
		return ret
	}
	return *o.MinutesSinceLastHeartbeat
}

// GetMinutesSinceLastHeartbeatOk returns a tuple with the MinutesSinceLastHeartbeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstalledCollectorOfflineTrackerAllOf) GetMinutesSinceLastHeartbeatOk() (*string, bool) {
	if o == nil || IsNil(o.MinutesSinceLastHeartbeat) {
		return nil, false
	}
	return o.MinutesSinceLastHeartbeat, true
}

// HasMinutesSinceLastHeartbeat returns a boolean if a field has been set.
func (o *InstalledCollectorOfflineTrackerAllOf) HasMinutesSinceLastHeartbeat() bool {
	if o != nil && !IsNil(o.MinutesSinceLastHeartbeat) {
		return true
	}

	return false
}

// SetMinutesSinceLastHeartbeat gets a reference to the given string and assigns it to the MinutesSinceLastHeartbeat field.
func (o *InstalledCollectorOfflineTrackerAllOf) SetMinutesSinceLastHeartbeat(v string) {
	o.MinutesSinceLastHeartbeat = &v
}

func (o InstalledCollectorOfflineTrackerAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstalledCollectorOfflineTrackerAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MinutesSinceLastHeartbeat) {
		toSerialize["minutesSinceLastHeartbeat"] = o.MinutesSinceLastHeartbeat
	}
	return toSerialize, nil
}

type NullableInstalledCollectorOfflineTrackerAllOf struct {
	value *InstalledCollectorOfflineTrackerAllOf
	isSet bool
}

func (v NullableInstalledCollectorOfflineTrackerAllOf) Get() *InstalledCollectorOfflineTrackerAllOf {
	return v.value
}

func (v *NullableInstalledCollectorOfflineTrackerAllOf) Set(val *InstalledCollectorOfflineTrackerAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableInstalledCollectorOfflineTrackerAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableInstalledCollectorOfflineTrackerAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstalledCollectorOfflineTrackerAllOf(val *InstalledCollectorOfflineTrackerAllOf) *NullableInstalledCollectorOfflineTrackerAllOf {
	return &NullableInstalledCollectorOfflineTrackerAllOf{value: val, isSet: true}
}

func (v NullableInstalledCollectorOfflineTrackerAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstalledCollectorOfflineTrackerAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


