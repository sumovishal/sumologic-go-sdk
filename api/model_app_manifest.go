/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AppManifest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppManifest{}

// AppManifest struct for AppManifest
type AppManifest struct {
	// The app family
	Family *string `json:"family,omitempty"`
	// Description of the app.
	Description string `json:"description"`
	// Categories that the app belongs to.
	Categories []string `json:"categories,omitempty"`
	// Text to be displayed when hovered over in UI.
	HoverText string `json:"hoverText"`
	// App icon URL.
	IconURL string `json:"iconURL"`
	// App screenshot URLs.
	ScreenshotURLs []string `json:"screenshotURLs,omitempty"`
	// App help page URL.
	HelpURL *string `json:"helpURL,omitempty"`
	// the IDs of the docs pages for this app
	HelpDocIdMap *map[string]string `json:"helpDocIdMap,omitempty"`
	// App community page URL.
	CommunityURL *string `json:"communityURL,omitempty"`
	// Requirements for the app.
	Requirements []string `json:"requirements,omitempty"`
	// Account types that are allowed to install the app
	AccountTypes []string `json:"accountTypes,omitempty"`
	// Indicates whether installation instructions are required or not.
	RequiresInstallationInstructions *bool `json:"requiresInstallationInstructions,omitempty"`
	// Installation instructions for the app.
	InstallationInstructions *string `json:"installationInstructions,omitempty"`
	// Content identifier of the app.
	Parameters []ServiceManifestDataSourceParameter `json:"parameters,omitempty"`
	// App author.
	Author *string `json:"author,omitempty"`
	// App author website URL.
	AuthorWebsite *string `json:"authorWebsite,omitempty"`
}

// NewAppManifest instantiates a new AppManifest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppManifest(description string, hoverText string, iconURL string) *AppManifest {
	this := AppManifest{}
	this.Description = description
	this.HoverText = hoverText
	this.IconURL = iconURL
	return &this
}

// NewAppManifestWithDefaults instantiates a new AppManifest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppManifestWithDefaults() *AppManifest {
	this := AppManifest{}
	return &this
}

// GetFamily returns the Family field value if set, zero value otherwise.
func (o *AppManifest) GetFamily() string {
	if o == nil || IsNil(o.Family) {
		var ret string
		return ret
	}
	return *o.Family
}

// GetFamilyOk returns a tuple with the Family field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.Family) {
		return nil, false
	}
	return o.Family, true
}

// HasFamily returns a boolean if a field has been set.
func (o *AppManifest) HasFamily() bool {
	if o != nil && !IsNil(o.Family) {
		return true
	}

	return false
}

// SetFamily gets a reference to the given string and assigns it to the Family field.
func (o *AppManifest) SetFamily(v string) {
	o.Family = &v
}

// GetDescription returns the Description field value
func (o *AppManifest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AppManifest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AppManifest) SetDescription(v string) {
	o.Description = v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *AppManifest) GetCategories() []string {
	if o == nil || IsNil(o.Categories) {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *AppManifest) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *AppManifest) SetCategories(v []string) {
	o.Categories = v
}

// GetHoverText returns the HoverText field value
func (o *AppManifest) GetHoverText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HoverText
}

// GetHoverTextOk returns a tuple with the HoverText field value
// and a boolean to check if the value has been set.
func (o *AppManifest) GetHoverTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HoverText, true
}

// SetHoverText sets field value
func (o *AppManifest) SetHoverText(v string) {
	o.HoverText = v
}

// GetIconURL returns the IconURL field value
func (o *AppManifest) GetIconURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IconURL
}

// GetIconURLOk returns a tuple with the IconURL field value
// and a boolean to check if the value has been set.
func (o *AppManifest) GetIconURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IconURL, true
}

// SetIconURL sets field value
func (o *AppManifest) SetIconURL(v string) {
	o.IconURL = v
}

// GetScreenshotURLs returns the ScreenshotURLs field value if set, zero value otherwise.
func (o *AppManifest) GetScreenshotURLs() []string {
	if o == nil || IsNil(o.ScreenshotURLs) {
		var ret []string
		return ret
	}
	return o.ScreenshotURLs
}

// GetScreenshotURLsOk returns a tuple with the ScreenshotURLs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetScreenshotURLsOk() ([]string, bool) {
	if o == nil || IsNil(o.ScreenshotURLs) {
		return nil, false
	}
	return o.ScreenshotURLs, true
}

// HasScreenshotURLs returns a boolean if a field has been set.
func (o *AppManifest) HasScreenshotURLs() bool {
	if o != nil && !IsNil(o.ScreenshotURLs) {
		return true
	}

	return false
}

// SetScreenshotURLs gets a reference to the given []string and assigns it to the ScreenshotURLs field.
func (o *AppManifest) SetScreenshotURLs(v []string) {
	o.ScreenshotURLs = v
}

// GetHelpURL returns the HelpURL field value if set, zero value otherwise.
func (o *AppManifest) GetHelpURL() string {
	if o == nil || IsNil(o.HelpURL) {
		var ret string
		return ret
	}
	return *o.HelpURL
}

// GetHelpURLOk returns a tuple with the HelpURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetHelpURLOk() (*string, bool) {
	if o == nil || IsNil(o.HelpURL) {
		return nil, false
	}
	return o.HelpURL, true
}

// HasHelpURL returns a boolean if a field has been set.
func (o *AppManifest) HasHelpURL() bool {
	if o != nil && !IsNil(o.HelpURL) {
		return true
	}

	return false
}

// SetHelpURL gets a reference to the given string and assigns it to the HelpURL field.
func (o *AppManifest) SetHelpURL(v string) {
	o.HelpURL = &v
}

// GetHelpDocIdMap returns the HelpDocIdMap field value if set, zero value otherwise.
func (o *AppManifest) GetHelpDocIdMap() map[string]string {
	if o == nil || IsNil(o.HelpDocIdMap) {
		var ret map[string]string
		return ret
	}
	return *o.HelpDocIdMap
}

// GetHelpDocIdMapOk returns a tuple with the HelpDocIdMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetHelpDocIdMapOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.HelpDocIdMap) {
		return nil, false
	}
	return o.HelpDocIdMap, true
}

// HasHelpDocIdMap returns a boolean if a field has been set.
func (o *AppManifest) HasHelpDocIdMap() bool {
	if o != nil && !IsNil(o.HelpDocIdMap) {
		return true
	}

	return false
}

// SetHelpDocIdMap gets a reference to the given map[string]string and assigns it to the HelpDocIdMap field.
func (o *AppManifest) SetHelpDocIdMap(v map[string]string) {
	o.HelpDocIdMap = &v
}

// GetCommunityURL returns the CommunityURL field value if set, zero value otherwise.
func (o *AppManifest) GetCommunityURL() string {
	if o == nil || IsNil(o.CommunityURL) {
		var ret string
		return ret
	}
	return *o.CommunityURL
}

// GetCommunityURLOk returns a tuple with the CommunityURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetCommunityURLOk() (*string, bool) {
	if o == nil || IsNil(o.CommunityURL) {
		return nil, false
	}
	return o.CommunityURL, true
}

// HasCommunityURL returns a boolean if a field has been set.
func (o *AppManifest) HasCommunityURL() bool {
	if o != nil && !IsNil(o.CommunityURL) {
		return true
	}

	return false
}

// SetCommunityURL gets a reference to the given string and assigns it to the CommunityURL field.
func (o *AppManifest) SetCommunityURL(v string) {
	o.CommunityURL = &v
}

// GetRequirements returns the Requirements field value if set, zero value otherwise.
func (o *AppManifest) GetRequirements() []string {
	if o == nil || IsNil(o.Requirements) {
		var ret []string
		return ret
	}
	return o.Requirements
}

// GetRequirementsOk returns a tuple with the Requirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetRequirementsOk() ([]string, bool) {
	if o == nil || IsNil(o.Requirements) {
		return nil, false
	}
	return o.Requirements, true
}

// HasRequirements returns a boolean if a field has been set.
func (o *AppManifest) HasRequirements() bool {
	if o != nil && !IsNil(o.Requirements) {
		return true
	}

	return false
}

// SetRequirements gets a reference to the given []string and assigns it to the Requirements field.
func (o *AppManifest) SetRequirements(v []string) {
	o.Requirements = v
}

// GetAccountTypes returns the AccountTypes field value if set, zero value otherwise.
func (o *AppManifest) GetAccountTypes() []string {
	if o == nil || IsNil(o.AccountTypes) {
		var ret []string
		return ret
	}
	return o.AccountTypes
}

// GetAccountTypesOk returns a tuple with the AccountTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetAccountTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.AccountTypes) {
		return nil, false
	}
	return o.AccountTypes, true
}

// HasAccountTypes returns a boolean if a field has been set.
func (o *AppManifest) HasAccountTypes() bool {
	if o != nil && !IsNil(o.AccountTypes) {
		return true
	}

	return false
}

// SetAccountTypes gets a reference to the given []string and assigns it to the AccountTypes field.
func (o *AppManifest) SetAccountTypes(v []string) {
	o.AccountTypes = v
}

// GetRequiresInstallationInstructions returns the RequiresInstallationInstructions field value if set, zero value otherwise.
func (o *AppManifest) GetRequiresInstallationInstructions() bool {
	if o == nil || IsNil(o.RequiresInstallationInstructions) {
		var ret bool
		return ret
	}
	return *o.RequiresInstallationInstructions
}

// GetRequiresInstallationInstructionsOk returns a tuple with the RequiresInstallationInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetRequiresInstallationInstructionsOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresInstallationInstructions) {
		return nil, false
	}
	return o.RequiresInstallationInstructions, true
}

// HasRequiresInstallationInstructions returns a boolean if a field has been set.
func (o *AppManifest) HasRequiresInstallationInstructions() bool {
	if o != nil && !IsNil(o.RequiresInstallationInstructions) {
		return true
	}

	return false
}

// SetRequiresInstallationInstructions gets a reference to the given bool and assigns it to the RequiresInstallationInstructions field.
func (o *AppManifest) SetRequiresInstallationInstructions(v bool) {
	o.RequiresInstallationInstructions = &v
}

// GetInstallationInstructions returns the InstallationInstructions field value if set, zero value otherwise.
func (o *AppManifest) GetInstallationInstructions() string {
	if o == nil || IsNil(o.InstallationInstructions) {
		var ret string
		return ret
	}
	return *o.InstallationInstructions
}

// GetInstallationInstructionsOk returns a tuple with the InstallationInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetInstallationInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.InstallationInstructions) {
		return nil, false
	}
	return o.InstallationInstructions, true
}

// HasInstallationInstructions returns a boolean if a field has been set.
func (o *AppManifest) HasInstallationInstructions() bool {
	if o != nil && !IsNil(o.InstallationInstructions) {
		return true
	}

	return false
}

// SetInstallationInstructions gets a reference to the given string and assigns it to the InstallationInstructions field.
func (o *AppManifest) SetInstallationInstructions(v string) {
	o.InstallationInstructions = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *AppManifest) GetParameters() []ServiceManifestDataSourceParameter {
	if o == nil || IsNil(o.Parameters) {
		var ret []ServiceManifestDataSourceParameter
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetParametersOk() ([]ServiceManifestDataSourceParameter, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *AppManifest) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []ServiceManifestDataSourceParameter and assigns it to the Parameters field.
func (o *AppManifest) SetParameters(v []ServiceManifestDataSourceParameter) {
	o.Parameters = v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *AppManifest) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *AppManifest) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *AppManifest) SetAuthor(v string) {
	o.Author = &v
}

// GetAuthorWebsite returns the AuthorWebsite field value if set, zero value otherwise.
func (o *AppManifest) GetAuthorWebsite() string {
	if o == nil || IsNil(o.AuthorWebsite) {
		var ret string
		return ret
	}
	return *o.AuthorWebsite
}

// GetAuthorWebsiteOk returns a tuple with the AuthorWebsite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppManifest) GetAuthorWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorWebsite) {
		return nil, false
	}
	return o.AuthorWebsite, true
}

// HasAuthorWebsite returns a boolean if a field has been set.
func (o *AppManifest) HasAuthorWebsite() bool {
	if o != nil && !IsNil(o.AuthorWebsite) {
		return true
	}

	return false
}

// SetAuthorWebsite gets a reference to the given string and assigns it to the AuthorWebsite field.
func (o *AppManifest) SetAuthorWebsite(v string) {
	o.AuthorWebsite = &v
}

func (o AppManifest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppManifest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Family) {
		toSerialize["family"] = o.Family
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	toSerialize["hoverText"] = o.HoverText
	toSerialize["iconURL"] = o.IconURL
	if !IsNil(o.ScreenshotURLs) {
		toSerialize["screenshotURLs"] = o.ScreenshotURLs
	}
	if !IsNil(o.HelpURL) {
		toSerialize["helpURL"] = o.HelpURL
	}
	if !IsNil(o.HelpDocIdMap) {
		toSerialize["helpDocIdMap"] = o.HelpDocIdMap
	}
	if !IsNil(o.CommunityURL) {
		toSerialize["communityURL"] = o.CommunityURL
	}
	if !IsNil(o.Requirements) {
		toSerialize["requirements"] = o.Requirements
	}
	if !IsNil(o.AccountTypes) {
		toSerialize["accountTypes"] = o.AccountTypes
	}
	if !IsNil(o.RequiresInstallationInstructions) {
		toSerialize["requiresInstallationInstructions"] = o.RequiresInstallationInstructions
	}
	if !IsNil(o.InstallationInstructions) {
		toSerialize["installationInstructions"] = o.InstallationInstructions
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.AuthorWebsite) {
		toSerialize["authorWebsite"] = o.AuthorWebsite
	}
	return toSerialize, nil
}

type NullableAppManifest struct {
	value *AppManifest
	isSet bool
}

func (v NullableAppManifest) Get() *AppManifest {
	return v.value
}

func (v *NullableAppManifest) Set(val *AppManifest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppManifest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppManifest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppManifest(val *AppManifest) *NullableAppManifest {
	return &NullableAppManifest{value: val, isSet: true}
}

func (v NullableAppManifest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppManifest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


