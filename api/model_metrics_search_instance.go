/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the MetricsSearchInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsSearchInstance{}

// MetricsSearchInstance struct for MetricsSearchInstance
type MetricsSearchInstance struct {
	// Item title in the content library.
	Title string `json:"title" validate:"regexp=^[a-zA-Z0-9 +%-@.,_()]+$"`
	// Item description in the content library.
	Description string `json:"description"`
	TimeRange ResolvableTimeRange `json:"timeRange"`
	// Log query used to add an overlay to the chart.
	LogQuery *string `json:"logQuery,omitempty"`
	// Metrics queries, up to the maximum of six.
	MetricsQueries []MetricsSearchQuery `json:"metricsQueries"`
	// Desired quantization in seconds.
	DesiredQuantizationInSecs *int32 `json:"desiredQuantizationInSecs,omitempty"`
	// Chart properties, like line width, color palette, and the fill missing data method. Leave this field empty to use the defaults. This property contains JSON object encoded as a string. 
	Properties *string `json:"properties,omitempty"`
	// Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
	CreatedAt time.Time `json:"createdAt"`
	// Identifier of the user who created the resource.
	CreatedBy string `json:"createdBy"`
	// Last modification timestamp in UTC.
	ModifiedAt time.Time `json:"modifiedAt"`
	// Identifier of the user who last modified the resource.
	ModifiedBy string `json:"modifiedBy"`
	// Identifier of the metrics search.
	Id string `json:"id"`
	// Identifier of the parent element in the content library, such as folder.
	ParentId *string `json:"parentId,omitempty"`
}

type _MetricsSearchInstance MetricsSearchInstance

// NewMetricsSearchInstance instantiates a new MetricsSearchInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsSearchInstance(title string, description string, timeRange ResolvableTimeRange, metricsQueries []MetricsSearchQuery, createdAt time.Time, createdBy string, modifiedAt time.Time, modifiedBy string, id string) *MetricsSearchInstance {
	this := MetricsSearchInstance{}
	this.Title = title
	this.Description = description
	this.TimeRange = timeRange
	this.MetricsQueries = metricsQueries
	var desiredQuantizationInSecs int32 = 0
	this.DesiredQuantizationInSecs = &desiredQuantizationInSecs
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Id = id
	return &this
}

// NewMetricsSearchInstanceWithDefaults instantiates a new MetricsSearchInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsSearchInstanceWithDefaults() *MetricsSearchInstance {
	this := MetricsSearchInstance{}
	var desiredQuantizationInSecs int32 = 0
	this.DesiredQuantizationInSecs = &desiredQuantizationInSecs
	return &this
}

// GetTitle returns the Title field value
func (o *MetricsSearchInstance) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *MetricsSearchInstance) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *MetricsSearchInstance) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *MetricsSearchInstance) SetDescription(v string) {
	o.Description = v
}

// GetTimeRange returns the TimeRange field value
func (o *MetricsSearchInstance) GetTimeRange() ResolvableTimeRange {
	if o == nil {
		var ret ResolvableTimeRange
		return ret
	}

	return o.TimeRange
}

// GetTimeRangeOk returns a tuple with the TimeRange field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetTimeRangeOk() (*ResolvableTimeRange, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeRange, true
}

// SetTimeRange sets field value
func (o *MetricsSearchInstance) SetTimeRange(v ResolvableTimeRange) {
	o.TimeRange = v
}

// GetLogQuery returns the LogQuery field value if set, zero value otherwise.
func (o *MetricsSearchInstance) GetLogQuery() string {
	if o == nil || IsNil(o.LogQuery) {
		var ret string
		return ret
	}
	return *o.LogQuery
}

// GetLogQueryOk returns a tuple with the LogQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetLogQueryOk() (*string, bool) {
	if o == nil || IsNil(o.LogQuery) {
		return nil, false
	}
	return o.LogQuery, true
}

// HasLogQuery returns a boolean if a field has been set.
func (o *MetricsSearchInstance) HasLogQuery() bool {
	if o != nil && !IsNil(o.LogQuery) {
		return true
	}

	return false
}

// SetLogQuery gets a reference to the given string and assigns it to the LogQuery field.
func (o *MetricsSearchInstance) SetLogQuery(v string) {
	o.LogQuery = &v
}

// GetMetricsQueries returns the MetricsQueries field value
func (o *MetricsSearchInstance) GetMetricsQueries() []MetricsSearchQuery {
	if o == nil {
		var ret []MetricsSearchQuery
		return ret
	}

	return o.MetricsQueries
}

// GetMetricsQueriesOk returns a tuple with the MetricsQueries field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetMetricsQueriesOk() ([]MetricsSearchQuery, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricsQueries, true
}

// SetMetricsQueries sets field value
func (o *MetricsSearchInstance) SetMetricsQueries(v []MetricsSearchQuery) {
	o.MetricsQueries = v
}

// GetDesiredQuantizationInSecs returns the DesiredQuantizationInSecs field value if set, zero value otherwise.
func (o *MetricsSearchInstance) GetDesiredQuantizationInSecs() int32 {
	if o == nil || IsNil(o.DesiredQuantizationInSecs) {
		var ret int32
		return ret
	}
	return *o.DesiredQuantizationInSecs
}

// GetDesiredQuantizationInSecsOk returns a tuple with the DesiredQuantizationInSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetDesiredQuantizationInSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.DesiredQuantizationInSecs) {
		return nil, false
	}
	return o.DesiredQuantizationInSecs, true
}

// HasDesiredQuantizationInSecs returns a boolean if a field has been set.
func (o *MetricsSearchInstance) HasDesiredQuantizationInSecs() bool {
	if o != nil && !IsNil(o.DesiredQuantizationInSecs) {
		return true
	}

	return false
}

// SetDesiredQuantizationInSecs gets a reference to the given int32 and assigns it to the DesiredQuantizationInSecs field.
func (o *MetricsSearchInstance) SetDesiredQuantizationInSecs(v int32) {
	o.DesiredQuantizationInSecs = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *MetricsSearchInstance) GetProperties() string {
	if o == nil || IsNil(o.Properties) {
		var ret string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetPropertiesOk() (*string, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *MetricsSearchInstance) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given string and assigns it to the Properties field.
func (o *MetricsSearchInstance) SetProperties(v string) {
	o.Properties = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *MetricsSearchInstance) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *MetricsSearchInstance) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *MetricsSearchInstance) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *MetricsSearchInstance) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *MetricsSearchInstance) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *MetricsSearchInstance) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *MetricsSearchInstance) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *MetricsSearchInstance) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetId returns the Id field value
func (o *MetricsSearchInstance) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MetricsSearchInstance) SetId(v string) {
	o.Id = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *MetricsSearchInstance) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchInstance) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *MetricsSearchInstance) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *MetricsSearchInstance) SetParentId(v string) {
	o.ParentId = &v
}

func (o MetricsSearchInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsSearchInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["description"] = o.Description
	toSerialize["timeRange"] = o.TimeRange
	if !IsNil(o.LogQuery) {
		toSerialize["logQuery"] = o.LogQuery
	}
	toSerialize["metricsQueries"] = o.MetricsQueries
	if !IsNil(o.DesiredQuantizationInSecs) {
		toSerialize["desiredQuantizationInSecs"] = o.DesiredQuantizationInSecs
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["modifiedAt"] = o.ModifiedAt
	toSerialize["modifiedBy"] = o.ModifiedBy
	toSerialize["id"] = o.Id
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	return toSerialize, nil
}

func (o *MetricsSearchInstance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"description",
		"timeRange",
		"metricsQueries",
		"createdAt",
		"createdBy",
		"modifiedAt",
		"modifiedBy",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetricsSearchInstance := _MetricsSearchInstance{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMetricsSearchInstance)

	if err != nil {
		return err
	}

	*o = MetricsSearchInstance(varMetricsSearchInstance)

	return err
}

type NullableMetricsSearchInstance struct {
	value *MetricsSearchInstance
	isSet bool
}

func (v NullableMetricsSearchInstance) Get() *MetricsSearchInstance {
	return v.value
}

func (v *NullableMetricsSearchInstance) Set(val *MetricsSearchInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsSearchInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsSearchInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsSearchInstance(val *MetricsSearchInstance) *NullableMetricsSearchInstance {
	return &NullableMetricsSearchInstance{value: val, isSet: true}
}

func (v NullableMetricsSearchInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsSearchInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


