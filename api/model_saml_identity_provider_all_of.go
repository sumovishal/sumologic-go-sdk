/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the SamlIdentityProviderAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SamlIdentityProviderAllOf{}

// SamlIdentityProviderAllOf struct for SamlIdentityProviderAllOf
type SamlIdentityProviderAllOf struct {
	// Unique identifier of the SAML Identity Provider.
	Id string `json:"id"`
	// The URL on Sumo Logic where the IdP will redirect to with its authentication response.
	AssertionConsumerUrl *string `json:"assertionConsumerUrl,omitempty"`
	// A unique identifier that is the intended audience of the SAML assertion.
	EntityId *string `json:"entityId,omitempty"`
	// The URL to fetch SAML metadata XML.
	MetadataUrl *string `json:"metadataUrl,omitempty"`
}

// NewSamlIdentityProviderAllOf instantiates a new SamlIdentityProviderAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlIdentityProviderAllOf(id string) *SamlIdentityProviderAllOf {
	this := SamlIdentityProviderAllOf{}
	this.Id = id
	var assertionConsumerUrl string = ""
	this.AssertionConsumerUrl = &assertionConsumerUrl
	var entityId string = ""
	this.EntityId = &entityId
	var metadataUrl string = ""
	this.MetadataUrl = &metadataUrl
	return &this
}

// NewSamlIdentityProviderAllOfWithDefaults instantiates a new SamlIdentityProviderAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlIdentityProviderAllOfWithDefaults() *SamlIdentityProviderAllOf {
	this := SamlIdentityProviderAllOf{}
	var assertionConsumerUrl string = ""
	this.AssertionConsumerUrl = &assertionConsumerUrl
	var entityId string = ""
	this.EntityId = &entityId
	var metadataUrl string = ""
	this.MetadataUrl = &metadataUrl
	return &this
}

// GetId returns the Id field value
func (o *SamlIdentityProviderAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SamlIdentityProviderAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SamlIdentityProviderAllOf) SetId(v string) {
	o.Id = v
}

// GetAssertionConsumerUrl returns the AssertionConsumerUrl field value if set, zero value otherwise.
func (o *SamlIdentityProviderAllOf) GetAssertionConsumerUrl() string {
	if o == nil || IsNil(o.AssertionConsumerUrl) {
		var ret string
		return ret
	}
	return *o.AssertionConsumerUrl
}

// GetAssertionConsumerUrlOk returns a tuple with the AssertionConsumerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlIdentityProviderAllOf) GetAssertionConsumerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AssertionConsumerUrl) {
		return nil, false
	}
	return o.AssertionConsumerUrl, true
}

// HasAssertionConsumerUrl returns a boolean if a field has been set.
func (o *SamlIdentityProviderAllOf) HasAssertionConsumerUrl() bool {
	if o != nil && !IsNil(o.AssertionConsumerUrl) {
		return true
	}

	return false
}

// SetAssertionConsumerUrl gets a reference to the given string and assigns it to the AssertionConsumerUrl field.
func (o *SamlIdentityProviderAllOf) SetAssertionConsumerUrl(v string) {
	o.AssertionConsumerUrl = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *SamlIdentityProviderAllOf) GetEntityId() string {
	if o == nil || IsNil(o.EntityId) {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlIdentityProviderAllOf) GetEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *SamlIdentityProviderAllOf) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *SamlIdentityProviderAllOf) SetEntityId(v string) {
	o.EntityId = &v
}

// GetMetadataUrl returns the MetadataUrl field value if set, zero value otherwise.
func (o *SamlIdentityProviderAllOf) GetMetadataUrl() string {
	if o == nil || IsNil(o.MetadataUrl) {
		var ret string
		return ret
	}
	return *o.MetadataUrl
}

// GetMetadataUrlOk returns a tuple with the MetadataUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlIdentityProviderAllOf) GetMetadataUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataUrl) {
		return nil, false
	}
	return o.MetadataUrl, true
}

// HasMetadataUrl returns a boolean if a field has been set.
func (o *SamlIdentityProviderAllOf) HasMetadataUrl() bool {
	if o != nil && !IsNil(o.MetadataUrl) {
		return true
	}

	return false
}

// SetMetadataUrl gets a reference to the given string and assigns it to the MetadataUrl field.
func (o *SamlIdentityProviderAllOf) SetMetadataUrl(v string) {
	o.MetadataUrl = &v
}

func (o SamlIdentityProviderAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SamlIdentityProviderAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.AssertionConsumerUrl) {
		toSerialize["assertionConsumerUrl"] = o.AssertionConsumerUrl
	}
	if !IsNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}
	if !IsNil(o.MetadataUrl) {
		toSerialize["metadataUrl"] = o.MetadataUrl
	}
	return toSerialize, nil
}

type NullableSamlIdentityProviderAllOf struct {
	value *SamlIdentityProviderAllOf
	isSet bool
}

func (v NullableSamlIdentityProviderAllOf) Get() *SamlIdentityProviderAllOf {
	return v.value
}

func (v *NullableSamlIdentityProviderAllOf) Set(val *SamlIdentityProviderAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlIdentityProviderAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlIdentityProviderAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlIdentityProviderAllOf(val *SamlIdentityProviderAllOf) *NullableSamlIdentityProviderAllOf {
	return &NullableSamlIdentityProviderAllOf{value: val, isSet: true}
}

func (v NullableSamlIdentityProviderAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlIdentityProviderAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


