/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetricsSearchSyncDefinitionAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsSearchSyncDefinitionAllOf{}

// MetricsSearchSyncDefinitionAllOf struct for MetricsSearchSyncDefinitionAllOf
type MetricsSearchSyncDefinitionAllOf struct {
	TimeRange ResolvableTimeRange `json:"timeRange"`
	// Description of the metrics search page.
	Description *string `json:"description,omitempty"`
	// Queries of the metrics search page.
	Queries []Query `json:"queries"`
	// Visual settings of the metrics search page. Must be a string representing a valid JSON object. 
	VisualSettings *string `json:"visualSettings,omitempty"`
}

// NewMetricsSearchSyncDefinitionAllOf instantiates a new MetricsSearchSyncDefinitionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsSearchSyncDefinitionAllOf(timeRange ResolvableTimeRange, queries []Query) *MetricsSearchSyncDefinitionAllOf {
	this := MetricsSearchSyncDefinitionAllOf{}
	this.TimeRange = timeRange
	this.Queries = queries
	return &this
}

// NewMetricsSearchSyncDefinitionAllOfWithDefaults instantiates a new MetricsSearchSyncDefinitionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsSearchSyncDefinitionAllOfWithDefaults() *MetricsSearchSyncDefinitionAllOf {
	this := MetricsSearchSyncDefinitionAllOf{}
	return &this
}

// GetTimeRange returns the TimeRange field value
func (o *MetricsSearchSyncDefinitionAllOf) GetTimeRange() ResolvableTimeRange {
	if o == nil {
		var ret ResolvableTimeRange
		return ret
	}

	return o.TimeRange
}

// GetTimeRangeOk returns a tuple with the TimeRange field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchSyncDefinitionAllOf) GetTimeRangeOk() (*ResolvableTimeRange, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeRange, true
}

// SetTimeRange sets field value
func (o *MetricsSearchSyncDefinitionAllOf) SetTimeRange(v ResolvableTimeRange) {
	o.TimeRange = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MetricsSearchSyncDefinitionAllOf) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchSyncDefinitionAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MetricsSearchSyncDefinitionAllOf) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MetricsSearchSyncDefinitionAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetQueries returns the Queries field value
func (o *MetricsSearchSyncDefinitionAllOf) GetQueries() []Query {
	if o == nil {
		var ret []Query
		return ret
	}

	return o.Queries
}

// GetQueriesOk returns a tuple with the Queries field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchSyncDefinitionAllOf) GetQueriesOk() ([]Query, bool) {
	if o == nil {
		return nil, false
	}
	return o.Queries, true
}

// SetQueries sets field value
func (o *MetricsSearchSyncDefinitionAllOf) SetQueries(v []Query) {
	o.Queries = v
}

// GetVisualSettings returns the VisualSettings field value if set, zero value otherwise.
func (o *MetricsSearchSyncDefinitionAllOf) GetVisualSettings() string {
	if o == nil || IsNil(o.VisualSettings) {
		var ret string
		return ret
	}
	return *o.VisualSettings
}

// GetVisualSettingsOk returns a tuple with the VisualSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchSyncDefinitionAllOf) GetVisualSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.VisualSettings) {
		return nil, false
	}
	return o.VisualSettings, true
}

// HasVisualSettings returns a boolean if a field has been set.
func (o *MetricsSearchSyncDefinitionAllOf) HasVisualSettings() bool {
	if o != nil && !IsNil(o.VisualSettings) {
		return true
	}

	return false
}

// SetVisualSettings gets a reference to the given string and assigns it to the VisualSettings field.
func (o *MetricsSearchSyncDefinitionAllOf) SetVisualSettings(v string) {
	o.VisualSettings = &v
}

func (o MetricsSearchSyncDefinitionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsSearchSyncDefinitionAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timeRange"] = o.TimeRange
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["queries"] = o.Queries
	if !IsNil(o.VisualSettings) {
		toSerialize["visualSettings"] = o.VisualSettings
	}
	return toSerialize, nil
}

type NullableMetricsSearchSyncDefinitionAllOf struct {
	value *MetricsSearchSyncDefinitionAllOf
	isSet bool
}

func (v NullableMetricsSearchSyncDefinitionAllOf) Get() *MetricsSearchSyncDefinitionAllOf {
	return v.value
}

func (v *NullableMetricsSearchSyncDefinitionAllOf) Set(val *MetricsSearchSyncDefinitionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsSearchSyncDefinitionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsSearchSyncDefinitionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsSearchSyncDefinitionAllOf(val *MetricsSearchSyncDefinitionAllOf) *NullableMetricsSearchSyncDefinitionAllOf {
	return &NullableMetricsSearchSyncDefinitionAllOf{value: val, isSet: true}
}

func (v NullableMetricsSearchSyncDefinitionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsSearchSyncDefinitionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


