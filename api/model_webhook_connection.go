/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookConnection{}

// WebhookConnection struct for WebhookConnection
type WebhookConnection struct {
	Connection
	// URL for the webhook connection.
	Url string `json:"url"`
	// List of access authorization headers.
	Headers []Header `json:"headers"`
	// List of custom webhook headers.
	CustomHeaders []Header `json:"customHeaders"`
	// Default payload of the webhook.
	DefaultPayload string `json:"defaultPayload"`
	// Type of webhook connection. Valid values are `AWSLambda`, `Azure`, `Datadog`, `HipChat`, `Jira`, `NewRelic`, `Opsgenie`, `PagerDuty`, `Slack`, `MicrosoftTeams`, `ServiceNow`, `SumoCloudSOAR` and `Webhook`.
	WebhookType string `json:"webhookType" validate:"regexp=^(AWSLambda|Azure|Datadog|HipChat|PagerDuty|Slack|Webhook|NewRelic|Jira|Opsgenie|MicrosoftTeams|ServiceNow|SumoCloudSOAR)$"`
	// The subtype of the connection. Valid values are `Event` or `Incident`.
	ConnectionSubtype *string `json:"connectionSubtype,omitempty" validate:"regexp=^(Event|Incident)$"`
	// Resolution payload of the webhook.
	ResolutionPayload *string `json:"resolutionPayload,omitempty"`
	// Webhook endpoint warning for incorrect variable names and syntax.
	Warnings []string `json:"warnings,omitempty"`
}

type _WebhookConnection WebhookConnection

// NewWebhookConnection instantiates a new WebhookConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookConnection(url string, headers []Header, customHeaders []Header, defaultPayload string, webhookType string, type_ string, id string, name string, description string, createdAt time.Time, createdBy string, modifiedAt time.Time, modifiedBy string) *WebhookConnection {
	this := WebhookConnection{}
	this.Type = type_
	this.Id = id
	this.Name = name
	this.Description = description
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Url = url
	this.Headers = headers
	this.CustomHeaders = customHeaders
	this.DefaultPayload = defaultPayload
	this.WebhookType = webhookType
	return &this
}

// NewWebhookConnectionWithDefaults instantiates a new WebhookConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookConnectionWithDefaults() *WebhookConnection {
	this := WebhookConnection{}
	return &this
}

// GetUrl returns the Url field value
func (o *WebhookConnection) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookConnection) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookConnection) SetUrl(v string) {
	o.Url = v
}

// GetHeaders returns the Headers field value
func (o *WebhookConnection) GetHeaders() []Header {
	if o == nil {
		var ret []Header
		return ret
	}

	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value
// and a boolean to check if the value has been set.
func (o *WebhookConnection) GetHeadersOk() ([]Header, bool) {
	if o == nil {
		return nil, false
	}
	return o.Headers, true
}

// SetHeaders sets field value
func (o *WebhookConnection) SetHeaders(v []Header) {
	o.Headers = v
}

// GetCustomHeaders returns the CustomHeaders field value
func (o *WebhookConnection) GetCustomHeaders() []Header {
	if o == nil {
		var ret []Header
		return ret
	}

	return o.CustomHeaders
}

// GetCustomHeadersOk returns a tuple with the CustomHeaders field value
// and a boolean to check if the value has been set.
func (o *WebhookConnection) GetCustomHeadersOk() ([]Header, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomHeaders, true
}

// SetCustomHeaders sets field value
func (o *WebhookConnection) SetCustomHeaders(v []Header) {
	o.CustomHeaders = v
}

// GetDefaultPayload returns the DefaultPayload field value
func (o *WebhookConnection) GetDefaultPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultPayload
}

// GetDefaultPayloadOk returns a tuple with the DefaultPayload field value
// and a boolean to check if the value has been set.
func (o *WebhookConnection) GetDefaultPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultPayload, true
}

// SetDefaultPayload sets field value
func (o *WebhookConnection) SetDefaultPayload(v string) {
	o.DefaultPayload = v
}

// GetWebhookType returns the WebhookType field value
func (o *WebhookConnection) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *WebhookConnection) GetWebhookTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *WebhookConnection) SetWebhookType(v string) {
	o.WebhookType = v
}

// GetConnectionSubtype returns the ConnectionSubtype field value if set, zero value otherwise.
func (o *WebhookConnection) GetConnectionSubtype() string {
	if o == nil || IsNil(o.ConnectionSubtype) {
		var ret string
		return ret
	}
	return *o.ConnectionSubtype
}

// GetConnectionSubtypeOk returns a tuple with the ConnectionSubtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookConnection) GetConnectionSubtypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionSubtype) {
		return nil, false
	}
	return o.ConnectionSubtype, true
}

// HasConnectionSubtype returns a boolean if a field has been set.
func (o *WebhookConnection) HasConnectionSubtype() bool {
	if o != nil && !IsNil(o.ConnectionSubtype) {
		return true
	}

	return false
}

// SetConnectionSubtype gets a reference to the given string and assigns it to the ConnectionSubtype field.
func (o *WebhookConnection) SetConnectionSubtype(v string) {
	o.ConnectionSubtype = &v
}

// GetResolutionPayload returns the ResolutionPayload field value if set, zero value otherwise.
func (o *WebhookConnection) GetResolutionPayload() string {
	if o == nil || IsNil(o.ResolutionPayload) {
		var ret string
		return ret
	}
	return *o.ResolutionPayload
}

// GetResolutionPayloadOk returns a tuple with the ResolutionPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookConnection) GetResolutionPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.ResolutionPayload) {
		return nil, false
	}
	return o.ResolutionPayload, true
}

// HasResolutionPayload returns a boolean if a field has been set.
func (o *WebhookConnection) HasResolutionPayload() bool {
	if o != nil && !IsNil(o.ResolutionPayload) {
		return true
	}

	return false
}

// SetResolutionPayload gets a reference to the given string and assigns it to the ResolutionPayload field.
func (o *WebhookConnection) SetResolutionPayload(v string) {
	o.ResolutionPayload = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *WebhookConnection) GetWarnings() []string {
	if o == nil || IsNil(o.Warnings) {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookConnection) GetWarningsOk() ([]string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *WebhookConnection) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *WebhookConnection) SetWarnings(v []string) {
	o.Warnings = v
}

func (o WebhookConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedConnection, errConnection := json.Marshal(o.Connection)
	if errConnection != nil {
		return map[string]interface{}{}, errConnection
	}
	errConnection = json.Unmarshal([]byte(serializedConnection), &toSerialize)
	if errConnection != nil {
		return map[string]interface{}{}, errConnection
	}
	toSerialize["url"] = o.Url
	toSerialize["headers"] = o.Headers
	toSerialize["customHeaders"] = o.CustomHeaders
	toSerialize["defaultPayload"] = o.DefaultPayload
	toSerialize["webhookType"] = o.WebhookType
	if !IsNil(o.ConnectionSubtype) {
		toSerialize["connectionSubtype"] = o.ConnectionSubtype
	}
	if !IsNil(o.ResolutionPayload) {
		toSerialize["resolutionPayload"] = o.ResolutionPayload
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *WebhookConnection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"headers",
		"customHeaders",
		"defaultPayload",
		"webhookType",
		"type",
		"id",
		"name",
		"description",
		"createdAt",
		"createdBy",
		"modifiedAt",
		"modifiedBy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookConnection := _WebhookConnection{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookConnection)

	if err != nil {
		return err
	}

	*o = WebhookConnection(varWebhookConnection)

	return err
}

type NullableWebhookConnection struct {
	value *WebhookConnection
	isSet bool
}

func (v NullableWebhookConnection) Get() *WebhookConnection {
	return v.value
}

func (v *NullableWebhookConnection) Set(val *WebhookConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookConnection(val *WebhookConnection) *NullableWebhookConnection {
	return &NullableWebhookConnection{value: val, isSet: true}
}

func (v NullableWebhookConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


