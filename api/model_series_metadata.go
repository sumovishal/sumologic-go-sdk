/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// SeriesMetadata The metadata of time series for chart.
type SeriesMetadata struct {
	// Row ID of the query this time series belongs to.
	RowId *string `json:"rowId,omitempty"`
	// Dimensions for the time series.
	Dimensions []DimensionKeyValue `json:"dimensions,omitempty"`
}

// NewSeriesMetadata instantiates a new SeriesMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesMetadata() *SeriesMetadata {
	this := SeriesMetadata{}
	return &this
}

// NewSeriesMetadataWithDefaults instantiates a new SeriesMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesMetadataWithDefaults() *SeriesMetadata {
	this := SeriesMetadata{}
	return &this
}

// GetRowId returns the RowId field value if set, zero value otherwise.
func (o *SeriesMetadata) GetRowId() string {
	if o == nil || o.RowId == nil {
		var ret string
		return ret
	}
	return *o.RowId
}

// GetRowIdOk returns a tuple with the RowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesMetadata) GetRowIdOk() (*string, bool) {
	if o == nil || o.RowId == nil {
		return nil, false
	}
	return o.RowId, true
}

// HasRowId returns a boolean if a field has been set.
func (o *SeriesMetadata) HasRowId() bool {
	if o != nil && o.RowId != nil {
		return true
	}

	return false
}

// SetRowId gets a reference to the given string and assigns it to the RowId field.
func (o *SeriesMetadata) SetRowId(v string) {
	o.RowId = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *SeriesMetadata) GetDimensions() []DimensionKeyValue {
	if o == nil || o.Dimensions == nil {
		var ret []DimensionKeyValue
		return ret
	}
	return o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesMetadata) GetDimensionsOk() ([]DimensionKeyValue, bool) {
	if o == nil || o.Dimensions == nil {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *SeriesMetadata) HasDimensions() bool {
	if o != nil && o.Dimensions != nil {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given []DimensionKeyValue and assigns it to the Dimensions field.
func (o *SeriesMetadata) SetDimensions(v []DimensionKeyValue) {
	o.Dimensions = v
}

func (o SeriesMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RowId != nil {
		toSerialize["rowId"] = o.RowId
	}
	if o.Dimensions != nil {
		toSerialize["dimensions"] = o.Dimensions
	}
	return json.Marshal(toSerialize)
}

type NullableSeriesMetadata struct {
	value *SeriesMetadata
	isSet bool
}

func (v NullableSeriesMetadata) Get() *SeriesMetadata {
	return v.value
}

func (v *NullableSeriesMetadata) Set(val *SeriesMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesMetadata(val *SeriesMetadata) *NullableSeriesMetadata {
	return &NullableSeriesMetadata{value: val, isSet: true}
}

func (v NullableSeriesMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


