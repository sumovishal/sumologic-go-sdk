/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the OrCorrelationExpression type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrCorrelationExpression{}

// OrCorrelationExpression struct for OrCorrelationExpression
type OrCorrelationExpression struct {
	CorrelationExpression
	// List of correlation expressions to be evaluated with OR boolean operator.
	CorrelationExpressions []CorrelationExpression `json:"correlationExpressions"`
}

// NewOrCorrelationExpression instantiates a new OrCorrelationExpression object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrCorrelationExpression(correlationExpressions []CorrelationExpression, correlationExpressionType string) *OrCorrelationExpression {
	this := OrCorrelationExpression{}
	this.CorrelationExpressionType = correlationExpressionType
	this.CorrelationExpressions = correlationExpressions
	return &this
}

// NewOrCorrelationExpressionWithDefaults instantiates a new OrCorrelationExpression object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrCorrelationExpressionWithDefaults() *OrCorrelationExpression {
	this := OrCorrelationExpression{}
	return &this
}

// GetCorrelationExpressions returns the CorrelationExpressions field value
func (o *OrCorrelationExpression) GetCorrelationExpressions() []CorrelationExpression {
	if o == nil {
		var ret []CorrelationExpression
		return ret
	}

	return o.CorrelationExpressions
}

// GetCorrelationExpressionsOk returns a tuple with the CorrelationExpressions field value
// and a boolean to check if the value has been set.
func (o *OrCorrelationExpression) GetCorrelationExpressionsOk() ([]CorrelationExpression, bool) {
	if o == nil {
		return nil, false
	}
	return o.CorrelationExpressions, true
}

// SetCorrelationExpressions sets field value
func (o *OrCorrelationExpression) SetCorrelationExpressions(v []CorrelationExpression) {
	o.CorrelationExpressions = v
}

func (o OrCorrelationExpression) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrCorrelationExpression) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedCorrelationExpression, errCorrelationExpression := json.Marshal(o.CorrelationExpression)
	if errCorrelationExpression != nil {
		return map[string]interface{}{}, errCorrelationExpression
	}
	errCorrelationExpression = json.Unmarshal([]byte(serializedCorrelationExpression), &toSerialize)
	if errCorrelationExpression != nil {
		return map[string]interface{}{}, errCorrelationExpression
	}
	toSerialize["correlationExpressions"] = o.CorrelationExpressions
	return toSerialize, nil
}

type NullableOrCorrelationExpression struct {
	value *OrCorrelationExpression
	isSet bool
}

func (v NullableOrCorrelationExpression) Get() *OrCorrelationExpression {
	return v.value
}

func (v *NullableOrCorrelationExpression) Set(val *OrCorrelationExpression) {
	v.value = val
	v.isSet = true
}

func (v NullableOrCorrelationExpression) IsSet() bool {
	return v.isSet
}

func (v *NullableOrCorrelationExpression) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrCorrelationExpression(val *OrCorrelationExpression) *NullableOrCorrelationExpression {
	return &NullableOrCorrelationExpression{value: val, isSet: true}
}

func (v NullableOrCorrelationExpression) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrCorrelationExpression) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


