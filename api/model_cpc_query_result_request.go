/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CpcQueryResultRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CpcQueryResultRequest{}

// CpcQueryResultRequest struct for CpcQueryResultRequest
type CpcQueryResultRequest struct {
	// A list of the identifiers of CPC query buckets for which aggregated Critical Path Contribution data should be fetched.
	BucketIds []string `json:"bucketIds"`
}

type _CpcQueryResultRequest CpcQueryResultRequest

// NewCpcQueryResultRequest instantiates a new CpcQueryResultRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCpcQueryResultRequest(bucketIds []string) *CpcQueryResultRequest {
	this := CpcQueryResultRequest{}
	this.BucketIds = bucketIds
	return &this
}

// NewCpcQueryResultRequestWithDefaults instantiates a new CpcQueryResultRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCpcQueryResultRequestWithDefaults() *CpcQueryResultRequest {
	this := CpcQueryResultRequest{}
	return &this
}

// GetBucketIds returns the BucketIds field value
func (o *CpcQueryResultRequest) GetBucketIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BucketIds
}

// GetBucketIdsOk returns a tuple with the BucketIds field value
// and a boolean to check if the value has been set.
func (o *CpcQueryResultRequest) GetBucketIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BucketIds, true
}

// SetBucketIds sets field value
func (o *CpcQueryResultRequest) SetBucketIds(v []string) {
	o.BucketIds = v
}

func (o CpcQueryResultRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CpcQueryResultRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bucketIds"] = o.BucketIds
	return toSerialize, nil
}

func (o *CpcQueryResultRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bucketIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCpcQueryResultRequest := _CpcQueryResultRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCpcQueryResultRequest)

	if err != nil {
		return err
	}

	*o = CpcQueryResultRequest(varCpcQueryResultRequest)

	return err
}

type NullableCpcQueryResultRequest struct {
	value *CpcQueryResultRequest
	isSet bool
}

func (v NullableCpcQueryResultRequest) Get() *CpcQueryResultRequest {
	return v.value
}

func (v *NullableCpcQueryResultRequest) Set(val *CpcQueryResultRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCpcQueryResultRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCpcQueryResultRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCpcQueryResultRequest(val *CpcQueryResultRequest) *NullableCpcQueryResultRequest {
	return &NullableCpcQueryResultRequest{value: val, isSet: true}
}

func (v NullableCpcQueryResultRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCpcQueryResultRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


