openapi: 3.0.0
info:
  description: |
    # Getting Started
    Welcome to the Sumo Logic API reference. You can use these APIs to interact with the Sumo Logic platform. For information on Collector and Search Job APIs, see our [API home page](https://help.sumologic.com/docs/api).
    ## API Endpoints
    Sumo Logic has several deployments in different geographic locations. You'll need to use the Sumo Logic API endpoint corresponding to your geographic location. See the table below for the different API endpoints by deployment. For details determining your account's deployment, see [API endpoints](https://help.sumologic.com/?cid=3011).

      <table>
        <tr>
          <td> <strong>Deployment</strong> </td>
          <td> <strong>Endpoint</strong> </td>
        </tr>
        <tr>
          <td> AU </td>
          <td> https://api.au.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> CA </td>
          <td> https://api.ca.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> DE </td>
          <td> https://api.de.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> EU </td>
          <td> https://api.eu.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> FED </td>
          <td> https://api.fed.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> IN </td>
          <td> https://api.in.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> JP </td>
          <td> https://api.jp.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> KR </td>
          <td> https://api.kr.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> US1 </td>
          <td> https://api.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> US2 </td>
          <td> https://api.us2.sumologic.com/api/ </td>
        </tr>
      </table>

    ## Authentication
    Sumo Logic supports the following options for API authentication:
    - Access ID and Access Key
    - Base64 encoded Access ID and Access Key

    See [Access Keys](https://help.sumologic.com/docs/manage/security/access-keys) to generate an Access Key. Make sure to copy the key you create, because it is displayed only once.
    When you have an Access ID and Access Key you can execute requests such as the following:
      ```bash
      curl -u "<accessId>:<accessKey>" -X GET https://api.<deployment>.sumologic.com/api/v1/users
      ```

    Where `deployment` is either `au`, `ca`, `de`, `eu`, `fed`, `in`, `jp`, `us1`, or `us2`. See [API endpoints](#section/API-Endpoints) for details.

    If you prefer to use basic access authentication, you can do a Base64 encoding of your `<accessId>:<accessKey>` to authenticate your HTTPS request. The following is an example request, replace the placeholder `<encoded>` with your encoded Access ID and Access Key string:
      ```bash
      curl -H "Authorization: Basic <encoded>" -X GET https://api.<deployment>.sumologic.com/api/v1/users
      ```


    Refer to [API Authentication](https://help.sumologic.com/?cid=3012) for a Base64 example.

    ## Status Codes
    Generic status codes that apply to all our APIs. See the [HTTP status code registry](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) for reference.
      <table>
        <tr>
          <td> <strong>HTTP Status Code</strong> </td>
          <td> <strong>Error Code</strong> </td>
          <td> <strong>Description</strong> </td>
        </tr>
        <tr>
          <td> 301 </td>
          <td> moved </td>
          <td> The requested resource SHOULD be accessed through returned URI in Location Header. See [troubleshooting](https://help.sumologic.com/docs/api/troubleshooting/#api---301-error---moved) for details.</td>
        </tr>
        <tr>
          <td> 401 </td>
          <td> unauthorized </td>
          <td> Credential could not be verified.</td>
        </tr>
        <tr>
          <td> 403 </td>
          <td> forbidden </td>
          <td> This operation is not allowed for your account type or the user doesn't have the role capability to perform this action. See [troubleshooting](https://help.sumologic.com/docs/api/troubleshooting/#api---401-error---credential-could-not-be-verified) for details.</td>
        </tr>
        <tr>
          <td> 404 </td>
          <td> notfound </td>
          <td> Requested resource could not be found. </td>
        </tr>
        <tr>
          <td> 405 </td>
          <td> method.unsupported </td>
          <td> Unsupported method for URL. </td>
        </tr>
        <tr>
          <td> 415 </td>
          <td> contenttype.invalid </td>
          <td> Invalid content type. </td>
        </tr>
        <tr>
          <td> 429 </td>
          <td> rate.limit.exceeded </td>
          <td> The API request rate is higher than 4 request per second or inflight API requests are higher than 10 request per second. </td>
        </tr>
        <tr>
          <td> 500 </td>
          <td> internal.error </td>
          <td> Internal server error. </td>
        </tr>
        <tr>
          <td> 503 </td>
          <td> service.unavailable </td>
          <td> Service is currently unavailable. </td>
        </tr>
      </table>

    ## Filtering
    Some API endpoints support filtering results on a specified set of fields. Each endpoint that supports filtering will list the fields that can be filtered. Multiple fields can be combined by using an ampersand `&` character.

    For example, to get 20 users whose `firstName` is `John` and `lastName` is `Doe`:
      ```bash
      api.sumologic.com/v1/users?limit=20&firstName=John&lastName=Doe
      ```

    ## Sorting
    Some API endpoints support sorting fields by using the `sortBy` query parameter. The default sort order is ascending. Prefix the field with a minus sign `-` to sort in descending order.

    For example, to get 20 users sorted by their `email` in descending order:
      ```bash
      api.sumologic.com/v1/users?limit=20&sort=-email
      ```

    ## Asynchronous Request
    Asynchronous requests do not wait for results, instead they immediately respond back with a job identifier while the job runs in the background. You can use the job identifier to track the status of the asynchronous job request. Here is a typical flow for an asynchronous request.
    1. Start an asynchronous job. On success, a job identifier is returned. The job identifier uniquely identifies
      your asynchronous job.

    2. Once started, use the job identifier from step 1 to track the status of your asynchronous job. An asynchronous
      request will typically provide an endpoint to poll for the status of asynchronous job. A successful response
      from the status endpoint will have the following structure:
      ```json
      {
          "status": "Status of asynchronous request",
          "statusMessage": "Optional message with additional information in case request succeeds",
          "error": "Error object in case request fails"
      }
      ```
      The `status` field can have one of the following values:
        1. `Success`: The job succeeded. The `statusMessage` field might have additional information.
        2. `InProgress`: The job is still running.
        3. `Failed`: The job failed. The `error` field in the response will have more information about the failure.

    3. Some asynchronous APIs may provide a third endpoint (like [export result](#operation/getAsyncExportResult))
      to fetch the result of an asynchronous job.


    ### Example
    Let's say we want to export a folder with the identifier `0000000006A2E86F`. We will use the [async export](#operation/beginAsyncExport) API to export all the content under the folder with `id=0000000006A2E86F`.
    1. Start an export job for the folder
      ```bash
      curl -X POST -u "<accessId>:<accessKey>" https://api.<deployment>.sumologic.com/api/v2/content/0000000006A2E86F/export
      ```
      See [authentication section](#section/Authentication) for more details about `accessId`, `accessKey`, and
      `deployment`.
      On success, you will get back a job identifier. In the response below, `C03E086C137F38B4` is the job identifier.
      ```bash
      {
          "id": "C03E086C137F38B4"
      }
      ```

    2. Now poll for the status of the asynchronous job with the [status](#operation/getAsyncExportStatus) endpoint.
      ```bash
      curl -X GET -u "<accessId>:<accessKey>" https://api.<deployment>.sumologic.com/api/v2/content/0000000006A2E86F/export/C03E086C137F38B4/status
      ```
      You may get a response like
      ```json
      {
          "status": "InProgress",
          "statusMessage": null,
          "error": null
      }
      ```
      It implies the job is still in progress. Keep polling till the status is either `Success` or `Failed`.

    3. When the asynchronous job completes (`status != "InProgress"`), you can fetch the results with the
      [export result](#operation/getAsyncExportResult) endpoint.
      ```bash
      curl -X GET -u "<accessId>:<accessKey>" https://api.<deployment>.sumologic.com/api/v2/content/0000000006A2E86F/export/C03E086C137F38B4/result
      ```

      The asynchronous job may fail (`status == "Failed"`). You can look at the `error` field for more details.
      ```json
      {
          "status": "Failed",
          "errors": {
              "code": "content1:too_many_items",
              "message": "Too many objects: object count(1100) was greater than limit 1000"
          }
      }
      ```


    ## Rate Limiting
    * A rate limit of four API requests per second (240 requests per minute) applies to all API calls from a user.
    * A rate limit of 10 concurrent requests to any API endpoint applies to an access key.

    If a rate is exceeded, a rate limit exceeded 429 status code is returned.

    ## Generating Clients
    You can use [OpenAPI Generator](https://openapi-generator.tech) to generate clients from the YAML file to access the API.

    ### Using [NPM](https://www.npmjs.com/get-npm)
    1. Install [NPM package wrapper](https://github.com/openapitools/openapi-generator-cli) globally, exposing the CLI
      on the command line:
      ```bash
      npm install @openapitools/openapi-generator-cli -g
      ```
      You can see detailed instructions [here](https://openapi-generator.tech/docs/installation#npm).

    2. Download the [YAML file](/docs/sumologic-api.yaml) and save it locally. Let's say the file is saved as `sumologic-api.yaml`.
    3. Use the following command to generate `python` client inside the `sumo/client/python` directory:
      ```bash
      openapi-generator generate -i sumologic-api.yaml -g python -o sumo/client/python
      ```


    ### Using [Homebrew](https://brew.sh/)
    1. Install OpenAPI Generator
      ```bash
      brew install openapi-generator
      ```

    2. Download the [YAML file](/docs/sumologic-api.yaml) and save it locally. Let's say the file is saved as `sumologic-api.yaml`.
    3. Use the following command to generate `python` client side code inside the `sumo/client/python` directory:
      ```bash
      openapi-generator generate -i sumologic-api.yaml -g python -o sumo/client/python
      ```
  title: Sumo Logic API
  version: 1.0.0
  x-logo:
    url: ./sumologic_logo.png
servers:
- description: AU deployment API server
  url: https://api.au.sumologic.com/api/
- description: CA deployment API server
  url: https://api.ca.sumologic.com/api/
- description: DE deployment API server
  url: https://api.de.sumologic.com/api/
- description: EU deployment API server
  url: https://api.eu.sumologic.com/api/
- description: FED deployment API server
  url: https://api.fed.sumologic.com/api/
- description: JP deployment API server
  url: https://api.jp.sumologic.com/api/
- description: KR deployment API server
  url: https://api.kr.sumologic.com/api/
- description: IN deployment API server
  url: https://api.in.sumologic.com/api/
- description: US1 deployment API server
  url: https://api.sumologic.com/api/
- description: US2 deployment API server
  url: https://api.us2.sumologic.com/api/
security:
- basicAuth: []
tags:
- description: |
    Account Management API.

    Manage the custom subdomain for the URL used to access your Sumo Logic account. For more information, see [Manage Organization](https://help.sumologic.com/docs/manage/manage-subscription/manage-org-settings).
  name: accountManagement
  x-displayName: Account
- description: Organizations Management API.
  name: orgsManagement
  x-displayName: Organizations Management
- description: |
    App installation API.

    View and install Sumo Logic Applications that deliver out-of-the-box dashboards, saved searches, and field extraction for popular data sources. For more information, see [Sumo Logic Apps](https://help.sumologic.com/docs/integrations).
  name: appManagement
  x-displayName: Apps (Beta)
- description: |
    App installation API (V2).

    View and install Sumo Logic Applications that deliver out-of-the-box dashboards, saved searches, and field extraction for popular data sources. For more information, see [Sumo Logic Apps](https://help.sumologic.com/docs/integrations).
  name: appManagementV2
  x-displayName: Apps V2 (Beta)
- description: |
    Connection management API.

    Set up connections to send alerts to other tools. For more information, see [Connections and Integrations](https://help.sumologic.com/?cid=1044).
  name: connectionManagement
  x-displayName: Connections
- description: |
    Content management API.

    You can export, import, delete and copy content in your organization’s Library. For more information, see [Library](https://help.sumologic.com/?cid=5173). You can perform the request as a Content Administrator by using the `isAdminMode` parameter. For more information, see [Admin Mode](https://help.sumologic.com/docs/manage/content-sharing/admin-mode).
    <br/> <br/>
    ### Example
    The following example uses API endpoints in the US1 deployment. Sumo Logic has several deployments that are assigned depending on the geographic location and the date an account is created. For details determining your account's deployment, see [API endpoints](https://help.sumologic.com/?cid=3011).
    The [Content Import API](#operation/beginAsyncImport) can be used to create or update a Search, Scheduled Search, or Dashboard. Here is an example creating a Scheduled Search:
    1. Get the identifier of your `Personal` folder.
      ```bash
      curl -X GET -u "<accessId>:<accessKey>" https://api.sumologic.com/api/v2/content/folders/personal
      ```

      Find the identifier of your `Personal` folder in the response.
      ```json
      {
          ...
          "id": "0000000006A2E86F", <----
          "name": "Personal",
          "itemType": "Folder",
          ...
      }
      ```

      You can use [getFolder](#operation/getFolder), [getAdminRecommededFolder](#operation/getAdminRecommendedFolderAsync),
      or [getGlobalFolder](#operation/getGlobalFolderAsync) endpoints to traverse the content tree and find the identifier of any
      folder you want to manage.

    2. Use the [Content Import API](#operation/beginAsyncImport) to create a new Scheduled Search inside your
      `Personal` folder.
      ```bash
      curl -X POST -u "<accessId>:<accessKey>" -H "Content-Type: application/json" -d @search.json https://api.sumologic.com/api/v2/content/folders/0000000006A2E86F/import
      ```

      The data file `search.json` in the above command has the following `SavedSearchWithScheduleSyncDefinition` object.
      ```json
      // file: search.json
      {
          "type": "SavedSearchWithScheduleSyncDefinition",
          "name": "demo-scheduled-search",
          "description": "Runs every hour with timerange of 15m and sends email notifications",
          "search": {
              "queryText": "\"error\" and \"warn\"",
              "defaultTimeRange": "-15m",
              "byReceiptTime": false,
              "viewName": "",
              "viewStartTime": null,
              "queryParameters": []
          },
          "searchSchedule": {
              "cronExpression": "0 0/15 * * * ? *",
              "displayableTimeRange": "-15m",
              "parseableTimeRange": {
                  "from": {
                      "relativeTime": "-15m",
                      "type": "RelativeTimeRangeBoundary"
                  },
                  "to": null,
                  "type": "BeginBoundedTimeRange"
              },
              "timeZone": "America/Los_Angeles",
              "threshold": null,
              "notification": {
                  "taskType": "EmailSearchNotificationSyncDefinition",
                  "toList": [
                      "ops@acme.org"
                  ],
                  "subjectTemplate": "Search Results: {{SearchName}}",
                  "includeQuery": true,
                  "includeResultSet": true,
                  "includeHistogram": true,
                  "includeCsvAttachment": false
              },
              "muteErrorEmails": false,
              "scheduleType": "1Hour",
              "parameters": []
          }
      }
      ```

      The response of above request will have the job identifier that you can use to track the status of the import job.
      ```json
      {
          "id": "74DC17FA765C7443"
      }
      ```

    3. Use the job identifier from the import request to get the [status](#operation/getAsyncImportStatus) of the
      import job.
      ```bash
      curl -X GET -u "<accessId>:<accessKey>" https://api.sumologic.com/api/v2/content/folders/0000000006A2E86F/import/74DC17FA765C7443/status
      ```

      If you are importing a large item, you might have to wait for the import job to finish. The following is an
      example response from a completed job.
      ```json
      {
          "status": "Success",
          "statusMessage": null,
          "error": null
      }
      ```
  name: contentManagement
  x-displayName: Content
- description: |
    Content permissions API.

    You can share your folders, searches, and dashboards with specific users or roles. For more information, see [Share Content](https://help.sumologic.com/?cid=8675309). You can perform the request as a Content Administrator by using the `isAdminMode` parameter. For more information, see [Admin Mode](https://help.sumologic.com/docs/manage/content-sharing/admin-mode).
  name: contentPermissions
  x-displayName: Permissions
- description: |
    Dashboard (New) management API.

    Dashboard (New) allows you to analyze metric and log data on the same dashboard, in a seamless view. This gives you control over the visual display of metric and log data. Dashboard (New) streamlines dashboard configurations and on-the-fly analytic visualizations with its new templating features. For more information, see [Dashboard (New)](https://help.sumologic.com/?cid=5500).
  name: dashboardManagement
  x-displayName: Dashboard (New)
- description: |
    Dynamic Parsing management API.

    Dynamic Parsing allows automatic field extraction from your log messages when you run a search. This allows you to view fields from logs without having to manually specify parsing logic. For more information, see [Dynamic Parsing](https://help.sumologic.com/?cid=20011).
  name: dynamicParsingRuleManagement
  x-displayName: Dynamic Parsing
- description: |
    Field Extraction Rule management API.

    Field Extraction Rules allow you to parse fields from your log messages at the time the messages are ingested eliminating the need to parse fields in your query. For more information, see [Manage Field Extraction](https://help.sumologic.com/?cid=5313).
  name: extractionRuleManagement
  x-displayName: Field Extraction Rules
- description: |
    Field management API.

    Fields allow you to reference log data based on meaningful associations. They act as metadata tags that are assigned to your logs so you can search with them. Each field contains a key-value pair, where the field name is the key. Fields may be referred to as Log Metadata Fields. For more information, see [Fields](https://help.sumologic.com/?cid=10116).
  name: fieldManagementV1
  x-displayName: Field Management
- description: |
    Log Searches Management API.

    Whether you are running ad hoc searches during a forensic investigation or running standard searches for health checks, you can save any search to run again later. When you create a search that you would like to reuse, you can save it to the Library. From there you can run it again, share with others, edit the search, or create a Scheduled Search to run at a regularly scheduled time, and set up alerts. The saved search will also include any charts you have created in the Aggregates tab.
  name: logSearchesManagement
  x-displayName: Log Searches
- description: |
    Folder management API.

    You can add folders and subfolders to the Library in order to organize your content for easy access or to share content. For more information, see [Add Folders to the Library](https://help.sumologic.com/?cid=5020). You can perform the request as a Content Administrator by using the `isAdminMode` parameter. For more information, see [Admin Mode](https://help.sumologic.com/docs/manage/content-sharing/admin-mode).
  name: folderManagement
  x-displayName: Folders
- description: |
    Ingest Budget management API.

    Ingest Budgets allow you to control the capacity of daily ingestion volume sent to Sumo Logic from Collectors. For more information, see [Ingest Budgets](https://help.sumologic.com/?cid=5235).
  name: ingestBudgetManagementV1
  x-displayName: Ingest Budgets
- description: |
    Ingest Budget management API V2.

    Ingest Budgets V2 provide you the ability to create and assign budgets to your log data by Fields instead of using a Field Value. For more information, see [Metadata Ingest Budgets](https://help.sumologic.com/?cid=52352).
  name: ingestBudgetManagementV2
  x-displayName: Ingest Budgets V2
- description: |
    Partition management API.

    Creating a Partition allows you to improve search performance by searching over a smaller number of messages. For more information, see [Manage Partitions](https://help.sumologic.com/?cid=5231).
  name: partitionManagement
  x-displayName: Partitions
- description: |
    Logs Data Forwarding management API.

    Logs Data Forwarding allows you to forward log data from a Partition or Scheduled View to an S3 bucket. For more information, see [Forwarding Data to S3](https://help.sumologic.com/docs/manage/data-forwarding/amazon-s3-bucket).
  name: logsDataForwardingManagement
  x-displayName: Logs Data Forwarding
- description: |
    Role management API.

    Roles determine the functions that users are able to perform in Sumo Logic. To manage roles, you must have an administrator role or your role must have been assigned the manage users and roles capability. For more information, see [Manage Roles](https://help.sumologic.com/?cid=5234).
  name: roleManagement
  x-displayName: Roles
- description: |
    Role management API (V2).
    Roles determine the functions that users are able to perform in Sumo Logic. It also allows to configure access on partitions. To manage roles, you must have an administrator role or your role must have been assigned the manage users and roles capability. For more information, see [Manage Roles](https://help.sumologic.com/?cid=5234).
  name: roleManagementV2
  x-displayName: Roles V2 (Beta)
- description: |
    Lookup Table management API.

    A Lookup Table is a table of data hosted on Sumo Logic that you can use to enrich the log and event data received by Sumo Logic. You must create a table schema before you can populate the table. For more information, see [Lookup Tables](https://help.sumologic.com/?cid=10109).
  name: lookupManagement
  x-displayName: Lookup Tables
- description: |
    Scheduled View management API.

    Scheduled Views speed the search process for small and historical subsets of your data by functioning as a pre-aggregated index. For more information, see [Manage Scheduled Views](https://help.sumologic.com/?cid=5128).
  name: scheduledViewManagement
  x-displayName: Scheduled Views
- description: |
    Tokens management API.

    Tokens are associated with your organization to authorize specific operations. Currently, we support collector registration tokens, which can be used to register Installed Collectors. Managing tokens requires the Manage Tokens role capability. For more information, see [Installation Tokens](https://help.sumologic.com/?cid=0100).
  name: tokensLibraryManagement
  x-displayName: Tokens
- description: |
    Transformation Rule management API.
    Metrics Transformation Rules allow you control how long raw metrics are retained. You can also aggregate metrics at collection time and specify a separate retention period for the aggregated metrics. For more information, see [Metrics Transformation Rules](https://help.sumologic.com/?cid=10117).
  name: transformationRuleManagement
  x-displayName: Transformation Rules
- description: |
    User management API.

    To manage users, you must have the administrator role or your role must have been assigned the manage users and roles capability. For more information, see [Manage Users](https://help.sumologic.com/?cid=1006).
  name: userManagement
  x-displayName: Users
- description: |
    Metrics Search management API.

    Save metrics searches in the content library and organize them in a folder hierarchy. Share useful queries with users in your organization. For more information, see [Sharing Metric Charts](https://help.sumologic.com/docs/metrics/metric-charts/interacting-metric-charts).
  name: metricsSearchesManagement
  x-displayName: Metrics Searches (Beta)
- description: |
    New Metrics Searches Management API.
    Save metrics searches in the content library and organize them in a folder hierarchy. Allows you to list metrics searches under your personal folder.
  name: metricsSearchesManagementV2
  x-displayName: Metrics Searches (New)
- description: |
    Metrics Query API.

    The Metrics Query API allows you to execute queries on various metrics and retrieve multiple time-series (data-points) over time range(s). For more information, see [Metrics - Classic](https://help.sumologic.com/?cid=1079).
  name: metricsQuery
  x-displayName: Metrics Query
- description: |
    Access Key management API.

    Access Keys allow you to securely register new Collectors and access Sumo Logic APIs. For more information, see [Access Keys](https://help.sumologic.com/?cid=6690).
  name: accessKeyManagement
  x-displayName: Access Keys
- description: |
    SAML configuration management API

    Organizations with Enterprise accounts can provision Security Assertion Markup Language (SAML) 2.0 to enable Single Sign-On (SSO) for user access to Sumo Logic. For more information, see [SAML Configuration](https://help.sumologic.com/?cid=4016).
  name: samlConfigurationManagement
  x-displayName: SAML Configuration
- description: |
    Service Allowlist management API

    Service Allowlist Settings allow you to explicitly grant access to specific IP addresses and/or CIDR notations for logins, APIs, and dashboard access. For more information, see [Service Allowlist Settings](https://help.sumologic.com/?cid=5454).
  name: serviceAllowlistManagement
  x-displayName: Service Allowlist
- description: |
    Health Events management API.

    Health Events allow you to keep track of the health of your Collectors and Sources. You can use them to find and investigate common errors and warnings that are known to cause collection issues. For more information, see [Health Events](https://help.sumologic.com/?cid=0020).
  name: healthEvents
  x-displayName: Health Events
- description: |-
    Archive Ingestion Management API.

    Archive Ingestion allows you to ingest data from Archive destinations. You can use this API to ingest data from your Archive with an existing AWS S3 Archive Source. You need the Manage or View Collectors role capability to manage or view ingestion jobs. For more information, see [Archive](https://help.sumologic.com/?cid=10011).
  name: archiveManagement
  x-displayName: Archive Ingestion Management
- description: |
    Log Search Estimated Usage API.

    Gets the estimated volume of data that would be scanned for a given log search in the Infrequent data tier, over a particular time range. In the Infrequent Data Tier, you pay per query, based on the amount data scanned. You can use this endpoint to get an estimate of the total data that would be scanned before running a query, and refine your query to scan less data, as necessary. For more information, see [Infrequent data tier](https://help.sumologic.com/?cid=11987).
  name: logSearchesEstimatedUsage
  x-displayName: Log Search Estimated Usage
- description: |
    Parsers Library Management API

    Customize the Parsers via this API. The Parsers Library contains the Parsers used in the "_parser" field for  collector, FER or query. For more information on customizing parsers, see  [Parser Editor](https://help.sumologic.com/docs/cse/schema/parser-editor/).
  name: parsersLibraryManagement
  x-displayName: Parsers Library Management
- description: |
    Password Policy Management API

    The password policy controls how user passwords are managed. The "Manage Password Policy" role capability is required to update the password policy. For more information, see [how to set a password policy](https://help.sumologic.com/?cid=8595).
  name: passwordPolicy
  x-displayName: Password Policy
- description: |
    Policies management API.

    Policies control the security and share settings of your organization. For more information, see [Security](https://help.sumologic.com/?cid=4041).
  name: policiesManagement
  x-displayName: Policies
- description: |
    Traces API

    The Traces API allows you to browse traces collected in the system. You can execute queries to find traces matching provided search criteria as well as gather detailed information about individual traces and spans. For more information, see [View and investigate traces](https://help.sumologic.com/docs/apm/traces/view-and-investigate-traces).
  name: traces
  x-displayName: Traces
- description: |
    Span Analytics API

    The Span Analytics API allows you to browse spans collected in the system. You can execute queries to find individual spans matching provided search criteria as well as run aggregated span queries and retrieve their results. For more information, see [Spans](https://help.sumologic.com/docs/apm/traces/spans).
  name: spanAnalytics
  x-displayName: Span Analytics
- description: |
    Service Map API

    The Service Map API allows you to fetch a graph representation of the Services Map, which is a high-level view of your application environment, automatically derived from tracing data. For more information, see [Services Map](https://help.sumologic.com/docs/apm/traces/services-list-map/#services-map-view).
  name: serviceMap
  x-displayName: Service Map
- description: |
    Threat Intel Datastore Management API

    The Threat Intel Datastore Management API allows you to:
    * Get information about the threat indicator datastore and sources.
    * Delete the threat indicator database.
    * View and set the retention period for threat intel indicators.

    For more information, see [Threat Intel Ingest Management](https://help.sumologic.com/Manage/Threat-Intel-Ingest)
  name: threatIntelIngest
  x-displayName: Threat Intel Datastore Management
- description: |
    Threat Intel Ingestion API

    The Threat Intel Ingestion API allows you to:
    * Upload threat intel indicators in STIX 2.x or Sumo normalized format.
    * Delete indicators by ID or source.

    For more information, see [Threat Intel Ingest Management](https://help.sumologic.com/Manage/Threat-Intel-Ingest).
  name: threatIntelIngestProducer
  x-displayName: Threat Intel Ingestion
- description: |
    OT Collector Management API External.
  name: otCollectorManagementExternal
  x-displayName: OpenTelemetry Collector Management
- description: |
    Source Template Management APIs.
  name: sourceTemplateManagementExternal
  x-displayName: Source Template Management
- description: |
    Schema Base Management APIs.
  name: schemaBaseManagement
  x-displayName: Schema Base Management
- description: |
    Budget Management API.
  name: budgetManagement
  x-displayName: Budget Management
- description: |
    Monitor Management API.


    Monitors continuously query your data to monitor and send notifications when specific events occur.
    For more information see [Monitors](https://help.sumologic.com/?cid=10020).
  name: monitorsLibraryManagement
  x-displayName: Monitors
- description: |
    Muting Schedules Management API.


    Muting Schedule allows you to pause alert notifications from monitors. When a muting schedule is active on a monitor,
    the monitor will still generate alerts, but no notifications will be sent.
    For more information see [Muting Schedules](https://help.sumologic.com/docs/alerts/monitors/muting-schedules).
  name: mutingSchedulesLibraryManagement
  x-displayName: Muting Schedules
- description: |
    SLO Management API.

    SLOs are used to monitor and alert on KPIs for your most important services or user experience.
  name: slosLibraryManagement
  x-displayName: SLOs
paths:
  /v1/apps:
    get:
      description: Lists all available apps from the App Catalog.
      operationId: listApps
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppsResult'
          description: List of all available apps.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List available apps.
      tags:
      - appManagement
  /v1/apps/{uuid}:
    get:
      description: Gets the app with the given universally unique identifier (UUID).
      operationId: getApp
      parameters:
      - description: The identifier of the app to retrieve.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: The retrieved app.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get an app by UUID.
      tags:
      - appManagement
  /v1/apps/{uuid}/install:
    post:
      description: Installs the app with given UUID in the folder specified using
        destinationFolderId.
      operationId: installApp
      parameters:
      - description: UUID of the app to install.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppInstallRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: App install job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: App installation failed with an error.
      summary: Install an app by UUID.
      tags:
      - appManagement
  /v1/apps/install/{jobId}/status:
    get:
      description: Get the status of an asynchronous app install request for the given
        job identifier.
      operationId: getAsyncInstallStatus
      parameters:
      - description: The identifier of the asynchronous install job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the app install job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: App installation failed with an error.
      summary: App install job status.
      tags:
      - appManagement
  /v2/apps/{uuid}/install:
    post:
      description: |-
        Schedule an asynchronous job to install the app with the given UUID and version from the App Catalog. The app will be installed in 'Installed Apps' folder in the Content Library.

        _You get back an identifier of asynchronous job in response to this endpoint. You can then use the [app install status API](#operation/getAsyncInstallAppStatus) to get the status of the installation request. See [Asynchronous-Request](#section/Getting-Started/Asynchronous-Request) section for more details on how to work with asynchronous request._
      operationId: asyncInstallApp
      parameters:
      - description: UUID of the app to install.
        example: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncInstallAppRequest'
        description: Information about the app to install.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponseV2'
          description: App installation job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start app install job
      tags:
      - appManagementV2
  /v2/apps/install/{jobId}/status:
    get:
      description: Get the status of an asynchronous app install request for the given
        job identifier.
      operationId: getAsyncInstallAppStatus
      parameters:
      - description: Identifier of the asynchronous job for installing the app.
        example: C03E086C137F38B4
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncInstallAppJobStatus'
          description: Status of the app installation job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: App install job status
      tags:
      - appManagementV2
  /v2/apps/{uuid}/uninstall:
    post:
      description: |-
        Schedule an asynchronous job to uninstall app with the given UUID.

        _You get back an identifier of asynchronous job in response to this endpoint. You can then use the [app uninstall status API](#operation/getAsyncUninstallAppStatus) to get the status of the uninstallation request. See [Asynchronous-Request](#section/Getting-Started/Asynchronous-Request) section for more details on how to work with asynchronous request._
      operationId: asyncUninstallApp
      parameters:
      - description: UUID of the app to uninstall.
        example: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponseV2'
          description: App uninstall job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start app uninstall job
      tags:
      - appManagementV2
  /v2/apps/uninstall/{jobId}/status:
    get:
      description: Get the status of an asynchronous app uninstall request for the
        given job identifier.
      operationId: getAsyncUninstallAppStatus
      parameters:
      - description: Identifier of the asynchronous job for uninstalling the app.
        example: C03E086C137F38B4
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncUninstallAppJobStatus'
          description: Status of the app uninstall job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: App uninstall job status
      tags:
      - appManagementV2
  /v2/apps/{uuid}/upgrade:
    post:
      description: |-
        Schedule an asynchronous job to upgrade the app with the given UUID and version from the App Catalog. The app will be installed in 'Installed Apps' folder in the Content Library.

        _You get back an identifier of asynchronous job in response to this endpoint. You can then use the [app upgrade status API](#operation/getAsyncUpgradeAppStatus) to get the status of the upgrade request. See [Asynchronous-Request](#section/Getting-Started/Asynchronous-Request) section for more details on how to work with asynchronous request._
      operationId: asyncUpgradeApp
      parameters:
      - description: UUID of the app to upgrade.
        example: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncUpgradeAppRequest'
        description: Information about the app to upgrade.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponseV2'
          description: App upgrade job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start app upgrade job
      tags:
      - appManagementV2
  /v2/apps/upgrade/{jobId}/status:
    get:
      description: Get the status of an asynchronous app upgrade request for the given
        job identifier.
      operationId: getAsyncUpgradeAppStatus
      parameters:
      - description: Identifier of the asynchronous job for upgrading the app.
        example: C03E086C137F38B4
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncUpgradeAppJobStatus'
          description: Status of the app upgrade job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: App upgrade job status
      tags:
      - appManagementV2
  /v2/apps:
    get:
      description: List all apps from the App Catalog.
      operationId: listAppsV2
      parameters:
      - description: Name of the app.
        example: AWS%20CloudTrail
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Author of the app.
        example: Sumo%20Logic
        explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppsV2Response'
          description: List of apps.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List apps
      tags:
      - appManagementV2
  /v2/apps/{uuid}/details:
    get:
      description: |-
        Get details about an app with the given UUID and version. The details include:

          1. The base URL for all the resource for the app.
          2. The app manifest
      operationId: getAppDetails
      parameters:
      - description: UUID of the app.
        example: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Version of the app. The latest version is used if this is omitted
          or specified as "latest".
        example: 1.0.0
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppDetailsResponse'
          description: Information about the requested app.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get details of an app version.
      tags:
      - appManagementV2
  /v1/connections:
    get:
      description: Get a list of all connections in the organization. The response
        is paginated with a default limit of 100 connections per page.
      operationId: listConnections
      parameters:
      - description: Limit the number of connections returned in the response. The
          number of connections returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
          description: A paginated list of connections in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of connections.
      tags:
      - connectionManagement
    post:
      description: Create a new connection in the organization.
      operationId: createConnection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionDefinition'
        description: Information about the new connection.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: The connection has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new connection.
      tags:
      - connectionManagement
  /v1/connections/test:
    post:
      description: Test a new connection url is valid and can connect.
      operationId: testConnection
      parameters:
      - description: "A comma-separated functionalities of webhook payload to test.\
          \ Acceptable values: `alert`, `resolution`."
        example: "alert,resolution"
        explode: false
        in: query
        name: functionalities
        required: false
        schema:
          default:
          - alert
          items:
            type: string
          type: array
        style: form
      - description: "Unique identifier of an existing connection to test. It should\
          \ be provided when the request body of an existing connection contains masked\
          \ authorization headers. If not provided, the authorization headers will\
          \ not be correctly unmasked, and the test may fail due to unauthorized access."
        example: 0000000000123ABC
        explode: true
        in: query
        name: connectionId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionDefinition'
        description: Information about the new connection.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestConnectionResponse'
          description: The connection url has been tested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Test a new connection url.
      tags:
      - connectionManagement
  /v1/connections/incidentTemplates:
    post:
      description: Get incident templates for CloudSOAR connections.
      operationId: getIncidentTemplates
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIncidentTemplatesRequest'
        description: Information about the new connection.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIncidentTemplatesResponse'
          description: A list of the incident templates for the given CloudSOAR account.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get incident templates for CloudSOAR connections.
      tags:
      - connectionManagement
  /v1/connections/{id}:
    delete:
      description: Delete a connection with the given identifier.
      operationId: deleteConnection
      parameters:
      - description: Identifier of the connection to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Type of connection to delete. Valid values are `WebhookConnection`,\
          \ `ServiceNowConnection`."
        explode: true
        in: query
        name: type
        required: true
        schema:
          pattern: ^(WebhookConnection|ServiceNowConnection)$
          type: string
          x-pattern-message: must be either `WebhookConnection` or `ServiceNowConnection`
        style: form
      responses:
        "204":
          description: Connection was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a connection.
      tags:
      - connectionManagement
    get:
      description: Get a connection with the given identifier.
      operationId: getConnection
      parameters:
      - description: Identifier of connection to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Type of connection to return. Valid values are `WebhookConnection`,\
          \ `ServiceNowConnection`."
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: WebhookConnection
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Connection object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a connection.
      tags:
      - connectionManagement
    put:
      description: Update an existing connection.
      operationId: updateConnection
      parameters:
      - description: Identifier of the connection to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionDefinition'
        description: Information to update about the connection.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: The connection was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a connection.
      tags:
      - connectionManagement
  /v1/scheduledViews:
    get:
      description: Get a list of all scheduled views in the organization. The response
        is paginated with a default limit of 100 scheduled views per page.
      operationId: listScheduledViews
      parameters:
      - description: Limit the number of scheduled views returned in the response.
          The number of scheduled views returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScheduledViewsResponse'
          description: A paginated list of scheduled views in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of scheduled views.
      tags:
      - scheduledViewManagement
    post:
      description: Creates a new scheduled view in the organization.
      operationId: createScheduledView
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduledViewDefinition'
        description: Information about the new scheduled view.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledView'
          description: The scheduled view has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new scheduled view.
      tags:
      - scheduledViewManagement
      x-tf-create: createScheduledView
  /v1/scheduledViews/{id}:
    get:
      description: Get a scheduled view with the given identifier.
      operationId: getScheduledView
      parameters:
      - description: Identifier of the scheduled view to fetch.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledView'
          description: Scheduled view object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a scheduled view.
      tags:
      - scheduledViewManagement
      x-tf-read: getScheduledView
    put:
      description: Update an existing scheduled view.
      operationId: updateScheduledView
      parameters:
      - description: Identifier of the scheduled view to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduledViewDefinition'
        description: Information to update about the scheduled view.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledView'
          description: The scheduled view was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a scheduled view.
      tags:
      - scheduledViewManagement
      x-tf-update: updateScheduledView
  /v1/scheduledViews/{id}/disable:
    delete:
      description: Disable a scheduled view with the given identifier.
      operationId: disableScheduledView
      parameters:
      - description: Identifier of the scheduled view to disable.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The scheduled view was disabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable a scheduled view.
      tags:
      - scheduledViewManagement
      x-tf-delete: deleteScheduledView
  /v1/scheduledViews/{id}/pause:
    post:
      description: Pause a scheduled view with the given identifier.
      operationId: pauseScheduledView
      parameters:
      - description: Identifier of the scheduled view to pause.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledView'
          description: The scheduled view was paused successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Pause a scheduled view.
      tags:
      - scheduledViewManagement
  /v1/scheduledViews/{id}/start:
    post:
      description: Start a scheduled view with the given identifier.
      operationId: startScheduledView
      parameters:
      - description: Identifier of the scheduled view to start.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledView'
          description: The scheduled view was started successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start a scheduled view.
      tags:
      - scheduledViewManagement
  /v1/scheduledViews/quota:
    get:
      description: Every customer can use a limited number of scheduled views. This
        endpoint allows learning about these limitations and remaining quota.
      operationId: getScheduledViewsQuota
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledViewsQuotaUsage'
          description: Current state of scheduled views quota usage (limit and remaining).
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Provides information about scheduled views quota.
      tags:
      - scheduledViewManagement
  /v1/lookupTables:
    post:
      description: |-
        Create a new lookup table by providing a schema and specifying its configuration. Providing parentFolderId
         is mandatory. Use the [getItemByPath](#operation/getItemByPath) endpoint to get content id of a path.
        Please check [Content management API](#tag/contentManagement) and [Folder management API](#tag/folderManagement) for all available options.
      operationId: createTable
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupTableDefinition'
        description: The schema and configuration for the lookup table.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupTable'
          description: Lookup table created successfully.
      summary: Create a lookup table.
      tags:
      - lookupManagement
  /v1/lookupTables/{id}:
    delete:
      description: Delete a lookup table completely. <br> **Warning:** `This operation
        cannot be undone`.
      operationId: deleteTable
      parameters:
      - description: Identifier of the lookup table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      responses:
        "204":
          description: Deletion successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a lookup table.
      tags:
      - lookupManagement
    get:
      description: Get a lookup table for the given identifier.
      operationId: lookupTableById
      parameters:
      - description: Identifier of the lookup table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupTable'
          description: Definition of the lookup table.
      summary: Get a lookup table.
      tags:
      - lookupManagement
    put:
      description: Edit the lookup table data. All the fields are mandatory in the
        request.
      operationId: updateTable
      parameters:
      - description: Identifier of the lookup table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupUpdateDefinition'
        description: The configuration changes for the lookup table.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupTable'
          description: Configuration updated successfully.
      summary: Edit a lookup table.
      tags:
      - lookupManagement
  /v1/lookupTables/{id}/upload:
    post:
      description: Create a request to populate a lookup table with a CSV file.
      operationId: uploadFile
      parameters:
      - description: Identifier of the lookup table to populate.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      - description: "This indicates whether the file contents will be merged with\
          \ existing data in the lookup table or not. If this is true then data with\
          \ the same primary keys will be updated while the rest of the rows will\
          \ be appended. By default, merge is false. The response includes a request\
          \ identifier that you need to use in the [Request Status API](#operation/requestStatus)\
          \ to track the status of the upload request."
        explode: true
        in: query
        name: merge
        required: false
        schema:
          default: false
          example: true
          type: boolean
        style: form
      - description: File encoding of file being uploaded.
        explode: true
        in: query
        name: fileEncoding
        required: false
        schema:
          default: UTF-8
          example: UTF-16
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadFile_request'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupRequestToken'
          description: The upload request was accepted. Use the provided token in
            a status request to track the status of the upload.
      summary: Upload a CSV file.
      tags:
      - lookupManagement
  /v1/lookupTables/jobs/{jobId}/status:
    get:
      description: "Retrieve the status of a previously made request. If the request\
        \ was successful, the status of the response object will be `Success`."
      operationId: requestJobStatus
      parameters:
      - description: An identifier returned in response to an asynchronous request.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          example: 0000000001C41AA3
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupAsyncJobStatus'
          description: The status of async job with given identifier.
      summary: Get the status of an async job.
      tags:
      - lookupManagement
  /v1/lookupTables/{id}/truncate:
    post:
      description: Delete all data from a lookup table.
      operationId: truncateTable
      parameters:
      - description: Identifier of the table to clear.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupRequestToken'
          description: The delete data request was accepted. Use the provided token
            in a status request to track the status of the delete.
      summary: Empty a lookup table.
      tags:
      - lookupManagement
  /v1/lookupTables/{id}/row:
    put:
      description: "Insert or update a row of a lookup table with the given identifier.\
        \ A new row is inserted if the primary key does not exist already, otherwise\
        \ the existing row with the specified primary key is updated. All the fields\
        \ of the lookup table are required and will be updated to the given values.\
        \ In case a field is not specified then it will be assumed to be set to null.\
        \ If the table size exceeds the maximum limit of 100MB then based on the size\
        \ limit action of the table the update will be processed or discarded."
      operationId: updateTableRow
      parameters:
      - description: Identifier of the lookup table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowUpdateDefinition'
        description: Lookup table row update definition.
        required: true
      responses:
        "204":
          description: Row updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Insert or Update a lookup table row.
      tags:
      - lookupManagement
  /v1/lookupTables/{id}/deleteTableRow:
    put:
      description: Delete a row from lookup table by providing the row's primary keys'
        values. The complete set of primary key fields of the lookup table should
        be provided.
      operationId: deleteTableRow
      parameters:
      - description: Identifier of the lookup table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowDeleteDefinition'
        description: Lookup table row delete definition.
        required: true
      responses:
        "204":
          description: Row deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a lookup table row.
      tags:
      - lookupManagement
  /v1/partitions:
    get:
      description: Get a list of all partitions in the organization. The response
        is paginated with a default limit of 100 partitions per page.
      operationId: listPartitions
      parameters:
      - description: Limit the number of partitions returned in the response. The
          number of partitions returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The type of partitions to retrieve. Valid values are:
            1. `DefaultView`: To get General Index partition.
            2. `Partition`: To get user defined views/partitions.
            3. `AuditIndex`: To get the internal audit indexes. Eg. sumologic_audit_events.

          More than one type of partitions can be retrieved in same request.
        example:
        - AuditIndex
        - Partition
        explode: false
        in: query
        name: viewTypes
        required: false
        schema:
          items:
            pattern: ^(AuditIndex|Partition|DefaultView)$
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPartitionsResponse'
          description: A paginated list of partitions in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of partitions.
      tags:
      - partitionManagement
    post:
      description: Create a new partition.
      operationId: createPartition
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartitionDefinition'
        description: Information about the new partition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partition'
          description: The partition has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new partition.
      tags:
      - partitionManagement
  /v1/partitions/{id}:
    get:
      description: Get a partition with the given identifier from the organization.
      operationId: getPartition
      parameters:
      - description: Identifier of partition to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partition'
          description: Partition object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a partition.
      tags:
      - partitionManagement
    put:
      description: Update an existing partition in the organization.
      operationId: updatePartition
      parameters:
      - description: Identifier of the partition to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePartitionDefinition'
        description: Information to update about the partition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partition'
          description: The partition was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a partition.
      tags:
      - partitionManagement
  /v1/partitions/{id}/decommission:
    post:
      description: Decommission a partition with the given identifier from the organization.
      operationId: decommissionPartition
      parameters:
      - description: Identifier of the partition to decommission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The partition was decommissioned successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Decommission a partition.
      tags:
      - partitionManagement
  /v1/partitions/{id}/cancelRetentionUpdate:
    post:
      description: Cancel update to retention of a partition for which retention was
        updated previously using `reduceRetentionPeriodImmediately` parameter as false
      operationId: cancelRetentionUpdate
      parameters:
      - description: Identifier of the partition to cancel the retention update for.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The retention update was cancelled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Cancel a retention update for a partition
      tags:
      - partitionManagement
  /v1/partitions/quota:
    get:
      description: Every customer can use a limited number of partitions. This endpoint
        allows learning about these limitations and remaining quota.
      operationId: getPartitionsQuota
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionsQuotaUsage'
          description: Current state of partitions quota usage (limit and remaining).
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Provides information about partitions quota.
      tags:
      - partitionManagement
  /v1/logsDataForwarding/destinations:
    get:
      description: Get a list of all Amazon S3 data forwarding destinations.
      operationId: getDataForwardingBuckets
      parameters:
      - description: Limit the number of data forwarding destinations returned in
          the response. The number of data forwarding destinations returned may be
          less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataForwardingDestinations'
          description: List of all S3 data forwarding destinations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Amazon S3 data forwarding destinations.
      tags:
      - logsDataForwardingManagement
    post:
      description: Create a new Amazon S3 data forwarding destination.
      operationId: createDataForwardingBucket
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBucketDefinition'
        description: Parameters to create new S3 data forwarding destination.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketDefinition'
          description: The new data forwarding destination has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create an S3 data forwarding destination.
      tags:
      - logsDataForwardingManagement
  /v1/logsDataForwarding/destinations/{id}:
    delete:
      description: Delete an existing Amazon S3 data forwarding destination with the
        given identifier.
      operationId: deleteDataForwardingBucket
      parameters:
      - description: Identifier of the data forwarding destination to delete.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The data forwarding destination has been deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete an S3 data forwarding destination.
      tags:
      - logsDataForwardingManagement
    get:
      description: Get an S3 data forwarding destination by the given identifier.
      operationId: getDataForwardingDestination
      parameters:
      - description: Identifier of the S3 data forwarding destination to return.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketDefinition'
          description: Data forwarding destination object requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get an S3 data forwarding destination.
      tags:
      - logsDataForwardingManagement
    put:
      description: Update an S3 data forwarding destination by the given identifier.
      operationId: UpdateDataForwardingBucket
      parameters:
      - description: Identifier of the data forwarding destination to update.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBucketDefinition'
        description: Object with the updated parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketDefinition'
          description: The data forwarding destination has been updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update an S3 data forwarding destination.
      tags:
      - logsDataForwardingManagement
  /v1/logsDataForwarding/rules:
    get:
      description: Get a list of all S3 data forwarding rules.
      operationId: getRulesAndBuckets
      parameters:
      - description: Limit the number of data forwarding rules returned in the response.
          The number of data forwarding rules returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRulesAndBucketsResult'
          description: List of all S3 data forwarding rules.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get all S3 data forwarding rules.
      tags:
      - logsDataForwardingManagement
    post:
      description: Create a data forwarding rule to send data from a Partition or
        Scheduled View to an S3 bucket.
      operationId: createDataForwardingRule
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataForwardingRule'
        description: Parameters to create the new S3 data forwarding rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataForwardingRule'
          description: The data forwarding rule was created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create an S3 data forwarding rule.
      tags:
      - logsDataForwardingManagement
  /v1/logsDataForwarding/rules/{indexId}:
    delete:
      description: Delete an S3 data forwarding rule by its Partition or Scheduled
        View identifier.
      operationId: deleteDataForwardingRule
      parameters:
      - description: The `id` of the Partition or Scheduled View with the data forwarding
          rule to delete.
        example: 1
        explode: false
        in: path
        name: indexId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The S3 data forwarding rule was deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete an S3 data forwarding rule by its index.
      tags:
      - logsDataForwardingManagement
    get:
      description: Get the details of an S3 data forwarding rule by its Partition
        or Scheduled View identifier.
      operationId: getDataForwardingRule
      parameters:
      - description: The `id` of the Partition or Scheduled View.
        example: 1
        explode: false
        in: path
        name: indexId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleAndBucketDetail'
          description: Data forwarding rule that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get an S3 data forwarding rule by its index.
      tags:
      - logsDataForwardingManagement
    put:
      description: Update an S3 data forwarding rule by its Partition or Scheduled
        View identifier.
      operationId: updateDataForwardingRule
      parameters:
      - description: The `id` of the Partition or Scheduled View with the data forwarding
          rule to update.
        example: 1
        explode: false
        in: path
        name: indexId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataForwardingRule'
        description: Parameters of an S3 data forwarding rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataForwardingRule'
          description: The data forwarding rule was updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update an S3 data forwarding rule by its index.
      tags:
      - logsDataForwardingManagement
  /v1/logSearches:
    get:
      description: List all saved log searches viewable by the user.
      operationId: listLogSearches
      parameters:
      - description: Limit the number of log searches returned in the response. The
          number of log searches returned may be less than the `limit`.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLogSearches'
          description: Paginated list of log searches under the Personal folder created
            by the user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List all saved log searches.
      tags:
      - logSearchesManagement
    post:
      description: Save the log search in the content library.
      operationId: createLogSearch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveLogSearchRequest'
        description: The definition of the saved log search.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearch'
          description: Newly saved log search.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Save a log search.
      tags:
      - logSearchesManagement
      x-tf-create: createLogSearch
  /v1/logSearches/{id}:
    delete:
      description: Delete the saved log search from the content library.
      operationId: deleteLogSearch
      parameters:
      - description: Identifier of the saved log search.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
        "204":
          description: The saved log search was successfully deleted.
      summary: Delete the saved log search.
      tags:
      - logSearchesManagement
      x-tf-delete: deleteLogSearch
    get:
      description: Get a saved log search from the content library by identifier.
      operationId: getLogSearch
      parameters:
      - description: Identifier of the saved log search.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearch'
          description: Saved log search that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the saved log search.
      tags:
      - logSearchesManagement
      x-tf-read: getLogSearch
    put:
      description: "Update the saved log search with the specified identifier. Partial\
        \ update is not supported, you must provide values for all fields."
      operationId: updateLogSearch
      parameters:
      - description: Identifier of the saved log search.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSearchDefinition'
        description: An updated saved log search definition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearch'
          description: The saved log search that was updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update the saved log Search.
      tags:
      - logSearchesManagement
      x-tf-update: updateLogSearch
  /v1/extractionRules:
    get:
      description: Get a list of all field extraction rules. The response is paginated
        with a default limit of 100 field extraction rules per page.
      operationId: listExtractionRules
      parameters:
      - description: Limit the number of field extraction rules returned in the response.
          The number of field extraction rules returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExtractionRulesResponse'
          description: A paginated list of field extraction rules.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of field extraction rules.
      tags:
      - extractionRuleManagement
    post:
      description: Create a new field extraction rule.
      operationId: createExtractionRule
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionRuleDefinition'
        description: Information about the new field extraction rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionRule'
          description: The field extraction rule has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new field extraction rule.
      tags:
      - extractionRuleManagement
      x-tf-create: createExtractionRule
  /v1/extractionRules/{id}:
    delete:
      description: Delete a field extraction rule with the given identifier.
      operationId: deleteExtractionRule
      parameters:
      - description: Identifier of the field extraction rule to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Extraction rule was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a field extraction rule.
      tags:
      - extractionRuleManagement
      x-tf-delete: deleteExtractionRule
    get:
      description: Get a field extraction rule with the given identifier.
      operationId: getExtractionRule
      parameters:
      - description: Identifier of field extraction rule to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionRule'
          description: Extraction rule object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a field extraction rule.
      tags:
      - extractionRuleManagement
      x-tf-read: getExtractionRule
    put:
      description: Update an existing field extraction rule. All properties specified
        in the request are replaced. Missing properties are set to their default values.
      operationId: updateExtractionRule
      parameters:
      - description: Identifier of the field extraction rule to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExtractionRuleDefinition'
        description: Information to update about the field extraction rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionRule'
          description: The field extraction rule was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a field extraction rule.
      tags:
      - extractionRuleManagement
      x-tf-update: updateExtractionRule
  /v1/dynamicParsingRules:
    get:
      description: Get a list of all dynamic parsing rules. The response is paginated
        with a default limit of 100 dynamic parsing rules per page.
      operationId: listDynamicParsingRules
      parameters:
      - description: Limit the number of dynamic parsing rules returned in the response.
          The number of dynamic parsing rules returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          example: 0000000001C51FF7
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDynamicRulesResponse'
          description: A paginated list of dynamic parsing rules.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of dynamic parsing rules.
      tags:
      - dynamicParsingRuleManagement
    post:
      description: Create a new dynamic parsing rule.
      operationId: createDynamicParsingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicRuleDefinition'
        description: Information about the new dynamic parsing rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
          description: The dynamic parsing rule has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new dynamic parsing rule.
      tags:
      - dynamicParsingRuleManagement
  /v1/dynamicParsingRules/{id}:
    delete:
      description: Delete a dynamic parsing rule with the given identifier.
      operationId: deleteDynamicParsingRule
      parameters:
      - description: Identifier of the dynamic parsing rule to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      responses:
        "204":
          description: Dynamic parsing rule was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a dynamic parsing rule.
      tags:
      - dynamicParsingRuleManagement
    get:
      description: Get a dynamic parsing rule with the given identifier.
      operationId: getDynamicParsingRule
      parameters:
      - description: Identifier of dynamic parsing rule to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
          description: Dynamic parsing rule object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a dynamic parsing rule.
      tags:
      - dynamicParsingRuleManagement
    put:
      description: Update an existing dynamic parsing rule. All properties specified
        in the request are replaced. Missing properties are set to their default values.
      operationId: updateDynamicParsingRule
      parameters:
      - description: Identifier of the dynamic parsing rule to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicRuleDefinition'
        description: Information to update about the dynamic parsing rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
          description: The dynamic parsing rule was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a dynamic parsing rule.
      tags:
      - dynamicParsingRuleManagement
  /v1/fields:
    get:
      description: Request a list of all the custom fields configured in your account.
      operationId: listCustomFields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomFieldsResponse'
          description: List of all custom fields.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of all custom fields.
      tags:
      - fieldManagementV1
    post:
      description: Adding a field will define it in the Fields schema allowing it
        to be assigned as metadata to your logs.
      operationId: createField
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldName'
        description: Name of a field to add. The name is used as the key in the key-value
          pair.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: The field was created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new field.
      tags:
      - fieldManagementV1
  /v1/fields/{id}:
    delete:
      description: "Deleting a field does not delete historical data assigned with\
        \ that field. If you  delete a field by mistake and one or more of those dependencies\
        \ break, you can  re-add the field to get things working properly again. You\
        \ should always disable  a field and ensure things are behaving as expected\
        \ before deleting a field."
      operationId: deleteField
      parameters:
      - description: Identifier of a field to delete.
        example: 00000000031D02DA
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The field was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a custom field.
      tags:
      - fieldManagementV1
    get:
      description: Get the details of a custom field.
      operationId: getCustomField
      parameters:
      - description: Identifier of a field.
        example: 00000000031D02DA
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: The details of the custom field.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a custom field.
      tags:
      - fieldManagementV1
  /v1/fields/{id}/enable:
    put:
      description: Fields have to be enabled to be assigned to your data. This operation
        ensures that a specified field is enabled and Sumo Logic will treat it as
        safe to process. All manually created custom fields are  enabled by default.
      operationId: enableField
      parameters:
      - description: Identifier of a field to enable.
        example: 00000000031D02DA
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Field has been enabled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Enable custom field with a specified identifier.
      tags:
      - fieldManagementV1
  /v1/fields/{id}/disable:
    delete:
      description: "After disabling a field Sumo Logic will start dropping its incoming\
        \ values at ingest. As a result, they won't be searchable or usable. Historical\
        \ values are not removed and remain searchable."
      operationId: disableField
      parameters:
      - description: Identifier of a field to disable.
        example: 00000000031D02DA
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Field has been disabled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable a custom field.
      tags:
      - fieldManagementV1
  /v1/fields/dropped:
    get:
      description: "Dropped fields are fields sent to Sumo Logic, but are ignored\
        \ since they are not defined in your Fields schema. In order to save these\
        \ values a field must both exist and be enabled."
      operationId: listDroppedFields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDroppedFieldsResponse'
          description: |
            List of dropped fields.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of dropped fields.
      tags:
      - fieldManagementV1
  /v1/fields/builtin:
    get:
      description: Built-in fields are created automatically by Sumo Logic for standard
        configuration purposes. They include `_sourceHost` and `_sourceCategory`.
        Built-in fields can't be deleted or disabled.
      operationId: listBuiltInFields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBuiltinFieldsResponse'
          description: List of all built-in fields.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of built-in fields.
      tags:
      - fieldManagementV1
  /v1/fields/builtin/{id}:
    get:
      description: Get the details of a built-in field.
      operationId: getBuiltInField
      parameters:
      - description: Identifier of a built-in field.
        example: 000000000000000A
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuiltinField'
          description: The details of the built-in field.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a built-in field.
      tags:
      - fieldManagementV1
  /v1/fields/quota:
    get:
      description: Every account has a limited number of fields available. This endpoint
        returns your account limitations and remaining quota.
      operationId: getFieldQuota
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldQuotaUsage'
          description: Current fields capacity usage (fields count).
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get capacity information.
      tags:
      - fieldManagementV1
  /v1/ingestBudgets:
    get:
      description: Get a list of all ingest budgets. The response is paginated with
        a default limit of 100 budgets per page.
      operationId: listIngestBudgets
      parameters:
      - description: Limit the number of budgets returned in the response. The number
          of budgets returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIngestBudgetsResponse'
          description: A paginated list of budgets.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of ingest budgets.
      tags:
      - ingestBudgetManagementV1
    post:
      description: Create a new ingest budget.
      operationId: createIngestBudget
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestBudgetDefinition'
        description: Information about the new ingest budget.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudget'
          description: The ingest budget has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new ingest budget.
      tags:
      - ingestBudgetManagementV1
  /v1/ingestBudgets/{id}:
    delete:
      description: Delete an ingest budget with the given identifier.
      operationId: deleteIngestBudget
      parameters:
      - description: Identifier of the ingest budget to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The ingest budget was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete an ingest budget.
      tags:
      - ingestBudgetManagementV1
    get:
      description: Get an ingest budget by the given identifier.
      operationId: getIngestBudget
      parameters:
      - description: Identifier of ingest budget to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudget'
          description: Ingest budget object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get an ingest budget.
      tags:
      - ingestBudgetManagementV1
    put:
      description: Update an existing ingest budget. All properties specified in the
        request are required.
      operationId: updateIngestBudget
      parameters:
      - description: Identifier of the ingest budget to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestBudgetDefinition'
        description: Information to update about the ingest budget.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudget'
          description: The ingest budget was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update an ingest budget.
      tags:
      - ingestBudgetManagementV1
  /v1/ingestBudgets/{id}/usage/reset:
    post:
      description: Reset ingest budget's current usage to 0 before the scheduled reset
        time.
      operationId: resetUsage
      parameters:
      - description: Identifier of the ingest budget to reset usage.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Ingest budget's usage was reset successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Reset usage.
      tags:
      - ingestBudgetManagementV1
  /v1/ingestBudgets/{id}/collectors:
    get:
      description: Get a list of Collectors assigned to an ingest budget. The response
        is paginated with a default limit of 100 Collectors per page.
      operationId: getAssignedCollectors
      parameters:
      - description: Identifier of ingest budget to which Collectors are assigned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Limit the number of Collectors returned in the response. The
          number of Collectors returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCollectorIdentitiesResponse'
          description: A paginated list of Collectors.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of Collectors.
      tags:
      - ingestBudgetManagementV1
  /v1/ingestBudgets/{id}/collectors/{collectorId}:
    delete:
      description: Remove Collector from a budget.
      operationId: removeCollectorFromBudget
      parameters:
      - description: Identifier of the ingest budget to unassign from the Collector.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the Collector to unassign.
        explode: false
        in: path
        name: collectorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudget'
          description: Collector was successfully unassigned from the ingest budget.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Remove Collector from a budget.
      tags:
      - ingestBudgetManagementV1
    put:
      description: Assign a Collector to a budget.
      operationId: assignCollectorToBudget
      parameters:
      - description: Identifier of the ingest budget to assign to the Collector.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the Collector to assign.
        explode: false
        in: path
        name: collectorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudget'
          description: Collector was successfully assigned to the ingest budget.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Assign a Collector to a budget.
      tags:
      - ingestBudgetManagementV1
  /v2/ingestBudgets:
    get:
      description: Get a list of all ingest budgets. The response is paginated with
        a default limit of 100 budgets per page.
      operationId: listIngestBudgetsV2
      parameters:
      - description: Limit the number of budgets returned in the response. The number
          of budgets returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIngestBudgetsResponseV2'
          description: A paginated list of budgets.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of ingest budgets.
      tags:
      - ingestBudgetManagementV2
    post:
      description: Create a new ingest budget.
      operationId: createIngestBudgetV2
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestBudgetDefinitionV2'
        description: Information about the new ingest budget.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudgetV2'
          description: The ingest budget has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new ingest budget.
      tags:
      - ingestBudgetManagementV2
  /v2/ingestBudgets/{id}:
    delete:
      description: Delete an ingest budget with the given identifier.
      operationId: deleteIngestBudgetV2
      parameters:
      - description: Identifier of the ingest budget to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The ingest budget was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete an ingest budget.
      tags:
      - ingestBudgetManagementV2
    get:
      description: Get an ingest budget by the given identifier.
      operationId: getIngestBudgetV2
      parameters:
      - description: Identifier of ingest budget to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudgetV2'
          description: Ingest budget object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get an ingest budget.
      tags:
      - ingestBudgetManagementV2
    put:
      description: Update an existing ingest budget. All properties specified in the
        request are required.
      operationId: updateIngestBudgetV2
      parameters:
      - description: Identifier of the ingest budget to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestBudgetDefinitionV2'
        description: Information to update about the ingest budget.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudgetV2'
          description: The ingest budget was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update an ingest budget.
      tags:
      - ingestBudgetManagementV2
  /v2/ingestBudgets/{id}/usage/reset:
    post:
      description: Reset ingest budget's current usage to 0 before the scheduled reset
        time. This is only applicable to `dailyVolume` budgetType.
      operationId: resetUsageV2
      parameters:
      - description: Identifier of the ingest budget to reset usage.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Ingest budget's usage was reset successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Reset usage.
      tags:
      - ingestBudgetManagementV2
  /v1/users:
    get:
      description: Get a list of all users in the organization. The response is paginated
        with a default limit of 100 users per page.
      operationId: listUsers
      parameters:
      - description: Limit the number of users returned in the response. The number
          of users returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: "Sort the list of users by the `firstName`, `lastName`, or `email`\
          \ field."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Find user with the given email address.
        explode: true
        in: query
        name: email
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Include service accounts while listing users within the organization.
        explode: true
        in: query
        name: includeServiceAccounts
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserModelsResponse'
          description: A paginated list of users in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of users.
      tags:
      - userManagement
    post:
      description: Create a new user in the organization.
      operationId: createUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDefinition'
        description: Information about the new user.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: The user has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new user.
      tags:
      - userManagement
  /v1/users/{id}:
    delete:
      description: Delete a user with the given identifier from the organization and
        transfer their content to the user with the identifier specified in "transferTo".
      operationId: deleteUser
      parameters:
      - description: Identifier of the user to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Identifier of the user to receive the transfer of content from\
          \ the deleted user. <br> **Note:** If `deleteContent` is not set to `true`,\
          \ and no user identifier is specified in `transferTo`, content from the\
          \ deleted user is transferred to the executing user."
        explode: true
        in: query
        name: transferTo
        required: false
        schema:
          type: string
        style: form
      - description: "Whether to delete content from the deleted user or not. <br>\
          \ **Warning:** If `deleteContent` is set to `true`, all of the content for\
          \ the user being deleted is permanently deleted and cannot be recovered."
        explode: true
        in: query
        name: deleteContent
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: User was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a user.
      tags:
      - userManagement
    get:
      description: Get a user with the given identifier from the organization.
      operationId: getUser
      parameters:
      - description: Identifier of user to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: User object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a user.
      tags:
      - userManagement
    put:
      description: Update an existing user in the organization.
      operationId: updateUser
      parameters:
      - description: Identifier of the user to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDefinition'
        description: Information to update about the user.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: The user was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a user.
      tags:
      - userManagement
  /v1/users/{id}/email/requestChange:
    post:
      description: "An email with an activation link is sent to the user’s new email\
        \ address. The user must click the link in the email within seven days to\
        \ complete the email address change, or the link will expire."
      operationId: requestChangeEmail
      parameters:
      - description: Identifier of the user to change email address.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
        description: New email address of the user.
        required: true
      responses:
        "204":
          description: Email change request was submitted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Change email address.
      tags:
      - userManagement
  /v1/users/{id}/password/reset:
    post:
      description: Reset a user's password.
      operationId: resetPassword
      parameters:
      - description: Identifier of the user to reset password.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User's password was reset successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Reset password.
      tags:
      - userManagement
  /v1/users/{id}/unlock:
    post:
      description: Unlock another user's account.
      operationId: unlockUser
      parameters:
      - description: The id of the user that needs to be unlocked.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User's account was unlocked successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Unlock a user.
      tags:
      - userManagement
  /v1/users/{id}/mfa/disable:
    put:
      description: Disable multi-factor authentication for given user.
      operationId: disableMfa
      parameters:
      - description: Identifier of the user to disable MFA for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableMfaRequest'
        description: Email and Password of the user to disable MFA for.
        required: true
      responses:
        "204":
          description: User's MFA was disabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable MFA for user.
      tags:
      - userManagement
  /v1/users/{id}/resendWelcomeEmail:
    post:
      description: Resend the welcome email to a user.
      operationId: resendWelcomeEmail
      parameters:
      - description: Identifier of the user to resend the welcome email.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Welcome email was resent successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Resend verification email.
      tags:
      - userManagement
  /v1/roles:
    get:
      description: Get a list of all the roles in the organization. The response is
        paginated with a default limit of 100 roles per page.
      operationId: listRoles
      parameters:
      - description: Limit the number of roles returned in the response. The number
          of roles returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: Sort the list of roles by the `name` field.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Only return roles matching the given name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoleModelsResponse'
          description: A paginated list of roles in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of roles.
      tags:
      - roleManagement
    post:
      description: Create a new role in the organization.
      operationId: createRole
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleDefinition'
        description: Information about the new role.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModel'
          description: The role has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new role.
      tags:
      - roleManagement
      x-tf-create: createRole
  /v1/roles/{id}:
    delete:
      description: Delete a role with the given identifier from the organization.
      operationId: deleteRole
      parameters:
      - description: Identifier of the role to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Role was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a role.
      tags:
      - roleManagement
      x-tf-delete: deleteRole
    get:
      description: Get a role with the given identifier in the organization.
      operationId: getRole
      parameters:
      - description: Identifier of the role to fetch.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModel'
          description: Role object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a role.
      tags:
      - roleManagement
      x-tf-read: getRole
    put:
      description: Update an existing role in the organization.
      operationId: updateRole
      parameters:
      - description: Identifier of the role to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleDefinition'
        description: Information to update about the role.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModel'
          description: The user was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a role.
      tags:
      - roleManagement
      x-tf-update: updateRole
  /v1/roles/{roleId}/users/{userId}:
    delete:
      description: Remove a role from a user in the organization.
      operationId: removeRoleFromUser
      parameters:
      - description: Identifier of the role to delete.
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the user to remove the role from.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Role was successfully removed from the user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Remove role from a user.
      tags:
      - roleManagement
    put:
      description: Assign a role to a user in the organization.
      operationId: assignRoleToUser
      parameters:
      - description: Identifier of the role to assign.
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the user to assign the role to.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModel'
          description: Role was successfully assigned to the user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Assign a role to a user.
      tags:
      - roleManagement
  /v2/roles:
    get:
      description: Get a list of all the roles in the organization. The response is
        paginated with a default limit of 100 roles per page.
      operationId: listRolesV2
      parameters:
      - description: Limit the number of roles returned in the response. The number
          of roles returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: Sort the list of roles by the `name` field.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Only return roles matching the given name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoleModelsResponseV2'
          description: A paginated list of roles in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of roles.
      tags:
      - roleManagementV2
    post:
      description: Create a new role in the organization.
      operationId: createRoleV2
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleDefinitionV2'
        description: Information about the new role.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModelV2'
          description: The role has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new role.
      tags:
      - roleManagementV2
      x-tf-create: createRoleV2
  /v2/roles/{id}:
    delete:
      description: Delete a role with the given identifier from the organization.
      operationId: deleteRoleV2
      parameters:
      - description: Identifier of the role to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Role was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a role.
      tags:
      - roleManagementV2
      x-tf-delete: deleteRoleV2
    get:
      description: Get a role with the given identifier in the organization.
      operationId: getRoleV2
      parameters:
      - description: Identifier of the role to fetch.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoleDefinitionV2'
          description: Role object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a role.
      tags:
      - roleManagementV2
      x-tf-read: getRoleV2
    put:
      description: Update an existing role in the organization.
      operationId: updateRoleV2
      parameters:
      - description: Identifier of the role to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleDefinitionV2'
        description: Information to update about the role.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModelV2'
          description: The user was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a role.
      tags:
      - roleManagementV2
      x-tf-update: updateRoleV2
  /v2/roles/{roleId}/users/{userId}:
    delete:
      description: Remove a role from a user in the organization.
      operationId: removeRoleFromUserV2
      parameters:
      - description: Identifier of the role to delete.
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the user to remove the role from.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Role was successfully removed from the user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Remove role from a user.
      tags:
      - roleManagementV2
    put:
      description: Assign a role to a user in the organization.
      operationId: assignRoleToUserV2
      parameters:
      - description: Identifier of the role to assign.
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the user to assign the role to.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModelV2'
          description: Role was successfully assigned to the user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Assign a role to a user.
      tags:
      - roleManagementV2
  /v2/content/folders:
    post:
      description: Creates a new folder under the given parent folder. Set the header
        parameter `isAdminMode` to `"true"` to create a folder inside "Admin Recommended"
        folder.
      operationId: createFolder
      parameters:
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderDefinition'
        description: Information about the new folder.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: The folder has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Create a new folder.
      tags:
      - folderManagement
  /v2/content/folders/{id}:
    get:
      description: Get a folder with the given identifier. Set the header parameter
        `isAdminMode` to `"true"` if fetching a folder inside "Admin Recommended"
        folder.
      operationId: getFolder
      parameters:
      - description: Identifier of the folder to fetch.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: Folder that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get a folder.
      tags:
      - folderManagement
    put:
      description: Update an existing folder with the given identifier. Set the header
        parameter `isAdminMode` to `"true"` if updating a folder inside "Admin Recommended"
        folder.
      operationId: updateFolder
      parameters:
      - description: Identifier of the folder to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolderRequest'
        description: Information to update about the folder.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: The folder was successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Update a folder.
      tags:
      - folderManagement
  /v2/content/folders/personal:
    get:
      description: Get the personal folder of the current user.
      operationId: getPersonalFolder
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: |
            The personal folder of the current user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get personal folder.
      tags:
      - folderManagement
  /v2/content/folders/global:
    get:
      description: |-
        Schedule an asynchronous job to get Global View. Global View contains all top-level content items that a user has permissions to view in the organization. User can traverse the top-level folders using [GetFolder API](#operation/getFolder) to get rest of the content items. Make sure you set `isAdminMode` header parameter to `true` when traversing top-level items.

        _Global View is not a real folder, therefore there is no folder identifier associated with it_.

        _You get back a identifier of asynchronous job in response to this endpoint. See [Asynchronous-Request](#section/Getting-Started/Asynchronous-Request) section for more details on how to work with asynchronous request._
      operationId: getGlobalFolderAsync
      parameters:
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: An asynchronous job to get a list of all content items been
            scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Schedule Global View job
      tags:
      - folderManagement
  /v2/content/folders/global/{jobId}/status:
    get:
      description: "Get the status of an asynchronous Global View job for the given\
        \ job identifier. If job succeeds, use [Global View Result](#operation/getGlobalFolderAsyncResult)\
        \ endpoint to fetch all content items that you have permissions to view."
      operationId: getGlobalFolderAsyncStatus
      parameters:
      - description: The identifier of the asynchronous Global View job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: Asynchronous Global View job status.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get Global View job status
      tags:
      - folderManagement
  /v2/content/folders/global/{jobId}/result:
    get:
      description: Get result of a Global View job for the given job identifier. The
        result will be a list of all content items that a user has permissions to
        view in the organization.
      operationId: getGlobalFolderAsyncResult
      parameters:
      - description: The identifier of the asynchronous Global View job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentList'
          description: List of all content items with view permission.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get Global View job result
      tags:
      - folderManagement
  /v2/content/folders/adminRecommended:
    get:
      description: |-
        Schedule an asynchronous job to get the top-level Admin Recommended content items. You can read more about Admin Recommended folder [here](https://help.sumologic.com/Manage/Content_Sharing/Admin_Mode#move-important-content-to-admin-recommended).

        _You get back a identifier of asynchronous job in response to this endpoint. See [Asynchronous-Request](#section/Getting-Started/Asynchronous-Request) section for more details on how to work with asynchronous request._
      operationId: getAdminRecommendedFolderAsync
      parameters:
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: An asynchronous job to get the Admin Recommended folder has
            been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Schedule Admin Recommended folder job
      tags:
      - folderManagement
  /v2/content/folders/adminRecommended/{jobId}/status:
    get:
      description: "Get the status of an asynchronous Admin Recommended folder job\
        \ for the given job identifier. If job succeeds, use [Admin Recommended Job\
        \ Result](#operation/getAdminRecommendedFolderAsyncResult) endpoint to fetch\
        \ top-level content items in Admin Recommended folder."
      operationId: getAdminRecommendedFolderAsyncStatus
      parameters:
      - description: The identifier of the asynchronous Admin Recommended folder job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: Asynchronous Admin Recommended folder job status.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get Admin Recommended folder job status
      tags:
      - folderManagement
  /v2/content/folders/adminRecommended/{jobId}/result:
    get:
      description: Get result of an Admin Recommended job for the given job identifier.
        The result will be "Admin Recommended" folder with a list of top-level Admin
        Recommended content items in `children` field.
      operationId: getAdminRecommendedFolderAsyncResult
      parameters:
      - description: The identifier of the asynchronous Admin Recommended folder job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: Admin Recommended folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get Admin Recommended folder job result
      tags:
      - folderManagement
  /v2/content/{id}/permissions:
    get:
      description: Returns content permissions of a content item with the given identifier.
      operationId: getContentPermissions
      parameters:
      - description: The identifier of the content item.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "There are two permission types: explicit and implicit. Permissions\
          \ specifically assigned to the content item are explicit. Permissions derived\
          \ from a parent content item, like a folder are implicit. To return only\
          \ explicit permissions set this to true."
        explode: true
        in: query
        name: explicitOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPermissionResult'
          description: A list of permissions for the requested content item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get permissions of a content item
      tags:
      - contentPermissions
  /v2/content/{id}/permissions/add:
    put:
      description: Add permissions to a content item with the given identifier.
      operationId: addContentPermissions
      parameters:
      - description: The identifier of the content item.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPermissionUpdateRequest'
        description: New permissions to add to the content item with the given identifier.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPermissionResult'
          description: Updated permission object for the requested content item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Add permissions to a content item.
      tags:
      - contentPermissions
  /v2/content/{id}/permissions/remove:
    put:
      description: Remove permissions from a content item with the given identifier.
      operationId: removeContentPermissions
      parameters:
      - description: The identifier of the content item.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPermissionUpdateRequest'
        description: Permissions to remove from a content item with the given identifier.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPermissionResult'
          description: Updated permissions for the requested content item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error. Check that your request is
            valid.
      summary: Remove permissions from a content item.
      tags:
      - contentPermissions
  /v2/content/path:
    get:
      description: |-
        Get a content item corresponding to the given path.

        _Path is specified in the required query parameter `path`. The path should be URL encoded._ For example, to get "Acme Corp" folder of a user "user@sumo.com" you can use the following curl command:
          ```bash
          curl https://api.sumologic.com/api/v2/content/path?path=/Library/Users/user%40sumo.com/Acme%20Corp
          ```


        The absolute path to a content item should be specified to get the item. The content library has "Library" folder at the root level. For items in "Personal" folder, the base path is "/Library/Users/user@sumo.com" where "user@sumo.com" is the email address of the user. For example if a user with email address `wile@acme.com` has `Rockets` folder inside Personal folder, the path of Rockets folder will be `/Library/Users/wile@acme.com/Rockets`.

        For items in "Admin Recommended" folder, the base path is "/Library/Admin Recommended". For example, given a folder `Acme` in Admin Recommended folder, the path will be `/Library/Admin Recommended/Acme`.
      operationId: getItemByPath
      parameters:
      - description: Path of the content item to retrieve.
        example: /Library/Users/user@sumo.com/SampleFolder
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: Content item corresponding to the given path.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get content item by path.
      tags:
      - contentManagement
  /v2/content/{contentId}/path:
    get:
      description: |
        Get full path of a content item with the given identifier.
      operationId: getPathById
      parameters:
      - description: Identifier of the content item to get the path.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPath'
          description: Full path of the content item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get path of an item.
      tags:
      - contentManagement
  /v2/content/{id}/export:
    post:
      description: |-
        Schedule an _asynchronous_ export of content with the given identifier. You will get back an asynchronous job identifier on success. Use the [getAsyncExportStatus](#operation/getAsyncExportStatus) endpoint and the job identifier you got back in the response to track the status of an asynchronous export job.
        If the content item is a folder, everything under the folder is exported recursively. Keep in mind when exporting large folders that there is a limit of 1000 content objects that can be exported at once. If you want to import more than 1000 content objects, then be sure to split the import into batches of 1000 objects or less.
        The results from the export are compatible with the Library import feature in the Sumo Logic user interface as well as the API content import job.
      operationId: beginAsyncExport
      parameters:
      - description: The identifier of the content item to export. Identifiers from
          the Library in the Sumo user interface are provided in decimal format which
          is incompatible with this API. The identifier needs to be in hexadecimal
          format.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: Export job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start a content export job.
      tags:
      - contentManagement
  /v2/content/{contentId}/export/{jobId}/status:
    get:
      description: "Get the status of an asynchronous content export request for the\
        \ given job identifier. On success, use the [getExportResult](#operation/getAsyncExportResult)\
        \ endpoint to get the result of the export job."
      operationId: getAsyncExportStatus
      parameters:
      - description: The identifier of the exported content item.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the asynchronous export job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the export job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Content export job status.
      tags:
      - contentManagement
  /v2/content/{contentId}/export/{jobId}/result:
    get:
      description: Get results from content export job for the given job identifier.
        The results from this export are incompatible with the Library import feature
        in the Sumo user interface.
      operationId: getAsyncExportResult
      parameters:
      - description: The identifier of the exported content item.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the asynchronous job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSyncDefinition'
          description: The result of export job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Content export job result.
      tags:
      - contentManagement
  /v2/content/folders/{folderId}/import:
    post:
      description: "Schedule an asynchronous import of content inside an existing\
        \ folder with the given identifier. Import requests can be used to create\
        \ or update content within a folder. Content items need to have a unique name\
        \ within their folder. If there is already a content item with the same name\
        \ in the folder, you can set the `overwrite` parameter to `true` to overwrite\
        \ existing content items. By default, the `overwrite` parameter is set to\
        \ `false`, where the import will fail if a content item with the same name\
        \ already exist. Keep in mind when importing large folders that there is a\
        \ limit of 1000 content objects that can be imported at once. If you want\
        \ to import more than 1000 content objects, then be sure to split the import\
        \ into batches of 1000 objects or less."
      operationId: beginAsyncImport
      parameters:
      - description: The identifier of the folder to import into. Identifiers from
          the Library in the Sumo user interface are provided in decimal format which
          is incompatible with this API. The identifier needs to be in hexadecimal
          format.
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      - description: Set this to "true" to overwrite a content item if the name already
          exists.
        explode: true
        in: query
        name: overwrite
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentSyncDefinition'
        description: The content to import.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: Import job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Start a content import job.
      tags:
      - contentManagement
  /v2/content/folders/{folderId}/import/{jobId}/status:
    get:
      description: Get the status of a content import job for the given job identifier.
      operationId: getAsyncImportStatus
      parameters:
      - description: The identifier of the folder to import into.
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the import request.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the import job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Content import job status.
      tags:
      - contentManagement
  /v2/content/{id}/delete:
    delete:
      description: Start an asynchronous content deletion job with the given identifier.
      operationId: beginAsyncDelete
      parameters:
      - description: Identifier of the content to delete. Identifiers from the Library
          in the Sumo user interface are provided in decimal format which is incompatible
          with this API. The identifier needs to be in hexadecimal format.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: Deletion job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start a content deletion job.
      tags:
      - contentManagement
  /v2/content/{id}/delete/{jobId}/status:
    get:
      description: Get the status of an asynchronous content deletion job request
        for the given job identifier.
      operationId: getAsyncDeleteStatus
      parameters:
      - description: Identifier of the content to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the asynchronous job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the content deletion job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Content deletion job status.
      tags:
      - contentManagement
  /v2/content/{id}/copy:
    post:
      description: "Start an asynchronous content copy job with the given identifier\
        \ to the destination folder. If the content item is a folder, everything under\
        \ the folder is copied recursively."
      operationId: beginAsyncCopy
      parameters:
      - description: The identifier of the content item to copy. Identifiers from
          the Library in the Sumo user interface are provided in decimal format which
          is incompatible with this API. The identifier needs to be in hexadecimal
          format.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the destination folder.
        explode: true
        in: query
        name: destinationFolder
        required: true
        schema:
          type: string
        style: form
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: Content copy job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start a content copy job.
      tags:
      - contentManagement
  /v2/content/{id}/copy/{jobId}/status:
    get:
      description: |
        Get the status of the copy request with the given job identifier. On success, field `statusMessage` will contain identifier of the newly copied content in format: `id: {hexIdentifier}`.
      operationId: asyncCopyStatus
      parameters:
      - description: The identifier of the content which was copied.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the asynchronous copy request job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: Success
                statusMessage: "id: 0000000000000197"
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the content copy job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Content copy job status.
      tags:
      - contentManagement
  /v2/content/{id}/move:
    post:
      description: |
        Moves an item from its current location to another folder.
      operationId: moveItem
      parameters:
      - description: Identifier of the destination folder.
        explode: true
        in: query
        name: destinationFolderId
        required: true
        schema:
          type: string
        style: form
      - description: Identifier of the item the user wants to move.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Content was moved successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Move an item.
      tags:
      - contentManagement
  /v1/transformationRules:
    get:
      description: Get a list of transformation rules in the organization. The response
        is paginated with a default limit of 100 rules per page.
      operationId: getTransformationRules
      parameters:
      - description: Limit the number of transformation rules returned in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationRulesResponse'
          description: List of transformation rules.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of transformation rules.
      tags:
      - transformationRuleManagement
    post:
      description: Create a new transformation rule.
      operationId: createRule
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransformationRuleRequest'
        description: The configuration of the transformation rule to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationRuleResponse'
          description: The transformation rule was successfully created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Create a new transformation rule.
      tags:
      - transformationRuleManagement
  /v1/transformationRules/{id}:
    delete:
      description: Delete a transformation rule with the given identifier.
      operationId: deleteRule
      parameters:
      - description: Identifier of the transformation rule to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
        "204":
          description: The transformation rule was successfully deleted.
      summary: Delete a transformation rule.
      tags:
      - transformationRuleManagement
    get:
      description: Get a transformation rule with the given identifier.
      operationId: getTransformationRule
      parameters:
      - description: Identifier of transformation rule to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationRuleResponse'
          description: Transformation rule object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a transformation rule.
      tags:
      - transformationRuleManagement
    put:
      description: Update an existing transformation rule. All properties specified
        in the request are replaced. Missing properties will remain the same.
      operationId: updateTransformationRule
      parameters:
      - description: Identifier of the transformation rule to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransformationRuleRequest'
        description: Information to update about the transformation rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationRuleResponse'
          description: The transformation rule was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a transformation rule.
      tags:
      - transformationRuleManagement
  /v1/account/accountOwner:
    get:
      description: Returns the user identifier of the account owner.
      operationId: getAccountOwner
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: User identifier of the account owner.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the owner of an account.
      tags:
      - accountManagement
  /v1/account/status:
    get:
      description: "Get information related to the account's plan, pricing model,\
        \ expiration and payment status."
      operationId: getStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusResponse'
          description: Overview of the account.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get overview of the account status.
      tags:
      - accountManagement
  /v1/account/subdomain:
    delete:
      description: Delete the configured subdomain.
      operationId: deleteSubdomain
      responses:
        "204":
          description: The subdomain was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete the configured subdomain.
      tags:
      - accountManagement
    get:
      description: Get the configured subdomain.
      operationId: getSubdomain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubdomainDefinitionResponse'
          description: The subdomain's definition.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the configured subdomain.
      tags:
      - accountManagement
    post:
      description: Create a subdomain. Only the Account Owner can create a subdomain.
      operationId: createSubdomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureSubdomainRequest'
        description: The new subdomain.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubdomainDefinitionResponse'
          description: Created a new subdomain.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create account subdomain.
      tags:
      - accountManagement
    put:
      description: Update a subdomain. Only the Account Owner can update the subdomain.
      operationId: updateSubdomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureSubdomainRequest'
        description: The new subdomain.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubdomainDefinitionResponse'
          description: The updated subdomain's definition.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update account subdomain.
      tags:
      - accountManagement
  /v1/account/subdomain/recover:
    post:
      description: Send an email with the subdomain information for a user with the
        given email address.
      operationId: recoverSubdomains
      parameters:
      - description: Email address of the user to get subdomain information.
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: An email containing information about associated subdomains
            for the given email was sent.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Recover subdomains for a user.
      tags:
      - accountManagement
  /v1/account/usage/report:
    post:
      description: "Export the credit usage details as csv for the specific period\
        \ of time given as input in the form of a start and end date with a specific\
        \ grouping according to `day`, `week`, `month`, Note that this API will work\
        \ only for credits plan customers."
      operationId: exportUsageReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsageReportRequest'
        description: Export Usage Report Request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageReportResponse'
          description: Export Response with Job Id.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Export credits usage details as CSV.
      tags:
      - accountManagement
  /v1/account/usage/report/{jobId}/status:
    get:
      description: Get the report download URL and status using Job Id.
      operationId: getStatusForReport
      parameters:
      - description: Job Id for the report to be exported.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageReportStatusResponse'
          description: Status response containing status and downloadURL if successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get report generation status.
      tags:
      - accountManagement
  /v1/account/usageForecast:
    get:
      description: "Get usage forecast with respect to last number of days specified.\
        \ If nothing is provided for  last number of days, the average of term period\
        \ will be taken to do the forecast."
      operationId: getUsageForecast
      parameters:
      - description: Number of days to use for calculating average usage and forecast.
        explode: true
        in: query
        name: numberOfDays
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageForecastResponse'
          description: Usage Forecast.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get usage forecast with respect to last number of days specified.
      tags:
      - accountManagement
  /v1/plan/pendingUpdateRequest:
    delete:
      description: Delete the pending plan update request which would be applicable
        from next billing cycle.
      operationId: deletePendingUpdateRequest
      responses:
        "204":
          description: Deleted the pending update request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: "Delete the pending plan update request, if any."
      tags:
      - accountManagement
    get:
      description: Get the pending plan update request which will be applicable from
        next billing cycle.
      operationId: getPendingUpdateRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingUpdateRequest'
          description: Pending plan update request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: "Get the pending plan update request, if any."
      tags:
      - accountManagement
  /v1/organizations/usages:
    post:
      description: Get the credits usage details of the child orgs for a parent.
      operationId: getChildUsages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChildUsageDetailsRequest'
        description: Details for the usages to be fetched.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildUsageDetailsResponse'
          description: Usage details for the child orgs.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get usages for child orgs.
      tags:
      - orgsManagement
  /v1/metricsSearches:
    post:
      description: "Saves a metrics search in the content library. Metrics search\
        \ consists of one or more queries, a time range, a quantization period and\
        \ a set of chart properties like line width."
      operationId: createMetricsSearch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveMetricsSearchRequest'
        description: The definition of the metrics search.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsSearchInstance'
          description: Newly created metrics search.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Save a metrics search.
      tags:
      - metricsSearchesManagement
  /v1/metricsSearches/{id}:
    delete:
      description: Deletes a metrics search from the content library.
      operationId: deleteMetricsSearch
      parameters:
      - description: Identifier of the metrics search.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
        "204":
          description: The metrics search was successfully deleted.
      summary: Deletes a metrics search.
      tags:
      - metricsSearchesManagement
    get:
      description: Returns a metrics search with the specified identifier.
      operationId: getMetricsSearch
      parameters:
      - description: Identifier of the metrics search.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsSearchInstance'
          description: A metrics search object with metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a metrics search.
      tags:
      - metricsSearchesManagement
    put:
      description: "Updates a metrics search with the specified identifier. Partial\
        \ updates are not supported, you must provide values for all fields."
      operationId: updateMetricsSearch
      parameters:
      - description: Identifier of the metrics search.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsSearchV1'
        description: An updated metrics search definition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsSearchInstance'
          description: The metrics saved search that was updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Updates a metrics search.
      tags:
      - metricsSearchesManagement
  /v1/tokens:
    get:
      description: Get a list of all tokens in the token library.
      operationId: listTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokensBaseResponse'
          description: A list of tokens.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of tokens.
      tags:
      - tokensLibraryManagement
    post:
      description: Create a token in the token library.
      operationId: createToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBaseDefinition'
        description: Information about the token to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBaseResponse'
          description: The token has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a token.
      tags:
      - tokensLibraryManagement
  /v1/tokens/{id}:
    delete:
      description: Delete a token with the given identifier in the token library.
      operationId: deleteToken
      parameters:
      - description: Identifier of the token to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The token was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a token.
      tags:
      - tokensLibraryManagement
    get:
      description: Get a token with the given identifier in the token library.
      operationId: getToken
      parameters:
      - description: Identifier of the token to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBaseResponse'
          description: Token object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a token.
      tags:
      - tokensLibraryManagement
    put:
      description: Update a token with the given identifier in the token library.
      operationId: updateToken
      parameters:
      - description: Identifier of the token to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBaseDefinitionUpdate'
        description: The token to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBaseResponse'
          description: The token was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a token.
      tags:
      - tokensLibraryManagement
  /v1/accessKeys:
    get:
      description: List all access keys in your account.
      operationId: listAccessKeys
      parameters:
      - description: Limit the number of access keys returned in the response. The
          number of access keys returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListAccessKeysResult'
          description: A list of all access keys in your account.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List all access keys.
      tags:
      - accessKeyManagement
    post:
      description: |-
        Creates a new access ID and key pair. The new access key can be used from the domains specified in corsHeaders field. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:
          1. Requests with an ORIGIN header but the allowlist is empty.
          2. Requests with an ORIGIN header that don't match any entry in the allowlist.
      operationId: createAccessKey
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessKeyCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKey'
          description: Access key created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access key creation failed with an error.
      summary: Create an access key.
      tags:
      - accessKeyManagement
  /v1/accessKeys/personal:
    get:
      description: List all access keys that belong to your user.
      operationId: listPersonalAccessKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessKeysResult'
          description: A list of all access keys that belong to the user making the
            request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List personal keys.
      tags:
      - accessKeyManagement
  /v1/accessKeys/scopes:
    get:
      description: Get a list of all of the scopes that can be added to an access
        key.
      operationId: listScopes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopesList'
          description: A list of scopes that can be added to an access key.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error
      summary: Get all scopes.
      tags:
      - accessKeyManagement
  /v1/accessKeys/{id}:
    delete:
      description: Deletes the access key with the given accessId.
      operationId: deleteAccessKey
      parameters:
      - description: The accessId of the access key to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Access key deletion completed successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access key deletion failed with an error.
      summary: Delete an access key.
      tags:
      - accessKeyManagement
    put:
      description: Updates the properties of existing accessKey by accessId. It can
        be used to enable or disable the access key and to update the corsHeaders
        list.
      operationId: updateAccessKey
      parameters:
      - description: The accessId of the access key to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessKeyUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeyPublic'
          description: Access key updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access key update failed with an error.
      summary: Update an access key.
      tags:
      - accessKeyManagement
  /v1/saml/identityProviders:
    get:
      description: Get a list of all SAML configurations in the organization.
      operationId: getIdentityProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SamlIdentityProvider'
                type: array
          description: A list of SAML configurations in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of SAML configurations.
      tags:
      - samlConfigurationManagement
    post:
      description: Create a new SAML configuration in the organization.
      operationId: createIdentityProvider
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamlIdentityProviderRequest'
        description: The configuration of the SAML identity provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlIdentityProvider'
          description: The SAML configuration was successfully created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new SAML configuration.
      tags:
      - samlConfigurationManagement
  /v1/saml/identityProviders/{id}:
    delete:
      description: Delete a SAML configuration with the given identifier from the
        organization.
      operationId: deleteIdentityProvider
      parameters:
      - description: Identifier of the SAML configuration to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The SAML configuration was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a SAML configuration.
      tags:
      - samlConfigurationManagement
    put:
      description: Update an existing SAML configuration in the organization.
      operationId: updateIdentityProvider
      parameters:
      - description: Identifier of the SAML configuration to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamlIdentityProviderRequest'
        description: Information to update in the SAML configuration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlIdentityProvider'
          description: The SAML configuration was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a SAML configuration.
      tags:
      - samlConfigurationManagement
  /v1/saml/allowlistedUsers:
    get:
      description: Get a list of allowlisted users.
      operationId: getAllowlistedUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AllowlistedUserResult'
                type: array
          description: A list of allowlisted users from the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get list of allowlisted users.
      tags:
      - samlConfigurationManagement
  /v1/saml/allowlistedUsers/{userId}:
    delete:
      description: Remove an allowlisted user requiring them to sign in using SAML.
      operationId: deleteAllowlistedUser
      parameters:
      - description: Identifier of user that will no longer be allowlisted from SAML
          Lockdown.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User was successfully removed from the allowlist for SAML Lockdown.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Remove an allowlisted user.
      tags:
      - samlConfigurationManagement
    post:
      description: Allowlist a user from SAML lockdown allowing them to sign in using
        a password in addition to SAML.
      operationId: createAllowlistedUser
      parameters:
      - description: Identifier of the user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistedUserResult'
          description: User was successfully allowlisted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Allowlist a user.
      tags:
      - samlConfigurationManagement
  /v1/saml/lockdown/enable:
    post:
      description: Enabling SAML lockdown requires users to sign in using SAML preventing
        them from logging in with an email and password.
      operationId: enableSamlLockdown
      responses:
        "204":
          description: SAML lockdown was enabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Require SAML for sign-in.
      tags:
      - samlConfigurationManagement
  /v1/saml/lockdown/disable:
    post:
      description: Disable SAML lockdown for the organization.
      operationId: disableSamlLockdown
      responses:
        "204":
          description: SAML lockdown was disabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable SAML lockdown.
      tags:
      - samlConfigurationManagement
  /v1/saml/identityProviders/{id}/metadata:
    get:
      description: Get metadata XML for a specific SAML configuration within the organization.
      operationId: getSamlMetadata
      parameters:
      - description: Identifier of the SAML configuration for which metadata should
          be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/xml:
              schema:
                type: string
          description: A SAML configuration metadata XML within the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get SAML configuration metadata XML.
      tags:
      - samlConfigurationManagement
  /v1/saml/identityProviders/parentOrgConfig:
    delete:
      description: Deletes the SAML configuration setup for enabling login via parent
        org.
      operationId: deleteParentOrgSamlConfig
      responses:
        "204":
          description: The parent org SAML configuration was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete parent org SAML configuration
      tags:
      - samlConfigurationManagement
  /v1/serviceAllowlist/addresses:
    get:
      description: Get a list of all allowlisted CIDR notations and/or IP addresses
        for the organization.
      operationId: listAllowlistedCidrs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CidrList'
          description: List of all allowlisted CIDR notations and/or IP addresses
            for the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List all allowlisted CIDRs/IP addresses.
      tags:
      - serviceAllowlistManagement
  /v1/serviceAllowlist/addresses/add:
    post:
      description: "Add CIDR notations and/or IP addresses to the allowlist of the\
        \ organization if not already there. When service allowlisting functionality\
        \ is enabled, CIDRs/IP addresses that are allowlisted will have access to\
        \ Sumo Logic and/or content sharing."
      operationId: addAllowlistedCidrs
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CidrList'
        description: List of all CIDR notations and/or IP addresses to be added to
          the allowlist of the organization.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CidrList'
          description: List of all allowlisted CIDR notations and/or IP addresses
            for the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Allowlist CIDRs/IP addresses.
      tags:
      - serviceAllowlistManagement
  /v1/serviceAllowlist/addresses/remove:
    post:
      description: Remove allowlisted CIDR notations and/or IP addresses from the
        organization. Removed CIDRs/IPs will immediately lose access to Sumo Logic
        and content sharing.
      operationId: deleteAllowlistedCidrs
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CidrList'
        description: List of all CIDR notations and/or IP addresses to be removed
          from the allowlist of the organization.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CidrList'
          description: List of all allowlisted CIDR notations and/or IP addresses
            for the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Remove allowlisted CIDRs/IP addresses.
      tags:
      - serviceAllowlistManagement
  /v1/serviceAllowlist/enable:
    post:
      description: "Enable service allowlisting functionality for the organization.\
        \ The service allowlisting can be for 1. Login: If enabled, access to Sumo\
        \ Logic is granted only to CIDRs/IP addresses that are allowlisted. 2. Content:\
        \ If enabled, dashboards can be shared with users connecting from CIDRs/IP\
        \ addresses that are allowlisted without logging in."
      operationId: enableAllowlisting
      parameters:
      - description: "The type of allowlisting to be enabled. It can be one of: `Login`,\
          \ `Content`, or `Both`."
        explode: true
        in: query
        name: allowlistType
        required: true
        schema:
          description: "One of: `Login`, `Content`, `Both`."
          example: Login
          pattern: ^(Login|Content|Both)$
          type: string
          x-pattern-message: "must be `Login`, `Content`, or `Both`"
        style: form
      responses:
        "204":
          description: Service allowlisting was enabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Enable service allowlisting.
      tags:
      - serviceAllowlistManagement
  /v1/serviceAllowlist/disable:
    post:
      description: Disable service allowlisting functionality for login/API authentication
        or content sharing for the organization.
      operationId: disableAllowlisting
      parameters:
      - description: "The type of allowlisting to be disabled. It can be one of: `Login`,\
          \ `Content`, or `Both`."
        explode: true
        in: query
        name: allowlistType
        required: true
        schema:
          description: "One of: `Login`, `Content`, `Both`."
          example: Login
          pattern: ^(Login|Content|Both)$
          type: string
          x-pattern-message: "must be `Login`, `Content`, or `Both`"
        style: form
      responses:
        "204":
          description: Service allowlisting was disabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable service allowlisting.
      tags:
      - serviceAllowlistManagement
  /v1/serviceAllowlist/status:
    get:
      description: Get the status of the service allowlisting functionality for login/API
        authentication or content sharing for the organization.
      operationId: getAllowlistingStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistingStatus'
          description: The status of service allowlisting for Content and Login.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the allowlisting status.
      tags:
      - serviceAllowlistManagement
  /v1/policies/audit:
    get:
      description: "Get the Audit policy. This policy specifies whether audit records\
        \ for your account are enabled. You can access details about reported account\
        \ events in the Sumo Logic Audit Index. [Learn More](https://help.sumologic.com/Manage/Security/Audit-Index)"
      operationId: getAuditPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditPolicy'
          description: The Audit policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Audit policy.
      tags:
      - policiesManagement
    put:
      description: "Set the Audit policy. This policy specifies whether audit records\
        \ for your account are enabled. You can access details about reported account\
        \ events in the Sumo Logic Audit Index. [Learn More](https://help.sumologic.com/Manage/Security/Audit-Index)"
      operationId: setAuditPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditPolicy'
          description: Audit policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set Audit policy.
      tags:
      - policiesManagement
  /v1/policies/searchAudit:
    get:
      description: "Get the Search Audit policy. This policy specifies whether search\
        \ records for your account are enabled. You can access details about your\
        \ account's search capacity, queries run by users from the Sumo Search Audit\
        \ Index. [Learn More](https://help.sumologic.com/Manage/Security/Search_Audit_Index)"
      operationId: getSearchAuditPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAuditPolicy'
          description: The Search Audit policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Search Audit policy.
      tags:
      - policiesManagement
    put:
      description: "Set the Search Audit policy. This policy specifies whether search\
        \ records for your account are enabled. You can access details about your\
        \ account's search capacity, queries run by users from the Sumo Search Audit\
        \ Index. [Learn More](https://help.sumologic.com/Manage/Security/Search_Audit_Index)"
      operationId: setSearchAuditPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAuditPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAuditPolicy'
          description: Search Audit policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set Search Audit policy.
      tags:
      - policiesManagement
  /v1/policies/shareDashboardsOutsideOrganization:
    get:
      description: "Get the Share Dashboards Outside Organization policy. This policy\
        \ allows users to share the dashboard with view only privileges outside of\
        \ the organization (capability must be enabled from the Roles page). Disabling\
        \ this policy will disable all dashboards that have been shared outside of\
        \ the organization. [Learn More](https://help.sumologic.com/Visualizations-and-Alerts/Dashboards/Share_Dashboards/Share_a_Dashboard_Outside_Your_Org)"
      operationId: getShareDashboardsOutsideOrganizationPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareDashboardsOutsideOrganizationPolicy'
          description: The Share Dashboards Outside Organization policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Share Dashboards Outside Organization policy.
      tags:
      - policiesManagement
    put:
      description: "Set the Share Dashboards Outside Organization policy. This policy\
        \ allows users to share the dashboard with view only privileges outside of\
        \ the organization (capability must be enabled from the Roles page). Disabling\
        \ this policy will disable all dashboards that have been shared outside of\
        \ the organization. [Learn More](https://help.sumologic.com/Visualizations-and-Alerts/Dashboards/Share_Dashboards/Share_a_Dashboard_Outside_Your_Org)"
      operationId: setShareDashboardsOutsideOrganizationPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareDashboardsOutsideOrganizationPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareDashboardsOutsideOrganizationPolicy'
          description: Share Dashboards Outside Organization policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set Share Dashboards Outside Organization policy.
      tags:
      - policiesManagement
  /v1/policies/dataAccessLevel:
    get:
      description: "Get the Data Access Level policy. When enabled, this policy sets\
        \ the default data access level for all newly created dashboards to the viewer’\
        s role access filter. Otherwise, newly created dashboards will default to\
        \ the sharer’s role access filter and might display data that viewers’ roles\
        \ don’t allow them to view. [Learn More](https://help.sumologic.com/Manage/Security/Data_Access_Level_for_Shared_Dashboards)"
      operationId: getDataAccessLevelPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAccessLevelPolicy'
          description: The Data Access Level policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Data Access Level policy.
      tags:
      - policiesManagement
    put:
      description: "Set the Data Access Level policy. When enabled, this policy sets\
        \ the default data access level for all newly created dashboards to the viewer’\
        s role access filter. Otherwise, newly created dashboards will default to\
        \ the sharer’s role access filter and might display data that viewers’ roles\
        \ don’t allow them to view. [Learn More](https://help.sumologic.com/Manage/Security/Data_Access_Level_for_Shared_Dashboards)"
      operationId: setDataAccessLevelPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataAccessLevelPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAccessLevelPolicy'
          description: Data Access Level policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set Data Access Level policy.
      tags:
      - policiesManagement
  /v1/policies/userConcurrentSessionsLimit:
    get:
      description: "Get the User Concurrent Sessions Limit policy. When enabled, the\
        \ number of concurrent sessions a user may have is limited to the value entered.\
        \ If a user exceeds the allowed number of sessions, the user's oldest session\
        \ will be logged out to accommodate the new one. Disabling this policy means\
        \ a user may have an unlimited number of concurrent sessions. [Learn More](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions)"
      operationId: getUserConcurrentSessionsLimitPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConcurrentSessionsLimitPolicy'
          description: The User Concurrent Sessions Limit policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get User Concurrent Sessions Limit policy.
      tags:
      - policiesManagement
    put:
      description: "Set the User Concurrent Sessions Limit policy. When enabled, the\
        \ number of concurrent sessions a user may have is limited to the value entered.\
        \ If a user exceeds the allowed number of sessions, the user's oldest session\
        \ will be logged out to accommodate the new one. Disabling this policy means\
        \ a user may have an unlimited number of concurrent sessions. [Learn More](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions)"
      operationId: setUserConcurrentSessionsLimitPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConcurrentSessionsLimitPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConcurrentSessionsLimitPolicy'
          description: User Concurrent Sessions Limit policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set User Concurrent Sessions Limit policy.
      tags:
      - policiesManagement
  /v1/policies/maxUserSessionTimeout:
    get:
      description: "Get the Max User Session Timeout policy. When enabled, this policy\
        \ sets the maximum web session timeout users are able to configure within\
        \ their user preferences. Users preferences will be updated to match this\
        \ value only if their current preference is set to a higher value. [Learn\
        \ More](https://help.sumologic.com/Manage/Security/Set_a_Maximum_Web_Session_Timeout)"
      operationId: getMaxUserSessionTimeoutPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxUserSessionTimeoutPolicy'
          description: The Max User Session Timeout policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Max User Session Timeout policy.
      tags:
      - policiesManagement
    put:
      description: "Set the Max User Session Timeout policy. When enabled, this policy\
        \ sets the maximum web session timeout users are able to configure within\
        \ their user preferences. Users preferences will be updated to match this\
        \ value only if their current preference is set to a higher value. [Learn\
        \ More](https://help.sumologic.com/Manage/Security/Set_a_Maximum_Web_Session_Timeout)"
      operationId: setMaxUserSessionTimeoutPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaxUserSessionTimeoutPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxUserSessionTimeoutPolicy'
          description: Max User Session Timeout policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set Max User Session Timeout policy.
      tags:
      - policiesManagement
  /v1/healthEvents:
    get:
      description: Get a list of all the unresolved health events in your account.
      operationId: listAllHealthEvents
      parameters:
      - description: Limit the number of health events returned in the response. The
          number of health events returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHealthEventResponse'
          description: A paginated list of all the health events.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of health events.
      tags:
      - healthEvents
  /v1/healthEvents/resources:
    post:
      description: Get a list of all the unresolved events in your account that belong
        to the supplied resource identifiers.
      operationId: listAllHealthEventsForResources
      parameters:
      - description: Limit the number of health events returned in the response. The
          number of health events returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceIdentities'
        description: Resource identifiers to request health events from.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHealthEventResponse'
          description: List of all the health events for the specified resources.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Health events for specific resources.
      tags:
      - healthEvents
  /v1/archive/{sourceId}/jobs:
    get:
      description: Get a list of all the ingestion jobs created on an Archive Source.
        The response is paginated with a default limit of 10 jobs per page.
      operationId: listArchiveJobsBySourceId
      parameters:
      - description: The identifier of an Archive Source.
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          example: 000000000606C009
          type: string
        style: simple
      - description: Limit the number of jobs returned in the response. The number
          of jobs returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArchiveJobsResponse'
          description: A paginated list of ingestion jobs for an Archive Source.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get ingestion jobs for an Archive Source.
      tags:
      - archiveManagement
    post:
      description: Create an ingestion job to pull data from your S3 bucket.
      operationId: createArchiveJob
      parameters:
      - description: The identifier of the Archive Source for which the job is to
          be added.
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          example: 000000000606C009
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArchiveJobRequest'
        description: The definition of the ingestion job to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveJob'
          description: The ingestion job was created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create an ingestion job.
      tags:
      - archiveManagement
  /v1/archive/{sourceId}/jobs/{id}:
    delete:
      description: Delete an ingestion job with the given identifier from the organization.
        The delete operation is only possible for jobs with a Succeeded or Failed
        status.
      operationId: deleteArchiveJob
      parameters:
      - description: The identifier of the Archive Source.
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the ingestion job to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The ingestion job was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete an ingestion job.
      tags:
      - archiveManagement
  /v1/archive/jobs/count:
    get:
      description: Get a list of all Archive Sources with the count and status of
        ingestion jobs.
      operationId: listArchiveJobsCountPerSource
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArchiveJobsCount'
          description: A list of Archive Sources with ingestion jobs.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List ingestion jobs for all Archive Sources.
      tags:
      - archiveManagement
  /v1/logSearches/estimatedUsage:
    post:
      description: |
        Gets the estimated volume of data that would be scanned for a given log search in the Infrequent data tier.
      operationId: getLogSearchEstimatedUsage
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSearchEstimatedUsageRequest'
        description: The definition of the log search estimated usage.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchEstimatedUsageDefinition'
          description: Log search information along with its estimated usage details.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Gets estimated usage details.
      tags:
      - logSearchesEstimatedUsage
  /v1/logSearches/estimatedUsageByTier:
    post:
      description: |
        Gets the estimated volume of data that would be scanned for a given log search per data tier.
      operationId: getLogSearchEstimatedUsageByTier
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSearchEstimatedUsageRequestV2'
        description: The definition of the log search estimated usage.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchEstimatedUsageByTierDefinition'
          description: Log search information along with its tier wise estimated usage
            details.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Gets Tier Wise estimated usage details.
      tags:
      - logSearchesEstimatedUsage
  /v1/logSearches/estimatedUsageByMeteringType:
    post:
      description: |
        Gets the estimated volume of data, per metering type,  that would be scanned for running a given log search for a given timerange.
      operationId: getLogSearchEstimatedUsageByMeteringType
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSearchEstimatedUsageRequestV3'
        description: The definition of the log search estimated usage.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchEstimatedUsageByMeteringTypeDefinition'
          description: Log search information along with its metering type wise estimated
            usage details.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Gets estimated usage details per metering type.
      tags:
      - logSearchesEstimatedUsage
  /v2/dashboards:
    get:
      description: List all dashboards under the Personal folder created by the user
        or under folders viewable by user.
      operationId: listDashboards
      parameters:
      - description: Limit the number of dashboard returned in the response. The number
          of dashboards returned may be less than the `limit`.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: whether to list all viewable dashboards under the folders
        example: createdByUser
        explode: true
        in: query
        name: mode
        required: false
        schema:
          example: createdByUser
          pattern: ^(createdByUser|allViewableByUser)$
          type: string
          x-pattern-message: Must be `createdByUser` or `allViewableByUser`
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDashboards'
          description: Paginated list of dashboards under the Personal folder created
            by the user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List all dashboards.
      tags:
      - dashboardManagement
    post:
      description: Creates a new dashboard.
      operationId: createDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardRequest'
        description: Information to create the new dashboard.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: The dashboard has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new dashboard.
      tags:
      - dashboardManagement
  /v2/dashboards/{id}:
    delete:
      description: Delete a dashboard by the given identifier.
      operationId: deleteDashboard
      parameters:
      - description: Identifier of the dashboard to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Dashboard was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a dashboard.
      tags:
      - dashboardManagement
    get:
      description: Get a dashboard by the given identifier.
      operationId: getDashboard
      parameters:
      - description: UUID of the dashboard to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: Dashboard object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a dashboard.
      tags:
      - dashboardManagement
    put:
      description: Update a dashboard by the given identifier.
      operationId: updateDashboard
      parameters:
      - description: Identifier of the dashboard to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardRequest'
        description: Information to update on the dashboard.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: The dashboard was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a dashboard.
      tags:
      - dashboardManagement
  /v2/dashboards/reportJobs:
    post:
      description: |
        Schedule an asynchronous job to generate a report from a template. All items in the template will be included unless specified. See template section for more details on individual templates. Reports can be generated in Pdf or Png format and exported in various methods (ex. direct download). You will get back an asynchronous job identifier on success. Use the [getAsyncReportGenerationStatus](#operation/getAsyncExportStatus) endpoint and the job identifier you got back in the response to track the status of an asynchronous report generation job.
      operationId: generateDashboardReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateReportRequest'
        description: Request for a report.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: Export job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start a report job
      tags:
      - dashboardManagement
  /v2/dashboards/reportJobs/{jobId}/status:
    get:
      description: "Get the status of an asynchronous report generation request for\
        \ the given job identifier. On success, use the [getReportGenerationResult](#operation/getAsyncReportGenerationResult)\
        \ endpoint to get the result of the report generation job."
      operationId: getAsyncReportGenerationStatus
      parameters:
      - description: The identifier of the asynchronous report generation job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the report generation job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get report generation job status
      tags:
      - dashboardManagement
  /v2/dashboards/reportJobs/{jobId}/result:
    get:
      description: Get the result of an asynchronous report generation request for
        the given job identifier.
      operationId: getAsyncReportGenerationResult
      parameters:
      - description: The identifier of the asynchronous report generation job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
          description: The result of export job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get report generation job result
      tags:
      - dashboardManagement
  /v2/dashboards/migrate:
    post:
      description: |
        Schedule an asynchronous job to migrate a list of legacy Dashboards to Dashboard(New). Once migration is finished, the migrated dashboards will be in the same folder as the corresponding legacy Dashboard.
        Note: This feature is in beta and may not support all existing features of legacy dashboards.
      operationId: migrateReportToDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardMigrationRequest'
        description: List of legacy dashboard content identifiers.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponseV2'
          description: Async job identifier to get the status and result of the dashboard
            migration job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Migrate Legacy Dashboards to Dashboards(New)
      tags:
      - dashboardManagement
  /v2/dashboards/migrate/preview:
    post:
      description: Get a preview of migrating Legacy Dashboards to Dashboard(New)
      operationId: previewMigrateReportToDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardMigrationRequest'
        description: List of content identifiers. Can be folders or classic dashboard.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationPreviewResponse'
          description: Preview of the dashboard migration job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Preview of Migrating Legacy Dashboards to Dashboards(New)
      tags:
      - dashboardManagement
  /v2/dashboards/migrate/{jobId}/status:
    get:
      description: "Get the status of an asynchronous Dashboard Migration job for\
        \ the given job identifier. If job succeeds, use Dashboard Migration Result\
        \ endpoint to see results of the migration."
      operationId: getDashboardMigrationStatus
      parameters:
      - description: The identifier of the asynchronous Dashboard Migration job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: Dashboard migration job status.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get dashboard migration status.
      tags:
      - dashboardManagement
  /v2/dashboards/migrate/{jobId}/result:
    get:
      description: Get the result of an asynchronous Dashboard Migration request for
        the given job identifier.
      operationId: getDashboardMigrationResult
      parameters:
      - description: The identifier of the asynchronous Dashboard Migration job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardMigrationResult'
          description: Dashboard migration job result.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get dashboard migration result.
      tags:
      - dashboardManagement
  /v1/dashboards/reportSchedules:
    get:
      description: List all dashboard report schedules created by the user.
      operationId: listReportSchedules
      parameters:
      - description: UUID of the dashboard that the report shedules are associated
          with.
        explode: true
        in: query
        name: dashboardId
        required: false
        schema:
          type: string
        style: form
      - description: Limit the number of dashboard report schedules returned in the
          response. The number of dashboard report schedules returned may be less
          than the `limit`.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportSchedules'
          description: Paginated list of dashboard report schedules created by the
            user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List all dashboard report schedules.
      tags:
      - dashboardManagement
    post:
      description: "Schedule dashboard report to send at a specific date and time.\
        \ The report should be sent as attachment or downloadable URL in one of the\
        \ following notification types: 'Email', 'AWSLambda', 'AzureFunctions', 'Datadog',\
        \ 'HipChat', 'Jira', 'NewRelic', 'Opsgenie', 'PagerDuty', 'Slack', 'MicrosoftTeams',\
        \ 'ServiceNow', 'SumoCloudSOAR' and 'Webhook'."
      operationId: createScheduleReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportScheduleRequest'
        description: Request for scheduling dashboard report.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportSchedule'
          description: Dashboard report has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Schedule dashboard report
      tags:
      - dashboardManagement
  /v1/dashboards/reportSchedules/{scheduleId}:
    delete:
      description: Delete the schedule of a scheduled dashboard report by the given
        identifier. The scheduled dashboard report will no longer be generated and
        sent.
      operationId: deleteReportSchedule
      parameters:
      - description: UUID of the dashboard report schedule to delete.
        explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Dashboard report schedule was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete dashboard report schedule.
      tags:
      - dashboardManagement
    get:
      description: Get the schedule of a scheduled dashboard report by the given identifier.
      operationId: getReportSchedule
      parameters:
      - description: Identifier of the dashboard report schedule to return.
        explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportSchedule'
          description: Dashboard report schedule object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get dashboard report schedule.
      tags:
      - dashboardManagement
    put:
      description: Update the schedule of a scheduled dashboard report by the given
        identifier.
      operationId: updateReportSchedule
      parameters:
      - description: identifier of the dashboard report schedule to update.
        explode: false
        in: path
        name: scheduleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportScheduleRequest'
        description: Request to update on the dashboard report schedule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportSchedule'
          description: The dashboard report schedule was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update dashboard report schedule.
      tags:
      - dashboardManagement
  /v2/metricsSearches:
    get:
      description: List all metrics search pages under the Personal folder created
        by the user or under folders viewable by user.
      operationId: ListMetricsSearches
      parameters:
      - description: Limit the number of metric searches returned in the response.
          The number of metric searches returned may be less than the `limit`.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: whether to list all viewable metric searches under the folders
        example: createdByUser
        explode: true
        in: query
        name: mode
        required: false
        schema:
          example: createdByUser
          pattern: ^(createdByUser|allViewableByUser)$
          type: string
          x-pattern-message: Must be `createdByUser` or `allViewableByUser`
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMetricsSearches'
          description: Paginated list of metrics search pages under the Personal folder
            created by the user or viewable by user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List all metrics search pages.
      tags:
      - metricsSearchesManagementV2
    post:
      description: Creates a new metrics search page.
      operationId: createMetricsSearches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsSearchRequest'
        description: Information to create the new metrics search page.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsSearchResponse'
          description: The metrics search page has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new metrics search page.
      tags:
      - metricsSearchesManagementV2
  /v2/metricsSearches/{id}:
    delete:
      description: Delete metrics search page by the given identifier.
      operationId: deleteMetricsSearches
      parameters:
      - description: Unique identifier of the metrics search page to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Metrics search page was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a metrics search page.
      tags:
      - metricsSearchesManagementV2
    get:
      description: Get a metrics search page by the given identifier.
      operationId: getMetricsSearches
      parameters:
      - description: Unique identifier of the metrics search page to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsSearchResponse'
          description: Metrics search page that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a metrics search page.
      tags:
      - metricsSearchesManagementV2
    put:
      description: Update a metrics search page by the given identifier.
      operationId: updateMetricsSearches
      parameters:
      - description: Unique identifier of the metrics search page to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsSearchRequest'
        description: Information to update the metrics search page.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsSearchResponse'
          description: The metrics search page was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a metrics search page.
      tags:
      - metricsSearchesManagementV2
  /v1/monitors/usageInfo:
    get:
      description: Get the current number and the allowed number of log and metrics
        monitors.
      operationId: getMonitorUsageInfo
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorUsageInfo'
          description: MonitorUsageInfo has been retrieved successfully.
      summary: Usage info of monitors.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/disable:
    put:
      description: Bulk disable monitors by the given identifiers.
      operationId: disableMonitorByIds
      parameters:
      - description: A comma-separated list of identifiers.
        example: "0000000000000001,0000000000000002,0000000000000003"
        explode: false
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableMonitorResponse'
          description: Disabled monitors
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable monitors.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/playbooks:
    get:
      description: List all playbooks available to run.
      operationId: getMonitorPlaybooks
      parameters:
      - description: A string value for playbook type.
        example: CSE
        explode: true
        in: query
        name: playbookType
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorPlaybooksList'
          description: MonitorPlaybooks have been retrieved successfully.
      summary: List all playbooks.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/playbooksDetails:
    get:
      description: Get the details of the playbooks with the specified identifiers.
      operationId: getPlaybooksDetails
      parameters:
      - description: A comma-separated list of playbook identifiers.
        example: "649074b5b3d402d6e80b0d1d,649074b7b3d402d6e80b0da1,649074b6b3d402d6e80b0d75"
        explode: false
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorPlaybooksList'
          description: MonitorPlaybooks have been retrieved successfully.
      summary: Get playbook details.
      tags:
      - monitorsLibraryManagement
  /v1/slos/sli:
    get:
      description: "Bulk fetch SLI values, error budget remaining and SLI computation\
        \ status for the current compliance period."
      operationId: sli
      parameters:
      - description: The identifiers of the SLOs.
        example: "000000000000000A,000000000000000B"
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToSliStatusMap'
          description: "A map containing current status, SLI value and error budget\
            \ remaining corresponding to each SLO id."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error getting SLI metrics for the SLO ids.
      summary: "Bulk fetch SLI values, error budget remaining and SLI computation\
        \ status for the current compliance period."
      tags:
      - slosLibraryManagement
  /v1/slos/usageInfo:
    get:
      description: Get the current number and the allowed number of log and metrics
        SLOs.
      operationId: getSloUsageInfo
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SloUsageInfo'
          description: SLO Usage Info has been retrieved successfully.
      summary: Usage info of SLOs.
      tags:
      - slosLibraryManagement
  /v1/passwordPolicy:
    get:
      description: Get the current password policy.
      operationId: getPasswordPolicy
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicy'
          description: The current password policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the current password policy.
      tags:
      - passwordPolicy
    put:
      description: Update the current password policy.
      operationId: setPasswordPolicy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicy'
          description: Password Policy set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Setting the password policy failed with an error.
      summary: Update password policy.
      tags:
      - passwordPolicy
  /v1/parsers/root:
    get:
      description: |
        Get the root folder in the library.
      operationId: getParsersLibraryRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryFolderResponse'
          description: Root folder in the library.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the root folder in the library.
      tags:
      - parsersLibraryManagement
  /v1/parsers:
    delete:
      description: |
        Bulk delete folders and parsers by the given identifiers from the library.
      operationId: parsersDeleteByIds
      parameters:
      - description: A comma-separated list of identifiers.
        explode: true
        in: query
        name: ids
        required: true
        schema:
          example: "0000000000000001,0000000000000002,0000000000000003"
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToParsersLibraryBaseResponseMap'
          description: A map between the deleted identifier and its meta data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Bulk delete folders and parsers.
      tags:
      - parsersLibraryManagement
    get:
      description: |
        Bulk read folders and parsers by the given identifiers from the library.
      operationId: parsersReadByIds
      parameters:
      - description: A comma-separated list of identifiers.
        explode: true
        in: query
        name: ids
        required: true
        schema:
          example: "0000000000000001,0000000000000002,0000000000000003"
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToParsersLibraryBaseResponseMap'
          description: A map between an identifier and its definition (folder or parser).
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Bulk read folders and parsers.
      tags:
      - parsersLibraryManagement
    post:
      description: |
        Create a folder or parser.
      operationId: parsersCreate
      parameters:
      - description: Identifier of the parent folder in which to create the folder
          or parser.
        explode: true
        in: query
        name: parentId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParsersLibraryBase'
        description: The folder or parser to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Newly created folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Create a folder or parser.
      tags:
      - parsersLibraryManagement
  /v1/parsers/{id}:
    delete:
      description: |
        Delete a folder or parser.
      operationId: parsersDeleteById
      parameters:
      - description: Identifier of the folder or parser to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The folder or parser was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Delete a folder or parser.
      tags:
      - parsersLibraryManagement
    get:
      description: |
        Read a folder or parser.
      operationId: parsersReadById
      parameters:
      - description: Identifier of the folder or parser to read.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Requested folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Read a folder or parser.
      tags:
      - parsersLibraryManagement
    put:
      description: |
        Update a folder or parser.
      operationId: parsersUpdateById
      parameters:
      - description: Identifier of the folder or parser to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParsersLibraryBaseUpdate'
        description: |
          The folder or parser to be updated. Content version must match its latest version number in the library. Any staled version will not be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Updated folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Update a folder or parser.
      tags:
      - parsersLibraryManagement
  /v1/parsers/{id}/path:
    get:
      description: |
        Get full path of folder or parser.
      operationId: getParsersFullPath
      parameters:
      - description: Identifier of the folder or parser.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
          description: Full path of the folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get full path of folder or parser.
      tags:
      - parsersLibraryManagement
  /v1/parsers/{id}/lock:
    post:
      description: |
        Locking requires the `LockParsers` capability. When an object is locked, it can't be moved or deleted and only the local fields can be modified. Locking recursively locks all of the objects children.
      operationId: parsersLockById
      parameters:
      - description: The id of the folder or parser that needs to be locked.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Updated folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Lock a folder or a parser.
      tags:
      - parsersLibraryManagement
  /v1/parsers/{id}/unlock:
    post:
      description: |
        Unlocking requires the `LockParsers` capability. It is only possible to unlock the highest locked object in a tree of locked objects. Unlocking recursively unlocks all of the objects children.
      operationId: parsersUnlockById
      parameters:
      - description: The id of the folder or parser that needs to be unlocked.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Updated folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Unlock a folder or a parser.
      tags:
      - parsersLibraryManagement
  /v1/parsers/{id}/move:
    post:
      description: |
        Move a folder or parser.
      operationId: parsersMove
      parameters:
      - description: Identifier of the folder or parser to move.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the parent folder to move the folder or parser
          to.
        explode: true
        in: query
        name: parentId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Moved folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Move a folder or parser.
      tags:
      - parsersLibraryManagement
  /v1/parsers/{id}/copy:
    post:
      description: |
        Copy a folder or parser.
      operationId: parsersCopy
      parameters:
      - description: Identifier of the folder or parser to copy.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentCopyParams'
        description: |
          Fields include:
            1) Identifier of the parent folder to copy to.
            2) Optionally provide a new name.
            3) Optionally provide a new description.
            4) Optionally set to true if you want to copy and preserved the locked status. Requires `LockParsers` capability.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Newly copied folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Copy a folder or parser.
      tags:
      - parsersLibraryManagement
  /v1/parsers/{id}/export:
    get:
      description: Export a folder or parser.
      operationId: parsersExportItem
      parameters:
      - description: Identifier of the folder or parser to export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Set this to true if you want to export an object and preserve the locked status.
        explode: true
        in: query
        name: preserveLock
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryExportBase'
          description: Exported folder or parser
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Export a folder or parser.
      tags:
      - parsersLibraryManagement
  /v1/parsers/{parentId}/import:
    post:
      description: |
        Import a folder or parser
      operationId: parsersImportItem
      parameters:
      - description: Identifier of the parent folder in which to import the folder
          or parser.
        explode: false
        in: path
        name: parentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParsersLibraryExportBase'
        description: |
          The folder or parser to be imported.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Newly imported folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Import a folder or parser
      tags:
      - parsersLibraryManagement
  /v1/parsers/path:
    get:
      description: |
        Read a folder or parser by its path.
      operationId: parsersGetByPath
      parameters:
      - description: The path of the folder or parser.
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Requested folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Read a folder or parser by its path.
      tags:
      - parsersLibraryManagement
  /v1/parsers/search:
    get:
      description: Search for a folder or parser in the cloud SIEM parsers library
        structure.
      operationId: parsersSearch
      parameters:
      - description: |-
          The search query to find folder or parsers. Below is the list of different filters with examples:
            - **createdBy** : Filter by the user's identifier who created the content. Example: `createdBy:000000000000968B`.
            - **createdBefore** : Filter by the content objects created before the given timestamp(in milliseconds). Example: `createdBefore:1457997222`.
            - **createdAfter** : Filter by the content objects created after the given timestamp(in milliseconds). Example: `createdAfter:1457997111`.
            - **modifiedBefore** : Filter by the content objects modified before the given timestamp(in milliseconds). Example: `modifiedBefore:1457997222`.
            - **modifiedAfter** : Filter by the content objects modified after the given timestamp(in milliseconds). Example: `modifiedAfter:1457997111`.
            - **type** : Filter by the type of the content object. Example: `type:folder`.
          You can also use multiple filters in one query. For example to search for all content objects created by user with identifier 000000000000968B with creation timestamp after 1457997222 containing the text Test, the query would look like:
            `createdBy:000000000000968B createdAfter:1457997222 Test`
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: createdBy:000000000000968B Test
          type: string
        style: form
      - description: Maximum number of items you want in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          example: 10
          format: int32
          type: integer
        style: form
      - description: The position or row from where to start the search operation.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 5
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListParsersLibraryItemWithPath'
          description: List of folders and parsers matching the search query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Search for folders or parsers.
      tags:
      - parsersLibraryManagement
  /v1/system/parsers/{id}/lock:
    post:
      description: |
        Locking requires the `LockParsers` capability. When an object is locked, it can't be moved or deleted and only the local fields can be modified. Locking recursively locks all of the objects children.
      operationId: systemParsersLockById
      parameters:
      - description: The id of the folder or parser that needs to be locked.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Updated folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Lock a folder or a parser.
      tags:
      - parsersLibraryManagement
  /v1/system/parsers/{id}/unlock:
    post:
      description: |
        Unlocking requires the `LockParsers` capability. It is only possible to unlock the highest locked object in a tree of locked objects. Unlocking recursively unlocks all of the objects children.
      operationId: systemParsersUnlockById
      parameters:
      - description: The id of the folder or parser that needs to be unlocked.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsersLibraryBaseResponse'
          description: Updated folder or parser.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Unlock a folder or a parser.
      tags:
      - parsersLibraryManagement
  /v1/metricsQueries:
    post:
      description: "Execute multiple metrics queries. Limits of this API are described\
        \ in [Metrics Query Error Messages](https://help.sumologic.com/docs/metrics/metrics-queries/metric-query-error-messages/).\
        \ For general information about Metrics Queries see [Metrics Queries](https://help.sumologic.com/docs/metrics/metrics-queries/)."
      operationId: runMetricsQueries
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQueryRequest'
        description: The parameters for the metrics query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQueryResponse'
          description: A set of time series grouped by the query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Run metrics queries
      tags:
      - metricsQuery
  /v1/tracing/tracequery:
    post:
      description: "Execute a trace search query and get the id to fetch its status\
        \ and results. Use the [Trace Query Status](#operation/getTraceQueryStatus)\
        \ endpoint to check a query status. When the query has been completed, use\
        \ the [Trace Query Result](#operation/getTraceQueryResult) endpoint to get\
        \ the result of the asynchronous query."
      operationId: createTraceQuery
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncTraceQueryRequest'
        description: Query parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTraceQueryResponse'
          description: Query execution result.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Run a trace search query asynchronously.
      tags:
      - traces
  /v1/tracing/tracequery/{queryId}:
    delete:
      description: Cancel a currently processed trace search query with the given
        id.
      operationId: cancelTraceQuery
      parameters:
      - description: Identifier of the query to cancel.
        explode: false
        in: path
        name: queryId
        required: true
        schema:
          example: 798a13dc1ceeb19a
          type: string
        style: simple
      responses:
        "204":
          description: Query canceled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Cancel a trace search query.
      tags:
      - traces
  /v1/tracing/tracequery/{queryId}/status:
    get:
      description: "Get a status of a trace query with the given id. When the query\
        \ has been completed, use the [Trace Query Result](#operation/getTraceQueryResult)\
        \ endpoint to get the result of the asynchronous query."
      operationId: getTraceQueryStatus
      parameters:
      - description: Identifier of the executed query.
        explode: false
        in: path
        name: queryId
        required: true
        schema:
          example: 195038749d21ad109242c95cbbc8709d
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceQueryStatusResponse'
          description: Status of the given trace search query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a trace search query status.
      tags:
      - traces
  /v1/tracing/tracequery/{queryId}/rows/{rowId}/traces:
    get:
      description: Get a list of traces matching a query with the specified id. The
        response is paginated with a default limit of 100 traces per page.
      operationId: getTraceQueryResult
      parameters:
      - description: Identifier of the executed query.
        explode: false
        in: path
        name: queryId
        required: true
        schema:
          example: 195038749d21ad109242c95cbbc8709d
          type: string
        style: simple
      - description: Identifier of the query row.
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          example: A
          type: string
        style: simple
      - description: Limit of the number of traces returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceQueryResultResponse'
          description: Details about the given span query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get results of a trace search query.
      tags:
      - traces
  /v1/tracing/metrics:
    get:
      description: Get a list of available trace metrics that can be used in trace
        search queries.
      operationId: getMetrics
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceMetricsResponse'
          description: List of available metrics.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get trace search query metrics.
      tags:
      - traces
  /v1/tracing/tracequery/fields:
    get:
      description: Get a list of available fields which can be used in trace search
        queries.
      operationId: getTraceQueryFields
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceFieldsResponse'
          description: List of available fields.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get filter fields for trace search queries.
      tags:
      - traces
  /v1/tracing/tracequery/fields/{field}/values:
    get:
      description: Get a list of available values for the given trace search query
        filter field. Not all fields support value listing. The response is paginated
        with a default limit of 10 values per page.
      operationId: getTraceQueryFieldValues
      parameters:
      - description: Field identifier.
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      - description: Search filter to apply on the values to be returned. Only values
          containing the search query term will be returned.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to fetch.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: "Indicates the kind of a field. Possible values: `SpanAttribute`,\
          \ `SpanEventAttribute`."
        explode: true
        in: query
        name: fieldType
        required: false
        schema:
          example: SpanEventAttribute
          pattern: ^(SpanAttribute|SpanEventAttribute)$
          type: string
          x-pattern-message: "Should be one of: `SpanAttribute`, `SpanEventAttribute`."
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceFieldValuesResponse'
          description: List of available filter values for the given field.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get trace search query filter field values.
      tags:
      - traces
  /v1/tracing/traces/{traceId}:
    get:
      description: Get details of a trace with the given identifier.
      operationId: getTrace
      parameters:
      - description: Identifier of the trace to get the details.
        explode: false
        in: path
        name: traceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceDetail'
          description: Details of the trace with the given identifier.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get trace details.
      tags:
      - traces
  /v1/tracing/traces/{traceId}/exists:
    get:
      description: Check if the trace with the given identifier exists.
      operationId: traceExists
      parameters:
      - description: Identifier of the trace to check.
        explode: false
        in: path
        name: traceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceExistsResponse'
          description: The response contains the information whether the trace exists
            with other optional attributes.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Check if the trace exists.
      tags:
      - traces
  /v1/tracing/traces/{traceId}/spans:
    get:
      description: Get a list of spans for the given trace. The response is paginated
        with a default limit of 100 spans per page.
      operationId: getSpans
      parameters:
      - description: Identifier of the trace to get the spans.
        explode: false
        in: path
        name: traceId
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of results to fetch.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceSpansResponse'
          description: List of spans for the given trace.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of trace spans.
      tags:
      - traces
  /v1/tracing/traces/{traceId}/traceEvents:
    get:
      description: Gets a list of the events (without their attributes) attached to
        each span in a given trace. The response is paginated with a default limit
        of 100 spans per page.
      operationId: getTraceLightEvents
      parameters:
      - description: Identifier of the trace for which span events will be returned.
        explode: false
        in: path
        name: traceId
        required: true
        schema:
          example: 695068749d21cd104222a95cabc4707c
          maxLength: 32
          minLength: 16
          type: string
        style: simple
      - description: The maximum number of spans with events returned by a single
          query.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceLightEventsResponse'
          description: Map of spans to events relations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of events (without their attributes) per span for a trace.
      tags:
      - traces
  /v1/tracing/traces/{traceId}/criticalPath:
    get:
      description: Get a list of span segments composing the critical path of the
        trace. A span segment represents the processing time that was consumed within
        the span itself and does not incorporate the processing time of its children.
        The critical path is the sequence of span segments that contribute to the
        total trace duration. An increase of the processing time of any segment from
        the critical path would result in an increase of the total trace processing
        time.
      operationId: getCriticalPath
      parameters:
      - description: Identifier of the trace.
        explode: false
        in: path
        name: traceId
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of results to fetch.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalPathResponse'
          description: List of span segments composing the critical path.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a critical path of a trace.
      tags:
      - traces
  /v1/tracing/traces/{traceId}/criticalPath/breakdown/service:
    get:
      description: Get a critical path breakdown by services of the spans contributing
        to the critical path of a trace with the given identifier.
      operationId: getCriticalPathServiceBreakdown
      parameters:
      - description: Identifier of the trace.
        explode: false
        in: path
        name: traceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalPathServiceBreakdownResponse'
          description: List of elements representing the critical path service breakdown.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a critical path service breakdown of a trace.
      tags:
      - traces
  /v1/tracing/traces/{traceId}/spans/{spanId}:
    get:
      description: Get details of a span with the given identifier.
      operationId: getSpan
      parameters:
      - description: Identifier of the trace the span belongs to.
        explode: false
        in: path
        name: traceId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the span to get the details.
        explode: false
        in: path
        name: spanId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceSpanDetail'
          description: Details of the span with the given identifier.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get span details.
      tags:
      - traces
  /v1/tracing/traces/{traceId}/spans/{spanId}/billingInfo:
    get:
      description: Get the billing information of the span.
      operationId: getSpanBillingInfo
      parameters:
      - description: Identifier of the trace the span belongs to.
        explode: false
        in: path
        name: traceId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the span to get the billing info.
        explode: false
        in: path
        name: spanId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceSpanBillingInfo'
          description: Billing information of the span with the given identifier.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get span billing details.
      tags:
      - traces
  /v1/tracing/spanquery:
    post:
      description: "Execute a span analytics query and get the id to fetch its status\
        \ and results. Use the [Span Query Status](#operation/getSpanQueryStatus)\
        \ endpoint to check a query status. When the query has been completed, use\
        \ the [Span Query Result](#operation/getSpanQueryResult) endpoint to get the\
        \ result of the asynchronous query."
      operationId: createSpanQuery
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpanQueryRequest'
        description: Query parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpanQueryResponse'
          description: Query execution result.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Run a span analytics query asynchronously.
      tags:
      - spanAnalytics
  /v1/tracing/spanquery/{queryId}:
    delete:
      description: Cancel a currently processed span search query with the given id.
      operationId: cancelSpanQuery
      parameters:
      - description: Identifier of the query to cancel.
        explode: false
        in: path
        name: queryId
        required: true
        schema:
          example: 195038749d21ad109242c95cbbc8709d
          type: string
        style: simple
      responses:
        "204":
          description: Query canceled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Cancel a span analytics query.
      tags:
      - spanAnalytics
  /v1/tracing/spanquery/{queryId}/status:
    get:
      description: "Get a status of a span analytics query with the given id. When\
        \ the query has been completed, use the [Span Query Result](#operation/getSpanQueryResult)\
        \ endpoint to get the result of the asynchronous query."
      operationId: getSpanQueryStatus
      parameters:
      - description: Identifier of the executed query.
        explode: false
        in: path
        name: queryId
        required: true
        schema:
          example: 195038749d21ad109242c95cbbc8709d
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpanQueryStatusResponse'
          description: Details about the given span query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a span analytics query status.
      tags:
      - spanAnalytics
  /v1/tracing/spanquery/{queryId}/pause:
    put:
      description: Pause a currently processed span search query with the given id.
      operationId: pauseSpanQuery
      parameters:
      - description: Identifier of the query to pause.
        explode: false
        in: path
        name: queryId
        required: true
        schema:
          example: 195038749d21ad109242c95cbbc8709d
          type: string
        style: simple
      responses:
        "204":
          description: Query paused successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Pause a span analytics query.
      tags:
      - spanAnalytics
  /v1/tracing/spanquery/{queryId}/resume:
    put:
      description: Resume a previously paused span search query with the given id.
      operationId: resumeSpanQuery
      parameters:
      - description: Identifier of the query to resume.
        explode: false
        in: path
        name: queryId
        required: true
        schema:
          example: 195038749d21ad109242c95cbbc8709d
          type: string
        style: simple
      responses:
        "204":
          description: Query resumed successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Resume a span analytics query.
      tags:
      - spanAnalytics
  /v1/tracing/spanquery/{queryId}/rows/{rowId}/spans:
    get:
      description: Get a list of spans matching a query with the specified id. The
        response is paginated with a default limit of 100 spans per page.
      operationId: getSpanQueryResult
      parameters:
      - description: Identifier of the executed query.
        explode: false
        in: path
        name: queryId
        required: true
        schema:
          example: 195038749d21ad109242c95cbbc8709d
          type: string
        style: simple
      - description: Identifier of the query row.
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          example: A
          type: string
        style: simple
      - description: Limit of the number of spans returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpanQueryResultSpansResponse'
          description: Details about the given span query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get results of a span analytics query.
      tags:
      - spanAnalytics
  /v1/tracing/spanquery/{queryId}/rows/{rowId}/facets:
    get:
      description: Get a list of facets of a span analytics query with the specified
        id.
      operationId: getSpanQueryFacets
      parameters:
      - description: Identifier of the executed query.
        explode: false
        in: path
        name: queryId
        required: true
        schema:
          example: 195038749d21ad109242c95cbbc8709d
          type: string
        style: simple
      - description: Identifier of the query row.
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          example: A
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpanQueryResultFacetsResponse'
          description: The list of facets from the executed query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of facets of a span analytics query.
      tags:
      - spanAnalytics
  /v1/tracing/spanquery/{queryId}/aggregates:
    get:
      description: Get span aggregation results for an aggregated span analytics query
        with the specified id. Only aggregated rows being part of the executed query
        will have matching results in the response of this endpoint.
      operationId: getSpanQueryAggregates
      parameters:
      - description: Identifier of the executed query.
        explode: false
        in: path
        name: queryId
        required: true
        schema:
          example: 195038749d21ad109242c95cbbc8709d
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpanQueryAggregateResponse'
          description: The aggregation result of the executed query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get span analytics query aggregated results.
      tags:
      - spanAnalytics
  /v1/tracing/spanquery/fields:
    get:
      description: Get a list of available fields which can be used in span analytics
        queries.
      operationId: getSpanQueryFields
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpanQueryFieldsResponse'
          description: List of available fields.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get filter fields for span analytics queries.
      tags:
      - spanAnalytics
  /v1/tracing/spanquery/fields/{field}/values:
    get:
      description: Get a list of available values for the given span analytics query
        filter field. Not all fields support value listing. The response is paginated
        with a default limit of 10 field values per page.
      operationId: getSpanQueryFieldValues
      parameters:
      - description: Field identifier.
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      - description: Search filter to apply on the values to be returned. Only values
          containing the search query term will be returned.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to fetch.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceFieldValuesResponse'
          description: List of available filter values for the given field.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get span analytics query filter field values.
      tags:
      - spanAnalytics
  /v1/tracing/serviceMap:
    get:
      description: Run a search request to get a map of services and connections between
        them.
      operationId: getServiceMap
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceMapResponse'
          description: List of nodes and list of edges.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a service map.
      tags:
      - serviceMap
  /v1/threatIntel/datastore/db:
    delete:
      description: Removes the entire database and all indicators associated with
        this tenant
      operationId: removeDatastore
      responses:
        "204":
          description: Removing the indicator database succeeded
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error
      summary: Remove the threat intel indicators DB
      tags:
      - threatIntelIngest
    get:
      description: "Get threat intel indicators DB information, such as storage utilization\
        \ and indicator counts"
      operationId: datastoreGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatastoreStatusResponse'
          description: Threat intel ingest DB information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get threat intel indicators DB information
      tags:
      - threatIntelIngest
  /v1/threatIntel/datastore/retentionPeriod:
    get:
      description: Get the threat intel indicators store retention period in terms
        of days.
      operationId: retentionPeriod
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatastoreRetentionPeriod'
          description: Threat intel indicators store retention period.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get threat intel indicators store retention period in terms of days.
      tags:
      - threatIntelIngest
    post:
      description: Sets the threat intel indicators store retention period in terms
        of days.
      operationId: setRetentionPeriod
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatastoreRetentionPeriod'
        description: The threat intel indicators store retention period in terms of
          days.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatastoreRetentionPeriod'
          description: Threat intel indicators store retention period.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set the threat intel indicators store retention period in terms of
        days.
      tags:
      - threatIntelIngest
  /v1/threatIntel/datastore/indicators/normalized:
    post:
      description: Uploads a list indicators in a Sumo normalized format.
      operationId: uploadNormalizedIndicators
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadNormalizedIndicatorRequest'
        description: The list of normalized threat intel indicators to upload.
        required: true
      responses:
        "204":
          description: Normalized indicators successfully uploaded.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Uploads indicators in a Sumo normalized format.
      tags:
      - threatIntelIngestProducer
  /v1/threatIntel/datastore/indicators/stix:
    post:
      description: Uploads a list indicators in in a STIX 2.x json format.
      operationId: uploadStixIndicators
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadStixIndicatorsRequest'
        description: Upload stix indicators request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadStixIndicatorsResponse'
          description: Stix indicators successfully uploaded.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Uploads indicators in a STIX 2.x json format.
      tags:
      - threatIntelIngestProducer
  /v1/threatIntel/datastore/indicators:
    delete:
      description: Removes indicators by specifying a list of indicator IDs
      operationId: removeIndicators
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveIndicatorsRequest'
        description: The list of indicator IDs to remove
        required: true
      responses:
        "204":
          description: Indicators successfully removed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Removes indicators by their IDS
      tags:
      - threatIntelIngestProducer
  /v1/threatIntel/datastore/dataSource/{dataSourceName}:
    put:
      description: Updates source properties
      operationId: dataSourcePropertiesUpdate
      parameters:
      - description: Source name
        explode: false
        in: path
        name: dataSourceName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceProperties'
        description: Source properties
        required: true
      responses:
        "204":
          description: Data source properties successfuly updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Updates source properties
      tags:
      - threatIntelIngest
  /v1/otCollectors:
    post:
      description: "Given different filter, search and sort conditions, get list of\
        \ otCollectors."
      operationId: getPaginatedOTCollectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginatedOTCollectorsRequest'
        description: pagination request details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOTCollectorsResponse'
          description: A list of paginated OT Collectors.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get paginated list of OT Collectors
      tags:
      - otCollectorManagementExternal
  /v1/otCollectors/{id}:
    delete:
      description: Delete an OT Collector with the given identifier.
      operationId: deleteOTCollector
      parameters:
      - description: Identifier of the OT Collector to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The OT Collector was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete an OT Collector.
      tags:
      - otCollectorManagementExternal
    get:
      description: Get OT Collector by ID.
      operationId: getOTCollector
      parameters:
      - description: Identifier of the OT Collector to get.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTCollector'
          description: An OT Collector by identifier.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get OT Collector by ID.
      tags:
      - otCollectorManagementExternal
  /v1/otCollectors/totalCount:
    get:
      description: Get total count of OT Collectors for a customer.
      operationId: getOTCollectorsCount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTCollectorCountResponse'
          description: Total count of OT Collectors.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a count of OT Collectors.
      tags:
      - otCollectorManagementExternal
  /v1/otCollectors/otCollectorsByName:
    get:
      description: "provided list of names, get all OT Collectors with metadata."
      operationId: getOTCollectorsByNames
      parameters:
      - description: A required parameter that accepts a list of names for which we
          need to collect all metadata.
        explode: true
        in: query
        name: names
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTCollectorListResponse'
          description: A list of OT Collectors.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get OT Collectors by name.
      tags:
      - otCollectorManagementExternal
  /v1/otCollectors/offline:
    delete:
      description: Delete all offline OT Collectors for a given customer.
      operationId: deleteOfflineOTCollectors
      responses:
        "204":
          description: All offline OT Collectors of the given customer deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete all Offline OT Collectors
      tags:
      - otCollectorManagementExternal
  /v1/sourceTemplate:
    get:
      description: Get a list of Source Template.
      operationId: getSourceTemplates
      parameters:
      - description: "A boolean parameter to get all, including disabled source templates."
        explode: true
        in: query
        name: showDisabled
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTemplateListResponse'
          description: A list of Source Template.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Return all source templates of a customer.
      tags:
      - sourceTemplateManagementExternal
    post:
      description: Create source Template.
      operationId: createSourceTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceTemplateRequest'
        description: Create source Template Details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTemplateDefinition'
          description: Create source Template Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create source Template.
      tags:
      - sourceTemplateManagementExternal
  /v1/sourceTemplate/{id}:
    delete:
      description: Delete a Source Template with the given identifier.
      operationId: deleteSourceTemplate
      parameters:
      - description: Identifier of the Source Template to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The Source Template was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a Source Template.
      tags:
      - sourceTemplateManagementExternal
    get:
      description: Get a Source Template with the given identifier.
      operationId: getSourceTemplate
      parameters:
      - description: Identifier of the Source Template to get.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTemplateDefinition'
          description: get source Template Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: get a Source Template by Id.
      tags:
      - sourceTemplateManagementExternal
    post:
      description: Update a Source Template with the given identifier.
      operationId: updateSourceTemplate
      parameters:
      - description: Identifier of the Source Template to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceTemplateRequest'
        description: Source Template request details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTemplateDefinition'
          description: update source Template Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update source Template.
      tags:
      - sourceTemplateManagementExternal
  /v1/upgrade/sourceTemplate/{id}:
    post:
      description: Upgrade a Source Template with the given identifier.
      operationId: upgradeSourceTemplate
      parameters:
      - description: Identifier of the Source Template to upgrade.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceTemplateUpgradeRequest'
        description: Source Template upgrade request details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTemplateDefinition'
          description: upgrade source Template Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Upgrade source Template.
      tags:
      - sourceTemplateManagementExternal
  /v1/sourceTemplate/getLinkedSourceTemplatesImpact:
    post:
      description: "Given the set of tags user wants to update, display the list of\
        \ source Templates that will be linked/unlinked to the otCollector."
      operationId: getLinkedSourceTemplatesUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedSourceTemplatesUpdateRequest'
        description: request body containing otCollector id and set of tags.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedSourceTemplatesUpdateResponse'
          description: A list of source templates whose linking to the otCollector
            will be impacted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get linked source templates update based on the ot-collector tags user
        is wants to update.
      tags:
      - sourceTemplateManagementExternal
  /v1/sourceTemplate/{id}/status:
    put:
      description: Update the status (enable or disable) of a source template.
      operationId: updateSourceTemplateStatus
      parameters:
      - description: Identifier of the source template to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceTemplateStatusUpdateRequest'
        description: Status of source template
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTemplateDefinition'
          description: Update source template status response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update status of source template
      tags:
      - sourceTemplateManagementExternal
  /v1/schemaIdentitiesGrouped:
    get:
      description: Get a summary of all available schema bases grouped by type and
        their versions sorted by latest.
      operationId: getSchemaIdentitiesGrouped
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemaBaseTypeToVersionsResponse'
          description: A summary of all available schema bases grouped by type and
            their versions sorted by latest.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get schema base identities grouped by type and sorted by version.
      tags:
      - schemaBaseManagement
  /v1/budgets:
    get:
      description: Get budgets
      operationId: getBudgets
      parameters:
      - description: Limit the number of budgets returned in the response. The number
          of budgets returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanBudgetList'
          description: Budgets assigned to the org.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get budgets
      tags:
      - budgetManagement
    post:
      description: Create a budget definition
      operationId: createBudget
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanBudgetDefinition'
        description: Information about the new budget.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanBudget'
          description: The created budget.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Creates a budget definition
      tags:
      - budgetManagement
  /v1/budgets/{budgetId}:
    delete:
      description: Delete budget
      operationId: deleteBudget
      parameters:
      - description: The id of the budget.
        explode: false
        in: path
        name: budgetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The budget was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete budget
      tags:
      - budgetManagement
    get:
      description: Get budget
      operationId: getBudget
      parameters:
      - description: The id of the budget.
        explode: false
        in: path
        name: budgetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanBudget'
          description: The requested budget.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get budget
      tags:
      - budgetManagement
    put:
      description: Update budget
      operationId: updateBudget
      parameters:
      - description: The id of the budget.
        explode: false
        in: path
        name: budgetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanBudgetDefinition'
        description: Updated budget.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanBudget'
          description: The updated budget.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update budget
      tags:
      - budgetManagement
  /v1/budgets/usage:
    get:
      description: Get budget usages
      operationId: getBudgetUsages
      parameters:
      - description: Limit the number of budget usages returned in the response. The
          number of budget usages returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanBudgetUsageList'
          description: Scan budget usages.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get budget usages
      tags:
      - budgetManagement
  /v1/budgets/{budgetId}/usage:
    get:
      description: Get budget usage
      operationId: getBudgetUsage
      parameters:
      - description: The id of the budget.
        explode: false
        in: path
        name: budgetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanBudgetUsage'
          description: The requested budget usage.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get budget usage
      tags:
      - budgetManagement
  /v1/monitors:
    delete:
      description: Bulk delete a monitor or folder by the given identifiers in the
        monitors library.
      operationId: monitorsDeleteByIds
      parameters:
      - description: A comma-separated list of identifiers.
        example: "0000000000000001,0000000000000002,0000000000000003"
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToMonitorsLibraryBaseResponseMap'
          description: A map between the deleted identifier and its metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Bulk delete a monitor or folder.
      tags:
      - monitorsLibraryManagement
    get:
      description: Bulk read a monitor or folder by the given identifiers from the
        monitors library.
      operationId: monitorsReadByIds
      parameters:
      - description: A comma-separated list of identifiers.
        example: "0000000000000001,0000000000000002,0000000000000003"
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: a boolean parameter to control skipping fetching children of
          requested folder(s)
        explode: true
        in: query
        name: skipChildren
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToMonitorsLibraryBaseResponseMap'
          description: A map between an identifier and its definition (monitor or
            folder).
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Bulk read a monitor or folder.
      tags:
      - monitorsLibraryManagement
    post:
      description: Create a monitor or folder in the monitors library.
      operationId: monitorsCreate
      parameters:
      - description: Identifier of the parent folder in which to create the monitor
          or folder.
        explode: true
        in: query
        name: parentId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorsLibraryBase'
        description: The monitor or folder to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: The monitor or folder was created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Create a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/root:
    get:
      description: Get the root folder in the monitors library.
      operationId: getMonitorsLibraryRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryFolderResponse'
          description: Root folder of the monitors library.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the root monitors folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/path:
    get:
      description: Read a monitor or folder by its path in the monitors library structure.
      operationId: monitorsGetByPath
      parameters:
      - description: The path of the monitor or folder.
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: Requested monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Read a monitor or folder by its path.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/search:
    get:
      description: Search for a monitor or folder in the monitors library structure.
      operationId: monitorsSearch
      parameters:
      - description: |-
          The search query to find monitor or folder. Below is the list of different filters with examples:
            - **createdBy** : Filter by the user's identifier who created the content. Example: `createdBy:000000000000968B`.
            - **createdBefore** : Filter by the content objects created before the given timestamp(in milliseconds). Example: `createdBefore:1457997222`.
            - **createdAfter** : Filter by the content objects created after the given timestamp(in milliseconds). Example: `createdAfter:1457997111`.
            - **modifiedBefore** : Filter by the content objects modified before the given timestamp(in milliseconds). Example: `modifiedBefore:1457997222`.
            - **modifiedAfter** : Filter by the content objects modified after the given timestamp(in milliseconds). Example: `modifiedAfter:1457997111`.
            - **type** : Filter by the type of the content object. Example: `type:folder`.
            - **monitorStatus** : Filter by the status of the monitor: Normal, Critical, Warning, MissingData, Disabled, AllTriggered. Example: `monitorStatus:Normal`.

          You can also use multiple filters in one query. For example to search for all content objects created by user with identifier 000000000000968B with creation timestamp after 1457997222 containing the text Test, the query would look like:

            `createdBy:000000000000968B createdAfter:1457997222 Test`
        example: createdBy:000000000000968B Test
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - description: Maximum number of items you want in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          maximum: 5000
          type: integer
        style: form
      - description: The position or row from where to start the search operation.
        example: 5
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: a boolean parameter to control skipping fetching children of
          requested folder(s)
        explode: true
        in: query
        name: skipChildren
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMonitorsLibraryItemWithPath'
          description: List of folders and monitors matching the search query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Search for a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}:
    delete:
      description: Delete a monitor or folder from the monitors library.
      operationId: monitorsDeleteById
      parameters:
      - description: Identifier of the monitor or folder to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The monitor or folder was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Delete a monitor or folder.
      tags:
      - monitorsLibraryManagement
    get:
      description: Get a monitor or folder from the monitors library.
      operationId: monitorsReadById
      parameters:
      - description: Identifier of the monitor or folder to read.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: Requested monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a monitor or folder.
      tags:
      - monitorsLibraryManagement
    put:
      description: Update a monitor or folder in the monitors library.
      operationId: monitorsUpdateById
      parameters:
      - description: Identifier of the monitor or folder to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorsLibraryBaseUpdate'
        description: The monitor or folder to update. The content version must match
          its latest version number in the monitors library. If the version does not
          match it will not be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: The monitor or folder was updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Update a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}/path:
    get:
      description: Get the full path of the monitor or folder in the monitors library.
      operationId: getMonitorsFullPath
      parameters:
      - description: Identifier of the monitor or folder.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
          description: Full path of the monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the path of a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}/move:
    post:
      description: Move a monitor or folder to a different location in the monitors
        library.
      operationId: monitorsMove
      parameters:
      - description: Identifier of the monitor or folder to move.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the parent folder to move the monitor or folder
          to.
        explode: true
        in: query
        name: parentId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: Moved monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Move a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}/copy:
    post:
      description: Copy a monitor or folder in the monitors library.
      operationId: monitorsCopy
      parameters:
      - description: Identifier of the monitor or folder to copy.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentCopyParams'
        description: |-
          Fields include:
            1) Identifier of the parent folder to copy to.
            2) Optionally provide a new name.
            3) Optionally provide a new description.
            4) Optionally set to true if you want to copy and preserve the locked status. Requires `LockMonitors` capability.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: The monitor or folder was copied.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Copy a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}/export:
    get:
      description: "Export a monitor or folder. If the given identifier is a folder,\
        \ everything under the folder is exported recursively with folder as the root."
      operationId: monitorsExportItem
      parameters:
      - description: Identifier of the monitor or folder to export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseExport'
          description: Exported monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Export a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{parentId}/import:
    post:
      description: Import a monitor or folder.
      operationId: monitorsImportItem
      parameters:
      - description: Identifier of the parent folder in which to import the monitor
          or folder.
        explode: false
        in: path
        name: parentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorsLibraryBaseExport'
        description: The monitor or folder to be imported.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: "Newly imported monitor or folder. NOTE: Permissions field\
            \ will not be filled (empty list)."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Import a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}/permissions:
    get:
      description: List explicit permissions on monitor or folder in the monitors
        library.
      operationId: monitorsReadPermissionsById
      parameters:
      - description: Identifier of the monitor or folder to list permissions.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionsResponse'
          description: The list of explicit permission statements for the monitor
            or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        List explicit permissions on monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/permissions/set:
    put:
      description: Set permissions on monitor or folder in the monitors library.
      operationId: monitorsSetPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionStatementDefinitions'
        description: The permission statement definitions to set.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionStatements'
          description: List of the successfully set `PermissionStatements`.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Set permissions on monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/permissions/revoke:
    put:
      description: Revoke all permissions on monitor or folder in the monitors library.
      operationId: monitorsRevokePermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionIdentifiers'
        description: The identifiers of the permissions statements to revoke.
        required: true
      responses:
        "204":
          description: Permissions were successfully revoked for monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Revoke all permissions on monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}/permissionSummariesBySubjects:
    get:
      description: List permission summary meta(s) grouped by subjects on monitor
        or folder in the monitors library.
      operationId: monitorsReadPermissionSummariesByIdGroupBySubjects
      parameters:
      - description: Identifier of the monitor or folder to list permissions.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionSummariesBySubjects'
          description: The list of permission summary meta(s) grouped by subjects
            for the monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        List permission summaries for a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/mutingSchedules:
    delete:
      description: Bulk delete a mutingschedule or folder by the given identifiers
        in the mutingSchedules library.
      operationId: mutingSchedulesDeleteByIds
      parameters:
      - description: A comma-separated list of identifiers.
        example: "0000000000000001,0000000000000002,0000000000000003"
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToMutingSchedulesLibraryBaseResponseMap'
          description: A map between the deleted identifier and its metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Bulk delete a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
    get:
      description: Bulk read a mutingschedule or folder by the given identifiers from
        the mutingSchedules library.
      operationId: mutingSchedulesReadByIds
      parameters:
      - description: A comma-separated list of identifiers.
        example: "0000000000000001,0000000000000002,0000000000000003"
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: a boolean parameter to control skipping fetching children of
          requested folder(s)
        explode: true
        in: query
        name: skipChildren
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToMutingSchedulesLibraryBaseResponseMap'
          description: A map between an identifier and its definition (mutingschedule
            or folder).
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Bulk read a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
    post:
      description: Create a mutingschedule or folder in the mutingSchedules library.
      operationId: mutingSchedulesCreate
      parameters:
      - description: Identifier of the parent folder in which to create the mutingschedule
          or folder.
        explode: true
        in: query
        name: parentId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MutingSchedulesLibraryBase'
        description: The mutingschedule or folder to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutingSchedulesLibraryBaseResponse'
          description: The mutingschedule or folder was created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Create a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
  /v1/mutingSchedules/root:
    get:
      description: Get the root folder in the mutingSchedules library.
      operationId: getMutingSchedulesLibraryRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutingSchedulesLibraryFolderResponse'
          description: Root folder of the mutingSchedules library.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the root mutingSchedules folder.
      tags:
      - mutingSchedulesLibraryManagement
  /v1/mutingSchedules/search:
    get:
      description: Search for a mutingschedule or folder in the mutingSchedules library
        structure.
      operationId: mutingSchedulesSearch
      parameters:
      - description: |-
          The search query to find mutingschedule or folder. Below is the list of different filters with examples:
            - **createdBy** : Filter by the user's identifier who created the content. Example: `createdBy:000000000000968B`.
            - **createdBefore** : Filter by the content objects created before the given timestamp(in milliseconds). Example: `createdBefore:1457997222`.
            - **createdAfter** : Filter by the content objects created after the given timestamp(in milliseconds). Example: `createdAfter:1457997111`.
            - **modifiedBefore** : Filter by the content objects modified before the given timestamp(in milliseconds). Example: `modifiedBefore:1457997222`.
            - **modifiedAfter** : Filter by the content objects modified after the given timestamp(in milliseconds). Example: `modifiedAfter:1457997111`.
            - **type** : Filter by the type of the content object. Example: `type:folder`.

          You can also use multiple filters in one query. For example to search for all content objects created by user with identifier 000000000000968B with creation timestamp after 1457997222 containing the text Test, the query would look like:

            `createdBy:000000000000968B createdAfter:1457997222 Test`
        example: createdBy:000000000000968B Test
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - description: Maximum number of items you want in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          maximum: 5000
          type: integer
        style: form
      - description: The position or row from where to start the search operation.
        example: 5
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: a boolean parameter to control skipping fetching children of
          requested folder(s)
        explode: true
        in: query
        name: skipChildren
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMutingSchedulesLibraryItemWithPath'
          description: List of folders and mutingSchedules matching the search query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Search for a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
  /v1/mutingSchedules/{id}:
    delete:
      description: Delete a mutingschedule or folder from the mutingSchedules library.
      operationId: mutingSchedulesDeleteById
      parameters:
      - description: Identifier of the mutingschedule or folder to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The mutingschedule or folder was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Delete a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
    get:
      description: Get a mutingschedule or folder from the mutingSchedules library.
      operationId: mutingSchedulesReadById
      parameters:
      - description: Identifier of the mutingschedule or folder to read.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutingSchedulesLibraryBaseResponse'
          description: Requested mutingschedule or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
    put:
      description: Update a mutingschedule or folder in the mutingSchedules library.
      operationId: mutingSchedulesUpdateById
      parameters:
      - description: Identifier of the mutingschedule or folder to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MutingSchedulesLibraryBaseUpdate'
        description: The mutingschedule or folder to update. The content version must
          match its latest version number in the mutingSchedules library. If the version
          does not match it will not be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutingSchedulesLibraryBaseResponse'
          description: The mutingschedule or folder was updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Update a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
  /v1/mutingSchedules/{id}/path:
    get:
      description: Get the full path of the mutingschedule or folder in the mutingSchedules
        library.
      operationId: getMutingSchedulesFullPath
      parameters:
      - description: Identifier of the mutingschedule or folder.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
          description: Full path of the mutingschedule or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the path of a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
  /v1/mutingSchedules/{id}/copy:
    post:
      description: Copy a mutingschedule or folder in the mutingSchedules library.
      operationId: mutingSchedulesCopy
      parameters:
      - description: Identifier of the mutingschedule or folder to copy.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentCopyParams'
        description: |-
          Fields include:
            1) Identifier of the parent folder to copy to.
            2) Optionally provide a new name.
            3) Optionally provide a new description.
            4) Optionally set to true if you want to copy and preserve the locked status. Requires `LockMutingSchedules` capability.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutingSchedulesLibraryBaseResponse'
          description: The mutingschedule or folder was copied.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Copy a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
  /v1/mutingSchedules/{id}/export:
    get:
      description: "Export a mutingschedule or folder. If the given identifier is\
        \ a folder, everything under the folder is exported recursively with folder\
        \ as the root."
      operationId: mutingSchedulesExportItem
      parameters:
      - description: Identifier of the mutingschedule or folder to export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutingSchedulesLibraryBaseExport'
          description: Exported mutingschedule or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Export a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
  /v1/mutingSchedules/{parentId}/import:
    post:
      description: Import a mutingschedule or folder.
      operationId: mutingSchedulesImportItem
      parameters:
      - description: Identifier of the parent folder in which to import the mutingschedule
          or folder.
        explode: false
        in: path
        name: parentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MutingSchedulesLibraryBaseExport'
        description: The mutingschedule or folder to be imported.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutingSchedulesLibraryBaseResponse'
          description: "Newly imported mutingschedule or folder. NOTE: Permissions\
            \ field will not be filled (empty list)."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Import a mutingschedule or folder.
      tags:
      - mutingSchedulesLibraryManagement
  /v1/slos:
    delete:
      description: Bulk delete a slo or folder by the given identifiers in the slos
        library.
      operationId: slosDeleteByIds
      parameters:
      - description: A comma-separated list of identifiers.
        example: "0000000000000001,0000000000000002,0000000000000003"
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToSlosLibraryBaseResponseMap'
          description: A map between the deleted identifier and its metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Bulk delete a slo or folder.
      tags:
      - slosLibraryManagement
    get:
      description: Bulk read a slo or folder by the given identifiers from the slos
        library.
      operationId: slosReadByIds
      parameters:
      - description: A comma-separated list of identifiers.
        example: "0000000000000001,0000000000000002,0000000000000003"
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: a boolean parameter to control skipping fetching children of
          requested folder(s)
        explode: true
        in: query
        name: skipChildren
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToSlosLibraryBaseResponseMap'
          description: A map between an identifier and its definition (slo or folder).
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Bulk read a slo or folder.
      tags:
      - slosLibraryManagement
    post:
      description: Create a slo or folder in the slos library.
      operationId: slosCreate
      parameters:
      - description: Identifier of the parent folder in which to create the slo or
          folder.
        explode: true
        in: query
        name: parentId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlosLibraryBase'
        description: The slo or folder to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlosLibraryBaseResponse'
          description: The slo or folder was created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Create a slo or folder.
      tags:
      - slosLibraryManagement
  /v1/slos/root:
    get:
      description: Get the root folder in the slos library.
      operationId: getSlosLibraryRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlosLibraryFolderResponse'
          description: Root folder of the slos library.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the root slos folder.
      tags:
      - slosLibraryManagement
  /v1/slos/path:
    get:
      description: Read a slo or folder by its path in the slos library structure.
      operationId: slosGetByPath
      parameters:
      - description: The path of the slo or folder.
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlosLibraryBaseResponse'
          description: Requested slo or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Read a slo or folder by its path.
      tags:
      - slosLibraryManagement
  /v1/slos/search:
    get:
      description: Search for a slo or folder in the slos library structure.
      operationId: slosSearch
      parameters:
      - description: |-
          The search query to find slo or folder. Below is the list of different filters with examples:
            - **createdBy** : Filter by the user's identifier who created the content. Example: `createdBy:000000000000968B`.
            - **createdBefore** : Filter by the content objects created before the given timestamp(in milliseconds). Example: `createdBefore:1457997222`.
            - **createdAfter** : Filter by the content objects created after the given timestamp(in milliseconds). Example: `createdAfter:1457997111`.
            - **modifiedBefore** : Filter by the content objects modified before the given timestamp(in milliseconds). Example: `modifiedBefore:1457997222`.
            - **modifiedAfter** : Filter by the content objects modified after the given timestamp(in milliseconds). Example: `modifiedAfter:1457997111`.
            - **type** : Filter by the type of the content object. Example: `type:folder`.

          You can also use multiple filters in one query. For example to search for all content objects created by user with identifier 000000000000968B with creation timestamp after 1457997222 containing the text Test, the query would look like:

            `createdBy:000000000000968B createdAfter:1457997222 Test`
        example: createdBy:000000000000968B Test
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - description: Maximum number of items you want in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          maximum: 5000
          type: integer
        style: form
      - description: The position or row from where to start the search operation.
        example: 5
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: a boolean parameter to control skipping fetching children of
          requested folder(s)
        explode: true
        in: query
        name: skipChildren
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSlosLibraryItemWithPath'
          description: List of folders and slos matching the search query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Search for a slo or folder.
      tags:
      - slosLibraryManagement
  /v1/slos/{id}:
    delete:
      description: Delete a slo or folder from the slos library.
      operationId: slosDeleteById
      parameters:
      - description: Identifier of the slo or folder to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The slo or folder was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Delete a slo or folder.
      tags:
      - slosLibraryManagement
    get:
      description: Get a slo or folder from the slos library.
      operationId: slosReadById
      parameters:
      - description: Identifier of the slo or folder to read.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlosLibraryBaseResponse'
          description: Requested slo or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a slo or folder.
      tags:
      - slosLibraryManagement
    put:
      description: Update a slo or folder in the slos library.
      operationId: slosUpdateById
      parameters:
      - description: Identifier of the slo or folder to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlosLibraryBaseUpdate'
        description: The slo or folder to update. The content version must match its
          latest version number in the slos library. If the version does not match
          it will not be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlosLibraryBaseResponse'
          description: The slo or folder was updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Update a slo or folder.
      tags:
      - slosLibraryManagement
  /v1/slos/{id}/path:
    get:
      description: Get the full path of the slo or folder in the slos library.
      operationId: getSlosFullPath
      parameters:
      - description: Identifier of the slo or folder.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
          description: Full path of the slo or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the path of a slo or folder.
      tags:
      - slosLibraryManagement
  /v1/slos/{id}/move:
    post:
      description: Move a slo or folder to a different location in the slos library.
      operationId: slosMove
      parameters:
      - description: Identifier of the slo or folder to move.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the parent folder to move the slo or folder to.
        explode: true
        in: query
        name: parentId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlosLibraryBaseResponse'
          description: Moved slo or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Move a slo or folder.
      tags:
      - slosLibraryManagement
  /v1/slos/{id}/copy:
    post:
      description: Copy a slo or folder in the slos library.
      operationId: slosCopy
      parameters:
      - description: Identifier of the slo or folder to copy.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentCopyParams'
        description: |-
          Fields include:
            1) Identifier of the parent folder to copy to.
            2) Optionally provide a new name.
            3) Optionally provide a new description.
            4) Optionally set to true if you want to copy and preserve the locked status. Requires `LockSlos` capability.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlosLibraryBaseResponse'
          description: The slo or folder was copied.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Copy a slo or folder.
      tags:
      - slosLibraryManagement
  /v1/slos/{id}/export:
    get:
      description: "Export a slo or folder. If the given identifier is a folder, everything\
        \ under the folder is exported recursively with folder as the root."
      operationId: slosExportItem
      parameters:
      - description: Identifier of the slo or folder to export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlosLibraryBaseExport'
          description: Exported slo or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Export a slo or folder.
      tags:
      - slosLibraryManagement
  /v1/slos/{parentId}/import:
    post:
      description: Import a slo or folder.
      operationId: slosImportItem
      parameters:
      - description: Identifier of the parent folder in which to import the slo or
          folder.
        explode: false
        in: path
        name: parentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlosLibraryBaseExport'
        description: The slo or folder to be imported.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlosLibraryBaseResponse'
          description: "Newly imported slo or folder. NOTE: Permissions field will\
            \ not be filled (empty list)."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Import a slo or folder.
      tags:
      - slosLibraryManagement
components:
  schemas:
    AddOrReplaceTransformation:
      allOf:
      - $ref: '#/components/schemas/DimensionTransformation'
      - properties:
          dimensionToReplace:
            description: The dimension that needs to be modified or added.
            example: metric
            type: string
          value:
            description: The value for the dimension.
            example: "{{metric}}_aggregated"
            type: string
        required:
        - dimensionToReplace
        - value
        type: object
    AggregateOnTransformation:
      allOf:
      - $ref: '#/components/schemas/DimensionTransformation'
      - properties:
          aggregateOn:
            default: []
            description: A list of dimensions that should be aggregated on.
            example:
            - metric
            - cluster
            items:
              type: string
            type: array
        required:
        - aggregateOn
        type: object
    BeginBoundedTimeRange:
      allOf:
      - $ref: '#/components/schemas/ResolvableTimeRange'
      - properties:
          from:
            $ref: '#/components/schemas/TimeRangeBoundary'
          to:
            $ref: '#/components/schemas/TimeRangeBoundary'
        required:
        - from
        type: object
      example:
        from:
          type: RelativeTimeRangeBoundary
        to:
          type: RelativeTimeRangeBoundary
        type: type
    CompleteLiteralTimeRange:
      allOf:
      - $ref: '#/components/schemas/ResolvableTimeRange'
      - properties:
          rangeName:
            description: "Name of the complete time range. Possible values are: -\
              \ `today`, - `yesterday`, - `previous_week`, - `previous_month`."
            example: previous_month
            pattern: ^(today|yesterday|previous_week|previous_month)$
            type: string
            x-pattern-message: "must be one of the following: `today`, `yesterday`,\
              \ `previous_week`, `previous_month`"
        required:
        - rangeName
        type: object
    EpochTimeRangeBoundary:
      allOf:
      - $ref: '#/components/schemas/TimeRangeBoundary'
      - properties:
          epochMillis:
            description: Starting point in time as a number of milliseconds since
              the epoch. For example `1538392220000`
            example: 1538392220000
            format: int64
            type: integer
        required:
        - epochMillis
        type: object
    Iso8601TimeRangeBoundary:
      allOf:
      - $ref: '#/components/schemas/TimeRangeBoundary'
      - properties:
          iso8601Time:
            description: Starting point in time as a string in ISO 8601 format. For
              example `2018-10-01T11:10:20.52+01:00`
            example: 2018-10-01T11:10:20.52+01:00
            format: date-time
            type: string
        required:
        - iso8601Time
        type: object
    LiteralTimeRangeBoundary:
      allOf:
      - $ref: '#/components/schemas/TimeRangeBoundary'
      - properties:
          rangeName:
            description: |-
              Name of the time range. Possible values are:
                - `now`,
                - `second`,
                - `minute`,
                - `hour`,
                - `day`,
                - `today`,
                - `week`,
                - `month`,
                - `year`
            example: week
            type: string
        required:
        - rangeName
        type: object
    RelativeTimeRangeBoundary:
      allOf:
      - $ref: '#/components/schemas/TimeRangeBoundary'
      - properties:
          relativeTime:
            description: |-
              Relative time as a string consisting of following elements: - `-` (optional): minus sign indicates time in the past, - `<number>`: number of time units, - `<time_unit>`: time unit; possible values are: `w` (week), `d` (day), `h` (hour), `m` (minute), `s` (second).
              Multiple pairs of `<number><time_unit>` may be provided, and they may be in any order. For example, `-2w5d3h` points to the moment in time 2 weeks, 5 days and 3 hours ago.
            example: -2w5d3h
            type: string
        required:
        - relativeTime
        type: object
    ResolvableTimeRange:
      discriminator:
        propertyName: type
      example:
        type: BeginBoundedTimeRange
        from:
          type: RelativeTimeRangeBoundary
          relativeTime: -15m
      properties:
        type:
          description: Type of the time range. Value must be either `CompleteLiteralTimeRange`
            or `BeginBoundedTimeRange`.
          type: string
      required:
      - type
      type: object
    TimeRangeBoundary:
      discriminator:
        propertyName: type
      example:
        type: RelativeTimeRangeBoundary
      properties:
        type:
          description: "Type of the time range boundary. Value must be from list:\
            \ - `RelativeTimeRangeBoundary`, - `EpochTimeRangeBoundary`, - `Iso8601TimeRangeBoundary`,\
            \ - `LiteralTimeRangeBoundary`."
          example: RelativeTimeRangeBoundary
          type: string
      required:
      - type
      type: object
    Header:
      properties:
        name:
          description: Name of the header field.
          type: string
        value:
          description: Value of the header field.
          type: string
      required:
      - name
      - value
      type: object
    ConnectionSubtype:
      description: The subtype of the connection. Valid values are `Event` or `Incident`.
      pattern: ^(Event|Incident)$
      type: string
      x-pattern-message: must be `Event` or `Incident`
    ServiceNowConnection:
      allOf:
      - $ref: '#/components/schemas/Connection'
      - properties:
          url:
            description: URL for the ServiceNow connection.
            type: string
          username:
            description: User name for the ServiceNow connection.
            type: string
        required:
        - url
        - username
        type: object
    ServiceNowDefinition:
      allOf:
      - $ref: '#/components/schemas/ConnectionDefinition'
      - properties:
          url:
            description: URL for the ServiceNow connection.
            example: https://www.google.com
            type: string
          username:
            description: User name for the ServiceNow connection.
            type: string
          password:
            description: User password for the ServiceNow connection.
            type: string
        required:
        - password
        - url
        - username
        type: object
    WebhookConnection:
      allOf:
      - $ref: '#/components/schemas/Connection'
      - properties:
          url:
            description: URL for the webhook connection.
            type: string
          headers:
            description: List of access authorization headers.
            items:
              $ref: '#/components/schemas/Header'
            type: array
          customHeaders:
            description: List of custom webhook headers.
            items:
              $ref: '#/components/schemas/Header'
            type: array
          defaultPayload:
            description: Default payload of the webhook.
            type: string
          webhookType:
            $ref: '#/components/schemas/ConnectionType'
          connectionSubtype:
            $ref: '#/components/schemas/ConnectionSubtype'
          resolutionPayload:
            description: Resolution payload of the webhook.
            maxLength: 4096
            type: string
          warnings:
            description: Webhook endpoint warning for incorrect variable names and
              syntax.
            example: "The following variables are not supported: NotSupportedVariable"
            items:
              type: string
            type: array
        required:
        - customHeaders
        - defaultPayload
        - headers
        - url
        - webhookType
        type: object
    WebhookDefinition:
      allOf:
      - $ref: '#/components/schemas/ConnectionDefinition'
      - properties:
          url:
            description: URL for the webhook connection.
            example: https://www.google.com
            type: string
          headers:
            default: []
            description: List of access authorization headers.
            items:
              $ref: '#/components/schemas/Header'
            maxItems: 7995
            type: array
          customHeaders:
            default: []
            description: List of custom webhook headers.
            items:
              $ref: '#/components/schemas/Header'
            maxItems: 5
            type: array
          defaultPayload:
            description: Default payload of the webhook.
            minLength: 1
            type: string
          webhookType:
            $ref: '#/components/schemas/ConnectionType'
          connectionSubtype:
            $ref: '#/components/schemas/ConnectionSubtype'
          resolutionPayload:
            description: Resolution payload of the webhook.
            maxLength: 4096
            type: string
        required:
        - defaultPayload
        - url
        type: object
    Layout:
      discriminator:
        propertyName: layoutType
      example:
        layoutStructures:
        - key: panelPANE-3DC454FD977E2A46
          structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}"
        - key: panelPANE-3DC454FD977E2A46
          structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}"
        layoutType: Grid
      properties:
        layoutType:
          description: "The type of panel layout on the Dashboard. For example, Grid,\
            \ Tabs, or Hierarchical. Currently supports `Grid` only."
          example: Grid
          type: string
        layoutStructures:
          description: Layout structures for the panel childen.
          items:
            $ref: '#/components/schemas/LayoutStructure'
          type: array
      required:
      - layoutStructures
      - layoutType
      type: object
    Panel:
      discriminator:
        propertyName: panelType
      example:
        keepVisualSettingsConsistentWithParent: true
        visualSettings: "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}"
        id: 2F7D449E3D511066
        title: This panel shows memory usage for your kubernetes pod.
        panelType: SumoSearchPanel
        key: panelca6280e4a75fca45
      properties:
        id:
          description: Unique identifier for the panel.
          example: 2F7D449E3D511066
          type: string
        key:
          description: |
            Key for the panel. Used to create searches for the queries in the panel and configure the layout of the panel in the dashboard.
          example: panelca6280e4a75fca45
          type: string
        title:
          description: Title of the panel.
          example: This panel shows memory usage for your kubernetes pod.
          type: string
        visualSettings:
          description: Visual settings of the panel.
          example: "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}"
          type: string
        keepVisualSettingsConsistentWithParent:
          default: true
          description: "Keeps the visual settings, like series colors, consistent\
            \ with the settings of the parent panel."
          type: boolean
        panelType:
          description: Type of panel.
          example: SumoSearchPanel
          type: string
      required:
      - key
      - panelType
      type: object
    SumoSearchPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
      - description: A panel that has logs and metrics search queries.
        properties:
          queries:
            description: Metrics and log queries of the panel.
            items:
              $ref: '#/components/schemas/Query'
            type: array
          description:
            description: Description of the panel.
            example: This panel gives an overview of CPU metrics for a pod
            type: string
          timeRange:
            $ref: '#/components/schemas/ResolvableTimeRange'
          coloringRules:
            description: Rules to set the color of data.
            items:
              $ref: '#/components/schemas/ColoringRule'
            type: array
          linkedDashboards:
            description: List of linked dashboards.
            items:
              $ref: '#/components/schemas/LinkedDashboard'
            type: array
        required:
        - queries
        type: object
    Query:
      example:
        queryKey: A
        metricsQueryMode: Basic
        transient: false
        outputCardinalityLimit: 1000
        metricsQueryData:
          metric: CPU_user
          aggregationType: count
          groupBy: _sourceHost
          filters:
          - key: _sourceCategory
            value: kubernetes
          - key: _sourceHost
            value: dep-kubernetes-1
          operators:
            operatorName: avg
            parameters:
            - key: aggregator
              value: max
            - key: operation
              value: ""
            - key: value
              value: 50
        spansQueryData:
          visualizations:
          - name: duration_pct_95
            type: count
          - name: duration_pct_95
            type: count
          limit:
          - limitValue: 10
            direction: asc
          - limitValue: 10
            direction: asc
          filters:
          - fieldName: service
            type: StandaloneKey
          - fieldName: service
            type: StandaloneKey
          groupBy:
          - type: time
          - type: time
        timeSource: Message
        queryString: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
        tracesQueryData:
          filters:
          - type: FieldDescriptor
          - type: FieldDescriptor
        parseMode: Auto
        queryType: Logs
      properties:
        queryString:
          description: "The metrics, traces or logs query."
          example: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
          type: string
        queryType:
          description: "The type of the query, either `Metrics`, `Traces`, `Spans`\
            \ or `Logs`."
          example: Logs
          pattern: ^(Logs|Metrics|Traces|Spans)$
          type: string
          x-pattern-message: "Must be `Logs`, `Traces`, `Spans` or `Metrics`"
        queryKey:
          description: |
            The key for metric, traces or log queries. Used as an identifier for queries. It is displayed on the panel builder and used for display overrides and query toggling.
          example: A
          type: string
        metricsQueryMode:
          description: |
            The mode of the metrics query that the user was editing. Can be `Basic` or `Advanced`. Will ONLY be specified for metrics queries.
          example: Basic
          pattern: ^(Basic|Advanced|basic|advanced)$
          type: string
          x-pattern-message: "Must be `Basic`, or `Advanced`"
        metricsQueryData:
          $ref: '#/components/schemas/MetricsQueryData'
        tracesQueryData:
          $ref: '#/components/schemas/TracesQueryData'
        spansQueryData:
          $ref: '#/components/schemas/SpansQueryData'
        parseMode:
          default: Auto
          description: |-
            This field only applies for queryType of `Logs` but other query types may be supported in the future. Define the parsing mode to scan the JSON format log messages. Possible values are:
              1. `Auto`
              2. `Manual`
            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
          example: Auto
          pattern: ^(Auto|Manual)$
          type: string
          x-pattern-message: Must be either `Auto` or `Manual`
        timeSource:
          default: Message
          description: "This field only applies for queryType of `Logs` but other\
            \ query types may be supported in the future. Define the time source of\
            \ this query. Possible values are `Message` and `Receipt`. `Message` will\
            \ use the timeStamp on the message, while `Receipt` will use the timestamp\
            \ it was received by Sumo."
          example: Message
          pattern: ^(Message|Receipt)$
          type: string
          x-pattern-message: Must be `Message or `Receipt`
        transient:
          default: false
          description: "This field only applies for queryType of `Metrics` but other\
            \ query types may be supported in the future. Determines if the row should\
            \ be returned in the response. Can be used in conjunction with a join,\
            \ if only the result of the join is needed, and not the intermediate rows.\
            \ Setting `transient` to `true`  wherever the intermediate results aren't\
            \ required speeds up the computation and reduces the amount of data  transferred\
            \ over the network."
          type: boolean
        outputCardinalityLimit:
          default: 1000
          description: "This field only applies for queryType of `Metrics` but other\
            \ query types may be supported in the future. Specifies the output cardinality\
            \ limitations for the query, which is the maximum number of timeseries\
            \ returned in the result."
          example: 1000
          format: int32
          maximum: 3000
          minimum: 1
          type: integer
      required:
      - queryKey
      - queryString
      - queryType
      type: object
    TextPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
      - description: A panel that has text.
        properties:
          text:
            description: Text to display in the panel.
            example: Kubernetes pods
            type: string
        required:
        - text
        type: object
    EventsOfInterestScatterPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
    TracesListPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
      - description: A panel for traces list
        properties:
          queries:
            description: Traces queries of the panel.
            example:
              traceQueryExample:
                value:
                  queryKey: A
                  queryString: ""
                  queryType: Traces
                  tracesQueryData:
                    filters:
                      type: FieldDescriptor
            items:
              $ref: '#/components/schemas/Query'
            maxItems: 6
            type: array
          timeRange:
            $ref: '#/components/schemas/ResolvableTimeRange'
        type: object
    ServiceMapPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
      - description: A panel for service map.
        properties:
          application:
            description: Filter services by the application custom tag.
            example: sumologic
            type: string
          service:
            description: Show only the specific service and its connections to other
              services.
            example: prada
            type: string
          showRemoteServices:
            description: "Show remote services, like databases or external calls,\
              \ automatically detected in client traffic."
            example: true
            type: boolean
          environment:
            description: Show only service map data specific to the provided environment.
            example: default-environment
            type: string
        type: object
    ColoringRule:
      properties:
        scope:
          description: Regex string to match queries to apply coloring to.
          example: CPU_*
          type: string
        singleSeriesAggregateFunction:
          description: Function to aggregate one series into one single value.
          example: Average
          type: string
        multipleSeriesAggregateFunction:
          description: Function to aggregate the aggregate values of multiple time
            series into one single value.
          example: Average
          type: string
        colorThresholds:
          description: Color thresholds.
          items:
            $ref: '#/components/schemas/ColoringThreshold'
          type: array
      required:
      - colorThresholds
      - multipleSeriesAggregateFunction
      - scope
      - singleSeriesAggregateFunction
      type: object
    Grid:
      allOf:
      - $ref: '#/components/schemas/Layout'
    LayoutStructure:
      example:
        key: panelPANE-3DC454FD977E2A46
        structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}"
      properties:
        key:
          description: The identifier of the panel that this structure applies to.
          example: panelPANE-3DC454FD977E2A46
          type: string
        structure:
          description: The structure of a panel.
          example: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}"
          type: string
      required:
      - key
      - structure
      type: object
    ColoringThreshold:
      properties:
        color:
          description: Color for the threshold.
          example: FFFFFF
          type: string
        min:
          description: Absolute inclusive threshold to color by.
          example: 0
          format: double
          type: number
        max:
          description: Absolute exclusive threshold to color by.
          example: 50
          format: double
          type: number
      required:
      - color
      type: object
    MetricsQueryData:
      description: The data format describing a basic metrics query.
      example:
        metric: CPU_user
        aggregationType: count
        groupBy: _sourceHost
        filters:
        - key: _sourceCategory
          value: kubernetes
        - key: _sourceHost
          value: dep-kubernetes-1
        operators:
          operatorName: avg
          parameters:
          - key: aggregator
            value: max
          - key: operation
            value: ""
          - key: value
            value: 50
      properties:
        metric:
          description: The metric of the query.
          example: CPU_user
          type: string
        aggregationType:
          description: "The type of aggregation. Can be `Count`, `Minimum`, `Maximum`,\
            \ `Sum`, `Average` or `None`."
          example: Count
          pattern: ^(Count|Minimum|Maximum|Sum|Average|None)$|^$
          type: string
          x-pattern-message: "Must be `Count`, `Minimum`, `Maximum`, `Sum`, `Average`\
            \ or `None`"
        groupBy:
          description: The field to group the results by.
          example: _sourceHost
          type: string
        filters:
          description: A list of filters for the metrics query.
          items:
            $ref: '#/components/schemas/MetricsFilter'
          type: array
        operators:
          description: A list of operator data for the metrics query.
          items:
            $ref: '#/components/schemas/OperatorData'
          type: array
      required:
      - filters
      - metric
      type: object
    SpansQueryData:
      description: The data format describing a basic spans query.
      example:
        visualizations:
        - name: duration_pct_95
          type: count
        - name: duration_pct_95
          type: count
        limit:
        - limitValue: 10
          direction: asc
        - limitValue: 10
          direction: asc
        filters:
        - fieldName: service
          type: StandaloneKey
        - fieldName: service
          type: StandaloneKey
        groupBy:
        - type: time
        - type: time
      properties:
        filters:
          description: A list of filters for the spans query.
          items:
            $ref: '#/components/schemas/SpansFilter'
          type: array
        visualizations:
          description: A list of used visualization methods for the spans query.
          items:
            $ref: '#/components/schemas/SpansVisualization'
          type: array
        groupBy:
          description: A list of group-by clauses for the spans query.
          items:
            $ref: '#/components/schemas/SpansGroupBy'
          type: array
        limit:
          description: A list of limits that will be applied to the spans query.
          items:
            $ref: '#/components/schemas/SpansLimitItem'
          type: array
      required:
      - filters
      - groupBy
      - limit
      - visualizations
      type: object
    SpansCountVisualization:
      allOf:
      - $ref: '#/components/schemas/SpansVisualization'
      - description: |
          Represents the visualization type where the total number of all spans is counted or where the spans are counted by a specific field.
        properties:
          distinctBy:
            description: A field by which the spans need to be counted.
            example: service
            type: string
        type: object
    SpansCalculationVisualization:
      allOf:
      - $ref: '#/components/schemas/SpansVisualization'
      - description: |
          Represents the visualization type where a specific aggregation by a particular field is  applied to all spans / all grouped spans.
        properties:
          field:
            description: A field by which the spans are aggregated.
            example: duration
            type: string
          aggregator:
            $ref: '#/components/schemas/SpanCalculationAggregator'
        required:
        - aggregator
        - field
        type: object
    SpansFilterStandaloneKey:
      allOf:
      - $ref: '#/components/schemas/SpansFilter'
      - description: |
          A representation of a span filter where only a single filtering key is provided.  The given value is then looked up in all span data.
        type: object
    SpansFilterKeyValuePair:
      allOf:
      - $ref: '#/components/schemas/SpansFilter'
      - description: |
          A representation of a span filter where both the field name and field value are provided, e.g. http.response.status_code > 500.
        properties:
          operator:
            description: A symbol that indicates an operation to be performed between
              a `fieldName` and `fieldValue`.
            example: <
            pattern: ^(<|<=|>|>=|=|!=)$
            type: string
            x-pattern-message: "Must be `<`, `<=`, `>`, `>=`, `=` or `!=`"
          fieldValue:
            description: The second argument of the operation applied to a `fieldName`.
            example: some_service
            type: string
        required:
        - fieldValue
        - operator
        type: object
    SpansTimeGroupBy:
      allOf:
      - $ref: '#/components/schemas/SpansGroupBy'
      - description: |
          A representation of a group-by clause where results are bucketed based on a fixed interval are  created, e.g. five-minute buckets.
        properties:
          fieldValue:
            description: |
              A fixed interval grouping in the following format <#><time_period>,  supported <time_period> values are weeks (w), days (d), hours (h), minutes (m), and seconds (s).
            example: 5m
            pattern: "^[0-9]+(w|d|h|m|s)$"
            type: string
        required:
        - fieldValue
        type: object
    SpansFieldGroupBy:
      allOf:
      - $ref: '#/components/schemas/SpansGroupBy'
      - description: |
          A representation of a group-by clause where results are bucketed based on a grouping by a specific field.
        properties:
          fieldName:
            description: A name of the field to group by.
            example: http.response.status_code
            type: string
        required:
        - fieldName
        type: object
    SpanCalculationAggregator:
      discriminator:
        mapping:
          sum: '#/components/schemas/SpanCalculationSumAggregator'
          avg: '#/components/schemas/SpanCalculationAvgAggregator'
          max: '#/components/schemas/SpanCalculationMaxAggregator'
          min: '#/components/schemas/SpanCalculationMinAggregator'
          pct: '#/components/schemas/SpanCalculationPctAggregator'
        propertyName: key
      properties:
        key:
          description: A specific aggregation type applied to spans.
          example: sum
          pattern: ^(sum|avg|max|min|pct)$
          type: string
          x-pattern-message: "Must be `sum`, `avg`, `max`, `min` or `pct`"
      required:
      - key
      type: object
    SpanCalculationSumAggregator:
      allOf:
      - $ref: '#/components/schemas/SpanCalculationAggregator'
      - type: object
    SpanCalculationAvgAggregator:
      allOf:
      - $ref: '#/components/schemas/SpanCalculationAggregator'
      - type: object
    SpanCalculationMaxAggregator:
      allOf:
      - $ref: '#/components/schemas/SpanCalculationAggregator'
      - type: object
    SpanCalculationMinAggregator:
      allOf:
      - $ref: '#/components/schemas/SpanCalculationAggregator'
      - type: object
    SpanCalculationPctAggregator:
      allOf:
      - $ref: '#/components/schemas/SpanCalculationAggregator'
      - properties:
          percentile:
            description: The specified percentile of a given field.
            example: 95
            format: double
            type: number
        required:
        - percentile
        type: object
    MetricsFilter:
      description: The filter for metrics query.
      example:
        key: _sourceCategory
        value: cqmerger
        negation: false
      properties:
        key:
          description: The key of the metrics filter.
          example: _sourceCategory
          type: string
        value:
          description: The value of the metrics filter.
          example: kubernetes
          type: string
        negation:
          description: Whether or not the metrics filter is negated.
          example: false
          type: boolean
      required:
      - value
      type: object
    VariablesValuesData:
      example:
        data:
          key:
          - data
          - data
        richData:
          key:
            variableValues:
            - myCluster
            variableType: LogQueryVariableSourceDefinition
            allowMultiSelect: false
            valueType: Any
            variableKey: _source
            errors:
            - code: auth:password_too_short
              meta:
                minLength: 12
                actualLength: 5
              detail: "Your password was 5 characters long, the minimum length is\
                \ 12 characters. See http://example.com/password for more information."
              message: Your password was too short.
            - code: auth:password_too_short
              meta:
                minLength: 12
                actualLength: 5
              detail: "Your password was 5 characters long, the minimum length is\
                \ 12 characters. See http://example.com/password for more information."
              message: Your password was too short.
            status:
              percentCompleted: 8
              state: state
      properties:
        data:
          additionalProperties:
            items:
              type: string
            type: array
          default: {}
          description: Data for variable values.
          maxProperties: 1000
          type: object
        richData:
          additionalProperties:
            $ref: '#/components/schemas/VariableValuesData'
          description: "A rich form of data for the variable search, including variable\
            \ values, status and variable type. This field is different from `data`\
            \ in that it includes an object instead of list as the value in the map.\
            \ The `data` field is kept for backwards compatibility, please use `richData`\
            \ for all usages going forward."
          maxProperties: 1000
          type: object
      required:
      - data
      type: object
    GenerateReportRequest:
      example:
        template:
          templateType: DashboardTemplate
        timezone: America/Los_Angeles
        action:
          actionType: DirectDownloadReportAction
        exportFormat: Pdf
      properties:
        action:
          $ref: '#/components/schemas/ReportAction'
        exportFormat:
          description: File format of the report. Can be `Pdf` or `Png`. `Pdf` is
            portable document format. `Png` is portable graphics image format.
          example: Pdf
          pattern: ^(Pdf|Png)$
          type: string
          x-pattern-message: "should be one of the following: 'Pdf', 'Png'"
        timezone:
          description: "Time zone for the query time ranges. Follow the format in\
            \ the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          example: America/Los_Angeles
          type: string
        template:
          $ref: '#/components/schemas/Template'
      required:
      - action
      - exportFormat
      - template
      - timezone
      type: object
    ReportAction:
      description: The base class of all report action types. `DirectDownloadReportAction`
        downloads dashboard from browser. New action types may be supported in the
        future.
      discriminator:
        propertyName: actionType
      example:
        actionType: DirectDownloadReportAction
      properties:
        actionType:
          description: Type of action.
          example: DirectDownloadReportAction
          pattern: ^DirectDownloadReportAction$
          type: string
          x-pattern-message: should be 'DirectDownloadReportAction'
      required:
      - actionType
      type: object
    DirectDownloadReportAction:
      allOf:
      - $ref: '#/components/schemas/ReportAction'
      - description: Generate a direct download report action.
        type: object
    Template:
      discriminator:
        propertyName: templateType
      example:
        templateType: DashboardTemplate
      properties:
        templateType:
          description: The type of template. `DashboardTemplate` provides a snapshot
            view of the exported dashboard. `DashboardReportModeTemplate` provides
            a printer-friendly view of the exported dashboard. New templates may be
            supported in the future.
          example: DashboardTemplate
          pattern: ^(DashboardTemplate|DashboardReportModeTemplate)$
          type: string
          x-pattern-message: "Must be `DashboardTemplate`, or `DashboardReportModeTemplate`"
      required:
      - templateType
      type: object
    DashboardTemplate:
      allOf:
      - $ref: '#/components/schemas/Template'
      - description: Generate the report from a dashboard template.
        properties:
          id:
            description: Id of the dashboard.
            example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
            type: string
          panelToSessionIdMap:
            additionalProperties:
              type: string
            description: |
              A map of panel to session id. The session id will be used to fetch data of the panel for the report. If not specified, a new session id will be created for the panel.
            example:
              "1": 64
              "2": 128
              "3": 192
            type: object
          timeRange:
            $ref: '#/components/schemas/ResolvableTimeRange'
          variableValues:
            $ref: '#/components/schemas/VariablesValuesData'
        required:
        - id
        type: object
    DashboardReportModeTemplate:
      allOf:
      - $ref: '#/components/schemas/DashboardTemplate'
      - description: Generate the report from a dashboard template in report mode.
        type: object
    DashboardSearchSessionIds:
      properties:
        data:
          additionalProperties:
            type: string
          default: {}
          description: Map of search keys to session ids.
          maxProperties: 1000
          type: object
        errors:
          additionalProperties:
            $ref: '#/components/schemas/ErrorResponse'
          description: Error description for the session keys that failed validation.
          maxProperties: 1000
          type: object
      required:
      - data
      type: object
    Variable:
      example:
        hideFromUI: false
        allowMultiSelect: false
        displayName: Source Host
        defaultValue: default_value
        sourceDefinition:
          variableSourceType: MetadataVariableSourceDefinition
        valueType: Any
        name: _sourceHost
        includeAllOption: true
        id: id
      properties:
        id:
          description: Unique identifier for the variable.
          type: string
        name:
          description: Name of the variable. The variable name is case-insensitive.
          example: _sourceHost
          maxLength: 256
          type: string
        displayName:
          description: |
            Display name of the variable shown in the UI. If this field is empty, the name field will be used.
            The display name is case-insensitive. Only numbers, and underscores are allowed in the variable name.
            This field is not yet supported by the UI.
          example: Source Host
          maxLength: 256
          type: string
        defaultValue:
          description: Default value of the variable.
          example: default_value
          type: string
        sourceDefinition:
          $ref: '#/components/schemas/VariableSourceDefinition'
        allowMultiSelect:
          default: false
          description: Allow multiple selections in the values dropdown.
          example: false
          type: boolean
        includeAllOption:
          default: true
          description: Include an "All" option at the top of the variable's values
            dropdown.
          example: true
          type: boolean
        hideFromUI:
          default: false
          description: Hide the variable in the dashboard UI.
          example: false
          type: boolean
        valueType:
          default: Any
          description: |
            The type of value of the variable. Allowed values are `String`, Any` and `Numeric`. - `String` considers as a single phrase and will wrap in double-quotes. - `Any` is all characters. - `Numeric` consists of a numeric value for variables, it will be displayed differently in the UI. - `Integer` is a variable with an `Int` value. - `Long` is a variable with a `Long` value. - `Double` is a variable with a `Double` value. - `Boolean` is a variable with a `Boolean` value.
          example: Any
          type: string
      required:
      - name
      - sourceDefinition
      type: object
    VariableSourceDefinition:
      discriminator:
        propertyName: variableSourceType
      example:
        variableSourceType: MetadataVariableSourceDefinition
      properties:
        variableSourceType:
          description: Source type of the variable values.
          example: MetadataVariableSourceDefinition
          type: string
      required:
      - variableSourceType
      type: object
    MetadataVariableSourceDefinition:
      allOf:
      - $ref: '#/components/schemas/VariableSourceDefinition'
      - description: Variable with values that are powered by a metadata search.
        properties:
          filter:
            description: A metrics query to filter the metadata catalog.
            example: _sourceHost=prod-* metric=CPU_Idle
            maxLength: 65536
            type: string
          key:
            description: Return the values for this given key.
            example: _sourceCategory
            type: string
        required:
        - filter
        - key
        type: object
    CsvVariableSourceDefinition:
      allOf:
      - $ref: '#/components/schemas/VariableSourceDefinition'
      - description: Variable with values that are powered by a csv file.
        properties:
          values:
            description: Comma separated values for the variable.
            example: "host1, host2"
            maxLength: 65536
            type: string
        required:
        - values
        type: object
    LogQueryVariableSourceDefinition:
      allOf:
      - $ref: '#/components/schemas/VariableSourceDefinition'
      - description: Variable with values that are powered by a log query.
        properties:
          query:
            description: A log query.
            example: "_sourceCategory=forge error | parse \"[pod=*]\" podid | count\
              \ by podid"
            maxLength: 65536
            type: string
          field:
            description: A field in log query to populate the variable values.
            example: podid
            maxLength: 65536
            type: string
        required:
        - field
        - query
        type: object
    VariableValuesLogQueryRequest:
      description: The request to get a log query to populate variable values.
      properties:
        query:
          description: The original log query of the variable.
          example: _sourceCategory=forge | count by _sourceHost
          type: string
        field:
          description: A field in log query to populate the variable values.
          example: _sourceHost
          type: string
        variablesValues:
          $ref: '#/components/schemas/VariablesValuesData'
      required:
      - field
      - query
      type: object
    TopologySearchLabel:
      description: |
        Topology label to search for. Each label has a key and a list of values. If a value is `*`, it means we want to match for all values of the label's key.
      example:
        key: pod
        value: '*'
        isRequired: true
      properties:
        key:
          description: Key of a topology label to search for.
          type: string
        value:
          description: Value of a topology label to search for.
          type: string
        isRequired:
          description: |
            Whether the content item is required to contain this label in order to be matched. If true, content items without this label will not be matched. If false, content items without this label will be matched.
          type: boolean
      required:
      - key
      - value
      type: object
    AlertSearchNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - properties:
          sourceId:
            description: A String value to uniquely identify a Collector's Source.
            type: string
        required:
        - sourceId
        type: object
    EmailSearchNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - properties:
          toList:
            description: A list of email recipients.
            items:
              type: string
            type: array
          subjectTemplate:
            description: "If the notification is scheduled with a threshold, the default\
              \ subject template will be \"Search Alert: {{AlertCondition}} results\
              \ found for {{SearchName}}\". For email notifications without a threshold,\
              \ the default subject template is \"Search Results: {{SearchName}}\"\
              ."
            type: string
          includeQuery:
            default: true
            description: A boolean value to indicate if the search query should be
              included in the notification email.
            type: boolean
          includeResultSet:
            default: true
            description: A boolean value to indicate if the search result set should
              be included in the notification email.
            type: boolean
          includeHistogram:
            default: true
            description: A boolean value to indicate if the search result histogram
              should be included in the notification email.
            type: boolean
          includeCsvAttachment:
            default: false
            description: A boolean value to indicate if the search results should
              be included in the notification email as a CSV attachment.
            type: boolean
        required:
        - toList
        type: object
    FolderSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - properties:
          description:
            description: An optional description for the folder.
            type: string
          children:
            description: "The items in the folder, a list of Dashboard and/or Folder\
              \ items."
            items:
              $ref: '#/components/schemas/ContentSyncDefinition'
            type: array
        required:
        - children
        type: object
    QueryParameterSyncDefinition:
      properties:
        name:
          description: The name of the parameter.
          type: string
        label:
          description: The label of the parameter.
          type: string
        description:
          description: A description of the parameter.
          type: string
        dataType:
          description: |-
            The data type of the parameter. Supported values are:
              1. `NUMBER`
              2. `STRING`
              3. `QUERY_FRAGMENT`
              4. `SEARCH_KEYWORD`
          type: string
        value:
          description: A value for the parameter. Should be compatible with the type
            set in dataType field.
          type: string
        autoComplete:
          $ref: '#/components/schemas/ParameterAutoCompleteSyncDefinition'
      required:
      - autoComplete
      - dataType
      - description
      - label
      - name
      - value
      type: object
    LogSearchQueryParameterSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchQueryParameterSyncDefinitionBase'
      - properties:
          autoComplete:
            $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'
        required:
        - autoComplete
        - dataType
        - name
        - value
        type: object
      type: object
    LogSearchParameterAutoCompleteSyncDefinition:
      discriminator:
        mapping:
          None: '#/components/schemas/NoneAutoCompleteSyncDefinition'
          TextEntries: '#/components/schemas/TextEntriesAutoCompleteSyncDefinition'
          LabelValuePairs: '#/components/schemas/LabelValuePairsAutoCompleteSyncDefinition'
          ValueOnlyLookup: '#/components/schemas/ValueOnlyLookupAutoCompleteSyncDefinition'
          LabelValueLookup: '#/components/schemas/LabelValueLookupAutoCompleteSyncDefinition'
        propertyName: autoCompleteType
      properties:
        autoCompleteType:
          description: The autocomplete parameter type.
          type: string
      required:
      - autoCompleteType
      type: object
    NoneAutoCompleteSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'
      - type: object
    TextEntriesAutoCompleteSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'
      - properties:
          autoCompleteKey:
            description: The autocomplete key to be used to fetch autocomplete values.
            example: Ephemeral-3644138589235809747-1583470806220-parameter
            type: string
        required:
        - autoCompleteKey
        type: object
    LabelValuePairsAutoCompleteSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'
      - properties:
          autoCompleteKey:
            description: The autocomplete key to be used to fetch autocomplete values.
            example: Ephemeral-3644138589235809747-1583470806220-parameter
            type: string
        required:
        - autoCompleteKey
        type: object
    ValueOnlyLookupAutoCompleteSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'
      - properties:
          autoCompleteKey:
            description: The autocomplete key to be used to fetch autocomplete values.
            example: Ephemeral-3644138589235809747-1583470806220-parameter
            type: string
          lookupFileName:
            description: The lookup file to use as a source for autocomplete values.
            type: string
          lookupValueColumn:
            description: The column from the lookup file to fill the actual value
              when a particular label is selected.
            type: string
        required:
        - autoCompleteKey
        - lookupFileName
        - lookupValueColumn
        type: object
    LabelValueLookupAutoCompleteSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'
      - properties:
          autoCompleteKey:
            description: The autocomplete key to be used to fetch autocomplete values.
            example: Ephemeral-3644138589235809747-1583470806220-parameter
            type: string
          lookupFileName:
            description: The lookup file to use as a source for autocomplete values.
            type: string
          lookupLabelColumn:
            description: The column from the lookup file to use for autocomplete labels.
            type: string
          lookupValueColumn:
            description: The column from the lookup file to fill the actual value
              when a particular label is selected.
            type: string
        required:
        - autoCompleteKey
        - lookupFileName
        - lookupLabelColumn
        - lookupValueColumn
        type: object
    DashboardSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - properties:
          description:
            description: A description of the dashboard.
            type: string
          detailLevel:
            description: |-
              Supported values are:
                - `1` for small
                - `2` for medium
                - `3` for large
            type: integer
          properties:
            description: Visual settings for the panel.
            type: string
          panels:
            description: The panels of the dashboard. _Dashboard links are not supported._
            items:
              $ref: '#/components/schemas/ReportPanelSyncDefinition'
            type: array
          filters:
            description: The filters for the dashboard. Filters allow you to control
              the amount of information displayed in your dashboards.
            items:
              $ref: '#/components/schemas/ReportFilterSyncDefinition'
            type: array
        required:
        - description
        - detailLevel
        - filters
        - panels
        - properties
        type: object
    MewboardSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - properties:
          description:
            description: A description of the dashboard.
            example: "A view of pods, namespaces and nodes of your cluster."
            maxLength: 65546
            type: string
          title:
            description: The title of the dashboard.
            example: Kubernetes Dashboard
            maxLength: 255
            minLength: 1
            type: string
          theme:
            default: light
            description: Theme for the dashboard. Must be `light` or `dark`.
            example: light
            pattern: ^(light|dark|Light|Dark)$
            type: string
            x-pattern-message: "Must be `Light`, or `Dark`"
          topologyLabelMap:
            $ref: '#/components/schemas/TopologyLabelMap'
          refreshInterval:
            description: Interval of time (in seconds) to automatically refresh the
              dashboard. A value of 0 means we never automatically refresh the dashboard.
            example: 5
            format: int32
            type: integer
          timeRange:
            $ref: '#/components/schemas/ResolvableTimeRange'
          layout:
            $ref: '#/components/schemas/Layout'
          panels:
            description: Children panels that the container panel contains.
            items:
              $ref: '#/components/schemas/Panel'
            type: array
          variables:
            description: Variables that could be applied to the panel's children.
            items:
              $ref: '#/components/schemas/Variable'
            type: array
          coloringRules:
            description: Coloring rules to color the panel/data with.
            items:
              $ref: '#/components/schemas/ColoringRule'
            type: array
        required:
        - title
        type: object
    DashboardV2SyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - properties:
          description:
            description: A description of the dashboard.
            example: "A view of pods, namespaces and nodes of your cluster."
            maxLength: 65546
            type: string
          title:
            description: The title of the dashboard.
            example: Kubernetes Dashboard
            maxLength: 255
            minLength: 1
            type: string
          theme:
            default: light
            description: Theme for the dashboard. Must be `light` or `dark`.
            example: light
            pattern: ^(light|dark|Light|Dark)$
            type: string
            x-pattern-message: "Must be `Light`, or `Dark`"
          topologyLabelMap:
            $ref: '#/components/schemas/TopologyLabelMap'
          refreshInterval:
            description: Interval of time (in seconds) to automatically refresh the
              dashboard. A value of 0 means we never automatically refresh the dashboard.
            example: 5
            format: int32
            type: integer
          timeRange:
            $ref: '#/components/schemas/ResolvableTimeRange'
          layout:
            $ref: '#/components/schemas/Layout'
          panels:
            description: Children panels that the container panel contains.
            items:
              $ref: '#/components/schemas/Panel'
            type: array
          variables:
            description: Variables that could be applied to the panel's children.
            items:
              $ref: '#/components/schemas/Variable'
            type: array
          coloringRules:
            description: Coloring rules to color the panel/data with.
            items:
              $ref: '#/components/schemas/ColoringRule'
            type: array
        required:
        - title
        type: object
    NotificationThresholdSyncDefinition:
      properties:
        thresholdType:
          deprecated: true
          description: |-
            This property is deprecated. The system will automatically infer the value of this field from the query going forward, so the user-specified value will no longer be honored.
            Threshold type. Possible values are:
             1. `message`
             2. `group`

            Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it to `message`.
          type: string
        operator:
          description: |-
            Criterion to be applied when comparing actual result count with expected count. Possible values are:
             1. `eq`
             2. `gt`
             3. `ge`
             4. `lt`
             5. `le`
          type: string
        count:
          description: Expected result count.
          type: integer
      required:
      - count
      - operator
      type: object
    ReportFilterSyncDefinition:
      properties:
        fieldName:
          description: "The name af the field being filtered on, as listed in PanelField."
          type: string
        label:
          description: "The name of the field being filtered on, as displayed to the\
            \ user."
          type: string
        defaultValue:
          description: The default value of the parameter.
          type: string
        filterType:
          description: Type of filter. Can only be `numeric` or `textbox`.
          type: string
        properties:
          description: Visual settings for the panel.
          type: string
        panelIds:
          description: A list of panel identifiers that the filter applies to.
          items:
            type: string
          type: array
      required:
      - fieldName
      - filterType
      - label
      - panelIds
      - properties
      type: object
    ReportPanelSyncDefinition:
      properties:
        name:
          description: The title of the panel.
          type: string
        viewerType:
          description: |-
            Type of [area chart](https://help.sumologic.com/Dashboards-and-Alerts/Dashboards/Chart-Panel-Types). Supported values are:
              1. `table` for Table
              2. `bar` for Bar Chart
              3. `column` for Column Chart
              4. `line` for Line Chart
              5. `area` for Area Chart
              6. `pie` for Pie Chart
              7. `svv` for Single Value Viewer
              8. `title` for Title Panel
              9. `text` for Text Panel

            Values 1-7 are used for Data Panels.
          type: string
        detailLevel:
          description: |-
            Supported values are:
              - `1` for small
              - `2` for medium
              - `3` for large
          type: integer
        queryString:
          description: "The query to run, for panels associated to log searches."
          type: string
        metricsQueries:
          description: "The query or queries to run, for panels associated to metrics\
            \ searches."
          items:
            $ref: '#/components/schemas/MetricsQuerySyncDefinition'
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        x:
          description: The horizontal position of the panel. A sumo screen is divided
            into 24 columns. The value for x can be any integer from 0 to 24.
          type: integer
        "y":
          description: The vertical position of the panel. A sumo screen is divided
            into 24 rows. The value for y can be any integer from 0 to 24.
          type: integer
        width:
          description: The width of the panel.
          type: integer
        height:
          description: The height of the panel.
          type: integer
        properties:
          description: Visual settings for the panel.
          type: string
        id:
          description: A string identifier that you can use to refer to the panel
            in filters.panelIds.
          type: string
        desiredQuantizationInSecs:
          description: The quantization interval aligns your time series data to common
            intervals on the time axis (for example every one minute) to optimize
            the visualization and performance.
          type: integer
        queryParameters:
          description: The parameters for parameterized searches.
          items:
            $ref: '#/components/schemas/QueryParameterSyncDefinition'
          type: array
        autoParsingInfo:
          $ref: '#/components/schemas/ReportAutoParsingInfo'
      required:
      - detailLevel
      - height
      - id
      - metricsQueries
      - name
      - properties
      - queryParameters
      - queryString
      - timeRange
      - viewerType
      - width
      - x
      - "y"
      type: object
    SavedSearchWithScheduleSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - properties:
          search:
            $ref: '#/components/schemas/SavedSearchSyncDefinition'
          searchSchedule:
            $ref: '#/components/schemas/SearchScheduleSyncDefinition'
          description:
            description: Description of the saved search.
            type: string
        required:
        - description
        - search
        type: object
    SavedSearchSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/SavedSearchSyncDefinitionBase'
      - properties:
          defaultTimeRange:
            description: |-
              Default time range for the search. Possible types of time ranges are:
                - relative time range: e.g. "-1d -12h" represents a time range from one day ago to 12 hours ago.
                - absolute time range: e.g. "01-04-2017 20:32:00 to 01-04-2017 20:35:00" represents a time range
                from April 1st, 2017 at 8:32 PM until April 1st, 2017 at 8:35 PM.
            type: string
        required:
        - defaultTimeRange
        type: object
    SaveToViewNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - properties:
          viewName:
            description: Name of the View to save the notification to.
            type: string
        required:
        - viewName
        type: object
    SaveToLookupNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - properties:
          lookupFilePath:
            description: The path of the lookup table that will store the results
              of the scheduled search.
            example: /personal/folder/testLookupTable
            type: string
          isLookupMergeOperation:
            description: This indicates whether the file contents will be merged with
              existing data in the lookup table or not. If this is true then data
              with the same primary keys will be updated while the rest of the rows
              will be appended.
            example: false
            type: boolean
        required:
        - isLookupMergeOperation
        - lookupFilePath
        type: object
    ScheduleNotificationSyncDefinition:
      discriminator:
        propertyName: taskType
      example:
        taskType: taskType
      properties:
        taskType:
          description: Delivery channel for notifications.
          type: string
      required:
      - taskType
      type: object
    ScheduleSearchParameterSyncDefinition:
      example:
        name: name
        value: value
      properties:
        name:
          description: Name of scheduled search parameter.
          maxLength: 60
          type: string
        value:
          description: Value of scheduled search parameter.
          maxLength: 300
          type: string
      required:
      - name
      - value
      type: object
    SearchScheduleSyncDefinition:
      properties:
        cronExpression:
          description: "Cron-like expression specifying the search's schedule. Field\
            \ scheduleType must be set to \"Custom\", otherwise, scheduleType takes\
            \ precedence over cronExpression."
          example: 0 0/15 * * * ? *
          type: string
        displayableTimeRange:
          description: "A human-friendly text describing the query time range. For\
            \ e.g. \"-2h\", \"last three days\", \"team default time\". This value\
            \ can not be set via API."
          example: -2h
          type: string
        parseableTimeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        timeZone:
          description: "Time zone identifier for time specification. Either an abbreviation\
            \ such as \"PST\", a full name such as \"America/Los_Angeles\", or a custom\
            \ ID such as \"GMT-8:00\". Note that the support of abbreviations is for\
            \ JDK 1.1.x compatibility only and full names should be used."
          type: string
        threshold:
          $ref: '#/components/schemas/NotificationThresholdSyncDefinition'
        notification:
          $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
        scheduleType:
          description: |-
            Run schedule of the scheduled search. Set to "Custom" to specify the schedule with a CRON expression.Please note that with Custom, 1Day and 1Week schedule types you need to provide the corresponding cron expression to determine when to actually run the search. e.g. Sample Valid Cron for 1Day is "0 0 16 ? * 2-6 *". Possible schedule types are:
              - `RealTime`
              - `15Minutes`
              - `1Hour`
              - `2Hours`
              - `4Hours`
              - `6Hours`
              - `8Hours`
              - `12Hours`
              - `1Day`
              - `1Week`
              - `Custom`
          type: string
        muteErrorEmails:
          description: "If enabled, emails are not sent out in case of errors with\
            \ the search."
          type: boolean
        parameters:
          description: A list of scheduled search parameters.
          items:
            $ref: '#/components/schemas/ScheduleSearchParameterSyncDefinition'
          maxLength: 50
          type: array
      required:
      - notification
      - parseableTimeRange
      - scheduleType
      - timeZone
      type: object
    ServiceNowSearchNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - properties:
          externalId:
            description: ServiceNow identifier.
            type: string
          fields:
            $ref: '#/components/schemas/ServiceNowFieldsSyncDefinition'
        required:
        - externalId
        type: object
    ServiceNowFieldsSyncDefinition:
      properties:
        eventType:
          description: The category that the event source uses to identify the event.
          type: string
        severity:
          description: |-
            An integer value representing the severity of the alert. Supported values are:
              - `0` for Clear
              - `1` for Critical
              - `2` for Major
              - `3` for Minor
              - `4` for Warning
          type: integer
        resource:
          description: The component on the node to which the event applies.
          type: string
        node:
          description: The physical or virtual device on which the event occurred.
          type: string
      type: object
    WebhookSearchNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - properties:
          webhookId:
            description: Identifier of the webhook connection.
            type: string
          payload:
            description: "A JSON object in the format required by the target WebHook\
              \ URL. For details on variables that can be used as parameters within\
              \ your JSON object, please refer to Sumo Logic Doc Hub."
            type: string
          itemizeAlerts:
            default: false
            description: "If this field is set to true, one webhook per result will\
              \ be sent when the trigger conditions are met"
            example: true
            type: boolean
          maxItemizedAlerts:
            description: The maximum number of results for which we send separate
              alerts. This value should be between 1 and 100.
            example: 10
            format: int32
            minimum: 0
            type: integer
        required:
        - webhookId
        type: object
    CseSignalNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - properties:
          recordType:
            description: Name of the Cloud SIEM Enterprise Record to be created.
            type: string
        required:
        - recordType
        type: object
    MetricsSavedSearchSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - properties:
          description:
            description: Item description in the content library.
            example: Long and detailed description
            maxLength: 8192
            type: string
          timeRange:
            $ref: '#/components/schemas/ResolvableTimeRange'
          logQuery:
            description: Query used to add an overlay to the chart.
            example: my_metric | timeslice 1m | count by _timeslice
            maxLength: 10240
            type: string
          metricsQueries:
            description: Metrics queries.
            items:
              $ref: '#/components/schemas/MetricsSavedSearchQuerySyncDefinition'
            type: array
          desiredQuantizationInSecs:
            description: Desired quantization in seconds.
            example: 60
            format: int32
            minimum: 0
            type: integer
          properties:
            description: Chart properties. This field is optional.
            example: "{ \\\"key\\\": \\\"value\\\" }"
            type: string
        required:
        - desiredQuantizationInSecs
        - metricsQueries
        - timeRange
        type: object
    MetricsSearchSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - properties:
          timeRange:
            $ref: '#/components/schemas/ResolvableTimeRange'
          description:
            description: Description of the metrics search page.
            example: CPU and memory utilization for RDS cluster
            type: string
          queries:
            description: Queries of the metrics search page.
            example:
            - queryString: CPU_Idle Namespace=RDS
              queryType: Metrics
              queryKey: A
            - queryString: Mem_Used Namespace=RDS
              queryType: Metrics
              queryKey: B
            items:
              $ref: '#/components/schemas/Query'
            type: array
          visualSettings:
            description: |
              Visual settings of the metrics search page. Must be a string representing a valid JSON object.
            example: "{\"title\": {\"fontsize\": 9}}"
            type: string
        required:
        - queries
        - timeRange
        type: object
    LookupTableSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - $ref: '#/components/schemas/ExportableLookupTableInfo'
    CollectorRegistrationTokenResponse:
      allOf:
      - $ref: '#/components/schemas/TokenBaseResponse'
      - properties:
          encodedTokenAndUrl:
            description: The token and URL used to register the Collector as an encoded
              string.
            type: string
        required:
        - encodedTokenAndUrl
        type: object
    CollectorResourceIdentity:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentity'
    OrgIdentity:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentity'
    SourceResourceIdentity:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentity'
      - properties:
          collectorId:
            default: Unknown
            description: The unique identifier of the Collector this Source belongs
              to.
            type: string
          collectorName:
            default: Unknown
            description: The name of the Collector this Source belongs to.
            type: string
        type: object
    IngestBudgetResourceIdentity:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentity'
      - properties:
          ingestBudgetFieldValue:
            default: Unknown
            description: The unique field value of the ingest budget v1. This will
              be empty for v2 budgets.
            type: string
          scope:
            default: Unknown
            description: The scope of the ingest budget v2. This will be empty for
              v1 budgets.
            type: string
          budgetType:
            description: "The type of budget. Supported values are:  * `dailyVolume`\
              \ * `minuteVolume`"
            type: string
        type: object
    LogsToMetricsRuleIdentity:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentity'
    CollectorLimitApproachingTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    OTCollectorLimitApproachingTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    AgentRemoteConfigStatusTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    GcpMetricsCollectionBrokenTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    OAuthRefreshFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - properties:
          exceptionType:
            description: The type of exception received while attempting OAuth.
            type: string
          exceptionMessage:
            description: The error message received with the failed OAuth request.
            type: string
        type: object
    IngestBudgetExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/DataIngestAffectedTracker'
    CollectionAffectedDueToIngestBudgetTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/DataIngestAffectedTracker'
      - properties:
          associatedBudgetNames:
            description: The list of budget names.
            type: string
        type: object
    CollectionS3AccessDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/S3CollectionErrorTracker'
      - properties:
          bucketName:
            description: The bucket name of the associated Source.
            type: string
          accessKey:
            description: "The access key used to make the request. In the case of\
              \ IAM roles, this is the temporary key used for authentication."
            type: string
        type: object
    CollectionS3GetObjectAccessDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/S3CollectionErrorTracker'
      - properties:
          bucketName:
            description: The bucket name of the associated Source.
            type: string
          accessKey:
            description: "The access key used to make the request. In the case of\
              \ IAM roles, this is the temporary key used for authentication."
            type: string
        type: object
    CollectionS3InvalidKeyTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/S3CollectionErrorTracker'
      - properties:
          accessKey:
            description: "The access key used to make the request. In the case of\
              \ IAM roles, this is the temporary key used for authentication."
            type: string
        type: object
    CollectionS3ListingFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/S3CollectionErrorTracker'
      - properties:
          bucketName:
            description: The bucket name of the associated Source.
            type: string
        type: object
    CollectionS3SlowListingTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/S3CollectionErrorTracker'
      - properties:
          bucketName:
            description: The bucket name of the associated Source.
            type: string
          flaggedAfterMinutes:
            description: The number of minutes elapsed in scanning after which this
              incident was created.
            type: string
        type: object
    InstalledCollectorOfflineTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - properties:
          minutesSinceLastHeartbeat:
            description: The number of minutes since the last heartbeat for the collector
              was received.
            type: string
        type: object
    IngestThrottlingTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/DataIngestAffectedTracker'
      - properties:
          dataType:
            description: The type of data for which the rate limit was enabled. The
              possible values are `LogIngest` and `MetricsIngest`.
            type: string
        type: object
    AgentOpampConnectionStatusTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - type: object
    CollectionInvalidFilePathTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/FileCollectionErrorTracker'
      - properties:
          path:
            description: The path to the file.
            type: string
        type: object
    CollectionPathAccessDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/FileCollectionErrorTracker'
      - properties:
          path:
            description: The path to the file.
            type: string
        type: object
    CollectionRemoteConnectionFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/FileCollectionErrorTracker'
    CollectionDockerClientBuildingFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    CollectionWindowsEventChannelConnectionFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    CollectionWindowsHostConnectionFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    CollectionAwsMetadataTagsFetchDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    CollectionCloudWatchTagsFetchDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'
    CollectionCloudWatchListMetricsDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'
      - properties:
          errorCode:
            description: The error code from AWS for the request made to get metrics.
            type: string
          errorMessage:
            description: The error message from AWS for the request made to get metrics.
            type: string
        type: object
    CollectionCloudWatchGetStatisticsDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'
      - properties:
          errorCode:
            description: The error code from AWS for the request made to get metrics.
            type: string
          errorMessage:
            description: The error message from AWS for the request made to get metrics.
            type: string
        type: object
    CollectionCloudWatchGetStatisticsThrottledTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'
    MetricsHighCardinalityDetectedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - properties:
          retention:
            description: The retention of metrics that approached the limit.
            type: string
        type: object
    MetricsCardinalityLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - properties:
          retention:
            description: The retention of metrics that exceeded the limit.
            type: string
        type: object
    HighCardinalityDimensionDroppedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - properties:
          dimension:
            description: The dropped high cardinality dimension.
            type: string
        type: object
    LogsToMetricsRuleDisabledTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    SpanIngestLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    CollectionAwsInventoryThrottledTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsInventoryCollectionErrorTracker'
    CollectionAwsInventoryUnauthorizedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsInventoryCollectionErrorTracker'
    CSEWindowsInvalidConfigurationTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsErrorTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          sensorUserName:
            description: The sensor's user name.
            type: string
        type: object
    CSEWindowsRuntimeErrorTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsErrorTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          sensorUserName:
            description: The sensor's user name.
            type: string
        type: object
    CSEWindowsExcessiveEventLogMonitorsTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsErrorTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          sensorUserName:
            description: The sensor's user name.
            type: string
        type: object
    CSEWindowsRuntimeWarningTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsErrorTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          sensorUserName:
            description: The sensor's user name.
            type: string
        type: object
    CSEWindowsInvalidUserPermissionsTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsAccessErrorTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          sensorUserName:
            description: The sensor's user name.
            type: string
          folderPath:
            description: The path of the folder.
            type: string
          filePath:
            description: The complete file path.
            type: string
          source:
            description: The HostName + EventLog name for EventLogs and Domain name
              for Directory..
            type: string
        type: object
    CSEWindowsWriteQueueFilesToSensorDirectoryFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsAccessErrorTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          sensorUserName:
            description: The sensor's user name.
            type: string
          folderPath:
            description: The path of the folder.
            type: string
          filePath:
            description: The complete file path.
            type: string
          source:
            description: The HostName + EventLog name for EventLogs and Domain name
              for Directory..
            type: string
        type: object
    CSEWindowsStorageLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsSensorOutOfStorageTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          folderPath:
            description: The path of the folder.
            type: string
          folderSizeLimit:
            description: The complete file path.
            type: string
          currentFolderSize:
            description: Current size of the folder.
            type: string
          percentageAvailableDiskSpaceLimit:
            description: The percentage available disk space limit.
            type: string
          currentPercentageAvailableDiskSpace:
            description: The current percentage available disk space.
            type: string
          lastError:
            description: The last error.
            type: string
        type: object
    CSEWindowsStorageLimitApproachingTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsSensorOutOfStorageTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          folderPath:
            description: The path of the folder.
            type: string
          folderSizeLimit:
            description: The complete file path.
            type: string
          currentFolderSize:
            description: Current size of the folder.
            type: string
          percentageAvailableDiskSpaceLimit:
            description: The percentage available disk space limit.
            type: string
          currentPercentageAvailableDiskSpace:
            description: The current percentage available disk space.
            type: string
          lastError:
            description: The last error.
            type: string
        type: object
    CSEWindowsErrorAppendingToQueueFilesTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsSensorOutOfStorageTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          folderPath:
            description: The path of the folder.
            type: string
          folderSizeLimit:
            description: The complete file path.
            type: string
          currentFolderSize:
            description: Current size of the folder.
            type: string
          percentageAvailableDiskSpaceLimit:
            description: The percentage available disk space limit.
            type: string
          currentPercentageAvailableDiskSpace:
            description: The current percentage available disk space.
            type: string
          lastError:
            description: The last error.
            type: string
        type: object
    CSEWindowsErrorParsingRecordsTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsParsingErrorTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          source:
            description: The HostName + EventLog name for EventLogs and Domain name
              for Directory.
            type: string
          errorCount:
            description: The error count.
            type: string
          lastErrorMessage:
            description: The last error message.
            type: string
        type: object
    CSEWindowsExcessiveFilesPendingUploadTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsExcessiveBacklogTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          source:
            description: The HostName + EventLog name for EventLogs and Domain name
              for Directory.
            type: string
          lastErrorMessage:
            description: The last error message.
            type: string
          numberOfFilesPending:
            description: The number of files pending upload.
            type: string
          oldestTimestampInQueue:
            description: The oldest timestamp in the queue.
            type: string
        type: object
    CSEWindowsOldestRecordTimestampExceedsThresholdTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsExcessiveBacklogTracker'
      - properties:
          sensorId:
            description: The sensor ID.
            type: string
          sensorHostname:
            description: The sensor's hostname.
            type: string
          source:
            description: The HostName + EventLog name for EventLogs and Domain name
              for Directory.
            type: string
          lastErrorMessage:
            description: The last error message.
            type: string
          numberOfFilesPending:
            description: The number of files pending upload.
            type: string
          oldestTimestampInQueue:
            description: The oldest timestamp in the queue.
            type: string
        type: object
    CSEWindowsSensorOfflineTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - properties:
          minutesWithNoHeartbeatBeforeMarkingOffline:
            description: The number of minutes without heartbeat after which sensor
              is marked offline.
            type: string
        type: object
    MetricsMetadataKeyLengthLimitExceeded:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataValueLengthLimitExceeded:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataKeyValuePairsLimitExceeded:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataTotalMetadataSizeLimitExceeded:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricNameMissingTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricNameErrorTracker'
    MetricNameAsMetatagTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricNameErrorTracker'
    OTCReceiverNoSpansObservedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OTCReceiverErrorTracker'
      - properties:
          instanceId:
            description: "The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`."
            type: string
          instanceAddress:
            description: "The collector instance address, e.g. `172.16.1.14`."
            type: string
          receiverId:
            description: "The collector receiver ID, e.g. `otlphttp/2`."
            type: string
        type: object
    OTCReceiverSpansDroppedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OTCReceiverErrorTracker'
      - properties:
          instanceId:
            description: "The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`."
            type: string
          instanceAddress:
            description: "The collector instance address, e.g. `172.16.1.14`."
            type: string
          receiverId:
            description: "The collector receiver ID, e.g. `otlphttp/2`."
            type: string
          count:
            description: The count of dropped spans.
            type: string
        type: object
    OTCReceiverSpansRefusedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OTCReceiverErrorTracker'
      - properties:
          instanceId:
            description: "The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`."
            type: string
          instanceAddress:
            description: "The collector instance address, e.g. `172.16.1.14`."
            type: string
          receiverId:
            description: "The collector receiver ID, e.g. `otlphttp/2`."
            type: string
          count:
            description: The count of refused spans.
            type: string
        type: object
    OTCExporterHighFailuresExportingSpansTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OTCExporterErrorTracker'
      - properties:
          instanceId:
            description: "The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`."
            type: string
          instanceAddress:
            description: "The collector instance address, e.g. `172.16.1.14`."
            type: string
          exporterId:
            description: "The collector exporter ID, e.g. `otlphttp`."
            type: string
          count:
            description: The failure count.
            type: string
        type: object
    OTCExporterLargeTraceBatchesTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OTCExporterErrorTracker'
      - properties:
          instanceId:
            description: "The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`."
            type: string
          instanceAddress:
            description: "The collector instance address, e.g. `172.16.1.14`."
            type: string
          exporterId:
            description: "The collector exporter ID, e.g. `otlphttp`."
            type: string
          count:
            description: The failure count.
            type: string
        type: object
    OTCProcessHighMemoryUsageTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OTCProcessErrorTracker'
      - properties:
          instanceId:
            description: "The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`."
            type: string
          instanceAddress:
            description: "The collector instance address, e.g. `172.16.1.14`."
            type: string
          memoryUsage:
            description: "The collector memory usage in bytes, e.g. `142606592`"
            type: string
          memoryLimit:
            description: "The collector memory limit (if set) in bytes, e.g. `4000000000`"
            type: string
        type: object
    OTCProcessSpansDroppedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OTCProcessErrorTracker'
      - properties:
          instanceId:
            description: "The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`."
            type: string
          instanceAddress:
            description: "The collector instance address, e.g. `172.16.1.14`."
            type: string
          processorId:
            description: "The collector processor ID, e.g. `cascading_filter`."
            type: string
          count:
            description: The count of dropped spans.
            type: string
        type: object
    OTCProcessSpansRefusedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OTCProcessErrorTracker'
      - properties:
          instanceId:
            description: "The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`."
            type: string
          instanceAddress:
            description: "The collector instance address, e.g. `172.16.1.14`."
            type: string
          processorId:
            description: "The collector processor ID, e.g. `cascading_filter`."
            type: string
          count:
            description: The count of refused spans.
            type: string
        type: object
    OTCWarningProcessingSpansTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OTCProcessErrorTracker'
      - properties:
          instanceId:
            description: "The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`."
            type: string
          instanceAddress:
            description: "The collector instance address, e.g. `172.16.1.14`."
            type: string
          processorId:
            description: "The collector processor ID, e.g. `cascading_filter`."
            type: string
          message:
            description: The warning message.
            type: string
        type: object
    OTCErrorProcessingSpansTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OTCProcessErrorTracker'
      - properties:
          instanceId:
            description: "The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`."
            type: string
          instanceAddress:
            description: "The collector instance address, e.g. `172.16.1.14`."
            type: string
          processorId:
            description: "The collector processor ID, e.g. `cascading_filter`."
            type: string
          message:
            description: The error message.
            type: string
        type: object
    AzureEventHubConnectionErrorTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - properties:
          reason:
            description: The specific reason of the connection error
            type: string
        type: object
    AzureEventHubPermissionErrorTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - properties:
          reason:
            description: The specific reason of the permission error
            type: string
    AzureMetricsInvalidClientSecretTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    AzureMetricsNoAccessibleSubscriptionsTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    FsrTooManyFieldsCreationErrorTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    PermissionSubject:
      description: Identifier for the entity (subject) that is granted the permission
        on resource(s).
      properties:
        subjectType:
          description: "Type of subject for the permission. Valid values are: `user`\
            \ or `role` or `org`."
          example: role
          pattern: ^(user|role|org)$
          type: string
          x-pattern-message: "must be one of the following: `user`, `role`, `org`"
        subjectId:
          description: "The identifier that belongs to the subject type chosen above.\
            \ For e.g. if the subjectType is set to `user`, subjectId should be the\
            \ identifier of a user (same goes for `role` or `org` subjectType)."
          example: 0000000006743FDA
          type: string
      required:
      - subjectId
      - subjectType
      type: object
    PermissionIdentifier:
      allOf:
      - $ref: '#/components/schemas/PermissionSubject'
      - properties:
          targetId:
            description: The identifier that belongs to the resource this permission
              assignment applies to.
            example: 0000000006743FE2
            type: string
        required:
        - targetId
        type: object
      example:
        targetId: 0000000006743FE2
        subjectType: role
        subjectId: 0000000006743FDA
    PermissionIdentifiers:
      example:
        permissionIdentifiers:
        - targetId: 0000000006743FE2
          subjectType: role
          subjectId: 0000000006743FDA
        - targetId: 0000000006743FE2
          subjectType: role
          subjectId: 0000000006743FDA
        - targetId: 0000000006743FE2
          subjectType: role
          subjectId: 0000000006743FDA
        - targetId: 0000000006743FE2
          subjectType: role
          subjectId: 0000000006743FDA
        - targetId: 0000000006743FE2
          subjectType: role
          subjectId: 0000000006743FDA
      properties:
        permissionIdentifiers:
          description: List of permission identifiers.
          items:
            $ref: '#/components/schemas/PermissionIdentifier'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - permissionIdentifiers
      type: object
    PermissionStatementDefinition:
      allOf:
      - $ref: '#/components/schemas/Permissions'
      - properties:
          subjectType:
            description: "Type of subject for the permission. Valid values are: `role`\
              \ or `org`."
            example: role
            pattern: ^(role|org)$
            type: string
            x-pattern-message: "must be one of the following: `role` or `org`"
          subjectId:
            description: "The identifier that belongs to the subject type chosen above.\
              \ For e.g. if the subjectType is set to `role`, subjectId should be\
              \ the identifier of a role.  Similarly, if the subjectType is `org`,\
              \ the subjectId should be the identifier of the same org,  which owns\
              \ the resource target."
            example: 0000000006743FDA
            type: string
          targetId:
            description: The identifier that belongs to the resource this permission
              assignment applies to.
            example: 0000000006743FE2
            type: string
        required:
        - subjectId
        - subjectType
        - targetId
        type: object
      example:
        targetId: 0000000006743FE2
        permissions:
        - Read
        - Delete
        subjectType: role
        subjectId: 0000000006743FDA
    PermissionStatementDefinitions:
      example:
        permissionStatementDefinitions:
        - targetId: 0000000006743FE2
          permissions:
          - Read
          - Delete
          subjectType: role
          subjectId: 0000000006743FDA
        - targetId: 0000000006743FE2
          permissions:
          - Read
          - Delete
          subjectType: role
          subjectId: 0000000006743FDA
        - targetId: 0000000006743FE2
          permissions:
          - Read
          - Delete
          subjectType: role
          subjectId: 0000000006743FDA
        - targetId: 0000000006743FE2
          permissions:
          - Read
          - Delete
          subjectType: role
          subjectId: 0000000006743FDA
        - targetId: 0000000006743FE2
          permissions:
          - Read
          - Delete
          subjectType: role
          subjectId: 0000000006743FDA
      properties:
        permissionStatementDefinitions:
          description: List of permission statement definitions.
          items:
            $ref: '#/components/schemas/PermissionStatementDefinition'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - permissionStatementDefinitions
      type: object
    PermissionStatement:
      allOf:
      - $ref: '#/components/schemas/PermissionStatementDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      example:
        createdAt: 2018-10-16T09:10:00Z
        targetId: 0000000006743FE2
        createdBy: 0000000006743FDD
        permissions:
        - Read
        - Delete
        modifiedAt: 2018-10-16T09:10:00Z
        modifiedBy: 0000000006743FE8
        subjectType: role
        subjectId: 0000000006743FDA
      type: object
    PermissionStatements:
      example:
        permissionStatements:
        - createdAt: 2018-10-16T09:10:00Z
          targetId: 0000000006743FE2
          createdBy: 0000000006743FDD
          permissions:
          - Read
          - Delete
          modifiedAt: 2018-10-16T09:10:00Z
          modifiedBy: 0000000006743FE8
          subjectType: role
          subjectId: 0000000006743FDA
        - createdAt: 2018-10-16T09:10:00Z
          targetId: 0000000006743FE2
          createdBy: 0000000006743FDD
          permissions:
          - Read
          - Delete
          modifiedAt: 2018-10-16T09:10:00Z
          modifiedBy: 0000000006743FE8
          subjectType: role
          subjectId: 0000000006743FDA
      properties:
        permissionStatements:
          description: A list of permission statements.
          items:
            $ref: '#/components/schemas/PermissionStatement'
          type: array
      required:
      - permissionStatements
      type: object
    PermissionSummaryMeta:
      description: "Permission Summary with additional information like inheritance,\
        \ revocation, etc about the permission."
      example:
        isRevoked: true
        isRecursive: true
        isExplicit: true
        isSystemDefined: true
        name: Read
        isInherited: true
      properties:
        name:
          description: "Name of the permission. Example values are: `Read`, `Update`,\
            \ `Create`, etc."
          example: Read
          type: string
        isInherited:
          description: A true value implies that the permission is inherited from
            some ancestors of the resource. A false value implies that the permission
            is explicitly assigned to the resource.
          example: true
          type: boolean
        isExplicit:
          description: A true value implies that the permission is explicitly assigned
            to the resource. A false value implies that the permission is not explicitly
            assigned to the resource.
          example: true
          type: boolean
        isRevoked:
          description: A true value implies that the capability required for this
            permission has been revoked.
          example: true
          type: boolean
        isRecursive:
          description: A true value implies that the permission is recursively cascaded
            down to all the direct and indirect children of the resource.
          example: true
          type: boolean
        isSystemDefined:
          description: A true value implies that the permission is defined by the
            system on the resource and can not be modified by the user. A false value
            implies that the permission is defined by the user on the resource and
            can be modified by the user.
          example: true
          type: boolean
      required:
      - isExplicit
      - isInherited
      - isRecursive
      - isRevoked
      - isSystemDefined
      - name
      type: object
    PermissionSummaryBySubjects:
      allOf:
      - $ref: '#/components/schemas/PermissionSubject'
      - properties:
          permissionSummaries:
            items:
              $ref: '#/components/schemas/PermissionSummaryMeta'
            type: array
        required:
        - permissionSummaries
        type: object
      description: A list of PermissionSubjects and PermissionSummaryMeta(s) associated
        with each subject.
      example:
        permissionSummaries:
        - isRevoked: true
          isRecursive: true
          isExplicit: true
          isSystemDefined: true
          name: Read
          isInherited: true
        - isRevoked: true
          isRecursive: true
          isExplicit: true
          isSystemDefined: true
          name: Read
          isInherited: true
        subjectType: role
        subjectId: 0000000006743FDA
    PermissionSummariesBySubjects:
      example:
        permissionSummariesBySubjects:
        - permissionSummaries:
          - isRevoked: true
            isRecursive: true
            isExplicit: true
            isSystemDefined: true
            name: Read
            isInherited: true
          - isRevoked: true
            isRecursive: true
            isExplicit: true
            isSystemDefined: true
            name: Read
            isInherited: true
          subjectType: role
          subjectId: 0000000006743FDA
        - permissionSummaries:
          - isRevoked: true
            isRecursive: true
            isExplicit: true
            isSystemDefined: true
            name: Read
            isInherited: true
          - isRevoked: true
            isRecursive: true
            isExplicit: true
            isSystemDefined: true
            name: Read
            isInherited: true
          subjectType: role
          subjectId: 0000000006743FDA
      properties:
        permissionSummariesBySubjects:
          description: A list of PermissionSubjects and PermissionSummaryMeta(s) associated
            with each subject.
          items:
            $ref: '#/components/schemas/PermissionSummaryBySubjects'
          type: array
      required:
      - permissionSummariesBySubjects
      type: object
    ListPermissionsResponse:
      example:
        permissionStatements:
        - createdAt: 2018-10-16T09:10:00Z
          targetId: 0000000006743FE2
          createdBy: 0000000006743FDD
          permissions:
          - Read
          - Delete
          modifiedAt: 2018-10-16T09:10:00Z
          modifiedBy: 0000000006743FE8
          subjectType: role
          subjectId: 0000000006743FDA
        - createdAt: 2018-10-16T09:10:00Z
          targetId: 0000000006743FE2
          createdBy: 0000000006743FDD
          permissions:
          - Read
          - Delete
          modifiedAt: 2018-10-16T09:10:00Z
          modifiedBy: 0000000006743FE8
          subjectType: role
          subjectId: 0000000006743FDA
      properties:
        permissionStatements:
          description: A list of permission statements.
          items:
            $ref: '#/components/schemas/PermissionStatement'
          type: array
      required:
      - permissionStatements
      type: object
    Permissions:
      properties:
        permissions:
          description: List of permissions.
          example:
          - Read
          - Delete
          items:
            type: string
          type: array
      required:
      - permissions
      type: object
    Email:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          recipients:
            description: A list of email addresses to send to when the rule fires.
            items:
              example: john@doe.com
              type: string
            type: array
          subject:
            description: The subject line of the email.
            example: Sample Email Subject
            type: string
          messageBody:
            description: The message body of the email to send.
            example: Sample Email Message Body
            type: string
          timeZone:
            description: "Time zone for the email content. All dates/times will be\
              \ displayed in this timeZone in the email payload. Follow the format\
              \ in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
            example: America/Los_Angeles
            type: string
        required:
        - recipients
        - subject
        type: object
    AWSLambda:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
          resolutionPayloadOverride:
            description: The override of the resolution JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    AzureFunctions:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
          resolutionPayloadOverride:
            description: The override of the resolution JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    Datadog:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    HipChat:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    PagerDuty:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
          resolutionPayloadOverride:
            description: The override of the resolution JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    Slack:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
          resolutionPayloadOverride:
            description: The override of the resolution JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    NewRelic:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    Jira:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    Opsgenie:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
          resolutionPayloadOverride:
            description: The override of the resolution JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    MicrosoftTeams:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
          resolutionPayloadOverride:
            description: The override of the resolution JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    ServiceNow:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          connectionSubtype:
            $ref: '#/components/schemas/ConnectionSubtype'
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
          resolutionPayloadOverride:
            description: The override of the resolution JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    SumoCloudSOAR:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          connectionSubtype:
            $ref: '#/components/schemas/ConnectionSubtype'
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    Webhook:
      allOf:
      - $ref: '#/components/schemas/Action'
      - properties:
          connectionId:
            description: The identifier of the connection.
            example: 000000000BF39283
            type: string
          payloadOverride:
            description: The override of the default JSON payload of the connection.
              Should be in JSON format.
            type: string
          resolutionPayloadOverride:
            description: The override of the resolution JSON payload of the connection.
              Should be in JSON format.
            type: string
        required:
        - connectionId
        type: object
    ChartDataRequest:
      description: Request payload for monitor chart data visualization.
      properties:
        monitorType:
          description: |-
            The type of monitor. Valid values:
              1. `Logs`: A logs query monitor.
              2. `Metrics`: A metrics query monitor.
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
          x-pattern-message: should be either 'Logs' or 'Metrics'
        queries:
          description: All queries from the monitor.
          items:
            $ref: '#/components/schemas/MonitorQuery'
          type: array
          uniqueItems: true
        triggers:
          description: Defines the conditions of when to send notifications.
          items:
            $ref: '#/components/schemas/TriggerCondition'
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
      required:
      - monitorType
      - queries
      type: object
    ChartDataResult:
      description: Response for monitor chart data visualization.
      properties:
        warnings:
          description: Execution warnings of queries.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
        series:
          description: List of time series of the monitor chart data.
          items:
            $ref: '#/components/schemas/SeriesData'
          type: array
      type: object
    OutlierSeriesDataPoint:
      allOf:
      - $ref: '#/components/schemas/DataPoint'
      - description: Data point of outlier series.
        properties:
          x:
            description: Epoch unix time stamp.
            example: 1617146107
            format: int64
            type: integer
          "y":
            $ref: '#/components/schemas/OutlierDataValue'
        required:
        - x
        - "y"
        type: object
    StaticSeriesDataPoint:
      allOf:
      - $ref: '#/components/schemas/DataPoint'
      - description: Data point of static series.
        properties:
          x:
            description: Epoch unix time stamp.
            example: 1617146107
            format: int64
            type: integer
          "y":
            description: The value of the data point.
            example: 70.0
            format: double
            type: number
        required:
        - x
        - "y"
        type: object
    SearchQueryFieldsAndTypes:
      items:
        $ref: '#/components/schemas/SearchQueryFieldAndType'
      type: array
    SearchQueryFieldAndType:
      description: A log field and its associated type
      properties:
        fieldName:
          description: Log field parsed from log search query.
          example: status_code
          type: string
        fieldType:
          description: |-
            The type of the field inferred from log results and explicit configuration. Valid values:
              1. `NumericValue`: A field with a numerical type.
              2. `DistinctCount`: A field with a dimensional type.
          pattern: ^(NumericValue|DistinctCount)$
          type: string
          x-pattern-message: should be either 'NumericValue' or 'DistinctCount'
        isImplicitField:
          description: Indicates if the field is implicit or user defined.
          example: true
          type: boolean
      type: object
    TriggerCondition:
      discriminator:
        mapping:
          StaticCondition: '#/components/schemas/StaticCondition'
          LogsStaticCondition: '#/components/schemas/LogsStaticCondition'
          MetricsStaticCondition: '#/components/schemas/MetricsStaticCondition'
          LogsOutlierCondition: '#/components/schemas/LogsOutlierCondition'
          MetricsOutlierCondition: '#/components/schemas/MetricsOutlierCondition'
          LogsMissingDataCondition: '#/components/schemas/LogsMissingDataCondition'
          MetricsMissingDataCondition: '#/components/schemas/MetricsMissingDataCondition'
          SloSliCondition: '#/components/schemas/SloSliCondition'
          SloBurnRateCondition: '#/components/schemas/SloBurnRateCondition'
          LogsAnomalyCondition: '#/components/schemas/LogsAnomalyCondition'
          MetricsAnomalyCondition: '#/components/schemas/MetricsAnomalyCondition'
        propertyName: detectionMethod
      properties:
        detectionMethod:
          default: StaticCondition
          description: |-
            Detection method of the trigger condition. Valid values:
              1. `StaticCondition`: A condition that triggers based off of a static threshold. This `detectionMethod` is deprecated, it is recommended to use other ones instead.
              2. `LogsStaticCondition`: A logs condition that triggers based off of a static threshold.
              3. `MetricsStaticCondition`: A metrics condition that triggers based off of a static threshold.
              4. `LogsOutlierCondition`: A logs condition that triggers based off of a dynamic outlier threshold.
              5. `MetricsOutlierCondition`: A metrics condition that triggers based off of a dynamic outlier threshold.
              6. `LogsMissingDataCondition`: A logs missing data condition that triggers based off of no data available.
              7. `MetricsMissingDataCondition`: A metrics missing data condition that triggers based off of no data available.
              8. `SloSliCondition`: An SLO condition that triggers based off of current SLI value.
              9. `SloBurnRateCondition`: An SLO condition that triggers based off of error budget burn rate.
              10. `LogsAnomalyCondition`: A log anomaly condition that triggers based off anomalies in the data.
              11. `MetricsAnomalyCondition`: A metric anomaly condition that triggers based off anomalies in the data.
          example: StaticCondition
          pattern: ^(StaticCondition|LogsStaticCondition|MetricsStaticCondition|LogsOutlierCondition|MetricsOutlierCondition|LogsMissingDataCondition|MetricsMissingDataCondition|SloSliCondition|SloBurnRateCondition|LogsAnomalyCondition|MetricsAnomalyCondition)$
          type: string
          x-pattern-message: "should be one of the following: 'StaticCondition', 'LogsStaticCondition',\
            \ 'MetricsStaticCondition', 'LogsOutlierCondition', 'MetricsOutlierCondition',\
            \ 'LogsMissingDataCondition', 'MetricsMissingDataCondition', 'SloSliCondition',\
            \ 'SloBurnRateCondition', 'LogsAnomalyCondition', 'MetricsAnomalyCondition' "
        triggerType:
          description: |-
            The type of trigger condition. Valid values:
              1. `Critical`: A critical condition to trigger on.
              2. `Warning`: A warning condition to trigger on.
              3. `MissingData`: A condition that indicates data is missing.
              4. `ResolvedCritical`: A condition to resolve a Critical trigger on.
              5. `ResolvedWarning`: A condition to resolve a Warning trigger on.
              6. `ResolvedMissingData`: A condition to resolve a MissingData trigger.
          example: Critical
          pattern: ^(Critical|Warning|MissingData|ResolvedCritical|ResolvedWarning|ResolvedMissingData)$
          type: string
          x-pattern-message: "should be one of the following: 'Critical', 'Warning',\
            \ 'MissingData', 'ResolvedCritical', 'ResolvedWarning', or 'ResolvedMissingData'"
        resolutionWindow:
          description: "The resolution window that the recovery condition must be\
            \ met in each evaluation that happens within this entire duration before\
            \ the alert is recovered (resolved). If not specified, the time range\
            \ of your trigger will be used. Valid values are: `0m`, `-5m`, `-10m`,\
            \ `-15m`, `-30m`, `-1h`, `-3h`, `-6h`, `-12h`, or `-24h`"
          example: -5m
          nullable: true
          type: string
      required:
      - triggerType
      type: object
    StaticCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - description: A rule that defines how the monitor should evaluate data and
          trigger notifications.
        properties:
          timeRange:
            description: "The relative time range of the monitor. Valid values of\
              \ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\
              \ `-12h`, or `-24h`."
            example: -15m
            type: string
          threshold:
            $ref: '#/components/schemas/StaticThreshold'
          thresholdType:
            $ref: '#/components/schemas/StaticThresholdType'
          field:
            description: "The name of the field that the trigger condition will alert\
              \ on. The trigger could compare the value of specified field with the\
              \ threshold. If `field` is not specified, monitor would default to result\
              \ count instead."
            example: _count
            type: string
          occurrenceType:
            $ref: '#/components/schemas/OccurrenceType'
          triggerSource:
            $ref: '#/components/schemas/TriggerSource'
          minDataPoints:
            description: "The minimum number of data points to alert or resolve a\
              \ metrics monitor within the time range. This field is only valid for\
              \ Metrics Monitor, it will always be set to 1 for `AtleastOnce` occurrence\
              \ type and for `Always`, if not specified by user it will default to\
              \ 2."
            example: 5
            format: int32
            maximum: 100
            minimum: 1
            type: integer
        required:
        - occurrenceType
        - timeRange
        - triggerSource
        type: object
    LogsStaticCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - description: A rule that defines how logs monitor should evaluate static data
          and trigger notifications.
        properties:
          timeRange:
            description: "The relative time range of the monitor. Valid values of\
              \ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\
              \ `-12h`, or `-24h`."
            example: -15m
            type: string
          threshold:
            $ref: '#/components/schemas/StaticThreshold'
          thresholdType:
            $ref: '#/components/schemas/StaticThresholdType'
          field:
            description: "The name of the field that the trigger condition will alert\
              \ on. The trigger could compare the value of specified field with the\
              \ threshold. If `field` is not specified, monitor would default to result\
              \ count instead."
            example: _count
            type: string
        required:
        - threshold
        - thresholdType
        - timeRange
        type: object
    MetricsStaticCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - description: A rule that defines how metrics monitor should evaluate static
          data and trigger notifications.
        properties:
          timeRange:
            description: "The relative time range of the monitor. Valid values of\
              \ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\
              \ `-12h`, or `-24h`."
            example: -15m
            type: string
          threshold:
            $ref: '#/components/schemas/StaticThreshold'
          thresholdType:
            $ref: '#/components/schemas/StaticThresholdType'
          occurrenceType:
            $ref: '#/components/schemas/OccurrenceType'
          minDataPoints:
            description: "The minimum number of data points required for the monitor\
              \ to alert or resolve within the time range specified. This field will\
              \ always be set to 1 for `AtleastOnce` occurrence type and for `Always`,\
              \ if not specified by user it will default to 2."
            example: 5
            format: int32
            maximum: 100
            minimum: 1
            type: integer
        required:
        - occurrenceType
        - threshold
        - thresholdType
        - timeRange
        type: object
    LogsOutlierCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - description: A rule that defines how logs monitor should evaluate outlier
          data and trigger notifications.
        properties:
          window:
            default: 50
            description: Sets the trailing number of data points to calculate mean
              and sigma.
            example: 15
            format: int64
            type: integer
          consecutive:
            default: 1
            description: Sets the required number of consecutive indicator data points
              (outliers) to trigger a violation.
            example: 3
            format: int64
            type: integer
          direction:
            $ref: '#/components/schemas/OutlierDirection_1'
          threshold:
            default: 3.0
            description: Sets the number of standard deviations for calculating violations.
            example: 10.0
            format: double
            type: number
          field:
            description: The name of the field that the trigger condition will alert
              on.
            example: _count
            type: string
        type: object
    MetricsOutlierCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - description: A rule that defines how metrics monitor should evaluate outlier
          data and trigger notifications.
        properties:
          baselineWindow:
            default: 1d
            description: The time range used to compute the baseline.
            example: 1h
            type: string
          direction:
            $ref: '#/components/schemas/OutlierDirection_1'
          threshold:
            default: 3.0
            description: How much should the indicator be different from the baseline
              for each datapoint.
            example: 10.0
            format: double
            type: number
        type: object
    LogsMissingDataCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - description: A rule that defines how logs monitors should evaluate missing
          data and trigger notifications.
        properties:
          timeRange:
            description: "The relative time range of the monitor. Valid values of\
              \ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\
              \ `-12h`, or `-24h`."
            example: -15m
            type: string
        required:
        - timeRange
        type: object
    MetricsMissingDataCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - description: A rule that defines how metrics monitors should evaluate missing
          data and trigger notifications.
        properties:
          triggerSource:
            $ref: '#/components/schemas/TriggerSource'
          timeRange:
            description: "The relative time range of the monitor. Valid values of\
              \ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\
              \ `-12h`, or `-24h`."
            example: -15m
            type: string
        required:
        - timeRange
        - triggerSource
        type: object
    SloSliCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - description: A rule that defines how SLO monitors should evaluate remaining
          error budget and trigger notifications.
        properties:
          sliThreshold:
            description: The remaining SLI error budget threshold percentage.
            example: 90
            format: double
            type: number
        required:
        - sliThreshold
        type: object
    SloBurnRateCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - description: A rule that defines parameters for burn rate based monitor evaluation
          and trigger notifications.
        properties:
          burnRateThreshold:
            description: The error budget depletion percentage.
            example: 90
            format: double
            type: number
          timeRange:
            description: The relative time range for measuring error budget depletion.
            example: -2h
            type: string
        type: object
    AnomalyCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - description: A rule that defines a monitor based on anomaly models.
        properties:
          timeRange:
            description: "The relative time range of the monitor. Valid values of\
              \ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\
              \ `-12h`, `-24h` or `-1d`."
            example: -15m
            type: string
          sensitivity:
            default: 0.5
            description: The triggering sensitivity of the anomaly model used for
              this monitor.
            example: 0.5
            format: double
            type: number
          anomalyDetectorType:
            description: The type of anomaly model that will be used for evaluating
              this monitor. Only `Cluster` option is supported currently.
            example: Cluster
            pattern: ^Cluster$
            type: string
          field:
            description: "The name of the field that the trigger condition will alert\
              \ on. The trigger could compare the value of specified field with the\
              \ threshold. If `field` is not specified, monitor would default to result\
              \ count instead."
            example: _count
            type: string
          minAnomalyCount:
            default: 1
            description: The minimum number of anomalies required to exist in the
              current time range for the condition to trigger.
            example: 1
            format: int32
            type: integer
          direction:
            $ref: '#/components/schemas/OutlierDirection_1'
        type: object
    LogsAnomalyCondition:
      allOf:
      - $ref: '#/components/schemas/AnomalyCondition'
      - description: A rule that defines a log monitor based on an anomaly model.
        required:
        - anomalyDetectorType
        - field
        - timeRange
        type: object
    MetricsAnomalyCondition:
      allOf:
      - $ref: '#/components/schemas/AnomalyCondition'
      - description: A rule that defines a metrics monitor based on an anomaly model.
        required:
        - anomalyDetectorType
        - timeRange
        type: object
    AlertSignalContext:
      allOf:
      - $ref: '#/components/schemas/SignalContext'
      - properties:
          alertId:
            description: Alert Identifier.
            example: 00000000F5000634
            type: string
        required:
        - alertId
        type: object
      description: Details of the alert signal context.
      type: object
    TraceQueryExpression:
      description: Base query expression object.
      discriminator:
        propertyName: type
      example:
        type: type
      properties:
        type:
          description: Expression type of the object model.
          type: string
      required:
      - type
      type: object
    AndTracingExpression:
      allOf:
      - $ref: '#/components/schemas/TraceQueryExpression'
      - properties:
          expressions:
            description: "Evaluates to true, if (and only if) all expressions evaluate\
              \ to true, otherwise evaluates to false."
            items:
              $ref: '#/components/schemas/TraceQueryExpression'
            type: array
        required:
        - expressions
        type: object
    OrTracingExpression:
      allOf:
      - $ref: '#/components/schemas/TraceQueryExpression'
      - properties:
          expressions:
            items:
              $ref: '#/components/schemas/TraceQueryExpression'
            type: array
        required:
        - expressions
        type: object
      description: "Evaluates to true, if at least one expression evaluates to true,\
        \ otherwise evaluates to false."
    MetricTracingFilter:
      allOf:
      - $ref: '#/components/schemas/TraceQueryExpression'
      - properties:
          metric:
            description: "The name of the metric to filter by. The list of supported\
              \ metrics can be retrieved using the [Trace Metrics](#operation/getMetrics)\
              \ endpoint."
            type: string
          operator:
            description: |-
              The operator to use. Accepted values:
                <table>
                  <tr>
                    <th>Operator</th>
                    <th>Accepted value types</th>
                  </tr>
                  <tr>
                    <th>&lt; &lt;= &gt; &gt;= =</th>
                    <th>DoubleTracingValue IntegerTracingValue</th>
                  </tr>
                  <tr>
                    <th>between</th>
                    <th>RangeTracingValue of DoubleTracingValue / IntegerTracingValue</th>
                  </tr>
                </table>
            type: string
          value:
            $ref: '#/components/schemas/TracingValue'
        required:
        - metric
        - operator
        type: object
    FieldTracingFilter:
      allOf:
      - $ref: '#/components/schemas/TraceQueryExpression'
      - properties:
          field:
            description: "The field name to filter by. The list of supported field\
              \ names can be retrieved using the [Trace Query Fields](#operation/getTraceQueryFields)\
              \ endpoint."
            type: string
          operator:
            description: |-
              The operator to use. Accepted values:
                <table>
                  <tr>
                    <th>Operator</th>
                    <th>Accepted value types</th>
                  </tr>
                  <tr>
                    <th>&lt; &lt;= &gt; &gt;= = !=</th>
                    <th>StringTracingValue DoubleTracingValue IntegerTracingValue DateTimeTracingValue</th>
                  </tr>
                  <tr>
                    <th>in</th>
                    <th>ArrayTracingValue of StringTracingValue / DoubleTracingValue / IntegerTracingValue / DateTimeTracingValue</th>
                  </tr>
                  <tr>
                    <th>between</th>
                    <th>RangeTracingValue of StringTracingValue / DoubleTracingValue / IntegerTracingValue / DateTimeTracingValue</th>
                  </tr>
                </table>
            type: string
          value:
            $ref: '#/components/schemas/TracingValue'
        required:
        - field
        - operator
        type: object
    RootSpanTracingFilter:
      allOf:
      - $ref: '#/components/schemas/TraceQueryExpression'
      - properties:
          field:
            description: "The field name to filter by. The list of supported field\
              \ names can be retrieved using the [Trace Query Fields](#operation/getTraceQueryFields)\
              \ endpoint."
            type: string
          operator:
            description: |-
              The operator to use. Accepted values:
                <table>
                  <tr>
                    <th>Operator</th>
                    <th>Accepted value types</th>
                  </tr>
                  <tr>
                    <th>&lt; &lt;= &gt; &gt;= = !=</th>
                    <th>StringTracingValue DoubleTracingValue IntegerTracingValue DateTimeTracingValue</th>
                  </tr>
                  <tr>
                    <th>in</th>
                    <th>ArrayTracingValue of StringTracingValue / DoubleTracingValue / IntegerTracingValue / DateTimeTracingValue</th>
                  </tr>
                  <tr>
                    <th>between</th>
                    <th>RangeTracingValue of StringTracingValue / DoubleTracingValue / IntegerTracingValue / DateTimeTracingValue</th>
                  </tr>
                </table>
            type: string
          value:
            $ref: '#/components/schemas/TracingValue'
        required:
        - field
        - operator
        type: object
    TracingValue:
      discriminator:
        propertyName: type
      properties:
        type:
          description: Type of the value model.
          type: string
      required:
      - type
    DoubleTracingValue:
      allOf:
      - $ref: '#/components/schemas/TracingValue'
      - properties:
          value:
            format: double
            type: number
        required:
        - value
        type: object
    IntegerTracingValue:
      allOf:
      - $ref: '#/components/schemas/TracingValue'
      - properties:
          value:
            format: int64
            type: integer
        required:
        - value
        type: object
    StringTracingValue:
      allOf:
      - $ref: '#/components/schemas/TracingValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    DateTimeTracingValue:
      allOf:
      - $ref: '#/components/schemas/TracingValue'
      - properties:
          value:
            description: "Timestamp in UTC in the [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\
              \ format."
            example: 2019-11-22T09:00:00Z
            format: date-time
            type: string
        required:
        - value
        type: object
    ArrayTracingValue:
      allOf:
      - $ref: '#/components/schemas/TracingValue'
      - properties:
          values:
            items:
              $ref: '#/components/schemas/TracingValue'
            type: array
        required:
        - values
        type: object
    RangeTracingValue:
      allOf:
      - $ref: '#/components/schemas/TracingValue'
      - properties:
          from:
            $ref: '#/components/schemas/TracingValue'
          to:
            $ref: '#/components/schemas/TracingValue'
        required:
        - from
        - to
        type: object
    EventAttributeValue:
      discriminator:
        propertyName: type
      example:
        type: BooleanAttributeValue
      properties:
        type:
          description: Type of the event attribute value.
          example: BooleanAttributeValue
          pattern: ^(BooleanEventAttributeValue|StringEventAttributeValue|DoubleEventAttributeValue|IntegerEventAttributeValue|BooleanArrayEventAttributeValue|StringArrayEventAttributeValue|DoubleArrayEventAttributeValue|IntegerArrayEventAttributeValue)$
          type: string
      required:
      - type
    BooleanEventAttributeValue:
      allOf:
      - $ref: '#/components/schemas/EventAttributeValue'
      - properties:
          value:
            type: boolean
        required:
        - value
        type: object
    DoubleEventAttributeValue:
      allOf:
      - $ref: '#/components/schemas/EventAttributeValue'
      - properties:
          value:
            format: double
            type: number
        required:
        - value
        type: object
    IntegerEventAttributeValue:
      allOf:
      - $ref: '#/components/schemas/EventAttributeValue'
      - properties:
          value:
            format: int64
            type: integer
        required:
        - value
        type: object
    StringEventAttributeValue:
      allOf:
      - $ref: '#/components/schemas/EventAttributeValue'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
    BooleanArrayEventAttributeValue:
      allOf:
      - $ref: '#/components/schemas/EventAttributeValue'
      - properties:
          values:
            items:
              type: boolean
            type: array
        required:
        - values
        type: object
    DoubleArrayEventAttributeValue:
      allOf:
      - $ref: '#/components/schemas/EventAttributeValue'
      - properties:
          values:
            items:
              format: double
              type: number
            type: array
        required:
        - values
        type: object
    IntegerArrayEventAttributeValue:
      allOf:
      - $ref: '#/components/schemas/EventAttributeValue'
      - properties:
          values:
            items:
              format: int64
              type: integer
            type: array
        required:
        - values
        type: object
    StringArrayEventAttributeValue:
      allOf:
      - $ref: '#/components/schemas/EventAttributeValue'
      - properties:
          values:
            items:
              type: string
            type: array
        required:
        - values
        type: object
    TraceHttpSpanInfo:
      allOf:
      - $ref: '#/components/schemas/TraceSpanInfo'
      - properties:
          method:
            description: HTTP method of the request for the associated span.
            example: GET
            pattern: ^(GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE)$
            type: string
          url:
            description: "URL of the request being handled in this span, in the standard\
              \ URI format."
            example: https://domain.net/path/to?resource=here
            type: string
          statusCode:
            description: HTTP response status code for the associated span.
            example: 200
            type: integer
        type: object
    TraceDbSpanInfo:
      allOf:
      - $ref: '#/components/schemas/TraceSpanInfo'
      - properties:
          dbType:
            description: Database type.
            example: sql
            type: string
          instance:
            description: "Database instance name, e.g. in java, if jdbc.url=\"jdbc:mysql://127.0.0.1:3306/customers\"\
              , the instance name is \"customers\"."
            example: customers
            type: string
          statement:
            description: Database statement for the given database type.
            example: SELECT * FROM user_table
            type: string
        type: object
    TraceMessageBusSpanInfo:
      allOf:
      - $ref: '#/components/schemas/TraceSpanInfo'
      - properties:
          destination:
            description: An address at which messages can be exchanged e.g. a Kafka
              record has an associated "topic name" that can be stored using this
              tag.
            example: kafka.topic.name
            type: string
        type: object
    OTCollectorListResponse:
      example:
        data:
        - effectiveConfig:
            "00000000000000A3": ZGVtbyBjb25maWc=
            "00000000000000D5": XFVtbfe34tgcvefv=
          alive: true
          modifiedAt: 2018-10-16T09:10:00Z
          description: description
          ephemeral: false
          timeZone: UTC
          sourceTemplateLinkedCount: 1
          version:
            currentVersion: currentVersion
          tags:
            team: app-dev
            showIcon: true
          systemInfo:
            hostName: app.test.com
            hostOsName: Linux
            hostOsVersion: 5.4.144-69.257.amzn2.x86_64
            hostIpAddress: 19.123.24.66
            hostEnv: EKS-1.20.2
          createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006A5C7A2
          isRemotelyManaged: true
          name: test OT Collector
          modifiedBy: 0000000006A5C7A2
          id: 0000000005F5E105
          category: apache
          healthIncidentsTracker:
            errorsCount: 0
            warningsCount: 1
        - effectiveConfig:
            "00000000000000A3": ZGVtbyBjb25maWc=
            "00000000000000D5": XFVtbfe34tgcvefv=
          alive: true
          modifiedAt: 2018-10-16T09:10:00Z
          description: description
          ephemeral: false
          timeZone: UTC
          sourceTemplateLinkedCount: 1
          version:
            currentVersion: currentVersion
          tags:
            team: app-dev
            showIcon: true
          systemInfo:
            hostName: app.test.com
            hostOsName: Linux
            hostOsVersion: 5.4.144-69.257.amzn2.x86_64
            hostIpAddress: 19.123.24.66
            hostEnv: EKS-1.20.2
          createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006A5C7A2
          isRemotelyManaged: true
          name: test OT Collector
          modifiedBy: 0000000006A5C7A2
          id: 0000000005F5E105
          category: apache
          healthIncidentsTracker:
            errorsCount: 0
            warningsCount: 1
      properties:
        data:
          description: List of OT Collectors.
          items:
            $ref: '#/components/schemas/OTCollector'
          type: array
      required:
      - data
      type: object
    PaginatedOTCollectorsRequest:
      example:
        next: token
        search: testAgent
        limit: 30
        sortBy: name
        includeCount: false
        filters:
          os: linux
          alive: true
          isRemotelyManaged: true
          collectorVersionRange:
            minVersion: minVersion
            rangeType: rangeType
            maxVersion: maxVersion
          tags:
          - - key: region
              values:
              - us2
              - mum
          - - key: key2
              values:
              - value2
      properties:
        search:
          description: search by collector id or free text search on collector properties.
          example: testAgent
          type: string
        filters:
          $ref: '#/components/schemas/PaginatedOTCollectorsRequest_filters'
        sortBy:
          description: parameter which is used for sorting.
          example: name
          type: string
        next:
          description: parameter which is used for fetching next set of results.
          example: token
          type: string
        limit:
          description: parameter which is used for limiting number of otCollectors
            on a page.
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        includeCount:
          description: count of filtered otCollectors.
          example: false
          nullable: true
          type: boolean
      type: object
    PaginatedOTCollectorsResponse:
      example:
        next: next
        data:
        - effectiveConfig:
            "00000000000000A3": ZGVtbyBjb25maWc=
            "00000000000000D5": XFVtbfe34tgcvefv=
          alive: true
          modifiedAt: 2018-10-16T09:10:00Z
          description: description
          ephemeral: false
          timeZone: UTC
          sourceTemplateLinkedCount: 1
          version:
            currentVersion: currentVersion
          tags:
            team: app-dev
            showIcon: true
          systemInfo:
            hostName: app.test.com
            hostOsName: Linux
            hostOsVersion: 5.4.144-69.257.amzn2.x86_64
            hostIpAddress: 19.123.24.66
            hostEnv: EKS-1.20.2
          createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006A5C7A2
          isRemotelyManaged: true
          name: test OT Collector
          modifiedBy: 0000000006A5C7A2
          id: 0000000005F5E105
          category: apache
          healthIncidentsTracker:
            errorsCount: 0
            warningsCount: 1
        - effectiveConfig:
            "00000000000000A3": ZGVtbyBjb25maWc=
            "00000000000000D5": XFVtbfe34tgcvefv=
          alive: true
          modifiedAt: 2018-10-16T09:10:00Z
          description: description
          ephemeral: false
          timeZone: UTC
          sourceTemplateLinkedCount: 1
          version:
            currentVersion: currentVersion
          tags:
            team: app-dev
            showIcon: true
          systemInfo:
            hostName: app.test.com
            hostOsName: Linux
            hostOsVersion: 5.4.144-69.257.amzn2.x86_64
            hostIpAddress: 19.123.24.66
            hostEnv: EKS-1.20.2
          createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006A5C7A2
          isRemotelyManaged: true
          name: test OT Collector
          modifiedBy: 0000000006A5C7A2
          id: 0000000005F5E105
          category: apache
          healthIncidentsTracker:
            errorsCount: 0
            warningsCount: 1
        count: 0
      properties:
        data:
          description: paginated list of OT Collectors.
          items:
            $ref: '#/components/schemas/OTCollector'
          type: array
        next:
          description: next page token.
          type: string
        count:
          description: count of otCollectors in response.
          format: int32
          type: integer
      required:
      - data
      type: object
    OTCollectorCountResponse:
      description: response for total count of otCollectors.
      example:
        totalCount: 100
      properties:
        totalCount:
          description: Total number of OT Collector for a customer.
          example: 100
          format: int32
          type: integer
      required:
      - totalCount
      type: object
    SearchQueryContext:
      allOf:
      - $ref: '#/components/schemas/EventContext'
      - properties:
          queryId:
            description: The query id of the log search.
            example: 0BA5454CDE467
            type: string
        required:
        - queryId
        type: object
    StringMatchCorrelationExpression:
      allOf:
      - $ref: '#/components/schemas/CorrelationExpression'
      - properties:
          queryFieldName:
            description: Name of the query field returned by a log search query.
            example: _sourcecategory
            type: string
          eventFieldName:
            description: Name of the field from event query output.
            example: foo
            type: string
          stringMatchingAlgorithm:
            description: Type of string matching algorithm which tells how to match
              eventFieldName and queryFieldName.
            example: ExactMatch
            pattern: ^(ExactMatch)$
            type: string
        required:
        - eventFieldName
        - queryFieldName
        - stringMatchingAlgorithm
        type: object
    AndCorrelationExpression:
      allOf:
      - $ref: '#/components/schemas/CorrelationExpression'
      - properties:
          correlationExpressions:
            description: List of correlation expressions to be evaluated with AND
              boolean operator.
            items:
              $ref: '#/components/schemas/CorrelationExpression'
            maxItems: 20
            minItems: 2
            type: array
        required:
        - correlationExpressions
        type: object
    OrCorrelationExpression:
      allOf:
      - $ref: '#/components/schemas/CorrelationExpression'
      - properties:
          correlationExpressions:
            description: List of correlation expressions to be evaluated with OR boolean
              operator.
            items:
              $ref: '#/components/schemas/CorrelationExpression'
            maxItems: 20
            minItems: 2
            type: array
        required:
        - correlationExpressions
        type: object
    ParsersLibraryBase:
      discriminator:
        propertyName: type
      example:
        isLocked: false
        name: name
        description: description
        type: type
      properties:
        name:
          description: Name of the folder or parser.
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the folder or parser.
          maxLength: 4096
          type: string
        type:
          description: Type of the object model.
          type: string
        isLocked:
          default: false
          description: Locking/Unlocking requires the `LockParsers` capability. Locked
            objects can only be `Localized`. Updating or moving requires unlocking
            the object. Locking/Unlocking recursively locks all of the objects children.
            All children of a locked object must be locked.
          type: boolean
      required:
      - description
      - name
      - type
      type: object
    ParsersLibraryBaseUpdate:
      discriminator:
        propertyName: type
      example:
        name: name
        description: description
        type: type
        version: 0
      properties:
        name:
          description: Name of the folder or parser.
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the folder or parser.
          maxLength: 4096
          type: string
        version:
          description: Version of the folder or parser.
          format: int64
          type: integer
        type:
          description: Type of the object model.
          type: string
      required:
      - description
      - name
      - version
      type: object
    ParsersLibraryBaseResponse:
      discriminator:
        propertyName: type
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: type
        version: 6
        parentId: parentId
        isSystem: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMutable: true
        createdBy: createdBy
        isLocked: true
        name: name
        modifiedBy: modifiedBy
        id: id
        contentType: contentType
      properties:
        id:
          description: Identifier of the folder or parser.
          type: string
        name:
          description: Name of the folder or parser.
          type: string
        description:
          description: Description of the folder or parser.
          type: string
        version:
          description: Version of the folder or parser.
          format: int64
          type: integer
        createdAt:
          description: |
            Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        parentId:
          description: Identifier of the parent folder.
          type: string
        contentType:
          description: |
            Type of the content. Valid values:
              1) Folder
              2) Parser
          type: string
        type:
          description: Type of the object model.
          type: string
        isLocked:
          description: Whether the object is locked.
          type: boolean
        isSystem:
          description: System objects are objects provided by Sumo Logic. System objects
            can only be localized. Non-local fields can't be updated.
          type: boolean
        isMutable:
          description: Immutable objects are "READ-ONLY".
          type: boolean
      required:
      - contentType
      - createdAt
      - createdBy
      - description
      - id
      - isLocked
      - isMutable
      - isSystem
      - modifiedAt
      - modifiedBy
      - name
      - parentId
      - type
      - version
      type: object
    ParsersLibraryParser:
      allOf:
      - $ref: '#/components/schemas/ParsersLibraryBase'
      - properties:
          stanzas:
            description: Collection of stanzas describing the parser.
            example: |
              [sourcetype:PAN-firewall]
              EVENT_MULTILINE = False
              FORMAT = CSV
            type: string
          modelPath:
            description: The path to the Model a Model-Connector is associated with.
            example: Models/firewalls/PAN
            type: string
          sourcetypePath:
            description: The path to the sourcetype a Model-Connector is associated
              with.
            example: Parsers/firewalls/PAN-firewall
            type: string
          families:
            description: CSV list of model families this object belongs/applies to
            example: "firewalls,IDS"
            type: string
          isPartial:
            default: false
            description: "Is this a complete Parser or Model-Connector, or just a\
              \ config fragment?"
            type: boolean
          localStanzas:
            description: Localized stanzas.
            example: |
              [sourcetype:PAN-firewall]
              WRAPPER = BSD_SYSLOG
            type: string
        required:
        - stanzas
        type: object
    ParsersLibraryFolder:
      allOf:
      - $ref: '#/components/schemas/ParsersLibraryBase'
    ParsersLibraryParserUpdate:
      allOf:
      - $ref: '#/components/schemas/ParsersLibraryBaseUpdate'
      - properties:
          stanzas:
            description: Collection of stanzas describing the parser.
            example: |
              [sourcetype:PAN-firewall]
              EVENT_MULTILINE = False
              FORMAT = CSV
            type: string
          modelPath:
            description: The path to the Model a Model-Connector is associated with.
            example: Models/firewalls/PAN
            type: string
          sourcetypePath:
            description: The path to the sourcetype a Model-Connector is associated
              with.
            example: Parsers/firewalls/PAN-firewall
            type: string
          families:
            description: CSV list of model families this object belongs/applies to
            example: "firewalls,IDS"
            type: string
          isPartial:
            default: false
            description: "Is this a complete Parser or Model-Connector, or just a\
              \ config fragment?"
            type: boolean
          localStanzas:
            description: Localized stanzas.
            example: |
              [sourcetype:PAN-firewall]
              WRAPPER = BSD_SYSLOG
            type: string
        required:
        - stanzas
        type: object
    ParsersLibraryFolderUpdate:
      allOf:
      - $ref: '#/components/schemas/ParsersLibraryBaseUpdate'
    ParsersLibraryParserResponse:
      allOf:
      - $ref: '#/components/schemas/ParsersLibraryBaseResponse'
      - properties:
          stanzas:
            description: Collection of stanzas describing the parser.
            example: |
              [sourcetype:PAN-firewall]
              EVENT_MULTILINE = False
              FORMAT = CSV
            type: string
          modelPath:
            description: The path to the Model a Model-Connector is associated with.
            example: Models/firewalls/PAN
            type: string
          sourcetypePath:
            description: The path to the sourcetype a Model-Connector is associated
              with.
            example: Parsers/firewalls/PAN-firewall
            type: string
          families:
            description: CSV list of model families this object belongs/applies to
            example: "firewalls,IDS"
            type: string
          isPartial:
            default: false
            description: "Is this a complete Parser or Model-Connector, or just a\
              \ config fragment?"
            type: boolean
          localStanzas:
            description: Localized stanzas.
            example: |
              [sourcetype:PAN-firewall]
              WRAPPER = BSD_SYSLOG
            type: string
        required:
        - stanzas
        type: object
    ParsersLibraryFolderResponse:
      allOf:
      - $ref: '#/components/schemas/ParsersLibraryBaseResponse'
      - properties:
          children:
            description: Children of the folder.
            items:
              $ref: '#/components/schemas/ParsersLibraryBaseResponse'
            type: array
        required:
        - children
        type: object
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: type
        version: 0
        parentId: parentId
        isSystem: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMutable: true
        createdBy: createdBy
        children:
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 6
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          isLocked: true
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 6
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          isLocked: true
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
        isLocked: true
        name: name
        modifiedBy: modifiedBy
        id: id
        contentType: contentType
    IdToParsersLibraryBaseResponseMap:
      additionalProperties:
        $ref: '#/components/schemas/ParsersLibraryBaseResponse'
      maxProperties: 1000
      type: object
    ParsersLibraryExportBase:
      discriminator:
        propertyName: type
      example:
        name: name
        description: description
        type: type
      properties:
        name:
          description: Name of the folder or parser.
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the folder or parser.
          maxLength: 4096
          type: string
        type:
          description: Type of the object model.
          type: string
      required:
      - description
      - name
      - type
      type: object
    ParsersLibraryParserExportV2:
      allOf:
      - $ref: '#/components/schemas/ParsersLibraryExportBase'
      - properties:
          stanzas:
            description: Array of lines of stanzas describing the parser.
            example: |
              ["[sourcetype:PAN-firewall]",
              "EVENT_MULTILINE = False",
              "FORMAT = CSV"]
            items:
              type: string
            type: array
          modelPath:
            description: The path to the Model a Model-Connector is associated with.
            example: Models/firewalls/PAN
            type: string
          sourcetypePath:
            description: The path to the sourcetype a Model-Connector is associated
              with.
            example: Parsers/firewalls/PAN-firewall
            type: string
          families:
            description: CSV list of model families this object belongs/applies to
            example: "firewalls,IDS"
            type: string
          isPartial:
            default: false
            description: "Is this a complete Parser or Model-Connector, or just a\
              \ config fragment?"
            type: boolean
          localStanzas:
            description: Localized stanzas.
            example: |
              [sourcetype:PAN-firewall]
              WRAPPER = BSD_SYSLOG
            type: string
        required:
        - stanzas
        type: object
    ParsersLibraryParserExport:
      allOf:
      - $ref: '#/components/schemas/ParsersLibraryExportBase'
      - properties:
          stanzas:
            description: Collection of stanza or array of lines of stanzas describing
              the parser.
            example: |
              [sourcetype:PAN-firewall]
              EVENT_MULTILINE = False
              FORMAT = CSV
            type: string
          modelPath:
            description: The path to the Model a Model-Connector is associated with.
            example: Models/firewalls/PAN
            type: string
          sourcetypePath:
            description: The path to the sourcetype a Model-Connector is associated
              with.
            example: Parsers/firewalls/PAN-firewall
            type: string
          families:
            description: CSV list of model families this object belongs/applies to
            example: "firewalls,IDS"
            type: string
          isPartial:
            default: false
            description: "Is this a complete Parser or Model-Connector, or just a\
              \ config fragment?"
            type: boolean
          localStanzas:
            description: Localized stanzas.
            example: |
              [sourcetype:PAN-firewall]
              WRAPPER = BSD_SYSLOG
            type: string
        required:
        - stanzas
        type: object
    ParsersLibraryFolderExport:
      allOf:
      - $ref: '#/components/schemas/ParsersLibraryExportBase'
      - properties:
          children:
            description: Children of the folder
            items:
              $ref: '#/components/schemas/ParsersLibraryExportBase'
            type: array
        type: object
    ParsersLibraryItemWithPath:
      example:
        path: /Parsers/SampleFolder/TestParser
        item:
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 6
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          isLocked: true
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
      properties:
        item:
          $ref: '#/components/schemas/ParsersLibraryBaseResponse'
        path:
          description: Path of the folder or parser.
          example: /Parsers/SampleFolder/TestParser
          type: string
      required:
      - item
      - path
      type: object
    ListParsersLibraryItemWithPath:
      description: List of folders or parsers.
      items:
        $ref: '#/components/schemas/ParsersLibraryItemWithPath'
      type: array
    MonitorsLibraryBase:
      discriminator:
        propertyName: type
      example:
        name: name
        description: ""
        type: type
      properties:
        name:
          description: Name of the monitor or folder.
          type: string
        description:
          default: ""
          description: Description of the monitor or folder.
          type: string
        type:
          description: |-
            Type of the object model. Valid values:
              1) MonitorsLibraryMonitor
              2) MonitorsLibraryFolder
          type: string
      required:
      - name
      - type
      type: object
    MonitorsLibraryBaseUpdate:
      discriminator:
        propertyName: type
      example:
        name: name
        description: ""
        type: type
        version: 0
      properties:
        name:
          description: The name of the monitor or folder.
          type: string
        description:
          default: ""
          description: The description of the monitor or folder.
          type: string
        version:
          description: The version of the monitor or folder.
          format: int64
          type: integer
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      - version
      type: object
    MonitorsLibraryBaseResponse:
      discriminator:
        propertyName: type
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: type
        version: 0
        parentId: parentId
        isSystem: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMutable: true
        createdBy: createdBy
        permissions:
        - Read
        - Delete
        name: name
        modifiedBy: modifiedBy
        id: id
        contentType: contentType
      properties:
        id:
          description: Identifier of the monitor or folder.
          type: string
        name:
          description: Identifier of the monitor or folder.
          type: string
        description:
          description: Description of the monitor or folder.
          type: string
        version:
          description: Version of the monitor or folder.
          format: int64
          type: integer
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        parentId:
          description: Identifier of the parent folder.
          type: string
        contentType:
          description: |-
            Type of the content. Valid values:
              1) Monitor
              2) Folder
          type: string
        type:
          description: Type of the object model.
          type: string
        isSystem:
          description: System objects are objects provided by Sumo Logic. System objects
            can only be localized. Non-local fields can't be updated.
          type: boolean
        isMutable:
          description: Immutable objects are "READ-ONLY".
          type: boolean
        permissions:
          description: "Aggregated permission summary for the calling user. If detailed\
            \ permission statements are required, please call list permissions endpoint."
          example:
          - Read
          - Delete
          items:
            type: string
          type: array
      required:
      - contentType
      - createdAt
      - createdBy
      - description
      - id
      - isMutable
      - isSystem
      - modifiedAt
      - modifiedBy
      - name
      - parentId
      - type
      - version
      type: object
    MonitorsLibraryFolder:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBase'
    MonitorsLibraryFolderUpdate:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseUpdate'
    MonitorsLibraryFolderResponse:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
      - properties:
          permissions:
            description: "Aggregated permission summary for the calling user. If detailed\
              \ permission statements are required, please call list permissions endpoint."
            example:
            - Read
            - Delete
            items:
              type: string
            type: array
          children:
            description: "Children of the folder. NOTE: Permissions field will not\
              \ be filled (empty list) for children."
            items:
              $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
            type: array
        required:
        - children
        - permissions
        type: object
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: type
        version: 0
        parentId: parentId
        isSystem: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMutable: true
        createdBy: createdBy
        children:
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 0
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          permissions:
          - Read
          - Delete
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 0
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          permissions:
          - Read
          - Delete
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
        permissions:
        - Read
        - Delete
        name: name
        modifiedBy: modifiedBy
        id: id
        contentType: contentType
    MonitorsLibraryBaseExport:
      discriminator:
        propertyName: type
      example:
        name: name
        description: description
        type: type
      properties:
        name:
          description: Name of the monitor or folder.
          type: string
        description:
          description: Description of the monitor or folder.
          type: string
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      type: object
    MonitorsLibraryFolderExport:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseExport'
      - properties:
          children:
            description: The items in the folder. A multi-type list of types monitor
              or folder.
            items:
              $ref: '#/components/schemas/MonitorsLibraryBaseExport'
            type: array
        type: object
    MonitorsLibraryMonitor:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBase'
      - properties:
          monitorType:
            description: |-
              The type of monitor. Valid values:
                1. `Logs`: A logs query monitor.
                2. `Metrics`: A metrics query monitor.
                3. `Slo`: A SLO based monitor. Currently SLO based monitor is available in closed beta (Notify your Sumo Logic representative in order to get the early access).
            example: Logs
            pattern: ^(Logs|Metrics|Slo)$
            type: string
            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'
          evaluationDelay:
            default: 0m
            description: The delay duration for evaluating the monitor (relative to
              current time). The timerange of monitor will be shifted in the past
              by this delay time.
            example: 5m
            type: string
          alertName:
            description: "The name of the alert(s) triggered from this monitor. Monitor\
              \ name will be used if not specified. All template variables can be\
              \ used here except {{AlertName}}, {{AlertResponseURL}}, {{ResultsJson}},\
              \ and {{Playbook}}."
            type: string
          runAs:
            $ref: '#/components/schemas/MonitorsLibraryMonitor_allOf_runAs'
          notificationGroupFields:
            description: "The set of fields to be used to group alert notifications\
              \ for a monitor. The value of this field will be considered only when\
              \ 'groupNotifications' is true. The fields with very high cardinality\
              \ such as `_blockid`, `_raw`, `_messagetime`, `_receipttime`, and `_messageid`\
              \ are not allowed for Alert Grouping."
            example:
            - service
            - env
            items:
              type: string
            type: array
          queries:
            description: All queries from the monitor.
            items:
              $ref: '#/components/schemas/MonitorQuery'
            type: array
            uniqueItems: true
          triggers:
            description: Defines the conditions of when to send notifications.
            example:
            - detectionMethod: LogsStaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
            - detectionMethod: LogsStaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          timeZone:
            description: "Time zone identifier for monitor notifications. Follow the\
              \ format in [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
            example: America/Los_Angeles
            type: string
          notifications:
            default: []
            description: The notifications the monitor will send when the respective
              trigger condition is met.
            example:
            - notification:
                connectionType: Slack
                connectionId: "0000000000000005"
              runForTriggerTypes:
              - Critical
            - notification:
                connectionType: Email
                messageBody: Alert Triggered!
                recipients:
                - john@doe.com
                subject: "Monitor Alert: {{TriggerType}} on {{SearchName}}"
                timeZone: America/Los_Angeles
              runForTriggerTypes:
              - Critical
            items:
              $ref: '#/components/schemas/MonitorNotification'
            type: array
          isDisabled:
            default: false
            description: "Whether or not the monitor is disabled. Disabled monitors\
              \ will not run, and will not generate or send notifications."
            example: false
            type: boolean
          groupNotifications:
            default: true
            description: Whether or not to group notifications for individual items
              that meet the trigger condition.
            example: true
            type: boolean
          playbook:
            default: ""
            description: "Notes such as links and instruction to help you resolve\
              \ alerts triggered by this monitor. {{Markdown}} supported. It will\
              \ be enabled only if available for your organization. Please contact\
              \ your Sumo Logic account team to learn more."
            example: This issue typically happens when database calls are timing out.
              Look at ServiceA's dashboard to investigate further
            type: string
          sloId:
            description: Identifier of the SLO definition for the monitor. This is
              only applicable for SLO type monitors.
            type: string
          automatedPlaybookIds:
            default: []
            description: The set of automated playbook ids for a monitor.
            example:
            - 649dcb922b70c74b5d2110f8
            - 649dcb912b70c74b5d2110a0
            items:
              type: string
            type: array
            uniqueItems: true
        required:
        - monitorType
        - queries
        - triggers
        type: object
    MonitorsLibraryMonitorResponse:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
      - properties:
          monitorType:
            description: |-
              The type of monitor. Valid values:
                1. `Logs`: A logs query monitor.
                2. `Metrics`: A metrics query monitor.
                3. `Slo`: A SLO based monitor. Currently SLO based monitor is available in closed beta (Notify your Sumo Logic representative in order to get the early access).
            example: Logs
            pattern: ^(Logs|Metrics|Slo)$
            type: string
            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'
          evaluationDelay:
            default: 0m
            description: The delay duration for evaluating the monitor (relative to
              current time). The timerange of monitor will be shifted in the past
              by this delay time.
            example: 5m
            type: string
          alertName:
            description: "The name of the alert(s) triggered from this monitor. Monitor\
              \ name will be used if not specified. All template variables can be\
              \ used here except {{AlertName}}, {{AlertResponseURL}}, {{ResultsJson}},\
              \ and {{Playbook}}."
            type: string
          runAs:
            $ref: '#/components/schemas/MonitorsLibraryMonitor_allOf_runAs'
          notificationGroupFields:
            description: "The set of fields to be used to group alert notifications\
              \ for a monitor. The value of this field will be considered only when\
              \ 'groupNotifications' is true. The fields with very high cardinality\
              \ such as `_blockid`, `_raw`, `_messagetime`, `_receipttime`, and `_messageid`\
              \ are not allowed for Alert Grouping."
            example:
            - service
            - env
            items:
              type: string
            type: array
          queries:
            description: All queries from the monitor.
            items:
              $ref: '#/components/schemas/MonitorQuery'
            type: array
            uniqueItems: true
          triggers:
            description: Defines the conditions of when to send notifications.
            example:
            - detectionMethod: LogsStaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
            - detectionMethod: LogsStaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          timeZone:
            description: "Time zone identifier for monitor notifications. Follow the\
              \ format in [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
            example: America/Los_Angeles
            type: string
          notifications:
            default: []
            description: The notifications the monitor will send when the respective
              trigger condition is met.
            example:
            - notification:
                connectionType: Slack
                connectionId: "0000000000000005"
              runForTriggerTypes:
              - Critical
            - notification:
                connectionType: Email
                messageBody: Alert Triggered!
                recipients:
                - john@doe.com
                subject: "Monitor Alert: {{TriggerType}} on {{SearchName}}"
                timeZone: America/Los_Angeles
              runForTriggerTypes:
              - Critical
            items:
              $ref: '#/components/schemas/MonitorNotification'
            type: array
          isDisabled:
            default: false
            description: "Whether or not the monitor is disabled. Disabled monitors\
              \ will not run, and will not generate or send notifications."
            example: false
            type: boolean
          status:
            description: |-
              The current status of the monitor. Each monitor can have one or more status values. Valid values:
                1. `Normal`: The monitor is running normally and does not have any currently triggered conditions.
                2. `Critical`: The Critical trigger condition has been met.
                3. `Warning`: The Warning trigger condition has been met.
                4. `MissingData`: The MissingData trigger condition has been met.
                5. `Disabled`: The monitor has been disabled and is not currently running.
            example: "[Normal]"
            items:
              type: string
            type: array
            uniqueItems: true
          groupNotifications:
            default: true
            description: Whether or not to group notifications for individual items
              that meet the trigger condition.
            example: true
            type: boolean
          warnings:
            additionalProperties:
              type: string
            description: Monitor manager warnings
            maxProperties: 1000
            type: object
          playbook:
            default: ""
            description: "Notes such as links and instruction to help you resolve\
              \ alerts triggered by this monitor. {{Markdown}} supported. It will\
              \ be enabled only if available for your organization. Please contact\
              \ your Sumo Logic account team to learn more."
            example: This issue typically happens when database calls are timing out.
              Look at ServiceA's dashboard to investigate further
            type: string
          sloId:
            description: Identifier of the SLO definition for the monitor. This is
              only applicable for SLO type monitors.
            type: string
          automatedPlaybookIds:
            default: []
            description: The set of automated playbook ids for a monitor.
            example:
            - 649dcb922b70c74b5d2110f8
            - 649dcb912b70c74b5d2110a0
            items:
              type: string
            type: array
            uniqueItems: true
        required:
        - monitorType
        - queries
        - triggers
        type: object
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: type
        createdAt: 2000-01-23T04:56:07.000+00:00
        monitorType: Logs
        alertName: alertName
        permissions:
        - Read
        - Delete
        modifiedBy: modifiedBy
        id: id
        isDisabled: false
        contentType: contentType
        playbook: This issue typically happens when database calls are timing out.
          Look at ServiceA's dashboard to investigate further
        runAs: null
        notificationGroupFields:
        - service
        - env
        warnings:
          key: warnings
        timeZone: America/Los_Angeles
        triggers:
        - detectionMethod: LogsStaticCondition
          timeRange: 15m
          triggerType: Critical
          threshold: 50
          thresholdType: GreaterThanOrEqual
        - detectionMethod: LogsStaticCondition
          timeRange: 15m
          triggerType: ResolvedCritical
          threshold: 50
          thresholdType: LessThan
        version: 0
        queries:
        - query: _sourceCategory=search error
          rowId: A
        - query: _sourceCategory=search error
          rowId: A
        parentId: parentId
        isSystem: true
        groupNotifications: true
        isMutable: true
        createdBy: createdBy
        sloId: sloId
        evaluationDelay: 5m
        name: name
        automatedPlaybookIds:
        - 649dcb922b70c74b5d2110f8
        - 649dcb912b70c74b5d2110a0
        notifications:
        - notification:
            connectionType: Slack
            connectionId: "0000000000000005"
          runForTriggerTypes:
          - Critical
        - notification:
            connectionType: Email
            messageBody: Alert Triggered!
            recipients:
            - john@doe.com
            subject: "Monitor Alert: {{TriggerType}} on {{SearchName}}"
            timeZone: America/Los_Angeles
          runForTriggerTypes:
          - Critical
        status: "[Normal]"
    MonitorsLibraryMonitorExport:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseExport'
      - properties:
          monitorType:
            description: |-
              The type of monitor. Valid values:
                1. `Logs`: A logs query monitor.
                2. `Metrics`: A metrics query monitor.
                3. `Slo`: A SLO based monitor. Currently SLO based monitor is available in closed beta (Notify your Sumo Logic representative in order to get the early access).
            example: Logs
            pattern: ^(Logs|Metrics|Slo)$
            type: string
            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'
          evaluationDelay:
            default: 0m
            description: The delay duration for evaluating the monitor (relative to
              current time). The timerange of monitor will be shifted in the past
              by this delay time.
            example: 5m
            type: string
          alertName:
            description: "The name of the alert(s) triggered from this monitor. Monitor\
              \ name will be used if not specified. All template variables can be\
              \ used here except {{AlertName}}, {{AlertResponseURL}}, {{ResultsJson}},\
              \ and {{Playbook}}."
            type: string
          runAs:
            $ref: '#/components/schemas/MonitorsLibraryMonitor_allOf_runAs'
          notificationGroupFields:
            description: "The set of fields to be used to group alert notifications\
              \ for a monitor. The value of this field will be considered only when\
              \ 'groupNotifications' is true. The fields with very high cardinality\
              \ such as `_blockid`, `_raw`, `_messagetime`, `_receipttime`, and `_messageid`\
              \ are not allowed for Alert Grouping."
            example:
            - service
            - env
            items:
              type: string
            type: array
          queries:
            description: All queries from the monitor.
            items:
              $ref: '#/components/schemas/MonitorQuery'
            type: array
            uniqueItems: true
          triggers:
            description: Defines the conditions of when to send notifications.
            example:
            - detectionMethod: LogsStaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
            - detectionMethod: LogsStaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          timeZone:
            description: "Time zone identifier for monitor notifications. Follow the\
              \ format in [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
            example: America/Los_Angeles
            type: string
          notifications:
            default: []
            description: The notifications the monitor will send when the respective
              trigger condition is met.
            example:
            - notification:
                connectionType: Slack
                connectionId: "0000000000000005"
              runForTriggerTypes:
              - Critical
            - notification:
                connectionType: Email
                messageBody: Alert Triggered!
                recipients:
                - john@doe.com
                subject: "Monitor Alert: {{TriggerType}} on {{SearchName}}"
                timeZone: America/Los_Angeles
              runForTriggerTypes:
              - Critical
            items:
              $ref: '#/components/schemas/MonitorNotification'
            type: array
          isDisabled:
            default: false
            description: "Whether or not the monitor is disabled. Disabled monitors\
              \ will not run, and will not generate or send notifications."
            example: false
            type: boolean
          groupNotifications:
            default: true
            description: Whether or not to group notifications for individual items
              that meet the trigger condition.
            example: true
            type: boolean
          playbook:
            default: ""
            description: "Notes such as links and instruction to help you resolve\
              \ alerts triggered by this monitor. {{Markdown}} supported. It will\
              \ be enabled only if available for your organization. Please contact\
              \ your Sumo Logic account team to learn more."
            example: This issue typically happens when database calls are timing out.
              Look at ServiceA's dashboard to investigate further
            type: string
          sloId:
            description: Identifier of the SLO definition for the monitor. This is
              only applicable for SLO type monitors.
            type: string
          automatedPlaybookIds:
            default: []
            description: The set of automated playbook ids for a monitor.
            example:
            - 649dcb922b70c74b5d2110f8
            - 649dcb912b70c74b5d2110a0
            items:
              type: string
            type: array
            uniqueItems: true
        required:
        - monitorType
        - queries
        - triggers
        type: object
    MonitorsLibraryMonitorUpdate:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseUpdate'
      - properties:
          monitorType:
            description: |-
              The type of monitor. Valid values:
                1. `Logs`: A logs query monitor.
                2. `Metrics`: A metrics query monitor.
                3. `Slo`: A SLO based monitor. Currently SLO based monitor is available in closed beta (Notify your Sumo Logic representative in order to get the early access).
            example: Logs
            pattern: ^(Logs|Metrics|Slo)$
            type: string
            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'
          evaluationDelay:
            default: 0m
            description: The delay duration for evaluating the monitor (relative to
              current time). The timerange of monitor will be shifted in the past
              by this delay time.
            example: 5m
            type: string
          alertName:
            description: "The name of the alert(s) triggered from this monitor. Monitor\
              \ name will be used if not specified. All template variables can be\
              \ used here except {{AlertName}}, {{AlertResponseURL}}, {{ResultsJson}},\
              \ and {{Playbook}}."
            type: string
          runAs:
            $ref: '#/components/schemas/MonitorsLibraryMonitor_allOf_runAs'
          notificationGroupFields:
            description: "The set of fields to be used to group alert notifications\
              \ for a monitor. The value of this field will be considered only when\
              \ 'groupNotifications' is true. The fields with very high cardinality\
              \ such as `_blockid`, `_raw`, `_messagetime`, `_receipttime`, and `_messageid`\
              \ are not allowed for Alert Grouping."
            example:
            - service
            - env
            items:
              type: string
            type: array
          queries:
            description: All queries from the monitor.
            items:
              $ref: '#/components/schemas/MonitorQuery'
            type: array
            uniqueItems: true
          triggers:
            description: Defines the conditions of when to send notifications.
            example:
            - detectionMethod: LogsStaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
            - detectionMethod: LogsStaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          timeZone:
            description: "Time zone identifier for monitor notifications. Follow the\
              \ format in [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
            example: America/Los_Angeles
            type: string
          notifications:
            default: []
            description: The notifications the monitor will send when the respective
              trigger condition is met.
            example:
            - notification:
                connectionType: Slack
                connectionId: "0000000000000005"
              runForTriggerTypes:
              - Critical
            - notification:
                connectionType: Email
                messageBody: Alert Triggered!
                recipients:
                - john@doe.com
                subject: "Monitor Alert: {{TriggerType}} on {{SearchName}}"
                timeZone: America/Los_Angeles
              runForTriggerTypes:
              - Critical
            items:
              $ref: '#/components/schemas/MonitorNotification'
            type: array
          isDisabled:
            default: false
            description: "Whether or not the monitor is disabled. Disabled monitors\
              \ will not run, and will not generate or send notifications."
            example: false
            type: boolean
          groupNotifications:
            default: true
            description: Whether or not to group notifications for individual items
              that meet the trigger condition.
            example: true
            type: boolean
          playbook:
            default: ""
            description: "Notes such as links and instruction to help you resolve\
              \ alerts triggered by this monitor. {{Markdown}} supported. It will\
              \ be enabled only if available for your organization. Please contact\
              \ your Sumo Logic account team to learn more."
            example: This issue typically happens when database calls are timing out.
              Look at ServiceA's dashboard to investigate further
            type: string
          sloId:
            description: Identifier of the SLO definition for the monitor. This is
              only applicable for SLO type monitors.
            type: string
          automatedPlaybookIds:
            default: []
            description: The set of automated playbook ids for a monitor.
            example:
            - 649dcb922b70c74b5d2110f8
            - 649dcb912b70c74b5d2110a0
            items:
              type: string
            type: array
            uniqueItems: true
        required:
        - monitorType
        - queries
        - triggers
        type: object
    MonitorNotification:
      properties:
        notification:
          $ref: '#/components/schemas/Action'
        runForTriggerTypes:
          description: The trigger types assigned to send this notification.
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - notification
      - runForTriggerTypes
      type: object
    RunAs:
      properties:
        runAsId:
          description: "The runAsId indicates the context in which monitors will run.\
            \ If not provided, then it will run in the context of the monitor author."
          example: 00000000000001DF
          type: string
      required:
      - runAsId
      type: object
    MutingSchedulesLibraryBase:
      discriminator:
        propertyName: type
      example:
        name: name
        description: ""
        type: type
      properties:
        name:
          description: Name of the mutingschedule or folder.
          type: string
        description:
          default: ""
          description: Description of the mutingschedule or folder.
          type: string
        type:
          description: |-
            Type of the object model. Valid values:
              1) MutingSchedulesLibraryMutingschedule
              2) MutingSchedulesLibraryFolder
          type: string
      required:
      - name
      - type
      type: object
    MutingSchedulesLibraryBaseUpdate:
      discriminator:
        propertyName: type
      example:
        name: name
        description: ""
        type: type
        version: 0
      properties:
        name:
          description: The name of the mutingschedule or folder.
          type: string
        description:
          default: ""
          description: The description of the mutingschedule or folder.
          type: string
        version:
          description: The version of the mutingschedule or folder.
          format: int64
          type: integer
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      - version
      type: object
    MutingSchedulesLibraryBaseResponse:
      discriminator:
        propertyName: type
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: type
        version: 0
        parentId: parentId
        isSystem: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMutable: true
        createdBy: createdBy
        permissions:
        - Read
        - Delete
        name: name
        modifiedBy: modifiedBy
        id: id
        contentType: contentType
      properties:
        id:
          description: Identifier of the mutingschedule or folder.
          type: string
        name:
          description: Identifier of the mutingschedule or folder.
          type: string
        description:
          description: Description of the mutingschedule or folder.
          type: string
        version:
          description: Version of the mutingschedule or folder.
          format: int64
          type: integer
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        parentId:
          description: Identifier of the parent folder.
          type: string
        contentType:
          description: |-
            Type of the content. Valid values:
              1) Mutingschedule
              2) Folder
          type: string
        type:
          description: Type of the object model.
          type: string
        isSystem:
          description: System objects are objects provided by Sumo Logic. System objects
            can only be localized. Non-local fields can't be updated.
          type: boolean
        isMutable:
          description: Immutable objects are "READ-ONLY".
          type: boolean
        permissions:
          description: "Aggregated permission summary for the calling user. If detailed\
            \ permission statements are required, please call list permissions endpoint."
          example:
          - Read
          - Delete
          items:
            type: string
          type: array
      required:
      - contentType
      - createdAt
      - createdBy
      - description
      - id
      - isMutable
      - isSystem
      - modifiedAt
      - modifiedBy
      - name
      - parentId
      - type
      - version
      type: object
    MutingSchedulesLibraryFolder:
      allOf:
      - $ref: '#/components/schemas/MutingSchedulesLibraryBase'
    MutingSchedulesLibraryFolderUpdate:
      allOf:
      - $ref: '#/components/schemas/MutingSchedulesLibraryBaseUpdate'
    MutingSchedulesLibraryFolderResponse:
      allOf:
      - $ref: '#/components/schemas/MutingSchedulesLibraryBaseResponse'
      - properties:
          permissions:
            description: "Aggregated permission summary for the calling user. If detailed\
              \ permission statements are required, please call list permissions endpoint."
            example:
            - Read
            - Delete
            items:
              type: string
            type: array
          children:
            description: "Children of the folder. NOTE: Permissions field will not\
              \ be filled (empty list) for children."
            items:
              $ref: '#/components/schemas/MutingSchedulesLibraryBaseResponse'
            type: array
        required:
        - children
        - permissions
        type: object
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: type
        version: 0
        parentId: parentId
        isSystem: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMutable: true
        createdBy: createdBy
        children:
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 0
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          permissions:
          - Read
          - Delete
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 0
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          permissions:
          - Read
          - Delete
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
        permissions:
        - Read
        - Delete
        name: name
        modifiedBy: modifiedBy
        id: id
        contentType: contentType
    MutingSchedulesLibraryBaseExport:
      discriminator:
        propertyName: type
      example:
        name: name
        description: description
        type: type
      properties:
        name:
          description: Name of the mutingschedule or folder.
          type: string
        description:
          description: Description of the mutingschedule or folder.
          type: string
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      type: object
    MutingSchedulesLibraryFolderExport:
      allOf:
      - $ref: '#/components/schemas/MutingSchedulesLibraryBaseExport'
      - properties:
          children:
            description: The items in the folder. A multi-type list of types mutingschedule
              or folder.
            items:
              $ref: '#/components/schemas/MutingSchedulesLibraryBaseExport'
            type: array
        type: object
    MutingSchedulesLibraryMutingSchedule:
      allOf:
      - $ref: '#/components/schemas/MutingSchedulesLibraryBase'
      - properties:
          schedule:
            $ref: '#/components/schemas/ScheduleDefinition'
          monitor:
            $ref: '#/components/schemas/MonitorScope'
          notificationGroups:
            default: []
            items:
              $ref: '#/components/schemas/GroupDefinition'
            type: array
        required:
        - schedule
        type: object
    MutingSchedulesLibraryMutingScheduleResponse:
      allOf:
      - $ref: '#/components/schemas/MutingSchedulesLibraryBaseResponse'
      - properties:
          schedule:
            $ref: '#/components/schemas/ScheduleDefinition'
          monitor:
            $ref: '#/components/schemas/MonitorScope'
          notificationGroups:
            default: []
            items:
              $ref: '#/components/schemas/GroupDefinition'
            type: array
        required:
        - schedule
        type: object
    MutingSchedulesLibraryMutingScheduleExport:
      allOf:
      - $ref: '#/components/schemas/MutingSchedulesLibraryBaseExport'
      - properties:
          schedule:
            $ref: '#/components/schemas/ScheduleDefinition'
          monitor:
            $ref: '#/components/schemas/MonitorScope'
          notificationGroups:
            default: []
            items:
              $ref: '#/components/schemas/GroupDefinition'
            type: array
        required:
        - schedule
        type: object
    MutingSchedulesLibraryMutingScheduleUpdate:
      allOf:
      - $ref: '#/components/schemas/MutingSchedulesLibraryBaseUpdate'
      - properties:
          schedule:
            $ref: '#/components/schemas/ScheduleDefinition'
          monitor:
            $ref: '#/components/schemas/MonitorScope'
          notificationGroups:
            default: []
            items:
              $ref: '#/components/schemas/GroupDefinition'
            type: array
        required:
        - schedule
        type: object
    ScheduleDefinition:
      properties:
        timezone:
          description: "Time zone for the schedule per [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          type: string
        startDate:
          description: Schedule start date in the format of `yyyy-mm-dd`
          type: string
        startTime:
          description: Schedule start time in the format of `hh:mm`
          type: string
        duration:
          description: Duration of the muting in minutes
          format: int32
          type: integer
        rrule:
          description: RRule (Recurrence Rule)
          type: string
        isForm:
          description: A flag identifying if the RRule is created or modified through
            Form UI
          type: boolean
      required:
      - duration
      - startDate
      - startTime
      - timezone
      type: object
    MonitorScope:
      description: Monitor scope that the schedule applies to
      properties:
        ids:
          description: List of monitor Ids in hex. Must be empty if `all` is true.
          items:
            type: string
          type: array
        all:
          default: false
          description: true if the schedule applies to all monitors
          type: boolean
      type: object
    GroupDefinition:
      description: Alert group scope that the schedule applies to
      example:
        groupKey: region
        groupValues:
        - us-east-1
        - us-west-1
      properties:
        groupKey:
          description: Field name of an alert group defined in monitors
          type: string
        groupValues:
          description: Values of alert groups generated by monitors
          items:
            type: string
          type: array
      required:
      - groupKey
      - groupValues
      type: object
    AlertsLibraryBase:
      discriminator:
        propertyName: type
      properties:
        name:
          description: Name of the alert or folder.
          type: string
        description:
          default: ""
          description: Description of the alert or folder.
          type: string
        type:
          description: |-
            Type of the object model. Valid values:
              1) AlertsLibraryAlert
              2) AlertsLibraryFolder
          type: string
        isLocked:
          default: false
          description: Locking/Unlocking requires the `LockAlerts` capability. Locked
            objects can only be `Localized`. Updating or moving requires unlocking
            the object. Locking/Unlocking recursively locks all of the objects children.
            All children of a locked object must be locked.
          type: boolean
      required:
      - name
      - type
      type: object
    AlertsLibraryBaseUpdate:
      discriminator:
        propertyName: type
      properties:
        name:
          description: The name of the alert or folder.
          type: string
        description:
          default: ""
          description: The description of the alert or folder.
          type: string
        version:
          description: The version of the alert or folder.
          format: int64
          type: integer
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      - version
      type: object
    AlertsLibraryBaseResponse:
      discriminator:
        propertyName: type
      properties:
        id:
          description: Identifier of the alert or folder.
          type: string
        name:
          description: Identifier of the alert or folder.
          type: string
        description:
          description: Description of the alert or folder.
          type: string
        version:
          description: Version of the alert or folder.
          format: int64
          type: integer
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        parentId:
          description: Identifier of the parent folder.
          type: string
        contentType:
          description: |-
            Type of the content. Valid values:
              1) Alert
              2) Folder
          type: string
        type:
          description: Type of the object model.
          type: string
        isLocked:
          description: Whether the object is locked.
          type: boolean
        isSystem:
          description: System objects are objects provided by Sumo Logic. System objects
            can only be localized. Non-local fields can't be updated.
          type: boolean
        isMutable:
          description: Immutable objects are "READ-ONLY".
          type: boolean
      required:
      - contentType
      - createdAt
      - createdBy
      - description
      - id
      - isMutable
      - isSystem
      - modifiedAt
      - modifiedBy
      - name
      - parentId
      - type
      - version
      type: object
    AlertsLibraryFolder:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBase'
    AlertsLibraryFolderUpdate:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseUpdate'
    AlertsLibraryFolderResponse:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseResponse'
      - properties:
          children:
            description: "Children of the folder. NOTE: Permissions field will not\
              \ be filled (empty list) for children."
            items:
              $ref: '#/components/schemas/AlertsLibraryBaseResponse'
            type: array
        required:
        - children
        type: object
    AlertsLibraryBaseExport:
      discriminator:
        propertyName: type
      properties:
        name:
          description: Name of the alert or folder.
          type: string
        description:
          description: Description of the alert or folder.
          type: string
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      type: object
    AlertsLibraryFolderExport:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseExport'
      - properties:
          children:
            description: The items in the folder. A multi-type list of types alert
              or folder.
            items:
              $ref: '#/components/schemas/AlertsLibraryBaseExport'
            type: array
        type: object
    AlertsLibraryAlert:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBase'
      - properties:
          monitorId:
            description: The Id of the associated monitor.
            example: 000000000000003C
            type: string
          resolvedAt:
            description: The time at which the alert was resolved.
            example: 2018-10-16T10:10:00Z
            format: date-time
            nullable: true
            type: string
          abnormalityStartTime:
            description: The time at which the incident started.
            example: 2018-10-16T09:10:00Z
            format: date-time
            type: string
          alertType:
            description: |-
              The severity of the Alert. Valid values:
                1. `Critical`
                2. `Warning`
                3. `MissingData`
            example: Warning
            pattern: ^(Critical|Warning|MissingData)$
            type: string
            x-pattern-message: "should be either 'Critical', 'Warning' or 'MissingData'"
          status:
            description: |-
              The status of the Alert. Valid values:
                1. `Triggered`
                2. `Resolved`
            example: Triggered
            pattern: ^(Triggered|Resolved)$
            type: string
            x-pattern-message: should be either 'Triggered' or 'Resolved'
          monitorQueries:
            description: All queries from the monitor relevant to the alert.
            items:
              $ref: '#/components/schemas/AlertMonitorQuery'
            type: array
          triggerQueries:
            description: All queries from the monitor relevant to the alert with triggered
              time series filters.
            items:
              $ref: '#/components/schemas/AlertMonitorQuery'
            type: array
          monitorUrl:
            description: URL for this monitor's view page
            type: string
          triggerQueryUrl:
            description: A link to search with the triggering data and time range
            type: string
          triggerConditions:
            description: Trigger conditions which were breached to create this Alert.
            example:
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
              occurrenceType: ResultCount
              triggerSource: AllResults
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
              occurrenceType: ResultCount
              triggerSource: AllResults
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          triggerValue:
            description: The of the query result which breached the trigger condition.
            example: 99.9
            format: double
            type: number
          monitorType:
            description: |-
              The type of monitor. Valid values:
                1. `Logs`: A logs query monitor.
                2. `Metrics`: A metrics query monitor.
            example: Logs
            pattern: ^(Logs|Metrics)$
            type: string
            x-pattern-message: should be either 'Logs' or 'Metrics'
          entityIds:
            deprecated: true
            description: |
              One or more primary entity identifiers involved in this Alert. Primary/secondary entities are explained in description for `entities`. DEPRECATED, USE `entities` INSTEAD.
            items:
              example: be138dbaaf15ff05da1df0a9d5e763e8
              maxLength: 32
              minLength: 1
              type: string
            maxItems: 10000
            minItems: 0
            type: array
          entities:
            description: |
              One or more primary entities involved in this Alert. Primary entity is the most concrete entity that can be assigned per time series or log group (e.g. k8s container), secondary entities are the less specific ones that can be assigned per that notification (e.g. k8s cluster or EC2 host).
            items:
              $ref: '#/components/schemas/AlertEntityInfo'
            maxItems: 10000
            minItems: 0
            type: array
          secondaryEntities:
            default: []
            description: |
              One or more secondary entity involved in this Alert. Primary/secondary entities are explained in description for `entities`
            items:
              $ref: '#/components/schemas/AlertEntityInfo'
            maxItems: 10000
            minItems: 0
            type: array
          notes:
            example: High CPU is often fixed by scaling up the cluster. <link to scale
              up cluster>
            type: string
          extraDetails:
            $ref: '#/components/schemas/ExtraDetails'
          alertCondition:
            description: The condition which triggered this alert.
            example: Metric value greater than or equal to 100.0 for all of the last
              5 minutes.
            nullable: true
            type: string
          isMuted:
            description: Flag of the alerts muting status.
            example: false
            type: boolean
        type: object
    AlertsLibraryAlertResponse:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseResponse'
      - properties:
          monitorId:
            description: The Id of the associated monitor.
            example: 000000000000003C
            type: string
          resolvedAt:
            description: The time at which the alert was resolved.
            example: 2018-10-16T10:10:00Z
            format: date-time
            nullable: true
            type: string
          abnormalityStartTime:
            description: The time at which the incident started.
            example: 2018-10-16T09:10:00Z
            format: date-time
            type: string
          alertType:
            description: |-
              The severity of the Alert. Valid values:
                1. `Critical`
                2. `Warning`
                3. `MissingData`
            example: Warning
            pattern: ^(Critical|Warning|MissingData)$
            type: string
            x-pattern-message: "should be either 'Critical', 'Warning' or 'MissingData'"
          status:
            description: |-
              The status of the Alert. Valid values:
                1. `Triggered`
                2. `Resolved`
            example: Triggered
            pattern: ^(Triggered|Resolved)$
            type: string
            x-pattern-message: should be either 'Triggered' or 'Resolved'
          monitorQueries:
            description: All queries from the monitor relevant to the alert.
            items:
              $ref: '#/components/schemas/AlertMonitorQuery'
            type: array
          triggerQueries:
            description: All queries from the monitor relevant to the alert with triggered
              time series filters.
            items:
              $ref: '#/components/schemas/AlertMonitorQuery'
            type: array
          monitorUrl:
            description: URL for this monitor's view page
            type: string
          triggerQueryUrl:
            description: A link to search with the triggering data and time range
            type: string
          triggerConditions:
            description: Trigger conditions which were breached to create this Alert.
            example:
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
              occurrenceType: ResultCount
              triggerSource: AllResults
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
              occurrenceType: ResultCount
              triggerSource: AllResults
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          triggerValue:
            description: The of the query result which breached the trigger condition.
            example: 99.9
            format: double
            type: number
          monitorType:
            description: |-
              The type of monitor. Valid values:
                1. `Logs`: A logs query monitor.
                2. `Metrics`: A metrics query monitor.
            example: Logs
            pattern: ^(Logs|Metrics)$
            type: string
            x-pattern-message: should be either 'Logs' or 'Metrics'
          entityIds:
            deprecated: true
            description: |
              One or more primary entity identifiers involved in this Alert. Primary/secondary entities are explained in description for `entities`. DEPRECATED, USE `entities` INSTEAD.
            items:
              example: be138dbaaf15ff05da1df0a9d5e763e8
              maxLength: 32
              minLength: 1
              type: string
            maxItems: 10000
            minItems: 0
            type: array
          entities:
            description: |
              One or more primary entities involved in this Alert. Primary entity is the most concrete entity that can be assigned per time series or log group (e.g. k8s container), secondary entities are the less specific ones that can be assigned per that notification (e.g. k8s cluster or EC2 host).
            items:
              $ref: '#/components/schemas/AlertEntityInfo'
            maxItems: 10000
            minItems: 0
            type: array
          secondaryEntities:
            default: []
            description: |
              One or more secondary entity involved in this Alert. Primary/secondary entities are explained in description for `entities`
            items:
              $ref: '#/components/schemas/AlertEntityInfo'
            maxItems: 10000
            minItems: 0
            type: array
          notes:
            example: High CPU is often fixed by scaling up the cluster. <link to scale
              up cluster>
            type: string
          extraDetails:
            $ref: '#/components/schemas/ExtraDetails'
          alertCondition:
            description: The condition which triggered this alert.
            example: Metric value greater than or equal to 100.0 for all of the last
              5 minutes.
            nullable: true
            type: string
          isMuted:
            description: Flag of the alerts muting status.
            example: false
            type: boolean
        type: object
    AlertsLibraryAlertExport:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseExport'
      - properties:
          monitorId:
            description: The Id of the associated monitor.
            example: 000000000000003C
            type: string
          resolvedAt:
            description: The time at which the alert was resolved.
            example: 2018-10-16T10:10:00Z
            format: date-time
            nullable: true
            type: string
          abnormalityStartTime:
            description: The time at which the incident started.
            example: 2018-10-16T09:10:00Z
            format: date-time
            type: string
          alertType:
            description: |-
              The severity of the Alert. Valid values:
                1. `Critical`
                2. `Warning`
                3. `MissingData`
            example: Warning
            pattern: ^(Critical|Warning|MissingData)$
            type: string
            x-pattern-message: "should be either 'Critical', 'Warning' or 'MissingData'"
          status:
            description: |-
              The status of the Alert. Valid values:
                1. `Triggered`
                2. `Resolved`
            example: Triggered
            pattern: ^(Triggered|Resolved)$
            type: string
            x-pattern-message: should be either 'Triggered' or 'Resolved'
          monitorQueries:
            description: All queries from the monitor relevant to the alert.
            items:
              $ref: '#/components/schemas/AlertMonitorQuery'
            type: array
          triggerQueries:
            description: All queries from the monitor relevant to the alert with triggered
              time series filters.
            items:
              $ref: '#/components/schemas/AlertMonitorQuery'
            type: array
          monitorUrl:
            description: URL for this monitor's view page
            type: string
          triggerQueryUrl:
            description: A link to search with the triggering data and time range
            type: string
          triggerConditions:
            description: Trigger conditions which were breached to create this Alert.
            example:
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
              occurrenceType: ResultCount
              triggerSource: AllResults
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
              occurrenceType: ResultCount
              triggerSource: AllResults
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          triggerValue:
            description: The of the query result which breached the trigger condition.
            example: 99.9
            format: double
            type: number
          monitorType:
            description: |-
              The type of monitor. Valid values:
                1. `Logs`: A logs query monitor.
                2. `Metrics`: A metrics query monitor.
            example: Logs
            pattern: ^(Logs|Metrics)$
            type: string
            x-pattern-message: should be either 'Logs' or 'Metrics'
          entityIds:
            deprecated: true
            description: |
              One or more primary entity identifiers involved in this Alert. Primary/secondary entities are explained in description for `entities`. DEPRECATED, USE `entities` INSTEAD.
            items:
              example: be138dbaaf15ff05da1df0a9d5e763e8
              maxLength: 32
              minLength: 1
              type: string
            maxItems: 10000
            minItems: 0
            type: array
          entities:
            description: |
              One or more primary entities involved in this Alert. Primary entity is the most concrete entity that can be assigned per time series or log group (e.g. k8s container), secondary entities are the less specific ones that can be assigned per that notification (e.g. k8s cluster or EC2 host).
            items:
              $ref: '#/components/schemas/AlertEntityInfo'
            maxItems: 10000
            minItems: 0
            type: array
          secondaryEntities:
            default: []
            description: |
              One or more secondary entity involved in this Alert. Primary/secondary entities are explained in description for `entities`
            items:
              $ref: '#/components/schemas/AlertEntityInfo'
            maxItems: 10000
            minItems: 0
            type: array
          notes:
            example: High CPU is often fixed by scaling up the cluster. <link to scale
              up cluster>
            type: string
          extraDetails:
            $ref: '#/components/schemas/ExtraDetails'
          alertCondition:
            description: The condition which triggered this alert.
            example: Metric value greater than or equal to 100.0 for all of the last
              5 minutes.
            nullable: true
            type: string
          isMuted:
            description: Flag of the alerts muting status.
            example: false
            type: boolean
        type: object
    AlertsLibraryAlertUpdate:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseUpdate'
      - properties:
          monitorId:
            description: The Id of the associated monitor.
            example: 000000000000003C
            type: string
          resolvedAt:
            description: The time at which the alert was resolved.
            example: 2018-10-16T10:10:00Z
            format: date-time
            nullable: true
            type: string
          abnormalityStartTime:
            description: The time at which the incident started.
            example: 2018-10-16T09:10:00Z
            format: date-time
            type: string
          alertType:
            description: |-
              The severity of the Alert. Valid values:
                1. `Critical`
                2. `Warning`
                3. `MissingData`
            example: Warning
            pattern: ^(Critical|Warning|MissingData)$
            type: string
            x-pattern-message: "should be either 'Critical', 'Warning' or 'MissingData'"
          status:
            description: |-
              The status of the Alert. Valid values:
                1. `Triggered`
                2. `Resolved`
            example: Triggered
            pattern: ^(Triggered|Resolved)$
            type: string
            x-pattern-message: should be either 'Triggered' or 'Resolved'
          monitorQueries:
            description: All queries from the monitor relevant to the alert.
            items:
              $ref: '#/components/schemas/AlertMonitorQuery'
            type: array
          triggerQueries:
            description: All queries from the monitor relevant to the alert with triggered
              time series filters.
            items:
              $ref: '#/components/schemas/AlertMonitorQuery'
            type: array
          monitorUrl:
            description: URL for this monitor's view page
            type: string
          triggerQueryUrl:
            description: A link to search with the triggering data and time range
            type: string
          triggerConditions:
            description: Trigger conditions which were breached to create this Alert.
            example:
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
              occurrenceType: ResultCount
              triggerSource: AllResults
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
              occurrenceType: ResultCount
              triggerSource: AllResults
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          triggerValue:
            description: The of the query result which breached the trigger condition.
            example: 99.9
            format: double
            type: number
          monitorType:
            description: |-
              The type of monitor. Valid values:
                1. `Logs`: A logs query monitor.
                2. `Metrics`: A metrics query monitor.
            example: Logs
            pattern: ^(Logs|Metrics)$
            type: string
            x-pattern-message: should be either 'Logs' or 'Metrics'
          entityIds:
            deprecated: true
            description: |
              One or more primary entity identifiers involved in this Alert. Primary/secondary entities are explained in description for `entities`. DEPRECATED, USE `entities` INSTEAD.
            items:
              example: be138dbaaf15ff05da1df0a9d5e763e8
              maxLength: 32
              minLength: 1
              type: string
            maxItems: 10000
            minItems: 0
            type: array
          entities:
            description: |
              One or more primary entities involved in this Alert. Primary entity is the most concrete entity that can be assigned per time series or log group (e.g. k8s container), secondary entities are the less specific ones that can be assigned per that notification (e.g. k8s cluster or EC2 host).
            items:
              $ref: '#/components/schemas/AlertEntityInfo'
            maxItems: 10000
            minItems: 0
            type: array
          secondaryEntities:
            default: []
            description: |
              One or more secondary entity involved in this Alert. Primary/secondary entities are explained in description for `entities`
            items:
              $ref: '#/components/schemas/AlertEntityInfo'
            maxItems: 10000
            minItems: 0
            type: array
          notes:
            example: High CPU is often fixed by scaling up the cluster. <link to scale
              up cluster>
            type: string
          extraDetails:
            $ref: '#/components/schemas/ExtraDetails'
          alertCondition:
            description: The condition which triggered this alert.
            example: Metric value greater than or equal to 100.0 for all of the last
              5 minutes.
            nullable: true
            type: string
          isMuted:
            description: Flag of the alerts muting status.
            example: false
            type: boolean
        type: object
    AlertMonitorQuery:
      allOf:
      - $ref: '#/components/schemas/MonitorQuery'
      - description: Monitor Query for the Alert.
        properties:
          isTriggerRow:
            description: Indicates whether the current row is the trigger (final)
              row.
            example: false
            type: boolean
        required:
        - isTriggerRow
        type: object
    ExtraDetails:
      properties:
        details:
          description: Additional data from Sumo Logic related to the Alert.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
      type: object
    KeyValuePair:
      properties:
        key:
          description: Name of the key.
          example: cluster
          type: string
        value:
          description: Value of the key.
          example: cluster1
          type: string
    AlertEntityInfo:
      description: An entity's name and Id.
      properties:
        entityId:
          description: Identifier of the entity.
          example: f11046564fc9fd093f92fdca24e2823f
          type: string
        entityName:
          description: Name of the entity.
          example: _sourceCategory=worker _sourceHost=node-1
          type: string
        entityTypeId:
          default: ""
          description: Entity type ID or empty if unknown.
          example: f5ef50254e45958882a2c1e37f528308
          type: string
        isPrimaryWithinDomain:
          default: true
          description: Whether entity is the most specific entity within its domain
            for that alert.
          type: boolean
        isPrimaryDomain:
          default: true
          description: Whether entity is from the most accurate domain found for this
            alert.
          type: boolean
      type: object
    SlosLibraryBase:
      discriminator:
        propertyName: type
      example:
        name: name
        description: ""
        type: type
      properties:
        name:
          description: Name of the slo or folder.
          type: string
        description:
          default: ""
          description: Description of the slo or folder.
          type: string
        type:
          description: |-
            Type of the object model. Valid values:
              1) SlosLibrarySlo
              2) SlosLibraryFolder
          type: string
      required:
      - name
      - type
      type: object
    SlosLibraryBaseUpdate:
      discriminator:
        propertyName: type
      example:
        name: name
        description: ""
        type: type
        version: 0
      properties:
        name:
          description: The name of the slo or folder.
          type: string
        description:
          default: ""
          description: The description of the slo or folder.
          type: string
        version:
          description: The version of the slo or folder.
          format: int64
          type: integer
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      - version
      type: object
    SlosLibraryBaseResponse:
      discriminator:
        propertyName: type
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: type
        version: 0
        parentId: parentId
        isSystem: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMutable: true
        createdBy: createdBy
        permissions:
        - Read
        - Delete
        name: name
        modifiedBy: modifiedBy
        id: id
        contentType: contentType
      properties:
        id:
          description: Identifier of the slo or folder.
          type: string
        name:
          description: Identifier of the slo or folder.
          type: string
        description:
          description: Description of the slo or folder.
          type: string
        version:
          description: Version of the slo or folder.
          format: int64
          type: integer
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        parentId:
          description: Identifier of the parent folder.
          type: string
        contentType:
          description: |-
            Type of the content. Valid values:
              1) Slo
              2) Folder
          type: string
        type:
          description: Type of the object model.
          type: string
        isSystem:
          description: System objects are objects provided by Sumo Logic. System objects
            can only be localized. Non-local fields can't be updated.
          type: boolean
        isMutable:
          description: Immutable objects are "READ-ONLY".
          type: boolean
        permissions:
          description: "Aggregated permission summary for the calling user. If detailed\
            \ permission statements are required, please call list permissions endpoint."
          example:
          - Read
          - Delete
          items:
            type: string
          type: array
      required:
      - contentType
      - createdAt
      - createdBy
      - description
      - id
      - isMutable
      - isSystem
      - modifiedAt
      - modifiedBy
      - name
      - parentId
      - type
      - version
      type: object
    SlosLibraryFolder:
      allOf:
      - $ref: '#/components/schemas/SlosLibraryBase'
    SlosLibraryFolderUpdate:
      allOf:
      - $ref: '#/components/schemas/SlosLibraryBaseUpdate'
    SlosLibraryFolderResponse:
      allOf:
      - $ref: '#/components/schemas/SlosLibraryBaseResponse'
      - properties:
          permissions:
            description: "Aggregated permission summary for the calling user. If detailed\
              \ permission statements are required, please call list permissions endpoint."
            example:
            - Read
            - Delete
            items:
              type: string
            type: array
          children:
            description: "Children of the folder. NOTE: Permissions field will not\
              \ be filled (empty list) for children."
            items:
              $ref: '#/components/schemas/SlosLibraryBaseResponse'
            type: array
        required:
        - children
        - permissions
        type: object
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: type
        version: 0
        parentId: parentId
        isSystem: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMutable: true
        createdBy: createdBy
        children:
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 0
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          permissions:
          - Read
          - Delete
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 0
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          permissions:
          - Read
          - Delete
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
        permissions:
        - Read
        - Delete
        name: name
        modifiedBy: modifiedBy
        id: id
        contentType: contentType
    SlosLibraryBaseExport:
      discriminator:
        propertyName: type
      example:
        name: name
        description: description
        type: type
      properties:
        name:
          description: Name of the slo or folder.
          type: string
        description:
          description: Description of the slo or folder.
          type: string
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      type: object
    SlosLibraryFolderExport:
      allOf:
      - $ref: '#/components/schemas/SlosLibraryBaseExport'
      - properties:
          children:
            description: The items in the folder. A multi-type list of types slo or
              folder.
            items:
              $ref: '#/components/schemas/SlosLibraryBaseExport'
            type: array
        type: object
    SlosLibrarySlo:
      allOf:
      - $ref: '#/components/schemas/SlosLibraryBase'
      - properties:
          signalType:
            description: "Type of SLI Signal (latency, error, throughput, availability\
              \ or other)."
            example: Latency
            pattern: ^(Latency|Error|Throughput|Availability|Other)$
            type: string
            x-pattern-message: "Must be `Latency`, `Error`, `Throughput`, `Availability`\
              \ or `Other`"
          compliance:
            $ref: '#/components/schemas/Compliance'
          indicator:
            $ref: '#/components/schemas/Sli'
          service:
            description: Name of the service.
            type: string
          application:
            description: Name of the application.
            type: string
          tags:
            additionalProperties:
              type: string
            description: Tags to be associated with the SLO.
            maxProperties: 50
            type: object
        required:
        - compliance
        - indicator
        - signalType
        type: object
    SlosLibrarySloResponse:
      allOf:
      - $ref: '#/components/schemas/SlosLibraryBaseResponse'
      - properties:
          signalType:
            description: "Type of SLI Signal (latency, error, throughput, availability\
              \ or other)."
            example: Latency
            pattern: ^(Latency|Error|Throughput|Availability|Other)$
            type: string
            x-pattern-message: "Must be `Latency`, `Error`, `Throughput`, `Availability`\
              \ or `Other`"
          compliance:
            $ref: '#/components/schemas/Compliance'
          indicator:
            $ref: '#/components/schemas/Sli'
          service:
            description: Name of the service.
            type: string
          application:
            description: Name of the application.
            type: string
          tags:
            additionalProperties:
              type: string
            description: Tags to be associated with the SLO.
            maxProperties: 50
            type: object
          sloVersion:
            description: "Current SLO Version. This is incremented on every change\
              \ of a critical field of the SLO (i.e, SLI or Compliance period timezone),\
              \ that requires a recompute of the SLI values over the compliance period."
            format: int64
            type: integer
        required:
        - compliance
        - indicator
        - signalType
        type: object
    SlosLibrarySloExport:
      allOf:
      - $ref: '#/components/schemas/SlosLibraryBaseExport'
      - properties:
          signalType:
            description: "Type of SLI Signal (latency, error, throughput, availability\
              \ or other)."
            example: Latency
            pattern: ^(Latency|Error|Throughput|Availability|Other)$
            type: string
            x-pattern-message: "Must be `Latency`, `Error`, `Throughput`, `Availability`\
              \ or `Other`"
          compliance:
            $ref: '#/components/schemas/Compliance'
          indicator:
            $ref: '#/components/schemas/Sli'
          service:
            description: Name of the service.
            type: string
          application:
            description: Name of the application.
            type: string
          tags:
            additionalProperties:
              type: string
            description: Tags to be associated with the SLO.
            maxProperties: 50
            type: object
        required:
        - compliance
        - indicator
        - signalType
        type: object
    SlosLibrarySloUpdate:
      allOf:
      - $ref: '#/components/schemas/SlosLibraryBaseUpdate'
      - properties:
          signalType:
            description: "Type of SLI Signal (latency, error, throughput, availability\
              \ or other)."
            example: Latency
            pattern: ^(Latency|Error|Throughput|Availability|Other)$
            type: string
            x-pattern-message: "Must be `Latency`, `Error`, `Throughput`, `Availability`\
              \ or `Other`"
          compliance:
            $ref: '#/components/schemas/Compliance'
          indicator:
            $ref: '#/components/schemas/Sli'
          service:
            description: Name of the service.
            type: string
          application:
            description: Name of the application.
            type: string
          tags:
            additionalProperties:
              type: string
            description: Tags to be associated with the SLO.
            maxProperties: 50
            type: object
        required:
        - compliance
        - indicator
        - signalType
        type: object
    Compliance:
      discriminator:
        mapping:
          Rolling: '#/components/schemas/RollingCompliance'
          Calendar: '#/components/schemas/CalendarCompliance'
        propertyName: complianceType
      properties:
        complianceType:
          description: Compliance Type (rolling or calendar)
          example: Rolling
          pattern: ^(Rolling|Calendar)$
          type: string
          x-pattern-message: Must be `Rolling` or `Calendar`
        target:
          description: Target percentage for the SLI over the compliance period.
          example: 99.5
          type: number
        timezone:
          description: "Time zone for the SLO compliance. Follow the format in the\
            \ [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          example: America/Los_Angeles
          type: string
      required:
      - complianceType
      - target
      - timezone
      type: object
    CalendarCompliance:
      allOf:
      - $ref: '#/components/schemas/Compliance'
      - properties:
          windowType:
            description: Type of Calendar Window (week/month/quarter).
            example: Week
            pattern: ^(Week|Month|Quarter)$
            type: string
            x-pattern-message: "Must be `Week`, `Month` or `Quarter`"
          startFrom:
            description: "Start of the calendar window. For week, it would be the\
              \ day of the week (for e.g Sunday, Monday etc). For month, it will always\
              \ be the first day of the month (therefore not required to specify for\
              \ monthly compliance). For quarter, it would be the first month of the\
              \ quarter (for e.g January, February etc.)"
            example: Monday
            type: string
        required:
        - windowType
        type: object
      description: Window for Calendar Compliance.
      type: object
    RollingCompliance:
      allOf:
      - $ref: '#/components/schemas/Compliance'
      - properties:
          size:
            description: Size of Rolling Window. Must be a multiple of days.
            example: 7d
            type: string
        required:
        - size
        type: object
      description: Window for Rolling Compliance.
      type: object
    Sli:
      discriminator:
        propertyName: evaluationType
      properties:
        evaluationType:
          description: "Evaluate SLI using successful/total windows, or occurrence\
            \ of successful events over entire compliance period, or based on monitor\
            \ evaluation."
          example: Window
          pattern: ^(Window|Request|Monitor)$
          type: string
          x-pattern-message: Must be `Window` or `Request` or `Monitor`
      required:
      - evaluationType
      type: object
    SliQueryGroup:
      properties:
        queryGroupType:
          description: Type of Query (successful/unsuccessful/total/threshold).
          example: Threshold
          pattern: ^(Successful|Unsuccessful|Total|Threshold)$
          type: string
          x-pattern-message: "Must be `Successful`, `Unsuccessful`, `Total` or `Threshold`"
        queryGroup:
          description: Group of queries to allow for query arithmetic.
          items:
            $ref: '#/components/schemas/SliQuery'
          type: array
      required:
      - queryGroup
      - queryGroupType
      type: object
    SliQuery:
      description: Group of queries to allow for query arithmetic.
      properties:
        rowId:
          description: "Unique id of the row. Used for query arithmetic, only for\
            \ metric queries."
          example: A
          type: string
        query:
          description: Query String.
          example: _sourceCategory=webserver "Request completed successfully"
          type: string
        useRowCount:
          description: Determines whether to use count of rows (for logs) or data
            points (for metrics) in query result or specific field.
          example: false
          type: boolean
        field:
          description: Field of log query output to compare against. To be used only
            for logs based data type when `useRowCount` is false.
          example: request_latency
          type: string
      required:
      - query
      - rowId
      - useRowCount
      type: object
    QueryBasedSli:
      description: Common properties for query based SLIs
      properties:
        queryType:
          description: Type of Raw Data Queries for SLI (Logs/Metrics).
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
          x-pattern-message: Must be `Logs` or `Metrics`
        queries:
          description: Queries for defining SLI.
          items:
            $ref: '#/components/schemas/SliQueryGroup'
          type: array
      required:
      - queries
      - queryType
      type: object
    Request:
      allOf:
      - $ref: '#/components/schemas/QueryBasedSli'
      - $ref: '#/components/schemas/Sli'
      - properties:
          threshold:
            description: Compared against threshold query's raw data points to determine
              success.
            example: 200
            type: number
          op:
            description: Comparison function with threshold (LessThan/GreaterThan/LessThanOrEqual/GreaterThanOrEqual).
            example: LessThan
            pattern: ^(LessThan|GreaterThan|LessThanOrEqual|GreaterThanOrEqual)$
            type: string
            x-pattern-message: "Must be `LessThan`, `GreaterThan`, `LessThanOrEqual`\
              \ or `GreaterThanOrEqual`"
        type: object
      description: Evaluate SLI using occurrences of successful events over compliance
        period.
      type: object
    Window:
      allOf:
      - $ref: '#/components/schemas/QueryBasedSli'
      - $ref: '#/components/schemas/Sli'
      - properties:
          threshold:
            description: Threshold for classifying window as successful or unsuccessful.
            example: 200
            type: number
          op:
            description: Comparison function with window threshold (LessThan/GreaterThan/LessThanOrEqual/GreaterThanOrEqual).
            example: LessThan
            pattern: ^(LessThan|GreaterThan|LessThanOrEqual|GreaterThanOrEqual)$
            type: string
            x-pattern-message: "Must be `LessThan`, `GreaterThan`, `LessThanOrEqual`\
              \ or `GreaterThanOrEqual`"
          aggregation:
            description: "Aggregation function applied over each window to arrive\
              \ at SLI. Must be `Avg`, `Min`, `Max`, `Sum`, or percentile of the form\
              \ `pX` where `X` is an integer between 0 and 100."
            example: p99
            type: string
          size:
            description: Size of the aggregation window (minimum of 1m and maximum
              of 1h).
            example: 15m
            type: string
        required:
        - op
        - size
        - threshold
        type: object
      description: Evaluate SLI using successful or unsuccessful windows over compliance
        period.
      type: object
    Monitor:
      allOf:
      - $ref: '#/components/schemas/Sli'
      - properties:
          monitorTriggers:
            description: Monitors over which the SLO is defined.
            items:
              $ref: '#/components/schemas/MonitorTrigger'
            type: array
        required:
        - monitorTriggers
        type: object
      description: SLI definition based on monitors.
      type: object
    MonitorTrigger:
      description: Monitor related info required for defining SLO.
      properties:
        monitorId:
          description: Hex-id of the monitor on which the SLI is based.
          example: 0000000000BCB3A4
          type: string
        triggerTypes:
          description: "The types of trigger conditions (such as Critical, Warning,\
            \ MissingData etc)."
          items:
            description: |-
              The type of trigger condition. Valid values:
                1. `Critical`: A critical condition to trigger on.
                2. `Warning`: A warning condition to trigger on.
                3. `MissingData`: A condition that indicates data is missing.
            example: Critical
            pattern: ^(Critical|Warning|MissingData)$
            type: string
            x-pattern-message: "should be one of the following: 'Critical', 'Warning'\
              \ or 'MissingData'"
          type: array
      required:
      - monitorId
      - triggerTypes
      type: object
    MonitorTemplatesLibraryBase:
      discriminator:
        propertyName: type
      properties:
        name:
          description: Name of the monitortemplate or folder.
          type: string
        description:
          default: ""
          description: Description of the monitortemplate or folder.
          type: string
        type:
          description: |-
            Type of the object model. Valid values:
              1) MonitorTemplatesLibraryMonitortemplate
              2) MonitorTemplatesLibraryFolder
          type: string
      required:
      - name
      - type
      type: object
    MonitorTemplatesLibraryBaseUpdate:
      discriminator:
        propertyName: type
      properties:
        name:
          description: The name of the monitortemplate or folder.
          type: string
        description:
          default: ""
          description: The description of the monitortemplate or folder.
          type: string
        version:
          description: The version of the monitortemplate or folder.
          format: int64
          type: integer
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      - version
      type: object
    MonitorTemplatesLibraryBaseResponse:
      discriminator:
        propertyName: type
      properties:
        id:
          description: Identifier of the monitortemplate or folder.
          type: string
        name:
          description: Identifier of the monitortemplate or folder.
          type: string
        description:
          description: Description of the monitortemplate or folder.
          type: string
        version:
          description: Version of the monitortemplate or folder.
          format: int64
          type: integer
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        parentId:
          description: Identifier of the parent folder.
          type: string
        contentType:
          description: |-
            Type of the content. Valid values:
              1) Monitortemplate
              2) Folder
          type: string
        type:
          description: Type of the object model.
          type: string
        isSystem:
          description: System objects are objects provided by Sumo Logic. System objects
            can only be localized. Non-local fields can't be updated.
          type: boolean
        isMutable:
          description: Immutable objects are "READ-ONLY".
          type: boolean
        permissions:
          description: "Aggregated permission summary for the calling user. If detailed\
            \ permission statements are required, please call list permissions endpoint."
          example:
          - Read
          - Delete
          items:
            type: string
          type: array
      required:
      - contentType
      - createdAt
      - createdBy
      - description
      - id
      - isMutable
      - isSystem
      - modifiedAt
      - modifiedBy
      - name
      - parentId
      - type
      - version
      type: object
    MonitorTemplatesLibraryFolder:
      allOf:
      - $ref: '#/components/schemas/MonitorTemplatesLibraryBase'
    MonitorTemplatesLibraryFolderUpdate:
      allOf:
      - $ref: '#/components/schemas/MonitorTemplatesLibraryBaseUpdate'
    MonitorTemplatesLibraryFolderResponse:
      allOf:
      - $ref: '#/components/schemas/MonitorTemplatesLibraryBaseResponse'
      - properties:
          permissions:
            description: "Aggregated permission summary for the calling user. If detailed\
              \ permission statements are required, please call list permissions endpoint."
            example:
            - Read
            - Delete
            items:
              type: string
            type: array
          children:
            description: "Children of the folder. NOTE: Permissions field will not\
              \ be filled (empty list) for children."
            items:
              $ref: '#/components/schemas/MonitorTemplatesLibraryBaseResponse'
            type: array
        required:
        - children
        - permissions
        type: object
    MonitorTemplatesLibraryBaseExport:
      discriminator:
        propertyName: type
      properties:
        name:
          description: Name of the monitortemplate or folder.
          type: string
        description:
          description: Description of the monitortemplate or folder.
          type: string
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      type: object
    MonitorTemplatesLibraryFolderExport:
      allOf:
      - $ref: '#/components/schemas/MonitorTemplatesLibraryBaseExport'
      - properties:
          children:
            description: The items in the folder. A multi-type list of types monitortemplate
              or folder.
            items:
              $ref: '#/components/schemas/MonitorTemplatesLibraryBaseExport'
            type: array
        type: object
    MonitorTemplatesLibraryMonitorTemplate:
      allOf:
      - $ref: '#/components/schemas/MonitorTemplatesLibraryBase'
      - properties:
          monitorType:
            description: |-
              The type of monitor template. Valid values:
                1. `Logs`: A logs query monitor template.
                2. `Metrics`: A metrics query monitor template.
                3. `Slo`: A SLO based monitor template.
            example: Logs
            pattern: ^(Logs|Metrics|Slo)$
            type: string
            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'
          evaluationDelay:
            default: 0m
            description: The delay duration for evaluating the monitor (relative to
              current time). The timerange of monitor will be shifted in the past
              by this delay time.
            example: 5m
            type: string
          alertName:
            description: The name of the alert(s) triggered from the monitor created
              based on the template. Monitor name will be used if not specified.
            type: string
          queries:
            description: All queries from the monitor.
            items:
              $ref: '#/components/schemas/MonitorQuery'
            type: array
            uniqueItems: true
          triggers:
            description: Defines the conditions of when to send notifications.
            example:
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
              occurrenceType: ResultCount
              triggerSource: AllResults
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
              occurrenceType: ResultCount
              triggerSource: AllResults
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          isDisabled:
            default: false
            description: Whether or not the monitor template is disabled.
            example: false
            type: boolean
          groupNotifications:
            default: true
            description: Whether or not to group notifications for individual items
              that meet the trigger condition.
            example: true
            type: boolean
          playbook:
            default: ""
            description: "Notes such as links and instruction to help you resolve\
              \ alerts triggered by this monitor template. {{Markdown}} supported.\
              \ It will be enabled only if available for your organization. Please\
              \ contact your Sumo Logic account team to learn more."
            example: This issue typically happens when database calls are timing out.
              Look at ServiceA's dashboard to investigate further
            maxLength: 4096
            type: string
        required:
        - monitorType
        - queries
        - triggers
        type: object
    MonitorTemplatesLibraryMonitorTemplateResponse:
      allOf:
      - $ref: '#/components/schemas/MonitorTemplatesLibraryBaseResponse'
      - properties:
          monitorType:
            description: |-
              The type of monitor template. Valid values:
                1. `Logs`: A logs query monitor template.
                2. `Metrics`: A metrics query monitor template.
                3. `Slo`: A SLO based monitor template.
            example: Logs
            pattern: ^(Logs|Metrics|Slo)$
            type: string
            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'
          evaluationDelay:
            default: 0m
            description: The delay duration for evaluating the monitor (relative to
              current time). The timerange of monitor will be shifted in the past
              by this delay time.
            example: 5m
            type: string
          alertName:
            description: The name of the alert(s) triggered from the monitor created
              based on the template. Monitor name will be used if not specified.
            type: string
          queries:
            description: All queries from the monitor.
            items:
              $ref: '#/components/schemas/MonitorQuery'
            type: array
            uniqueItems: true
          triggers:
            description: Defines the conditions of when to send notifications.
            example:
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
              occurrenceType: ResultCount
              triggerSource: AllResults
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
              occurrenceType: ResultCount
              triggerSource: AllResults
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          isDisabled:
            default: false
            description: Whether or not the monitor template is disabled.
            example: false
            type: boolean
          groupNotifications:
            default: true
            description: Whether or not to group notifications for individual items
              that meet the trigger condition.
            example: true
            type: boolean
          playbook:
            default: ""
            description: "Notes such as links and instruction to help you resolve\
              \ alerts triggered by this monitor template. {{Markdown}} supported.\
              \ It will be enabled only if available for your organization. Please\
              \ contact your Sumo Logic account team to learn more."
            example: This issue typically happens when database calls are timing out.
              Look at ServiceA's dashboard to investigate further
            maxLength: 4096
            type: string
        required:
        - monitorType
        - queries
        - triggers
        type: object
    MonitorTemplatesLibraryMonitorTemplateExport:
      allOf:
      - $ref: '#/components/schemas/MonitorTemplatesLibraryBaseExport'
      - properties:
          monitorType:
            description: |-
              The type of monitor template. Valid values:
                1. `Logs`: A logs query monitor template.
                2. `Metrics`: A metrics query monitor template.
                3. `Slo`: A SLO based monitor template.
            example: Logs
            pattern: ^(Logs|Metrics|Slo)$
            type: string
            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'
          evaluationDelay:
            default: 0m
            description: The delay duration for evaluating the monitor (relative to
              current time). The timerange of monitor will be shifted in the past
              by this delay time.
            example: 5m
            type: string
          alertName:
            description: The name of the alert(s) triggered from the monitor created
              based on the template. Monitor name will be used if not specified.
            type: string
          queries:
            description: All queries from the monitor.
            items:
              $ref: '#/components/schemas/MonitorQuery'
            type: array
            uniqueItems: true
          triggers:
            description: Defines the conditions of when to send notifications.
            example:
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
              occurrenceType: ResultCount
              triggerSource: AllResults
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
              occurrenceType: ResultCount
              triggerSource: AllResults
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          isDisabled:
            default: false
            description: Whether or not the monitor template is disabled.
            example: false
            type: boolean
          groupNotifications:
            default: true
            description: Whether or not to group notifications for individual items
              that meet the trigger condition.
            example: true
            type: boolean
          playbook:
            default: ""
            description: "Notes such as links and instruction to help you resolve\
              \ alerts triggered by this monitor template. {{Markdown}} supported.\
              \ It will be enabled only if available for your organization. Please\
              \ contact your Sumo Logic account team to learn more."
            example: This issue typically happens when database calls are timing out.
              Look at ServiceA's dashboard to investigate further
            maxLength: 4096
            type: string
        required:
        - monitorType
        - queries
        - triggers
        type: object
    MonitorTemplatesLibraryMonitorTemplateUpdate:
      allOf:
      - $ref: '#/components/schemas/MonitorTemplatesLibraryBaseUpdate'
      - properties:
          monitorType:
            description: |-
              The type of monitor template. Valid values:
                1. `Logs`: A logs query monitor template.
                2. `Metrics`: A metrics query monitor template.
                3. `Slo`: A SLO based monitor template.
            example: Logs
            pattern: ^(Logs|Metrics|Slo)$
            type: string
            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'
          evaluationDelay:
            default: 0m
            description: The delay duration for evaluating the monitor (relative to
              current time). The timerange of monitor will be shifted in the past
              by this delay time.
            example: 5m
            type: string
          alertName:
            description: The name of the alert(s) triggered from the monitor created
              based on the template. Monitor name will be used if not specified.
            type: string
          queries:
            description: All queries from the monitor.
            items:
              $ref: '#/components/schemas/MonitorQuery'
            type: array
            uniqueItems: true
          triggers:
            description: Defines the conditions of when to send notifications.
            example:
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
              occurrenceType: ResultCount
              triggerSource: AllResults
            - detectionMethod: StaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
              occurrenceType: ResultCount
              triggerSource: AllResults
            items:
              $ref: '#/components/schemas/TriggerCondition'
            type: array
          isDisabled:
            default: false
            description: Whether or not the monitor template is disabled.
            example: false
            type: boolean
          groupNotifications:
            default: true
            description: Whether or not to group notifications for individual items
              that meet the trigger condition.
            example: true
            type: boolean
          playbook:
            default: ""
            description: "Notes such as links and instruction to help you resolve\
              \ alerts triggered by this monitor template. {{Markdown}} supported.\
              \ It will be enabled only if available for your organization. Please\
              \ contact your Sumo Logic account team to learn more."
            example: This issue typically happens when database calls are timing out.
              Look at ServiceA's dashboard to investigate further
            maxLength: 4096
            type: string
        required:
        - monitorType
        - queries
        - triggers
        type: object
    ListAppsResult:
      description: List of all available apps from the App Catalog.
      example:
        apps:
        - appDefinition:
            preview: true
            appVersion: "1.0"
            manifestVersion: "0.1"
            contentId: 00000000000011AE
            name: Sumo Config
            uuid: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9
          appManifest:
            authorWebsite: https://www.sumologic.com
            screenshotURLs:
            - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png
            - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png
            requirements: []
            communityURL: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations
            author: Sumo Logic
            description: A description for Sumo Logic Config App.
            helpURL: https://help.sumologic.com/
            installationInstructions: ""
            helpDocIdMap:
              key: helpDocIdMap
            accountTypes:
            - free
            categories:
            - Sumo Logic
            - Configuration
            iconURL: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png
            family: IIS
            parameters:
            - parameterType: DATA_SOURCE
              parameterId: paramId1
              hidden: false
              description: Log data source
              label: Log label
              dataSourceType: LOG
              example: ""
            - parameterType: DATA_SOURCE
              parameterId: paramId1
              hidden: false
              description: Log data source
              label: Log label
              dataSourceType: LOG
              example: ""
            hoverText: Sumo Config App
            requiresInstallationInstructions: false
        - appDefinition:
            preview: true
            appVersion: "1.0"
            manifestVersion: "0.1"
            contentId: 00000000000011AE
            name: Sumo Config
            uuid: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9
          appManifest:
            authorWebsite: https://www.sumologic.com
            screenshotURLs:
            - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png
            - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png
            requirements: []
            communityURL: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations
            author: Sumo Logic
            description: A description for Sumo Logic Config App.
            helpURL: https://help.sumologic.com/
            installationInstructions: ""
            helpDocIdMap:
              key: helpDocIdMap
            accountTypes:
            - free
            categories:
            - Sumo Logic
            - Configuration
            iconURL: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png
            family: IIS
            parameters:
            - parameterType: DATA_SOURCE
              parameterId: paramId1
              hidden: false
              description: Log data source
              label: Log label
              dataSourceType: LOG
              example: ""
            - parameterType: DATA_SOURCE
              parameterId: paramId1
              hidden: false
              description: Log data source
              label: Log label
              dataSourceType: LOG
              example: ""
            hoverText: Sumo Config App
            requiresInstallationInstructions: false
      properties:
        apps:
          description: An array of Apps
          items:
            $ref: '#/components/schemas/App'
          type: array
      required:
      - apps
      type: object
    App:
      example:
        appDefinition:
          preview: true
          appVersion: "1.0"
          manifestVersion: "0.1"
          contentId: 00000000000011AE
          name: Sumo Config
          uuid: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9
        appManifest:
          authorWebsite: https://www.sumologic.com
          screenshotURLs:
          - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png
          - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png
          requirements: []
          communityURL: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations
          author: Sumo Logic
          description: A description for Sumo Logic Config App.
          helpURL: https://help.sumologic.com/
          installationInstructions: ""
          helpDocIdMap:
            key: helpDocIdMap
          accountTypes:
          - free
          categories:
          - Sumo Logic
          - Configuration
          iconURL: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png
          family: IIS
          parameters:
          - parameterType: DATA_SOURCE
            parameterId: paramId1
            hidden: false
            description: Log data source
            label: Log label
            dataSourceType: LOG
            example: ""
          - parameterType: DATA_SOURCE
            parameterId: paramId1
            hidden: false
            description: Log data source
            label: Log label
            dataSourceType: LOG
            example: ""
          hoverText: Sumo Config App
          requiresInstallationInstructions: false
      properties:
        appDefinition:
          $ref: '#/components/schemas/AppDefinition'
        appManifest:
          $ref: '#/components/schemas/AppManifest'
      required:
      - appDefinition
      - appManifest
      type: object
    AppDefinition:
      example:
        preview: true
        appVersion: "1.0"
        manifestVersion: "0.1"
        contentId: 00000000000011AE
        name: Sumo Config
        uuid: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9
      properties:
        contentId:
          description: Content identifier of the app in hexadecimal format.
          example: 00000000000011AE
          type: string
        uuid:
          description: Unique identifier for the app.
          example: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9
          format: uuid
          type: string
        name:
          description: Name of the app.
          example: Sumo Config
          type: string
        appVersion:
          description: Version of the app.
          example: "1.0"
          type: string
        preview:
          description: Indicates whether the app is in preview or not.
          example: true
          type: boolean
        manifestVersion:
          description: Manifest version of the app
          example: "0.1"
          type: string
      required:
      - appVersion
      - contentId
      - name
      - uuid
      type: object
    AppManifest:
      example:
        authorWebsite: https://www.sumologic.com
        screenshotURLs:
        - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png
        - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png
        requirements: []
        communityURL: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations
        author: Sumo Logic
        description: A description for Sumo Logic Config App.
        helpURL: https://help.sumologic.com/
        installationInstructions: ""
        helpDocIdMap:
          key: helpDocIdMap
        accountTypes:
        - free
        categories:
        - Sumo Logic
        - Configuration
        iconURL: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png
        family: IIS
        parameters:
        - parameterType: DATA_SOURCE
          parameterId: paramId1
          hidden: false
          description: Log data source
          label: Log label
          dataSourceType: LOG
          example: ""
        - parameterType: DATA_SOURCE
          parameterId: paramId1
          hidden: false
          description: Log data source
          label: Log label
          dataSourceType: LOG
          example: ""
        hoverText: Sumo Config App
        requiresInstallationInstructions: false
      properties:
        family:
          description: The app family
          example: IIS
          type: string
        description:
          description: Description of the app.
          example: A description for Sumo Logic Config App.
          type: string
        categories:
          description: Categories that the app belongs to.
          example:
          - Sumo Logic
          - Configuration
          items:
            type: string
          type: array
        hoverText:
          description: Text to be displayed when hovered over in UI.
          example: Sumo Config App
          type: string
        iconURL:
          description: App icon URL.
          example: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png
          type: string
        screenshotURLs:
          description: App screenshot URLs.
          example:
          - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png
          - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png
          items:
            type: string
          type: array
        helpURL:
          description: App help page URL.
          example: https://help.sumologic.com/
          type: string
        helpDocIdMap:
          additionalProperties:
            type: string
          description: the IDs of the docs pages for this app
          maxProperties: 1000
          type: object
        communityURL:
          description: App community page URL.
          example: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations
          type: string
        requirements:
          description: Requirements for the app.
          example: []
          items:
            type: string
          type: array
        accountTypes:
          description: Account types that are allowed to install the app
          example:
          - free
          items:
            type: string
          type: array
        requiresInstallationInstructions:
          description: Indicates whether installation instructions are required or
            not.
          example: false
          type: boolean
        installationInstructions:
          description: Installation instructions for the app.
          example: ""
          type: string
        parameters:
          description: Content identifier of the app.
          items:
            $ref: '#/components/schemas/ServiceManifestDataSourceParameter'
          type: array
        author:
          description: App author.
          example: Sumo Logic
          type: string
        authorWebsite:
          description: App author website URL.
          example: https://www.sumologic.com
          type: string
      required:
      - description
      - hoverText
      - iconURL
      type: object
    ServiceManifestDataSourceParameter:
      example:
        parameterType: DATA_SOURCE
        parameterId: paramId1
        hidden: false
        description: Log data source
        label: Log label
        dataSourceType: LOG
        example: ""
      properties:
        parameterType:
          description: Parameter type.
          example: DATA_SOURCE
          pattern: ^DATA_SOURCE$
          type: string
          x-pattern-message: "Supported parameter types include: DATA_SOURCE"
        parameterId:
          description: Parameter identifier.
          example: paramId1
          type: string
        dataSourceType:
          description: Data source type.
          example: LOG
          pattern: ^(LOG|METRICS)$
          type: string
          x-pattern-message: "Supported data source types include: LOG, METRICS"
        label:
          description: Label.
          example: Log label
          type: string
        description:
          description: Description.
          example: Log data source
          type: string
        example:
          description: Example.
          example: ""
          type: string
        hidden:
          default: false
          description: Should the UI display?
          type: boolean
      required:
      - parameterId
      - parameterType
      type: object
    ErrorResponse:
      example:
        id: IUUQI-DGH5I-TJ045
        errors:
        - code: auth:password_too_short
          message: Your password was too short.
        - code: auth:password_character_classes
          message: Your password did not contain any non-alphanumeric characters
      properties:
        id:
          description: An identifier for the error; this is unique to the specific
            API request.
          example: IUUQI-DGH5I-TJ045
          type: string
        errors:
          description: A list of one or more causes of the error.
          example:
          - code: auth:password_too_short
            message: Your password was too short.
          - code: auth:password_character_classes
            message: Your password did not contain any non-alphanumeric characters
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - errors
      - id
      type: object
    ErrorDescription:
      example:
        code: auth:password_too_short
        meta:
          minLength: 12
          actualLength: 5
        detail: "Your password was 5 characters long, the minimum length is 12 characters.\
          \ See http://example.com/password for more information."
        message: Your password was too short.
      properties:
        code:
          description: An error code describing the type of error.
          example: auth:password_too_short
          type: string
        message:
          description: A short English-language description of the error.
          example: Your password was too short.
          type: string
        detail:
          description: An optional fuller English-language description of the error.
          example: "Your password was 5 characters long, the minimum length is 12\
            \ characters. See http://example.com/password for more information."
          type: string
        meta:
          description: An optional list of metadata about the error.
          example:
            minLength: 12
            actualLength: 5
          type: object
      required:
      - code
      - message
      type: object
    BeginAsyncJobResponse:
      example:
        id: C03E086C137F38B4
      properties:
        id:
          description: Identifier to get the status of an asynchronous job.
          example: C03E086C137F38B4
          type: string
      required:
      - id
      type: object
    AsyncJobStatus:
      example:
        status: Success
        statusMessage: ""
      properties:
        status:
          description: "Whether or not the request is in progress (`InProgress`),\
            \ has completed successfully (`Success`), or has completed with an error\
            \ (`Failed`)."
          type: string
        statusMessage:
          description: Additional status message generated if the status is not `Failed`.
          type: string
        error:
          $ref: '#/components/schemas/ErrorDescription'
      required:
      - status
      type: object
    AppItemsList:
      properties:
        items:
          description: Items associated with the app.
          items:
            $ref: '#/components/schemas/AppListItem'
          type: array
      required:
      - items
      type: object
    AppListItem:
      properties:
        itemType:
          description: "Type of the item. Can be `Dashboard`, `Report`, `Search`,\
            \ `ScheduledSearch`, `MetricsSearch` or `Folder`."
          example: Dashboard
          type: string
        name:
          description: Name of the item.
          example: AWS CloudTrail - Overview
          type: string
        description:
          description: Description of the item.
          example: "See an overview of your AWS users, resources, network and security\
            \ events."
          type: string
        query:
          description: "Search query for the item. Applicable only for `Search`, `ScheduledSearch`\
            \ and `MetricsSearch` itemType."
          example: _sourceCategory=aws
          type: string
        screenshotUrl:
          description: URL for the screenshot of the item. Applicable only for `Dashboard`
            and `Report` itemType.
          example: https://my-app-data.s3.amazonaws.com/dashboards/AWSCloudTrail/Overview.PNG
          type: string
        panels:
          description: Panels associated with the item. Applicable only for `Dashboard`
            and `Report` itemType.
          items:
            $ref: '#/components/schemas/PanelItem'
          type: array
        children:
          description: Child content items. Applicable only for `Folder` itemType.
          items:
            $ref: '#/components/schemas/AppListItem'
          type: array
      required:
      - itemType
      - name
      type: object
    PanelItem:
      properties:
        name:
          description: Name of the panel.
          example: Failed Logins
          type: string
        description:
          description: Description of the panel.
          example: Details about failed logins
          type: string
      required:
      - name
      type: object
    AppInstallRequest:
      description: "JSON object containing name, description, destinationFolderId,\
        \ and dataSourceType."
      example:
        dataSourceValues:
          logsrc: _sourceCategory = api
        destinationFolderId: 00000000000001C8
        name: Sumo Logic Configuration App
        description: Sumo Logic Configuration App to configure collectors and data
          sources
      properties:
        name:
          description: Preferred name of the app to be installed. This will be the
            name of the app in the selected installation folder.
          example: Sumo Logic Configuration App
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: Preferred description of the app to be installed. This will
            be displayed as the app description in the selected installation folder.
          example: Sumo Logic Configuration App to configure collectors and data sources
          maxLength: 255
          minLength: 1
          type: string
        destinationFolderId:
          description: Identifier of the folder in which the app will be installed
            in hexadecimal format.
          example: 00000000000001C8
          type: string
        dataSourceValues:
          additionalProperties:
            type: string
          description: Dictionary of properties specifying log-source name and value.
          example:
            logsrc: _sourceCategory = api
          maxProperties: 1000
          type: object
      required:
      - description
      - destinationFolderId
      - name
      type: object
    ListAppRecommendations:
      description: List of app recommendations
      items:
        $ref: '#/components/schemas/AppRecommendation'
      type: array
    AppRecommendation:
      description: App recommendation details
      properties:
        uuid:
          description: Unique identifier for the app.
          example: ebcbd463-b38b-47b0-819c-8d44ca859c3b
          format: uuid
          type: string
        name:
          description: Name of the app.
          example: Data Volume
          type: string
        description:
          description: Description of the app.
          example: "The Sumo Logic App for Data Volume uses predefined searches and\
            \ Dashboards to provide real-time visibility and analysis of your account's\
            \ data usage volume for both logs and metrics. Use this app to identify\
            \ your top Collectors and monitor your ingest activity and trends. NOTE:\
            \ Please enable Data Volume Index before installing this app."
          type: string
        iconURL:
          description: URL of the app icon.
          example: https://app_icons.s3.amazonaws.com/volumeview.png
          type: string
        confidence:
          description: Percentage relevance of recommendation.
          example: 0.98
          format: double
          type: number
      required:
      - confidence
      - description
      - iconURL
      - name
      - uuid
      type: object
    AsyncInstallAppRequest:
      description: Install app request.
      example:
        version: 1.0.1
        parameters:
          db_system: redis
      properties:
        version:
          default: latest
          description: |
            Version of the app to install. You can either specify a specific version of the app or use `latest` to install the latest version of the app. _If version is not specified, the latest version of the app will be installed_.
          example: 1.0.1
          type: string
        parameters:
          additionalProperties:
            type: string
          description: Map of additional parameters for the app installation.
          example:
            db_system: redis
          maxProperties: 1000
          type: object
      type: object
    BeginAsyncJobResponseV2:
      example:
        jobId: C03E086C137F38B4
      properties:
        jobId:
          description: Identifier of the asynchronous job. Use it to get status of
            the job.
          example: C03E086C137F38B4
          type: string
      required:
      - jobId
      type: object
    AsyncInstallAppJobStatus:
      description: Status of the install app async job.
      example:
        path: /Library/Installed Apps/AWS CloudTrail
        instanceId: 0000000001578BE8
        error:
          code: auth:password_too_short
          meta:
            minLength: 12
            actualLength: 5
          detail: "Your password was 5 characters long, the minimum length is 12 characters.\
            \ See http://example.com/password for more information."
          message: Your password was too short.
        folderId: 0000000001578BE8
        status: Success
      properties:
        status:
          description: "Whether or not the request is in progress (`InProgress`),\
            \ has completed successfully (`Success`), or has completed with an error\
            \ (`Failed`)."
          example: Success
          type: string
        instanceId:
          description: Instance identifier of the installed app. This field is not
            set yet but is a placeholder for future use.
          example: 0000000001578BE8
          type: string
        path:
          description: Path of the folder in which the app was installed.
          example: /Library/Installed Apps/AWS CloudTrail
          type: string
        folderId:
          description: Identifier of the folder in which the app was installed.
          example: 0000000001578BE8
          type: string
        error:
          $ref: '#/components/schemas/ErrorDescription'
      required:
      - status
      type: object
    AsyncUninstallAppJobStatus:
      description: Status of an uninstall app job.
      example:
        errors:
        - code: auth:password_too_short
          meta:
            minLength: 12
            actualLength: 5
          detail: "Your password was 5 characters long, the minimum length is 12 characters.\
            \ See http://example.com/password for more information."
          message: Your password was too short.
        - code: auth:password_too_short
          meta:
            minLength: 12
            actualLength: 5
          detail: "Your password was 5 characters long, the minimum length is 12 characters.\
            \ See http://example.com/password for more information."
          message: Your password was too short.
        status: Success
      properties:
        status:
          description: "Whether or not the request is in progress (`InProgress`),\
            \ has completed successfully (`Success`), or has completed with an error\
            \ (`Failed`)."
          example: Success
          type: string
        errors:
          description: More information about the failure if the status is `Failed`.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - status
      type: object
    AsyncUpgradeAppRequest:
      description: Upgrade app request.
      example:
        version: 1.0.1
        parameters:
          db_system: redis
      properties:
        version:
          default: latest
          description: |
            Version of the app to upgrade. You can either specify a specific version of the app or use `latest` to install the latest version of the app. _If version is not specified, the latest version of the app will be installed_.
          example: 1.0.1
          type: string
        parameters:
          additionalProperties:
            type: string
          description: Map of additional parameters for the app installation.
          example:
            db_system: redis
          maxProperties: 1000
          type: object
      type: object
    AsyncUpgradeAppJobStatus:
      description: Status of the upgrade app async job.
      example:
        path: /Library/Installed Apps/AWS CloudTrail
        instanceId: 0000000001578BE8
        error:
          code: auth:password_too_short
          meta:
            minLength: 12
            actualLength: 5
          detail: "Your password was 5 characters long, the minimum length is 12 characters.\
            \ See http://example.com/password for more information."
          message: Your password was too short.
        folderId: 0000000001578BE8
        status: Success
      properties:
        status:
          description: "Whether or not the request is in progress (`InProgress`),\
            \ has completed successfully (`Success`), or has completed with an error\
            \ (`Failed`)."
          example: Success
          type: string
        instanceId:
          description: Instance identifier of the upgraded app. This field is not
            set yet but is a placeholder for future use.
          example: 0000000001578BE8
          type: string
        path:
          description: Path of the folder in which the app was upgraded.
          example: /Library/Installed Apps/AWS CloudTrail
          type: string
        folderId:
          description: Identifier of the folder in which the app was upgraded.
          example: 0000000001578BE8
          type: string
        error:
          $ref: '#/components/schemas/ErrorDescription'
      required:
      - status
      type: object
    ListAppsV2Response:
      description: List of all apps from the apps
      example:
        apps:
        - author: Sumo Logic
          showOnMarketplace: true
          modifiedAt: 2018-10-16T09:10:00Z
          icon: https://some-bucket.s3.amazonaws.com/AWSCloudTrail.png
          description: AWS CloudTrail app description
          uuid: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
          installs: 3452
          latestVersion: 1.1.0
          name: AWS CloudTrail
          accountTypes:
          - All
          attributes:
            category:
            - Web Server
            - IT Infrastructure
            - Amazon Web Services
            useCase:
            - security
            - observability
            collection:
            - OpenTelemetry
          installable: true
          beta: false
        - author: Sumo Logic
          showOnMarketplace: true
          modifiedAt: 2018-10-16T09:10:00Z
          icon: https://some-bucket.s3.amazonaws.com/AWSCloudTrail.png
          description: AWS CloudTrail app description
          uuid: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
          installs: 3452
          latestVersion: 1.1.0
          name: AWS CloudTrail
          accountTypes:
          - All
          attributes:
            category:
            - Web Server
            - IT Infrastructure
            - Amazon Web Services
            useCase:
            - security
            - observability
            collection:
            - OpenTelemetry
          installable: true
          beta: false
      properties:
        apps:
          description: An array of apps.
          items:
            $ref: '#/components/schemas/AppV2'
          type: array
      required:
      - apps
      type: object
    AppV2:
      description: An app object.
      example:
        author: Sumo Logic
        showOnMarketplace: true
        modifiedAt: 2018-10-16T09:10:00Z
        icon: https://some-bucket.s3.amazonaws.com/AWSCloudTrail.png
        description: AWS CloudTrail app description
        uuid: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
        installs: 3452
        latestVersion: 1.1.0
        name: AWS CloudTrail
        accountTypes:
        - All
        attributes:
          category:
          - Web Server
          - IT Infrastructure
          - Amazon Web Services
          useCase:
          - security
          - observability
          collection:
          - OpenTelemetry
        installable: true
        beta: false
      properties:
        uuid:
          description: UUID of the app.
          example: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
          type: string
        name:
          description: Name of the app.
          example: AWS CloudTrail
          type: string
        description:
          description: Description of the app.
          example: AWS CloudTrail app description
          type: string
        latestVersion:
          description: Latest version of the app.
          example: 1.1.0
          type: string
        icon:
          description: URL of the icon for the app.
          example: https://some-bucket.s3.amazonaws.com/AWSCloudTrail.png
          type: string
        author:
          description: Author of the app.
          example: Sumo Logic
          type: string
        accountTypes:
          description: Account types of which the app is available to.
          example:
          - All
          items:
            type: string
          type: array
        beta:
          description: Whether the app is in beta.
          example: false
          type: boolean
        installs:
          description: Number of times the app was installed.
          example: 3452
          format: int32
          type: integer
        attributes:
          additionalProperties:
            items:
              type: string
            type: array
          description: A map of attributes for this app. Attributes allow to group
            apps based on different criteria.
          example:
            category:
            - Web Server
            - IT Infrastructure
            - Amazon Web Services
            useCase:
            - security
            - observability
            collection:
            - OpenTelemetry
          maxProperties: 3
          type: object
        installable:
          description: Whether the app is installable or not as not all apps are installable.
          example: true
          type: boolean
        showOnMarketplace:
          description: Whether the app should show up on sumologic.com/applications
            webpage.
          example: true
          type: boolean
        modifiedAt:
          description: The timestamp in UTC of the most recent modification of the
            app.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
      required:
      - accountTypes
      - attributes
      - author
      - beta
      - description
      - family
      - icon
      - installable
      - latestVersion
      - name
      - showOnMarketplace
      - uuid
      type: object
    RegisterAppResponse:
      description: UUID of the registered app.
      properties:
        uuid:
          description: UUID of the app.
          example: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
          format: uuid
          type: string
      required:
      - uuid
      type: object
    CreatePublicAppRequest:
      description: Information about the new public app.
      properties:
        name:
          description: Name of the app.
          example: AWS CloudTrail
          maxLength: 128
          minLength: 3
          pattern: "^([ -~]+)$"
          type: string
          x-pattern-message: Should consist only of printable ASCII characters
      required:
      - name
      type: object
    GetAppDetailsResponse:
      description: Information about an app.
      example:
        baseUrl: https://some_bucket.s3.amazonaws.com/path/to/app/version/
        manifest: !!binary |-
          UTI1T2FtRkhWblJaVmxwc1kyNU9jR0l5TkRaSlEwbDRUR3BCYVVObmNIVlpWekZzVDJsQ1FtTkhS
          bXBoUjFWTFEyMVNiR015VG5saFdFSXdZVmM1ZFNCUGFVRXJURkZ2WjBsR1VtOWFVMEpDWTBkR2Ft
          RkhWV2RaV0VKM1NVZHNla2xIUldka1Z6VndXbTFzYkZwRFFuTmlNbVI2U1VkR2RWcERRblJhV0ZK
          NUlHRlhUbnBKUjBaM1kwTkNNR0ZIUmpCSlIyaHNZa2hDZWtsSWJIWmtVMEowWWpJMWNHUkhPWGxK
          U0ZKdldsTkNhR1J0Um5CaVIwWnBZVmQ0Y0dSSWEzTWdTVWhDYkdOdFduWmpiVEZvWW0xT2JFeEJi
          MmRKUjJoc1dWZDRNR0ZEUW1oaWJWRm5ZMjFXZW1JelZubFpNbFZuWkZoU2NHSkhiRFpaV0ZKd1lq
          STBaeUJpTWxsblVWaENhRmt5YUd4SlNHUnNXV2xDZWxwWVNqSmFXRWxuV20xR2VXSllUWFZKUTBK
          UlkyMVdhbUl5TlcxaFYyUXhZMjFXYTBsSFVtaGpNbWhwSUdJeVJubGFTRTFuV1ZjMWEwbElUbXha
          V0VwcVlVZFdla05wUVdkalNFcDJaRzFzYTFwVFFuQmliazV3V2pKb01FbEhiSFZrUnpoblpHMXNl
          bUZZVW5ZZ1kybENjMkl5VG1oa1IyeDJZbTVOYzBsSVduQmpNbXd3WWpOSloxbFhUbXBhV0U1NlNV
          aFNOV05IVm5wTVEwSXdZMjFHYlZwdGJHcEpTRUpvWkVoU2JDQmpiVFY2VEVOQ2JHTnVTblpqYmsx
          elNVaGtiRmxwUW5wYVdFb3lXbGhKUzBsRFFuWmpSMVo1V1ZoU2NHSXlOWHBNUTBKNVdsaE9kbVJZ
          U21wYVUwSXhJR1JIYkhOaFdIQm9aRWRzZG1KcFFtaGliVkZuV1ZkT2FscFlUbnBKUjFwNVlqSXda
          MkV5Tlhaa01qUm5ZbGRHYzJGWFRuQmlNMVo2U1VoT2RtUllTbW9nV2xoTmRVTnRSakZrUjJoMlky
          cHZaMVV6Vm5SaWVVSk5ZakprY0ZsM2IwdGtiVlo1WXpKc2RtSnFiMmROVXpSM1RHcEJTME5uYnow
          PQ==
        files:
          config: ICAtIGNvbXBvbmVudFR5cGU6IHNjb3BlCiAgICBsYWJlbDog4oCYQXBhY2hlIEVycm9yIExvZyBT
            b3VyY2XigJkKICAgIHRmVmFyOiBlcnJMb2dTY29wZQogICAgCiAgLSBjb21wb25lbnRUeXBlOiBz
            Y29wZQogICAgbGFiZWw6IOKAmEFwYWNoZSBBY2Nlc3MgTG9nIFNvdXJjZeKAmQogICAgdGZWYXI6
            IGFjY2Vzc0xvZ1Njb3BlCgogIC0gY29tcG9uZW50VHlwZTogY3VzdG9tCiAgICBkYXRhVHlwZTog
            U3RyaW5nCiAgICBsYWJlbDog4oCYQXBhY2hlIEVuZ2luZSBUeXBl4oCYCiAgICBoZWxwVGV4dDog
            4oCYVGhlIGVuZ2luZSB0eXBlIG9mIHlvdXIgQXBhY2hlIEluc3RhbmNl4oCYCiAgICByZXF1aXJl
            ZDogRmFsc2UKICAgIGRlZmF1bHQ6IOKAmHYxLjDigJkKICAgIHRmVmFyOiBlbmdpbmVUeXBlCg==
          readme: IyBPdmVydmlldwoKVGhlIEFwYWNoZSBhcHAgaXMgYSB1bmlmaWVkIGxvZ3MgYW5kIG1ldHJpY3Mg
            YXBwIHRoYXQgaGVscHMgeW91IG1vbml0b3IgdGhlIGF2YWlsYWJpbGl0eSwgcGVyZm9ybWFuY2Us
            IGhlYWx0aCBhbmQgcmVzb3VyY2UgdXRpbGl6YXRpb24gb2YgQXBhY2hlIHdlYiBzZXJ2ZXIgZmFy
            bXMuICBQcmVjb25maWd1cmVkIGRhc2hib2FyZHMgYW5kIHNlYXJjaGVzIHByb3ZpZGUgaW5zaWdo
            dCBpbnRvIHZpc2l0b3IgbG9jYXRpb25zLCB2aXNpdG9yIGFjY2VzcyB0eXBlcywgdHJhZmZpYyBw
            YXR0ZXJucywgZXJyb3JzLCB3ZWIgc2VydmVyIG9wZXJhdGlvbnMsIHJlc291cmNlIHV0aWxpemF0
            aW9uIGFuZCBhY2Nlc3MgZnJvbSBrbm93biBtYWxpY2lvdXMgc291cmNlcy4KCiMgU2V0dXAKVGhp
            cyBpcyB0aGUgc2VjdGlvbiBmb3IgQXBhY2hlIC0gT3BlblRlbGVtZXRyeSBjb2xsZWN0aW9uIHNl
            dHVwLgo=
          manifest: CnNjaGVtYVZlcnNpb246ICIxLjAiCgpuYW1lOiBBcGFjaGUKCmRlc2NyaXB0aW9u
            OiA+LQogIFRoZSBBcGFjaGUgYXBwIGlzIGEgdW5pZmllZCBsb2dzIGFuZCBtZXRy aWNzIGFwcCB0aGF0IGhlbHBzIHlvdSBtb25pdG9yIHRoZSBhdmFpbGFiaWxpdHks
            IHBlcmZvcm1hbmNlLAogIGhlYWx0aCBhbmQgcmVzb3VyY2UgdXRpbGl6YXRpb24g b2YgQXBhY2hlIHdlYiBzZXJ2ZXIgZmFybXMuICBQcmVjb25maWd1cmVkIGRhc2hi
            b2FyZHMgYW5kIHNlYXJjaGVzCiAgcHJvdmlkZSBpbnNpZ2h0IGludG8gdmlzaXRv ciBsb2NhdGlvbnMsIHZpc2l0b3IgYWNjZXNzIHR5cGVzLCB0cmFmZmljIHBhdHRl
            cm5zLCBlcnJvcnMsIHdlYiBzZXJ2ZXIKICBvcGVyYXRpb25zLCByZXNvdXJjZSB1 dGlsaXphdGlvbiBhbmQgYWNjZXNzIGZyb20ga25vd24gbWFsaWNpb3VzIHNvdXJj
            ZXMuCmF1dGhvcjogU3VtbyBMb2dpYwoKdmVyc2lvbjogMS4wLjAKCgo=
        readme: !!binary |-
          U1hsQ1VHUnRWbmxrYld4c1pIZHZTMVpIYUd4SlJVWjNXVmRPYjFwVFFtaGpTRUZuWVZoTloxbFRR
          akZpYld4dFlWZFdhMGxIZUhaYU0wMW5XVmMxYTBsSE1XeGtTRXB3V1ROTlp5QlpXRUozU1VoU2Ix
          bFlVV2RoUjFaelkwaE5aMlZYT1RGSlJ6RjJZbTFzTUdJelNXZGtSMmhzU1VkR01sbFhiSE5aVjBw
          d1lrZHNNR1ZUZDJkalIxWjVXbTA1ZVdKWFJuVlpNbFZ6SUVsSGFHeFpWM2d3WVVOQ2FHSnRVV2Rq
          YlZaNllqTldlVmt5Vldka1dGSndZa2RzTmxsWVVuQmlNalJuWWpKWloxRllRbWhaTW1oc1NVaGti
          RmxwUW5wYVdFb3lXbGhKWjFwdFJua2dZbGhOZFVsRFFsRmpiVlpxWWpJMWJXRlhaREZqYlZaclNV
          ZFNhR015YUdsaU1rWjVXa2hOWjFsWE5XdEpTRTVzV1ZoS2FtRkhWbnBKU0VKNVlqTmFjRnBIVldk
          aFZ6VjZZVmRrYnlCa1EwSndZbTVTZGtsSVduQmpNbXd3WWpOSloySkhPV3BaV0ZKd1lqSTFla3hE
          UWpKaFdFNXdaRWM1ZVVsSFJtcFpNbFo2WTNsQ01HVllRbXhqZVhkblpFaEthRnB0V25CWmVVSjNJ
          RmxZVWpCYVdFcDFZM2wzWjFwWVNubGlNMHA2VEVOQ00xcFhTV2RqTWxaNVpHMVdlVWxIT1hkYVdF
          cG9aRWRzZG1KdVRYTkpTRXBzWXpJNU1XTnRUbXhKU0ZZd1lWZDRjR1Z0UmpBZ1lWYzVkVWxIUm5W
          YVEwSm9XVEpPYkdNelRXZGFia3AyWWxOQ2NtSnRPVE5pYVVKMFdWZDRjRmt5Ykhaa1dFMW5Zekk1
          TVdOdFRteGplVFJMUTJsTloxVXlWakJrV0VGTFZrZG9jQ0JqZVVKd1kzbENNR0ZIVldkak1sWnFa
          RWRzZG1KcFFtMWlNMGxuVVZoQ2FGa3lhR3hKUXpCblZETkNiR0pzVW14aVIxWjBXbGhTZVdWVFFt
          cGlNbmh6V2xkT01HRlhPWFZKU0U1c0lHUklWbmRNWjI4OQ==
        uuid: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
        version: 1.0.0
        config: !!binary |-
          U1VOQmRFbEhUblppV0VKMlltMVdkV1JHVWpWalIxVTJTVWhPYW1JelFteERhVUZuU1VOQ2MxbFhT
          bXhpUkc5bk5HOURXVkZZUW1oWk1taHNTVVZXZVdOdE9YbEpSWGgyV25sQ1ZDQmlNMVo1V1RKWWFX
          ZEthMHRKUTBGblNVaFNiVlp0Um5sUGFVSnNZMjVLVFdJeVpGUlpNamwzV2xGdlowbERRV2REYVVG
          blRGTkNhbUl5TVhkaU1qVnNZbTVTVldWWVFteFBhVUo2SUZreU9YZGFVVzluU1VOQloySkhSbWxh
          VjNjMlNVOUxRVzFGUm5kWlYwNXZXbE5DUWxreVRteGpNMDFuVkVjNWJrbEdUblprV0VwcVdtVkxR
          VzFSYjJkSlEwRm5aRWRhVjFsWVNUWWdTVWRHYWxreVZucGpNSGgyV2pGT2FtSXpRbXhEWjI5blNV
          TXdaMWt5T1hSalJ6bDFXbGMxTUZaSWJIZGFWRzluV1ROV2VtUkhPWFJEYVVGblNVTkNhMWxZVW1o
          V1NHeDNXbFJ2WnlCVk0xSjVZVmMxYmtOcFFXZEpRMEp6V1ZkS2JHSkViMmMwYjBOWlVWaENhRmt5
          YUd4SlJWWjFXakpzZFZwVFFsVmxXRUpzTkc5RFdVTnBRV2RKUTBKdldsZDRkMVpIVmpSa1JHOW5J
          RFJ2UTFsV1IyaHNTVWRXZFZveWJIVmFVMEl3WlZoQ2JFbEhPVzFKU0d4MlpGaEpaMUZZUW1oWk1t
          aHNTVVZzZFdNelVtaGliVTVzTkc5RFdVTnBRV2RKUTBKNVdsaEdNV0ZZU213Z1drUnZaMUp0Um5O
          ak1sVkxTVU5CWjBsSFVteGFiVVl4WWtoUk5rbFBTMEZ0U0ZsNFRHcEVhV2RLYTB0SlEwRm5TVWhT
          YlZadFJubFBhVUpzWW0xa2NHSnRWbFZsV0VKc1EyYzlQUT09
      properties:
        uuid:
          description: UUID of the app.
          example: ceb7fac5-1127-4a04-a5b8-2e49190be3d5
          format: uuid
          type: string
        version:
          description: Version of the app.
          example: 1.0.0
          type: string
        baseUrl:
          description: URL prefix for where the app is stored.
          example: https://some_bucket.s3.amazonaws.com/path/to/app/version/
          format: url
          type: string
        manifest:
          description: "Content of the manifest YAML file, as Base64-encoded string."
          example: !!binary |-
            UTI1T2FtRkhWblJaVmxwc1kyNU9jR0l5TkRaSlEwbDRUR3BCYVVObmNIVlpWekZzVDJsQ1FtTkhS
            bXBoUjFWTFEyMVNiR015VG5saFdFSXdZVmM1ZFNCUGFVRXJURkZ2WjBsR1VtOWFVMEpDWTBkR2Ft
            RkhWV2RaV0VKM1NVZHNla2xIUldka1Z6VndXbTFzYkZwRFFuTmlNbVI2U1VkR2RWcERRblJhV0ZK
            NUlHRlhUbnBKUjBaM1kwTkNNR0ZIUmpCSlIyaHNZa2hDZWtsSWJIWmtVMEowWWpJMWNHUkhPWGxK
            U0ZKdldsTkNhR1J0Um5CaVIwWnBZVmQ0Y0dSSWEzTWdTVWhDYkdOdFduWmpiVEZvWW0xT2JFeEJi
            MmRKUjJoc1dWZDRNR0ZEUW1oaWJWRm5ZMjFXZW1JelZubFpNbFZuWkZoU2NHSkhiRFpaV0ZKd1lq
            STBaeUJpTWxsblVWaENhRmt5YUd4SlNHUnNXV2xDZWxwWVNqSmFXRWxuV20xR2VXSllUWFZKUTBK
            UlkyMVdhbUl5TlcxaFYyUXhZMjFXYTBsSFVtaGpNbWhwSUdJeVJubGFTRTFuV1ZjMWEwbElUbXha
            V0VwcVlVZFdla05wUVdkalNFcDJaRzFzYTFwVFFuQmliazV3V2pKb01FbEhiSFZrUnpoblpHMXNl
            bUZZVW5ZZ1kybENjMkl5VG1oa1IyeDJZbTVOYzBsSVduQmpNbXd3WWpOSloxbFhUbXBhV0U1NlNV
            aFNOV05IVm5wTVEwSXdZMjFHYlZwdGJHcEpTRUpvWkVoU2JDQmpiVFY2VEVOQ2JHTnVTblpqYmsx
            elNVaGtiRmxwUW5wYVdFb3lXbGhKUzBsRFFuWmpSMVo1V1ZoU2NHSXlOWHBNUTBKNVdsaE9kbVJZ
            U21wYVUwSXhJR1JIYkhOaFdIQm9aRWRzZG1KcFFtaGliVkZuV1ZkT2FscFlUbnBKUjFwNVlqSXda
            MkV5Tlhaa01qUm5ZbGRHYzJGWFRuQmlNMVo2U1VoT2RtUllTbW9nV2xoTmRVTnRSakZrUjJoMlky
            cHZaMVV6Vm5SaWVVSk5ZakprY0ZsM2IwdGtiVlo1WXpKc2RtSnFiMmROVXpSM1RHcEJTME5uYnow
            PQ==
          format: byte
          type: string
        config:
          description: "Content of the config YAML file, as Base64-encoded string."
          example: !!binary |-
            U1VOQmRFbEhUblppV0VKMlltMVdkV1JHVWpWalIxVTJTVWhPYW1JelFteERhVUZuU1VOQ2MxbFhT
            bXhpUkc5bk5HOURXVkZZUW1oWk1taHNTVVZXZVdOdE9YbEpSWGgyV25sQ1ZDQmlNMVo1V1RKWWFX
            ZEthMHRKUTBGblNVaFNiVlp0Um5sUGFVSnNZMjVLVFdJeVpGUlpNamwzV2xGdlowbERRV2REYVVG
            blRGTkNhbUl5TVhkaU1qVnNZbTVTVldWWVFteFBhVUo2SUZreU9YZGFVVzluU1VOQloySkhSbWxh
            VjNjMlNVOUxRVzFGUm5kWlYwNXZXbE5DUWxreVRteGpNMDFuVkVjNWJrbEdUblprV0VwcVdtVkxR
            VzFSYjJkSlEwRm5aRWRhVjFsWVNUWWdTVWRHYWxreVZucGpNSGgyV2pGT2FtSXpRbXhEWjI5blNV
            TXdaMWt5T1hSalJ6bDFXbGMxTUZaSWJIZGFWRzluV1ROV2VtUkhPWFJEYVVGblNVTkNhMWxZVW1o
            V1NHeDNXbFJ2WnlCVk0xSjVZVmMxYmtOcFFXZEpRMEp6V1ZkS2JHSkViMmMwYjBOWlVWaENhRmt5
            YUd4SlJWWjFXakpzZFZwVFFsVmxXRUpzTkc5RFdVTnBRV2RKUTBKdldsZDRkMVpIVmpSa1JHOW5J
            RFJ2UTFsV1IyaHNTVWRXZFZveWJIVmFVMEl3WlZoQ2JFbEhPVzFKU0d4MlpGaEpaMUZZUW1oWk1t
            aHNTVVZzZFdNelVtaGliVTVzTkc5RFdVTnBRV2RKUTBKNVdsaEdNV0ZZU213Z1drUnZaMUp0Um5O
            ak1sVkxTVU5CWjBsSFVteGFiVVl4WWtoUk5rbFBTMEZ0U0ZsNFRHcEVhV2RLYTB0SlEwRm5TVWhT
            YlZadFJubFBhVUpzWW0xa2NHSnRWbFZsV0VKc1EyYzlQUT09
          format: byte
          type: string
        readme:
          description: "Content of the README markdown file, as Base64-encoded string."
          example: !!binary |-
            U1hsQ1VHUnRWbmxrYld4c1pIZHZTMVpIYUd4SlJVWjNXVmRPYjFwVFFtaGpTRUZuWVZoTloxbFRR
            akZpYld4dFlWZFdhMGxIZUhaYU0wMW5XVmMxYTBsSE1XeGtTRXB3V1ROTlp5QlpXRUozU1VoU2Ix
            bFlVV2RoUjFaelkwaE5aMlZYT1RGSlJ6RjJZbTFzTUdJelNXZGtSMmhzU1VkR01sbFhiSE5aVjBw
            d1lrZHNNR1ZUZDJkalIxWjVXbTA1ZVdKWFJuVlpNbFZ6SUVsSGFHeFpWM2d3WVVOQ2FHSnRVV2Rq
            YlZaNllqTldlVmt5Vldka1dGSndZa2RzTmxsWVVuQmlNalJuWWpKWloxRllRbWhaTW1oc1NVaGti
            RmxwUW5wYVdFb3lXbGhKWjFwdFJua2dZbGhOZFVsRFFsRmpiVlpxWWpJMWJXRlhaREZqYlZaclNV
            ZFNhR015YUdsaU1rWjVXa2hOWjFsWE5XdEpTRTVzV1ZoS2FtRkhWbnBKU0VKNVlqTmFjRnBIVldk
            aFZ6VjZZVmRrYnlCa1EwSndZbTVTZGtsSVduQmpNbXd3WWpOSloySkhPV3BaV0ZKd1lqSTFla3hE
            UWpKaFdFNXdaRWM1ZVVsSFJtcFpNbFo2WTNsQ01HVllRbXhqZVhkblpFaEthRnB0V25CWmVVSjNJ
            RmxZVWpCYVdFcDFZM2wzWjFwWVNubGlNMHA2VEVOQ00xcFhTV2RqTWxaNVpHMVdlVWxIT1hkYVdF
            cG9aRWRzZG1KdVRYTkpTRXBzWXpJNU1XTnRUbXhKU0ZZd1lWZDRjR1Z0UmpBZ1lWYzVkVWxIUm5W
            YVEwSm9XVEpPYkdNelRXZGFia3AyWWxOQ2NtSnRPVE5pYVVKMFdWZDRjRmt5Ykhaa1dFMW5Zekk1
            TVdOdFRteGplVFJMUTJsTloxVXlWakJrV0VGTFZrZG9jQ0JqZVVKd1kzbENNR0ZIVldkak1sWnFa
            RWRzZG1KcFFtMWlNMGxuVVZoQ2FGa3lhR3hKUXpCblZETkNiR0pzVW14aVIxWjBXbGhTZVdWVFFt
            cGlNbmh6V2xkT01HRlhPWFZKU0U1c0lHUklWbmRNWjI4OQ==
          format: byte
          type: string
        files:
          additionalProperties:
            format: byte
            type: string
          description: "Content of various files part of app package, as Base64-encoded\
            \ string."
          example:
            config: ICAtIGNvbXBvbmVudFR5cGU6IHNjb3BlCiAgICBsYWJlbDog4oCYQXBhY2hlIEVycm9yIExvZyBT
              b3VyY2XigJkKICAgIHRmVmFyOiBlcnJMb2dTY29wZQogICAgCiAgLSBjb21wb25lbnRUeXBlOiBz
              Y29wZQogICAgbGFiZWw6IOKAmEFwYWNoZSBBY2Nlc3MgTG9nIFNvdXJjZeKAmQogICAgdGZWYXI6
              IGFjY2Vzc0xvZ1Njb3BlCgogIC0gY29tcG9uZW50VHlwZTogY3VzdG9tCiAgICBkYXRhVHlwZTog
              U3RyaW5nCiAgICBsYWJlbDog4oCYQXBhY2hlIEVuZ2luZSBUeXBl4oCYCiAgICBoZWxwVGV4dDog
              4oCYVGhlIGVuZ2luZSB0eXBlIG9mIHlvdXIgQXBhY2hlIEluc3RhbmNl4oCYCiAgICByZXF1aXJl
              ZDogRmFsc2UKICAgIGRlZmF1bHQ6IOKAmHYxLjDigJkKICAgIHRmVmFyOiBlbmdpbmVUeXBlCg==
            readme: IyBPdmVydmlldwoKVGhlIEFwYWNoZSBhcHAgaXMgYSB1bmlmaWVkIGxvZ3MgYW5kIG1ldHJpY3Mg
              YXBwIHRoYXQgaGVscHMgeW91IG1vbml0b3IgdGhlIGF2YWlsYWJpbGl0eSwgcGVyZm9ybWFuY2Us
              IGhlYWx0aCBhbmQgcmVzb3VyY2UgdXRpbGl6YXRpb24gb2YgQXBhY2hlIHdlYiBzZXJ2ZXIgZmFy
              bXMuICBQcmVjb25maWd1cmVkIGRhc2hib2FyZHMgYW5kIHNlYXJjaGVzIHByb3ZpZGUgaW5zaWdo
              dCBpbnRvIHZpc2l0b3IgbG9jYXRpb25zLCB2aXNpdG9yIGFjY2VzcyB0eXBlcywgdHJhZmZpYyBw
              YXR0ZXJucywgZXJyb3JzLCB3ZWIgc2VydmVyIG9wZXJhdGlvbnMsIHJlc291cmNlIHV0aWxpemF0
              aW9uIGFuZCBhY2Nlc3MgZnJvbSBrbm93biBtYWxpY2lvdXMgc291cmNlcy4KCiMgU2V0dXAKVGhp
              cyBpcyB0aGUgc2VjdGlvbiBmb3IgQXBhY2hlIC0gT3BlblRlbGVtZXRyeSBjb2xsZWN0aW9uIHNl
              dHVwLgo=
            manifest: CnNjaGVtYVZlcnNpb246ICIxLjAiCgpuYW1lOiBBcGFjaGUKCmRlc2NyaXB0aW9u
              OiA+LQogIFRoZSBBcGFjaGUgYXBwIGlzIGEgdW5pZmllZCBsb2dzIGFuZCBtZXRy aWNzIGFwcCB0aGF0IGhlbHBzIHlvdSBtb25pdG9yIHRoZSBhdmFpbGFiaWxpdHks
              IHBlcmZvcm1hbmNlLAogIGhlYWx0aCBhbmQgcmVzb3VyY2UgdXRpbGl6YXRpb24g b2YgQXBhY2hlIHdlYiBzZXJ2ZXIgZmFybXMuICBQcmVjb25maWd1cmVkIGRhc2hi
              b2FyZHMgYW5kIHNlYXJjaGVzCiAgcHJvdmlkZSBpbnNpZ2h0IGludG8gdmlzaXRv ciBsb2NhdGlvbnMsIHZpc2l0b3IgYWNjZXNzIHR5cGVzLCB0cmFmZmljIHBhdHRl
              cm5zLCBlcnJvcnMsIHdlYiBzZXJ2ZXIKICBvcGVyYXRpb25zLCByZXNvdXJjZSB1 dGlsaXphdGlvbiBhbmQgYWNjZXNzIGZyb20ga25vd24gbWFsaWNpb3VzIHNvdXJj
              ZXMuCmF1dGhvcjogU3VtbyBMb2dpYwoKdmVyc2lvbjogMS4wLjAKCgo=
          maxProperties: 100
          type: object
      required:
      - baseUrl
      - manifest
      - uuid
      - version
      type: object
    ListConnectionsResponse:
      example:
        next: next
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          modifiedBy: modifiedBy
          id: id
          type: type
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          modifiedBy: modifiedBy
          id: id
          type: type
      properties:
        data:
          description: List of connections.
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    Connection:
      discriminator:
        propertyName: type
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        modifiedBy: modifiedBy
        id: id
        type: type
      properties:
        type:
          description: "Type of connection. Valid values are `WebhookConnection`,\
            \ `ServiceNowConnection`."
          type: string
        id:
          description: Unique identifier for the connection.
          type: string
        name:
          description: Name of the connection.
          type: string
        description:
          description: Description of the connection.
          type: string
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
      required:
      - createdAt
      - createdBy
      - description
      - id
      - modifiedAt
      - modifiedBy
      - name
      - type
      type: object
    ConnectionDefinition:
      discriminator:
        propertyName: type
      example:
        name: name
        description: ""
        type: type
      properties:
        type:
          description: "Type of connection. Valid values are `WebhookDefinition`,\
            \ `ServiceNowDefinition`."
          pattern: ^(WebhookDefinition|ServiceNowDefinition)$
          type: string
          x-pattern-message: must be either `WebhookDefinition` or `ServiceNowDefinition`
        name:
          description: Name of the connection.
          maxLength: 127
          minLength: 1
          type: string
        description:
          default: ""
          description: Description of the connection.
          maxLength: 1024
          type: string
      required:
      - name
      - type
      type: object
    TestConnectionResponse:
      example:
        alertResponseContent: ok
        resolutionResponseContent: ok
        resolutionStatusCode: 200
        responseContent: responseContent
        alertStatusCode: 200
        statusCode: 0
      properties:
        statusCode:
          description: Status code of the response of the connection test.
          type: integer
        responseContent:
          description: Content of the response of the connection test.
          type: string
        alertStatusCode:
          description: Status code of the response of alert payload test.
          example: 200
          format: int32
          type: integer
        alertResponseContent:
          description: Content of the response of alert payload test.
          example: ok
          type: string
        resolutionStatusCode:
          description: Status code of the response of resolution payload test.
          example: 200
          format: int32
          type: integer
        resolutionResponseContent:
          description: Content of the response of resolution payload test.
          example: ok
          type: string
      required:
      - responseContent
      - statusCode
      type: object
    GetIncidentTemplatesResponse:
      example:
        templates:
        - name: name
          id: 0
        - name: name
          id: 0
      properties:
        templates:
          description: List of incident templates.
          items:
            $ref: '#/components/schemas/IncidentTemplate'
          type: array
      required:
      - templates
      type: object
    IncidentTemplate:
      example:
        name: name
        id: 0
      properties:
        id:
          description: Unique identifier of the incident template.
          type: integer
        name:
          description: Name of the incident template.
          type: string
      required:
      - id
      - name
      type: object
    GetIncidentTemplatesRequest:
      example:
        authHeader: SOMEAUTHHEADERSTRING
        connectionId: 0000000000123ABC
        url: https://staging.soar.sumologic.com/
      properties:
        url:
          description: Optional CloudSOAR domain URL to use for the API call to get
            incident templates.
          example: https://staging.soar.sumologic.com/
          type: string
        authHeader:
          description: Optional CloudSOAR authorization header to use for the API
            call to get incident templates.
          example: SOMEAUTHHEADERSTRING
          type: string
        connectionId:
          description: "Optional connectionId to get incident templates for an existing\
            \ CloudSOAR connection. If provided, the authHeader and url will be taken\
            \ from the existing connection object."
          example: 0000000000123ABC
          type: string
      type: object
    ListScheduledViewsResponse:
      example:
        next: next
        data:
        - parsingMode: AutoParse
          indexName: TestScheduledView
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          totalMessageCount: 6
          query: _sourceCategory=*/Apache
          retentionEffectiveAt: 2000-01-23T04:56:07.000+00:00
          newRetentionPeriod: 300
          error: error
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdByOptimizeIt: true
          createdBy: 0000000006743FE8
          filledRanges:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          dataForwardingId: dataForwardingId
          indexId: "1"
          totalBytes: 0
          startTime: 2000-01-23T04:56:07.000+00:00
          modifiedBy: 0000000006743FE8
          id: id
          retentionPeriod: 60
          status: status
        - parsingMode: AutoParse
          indexName: TestScheduledView
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          totalMessageCount: 6
          query: _sourceCategory=*/Apache
          retentionEffectiveAt: 2000-01-23T04:56:07.000+00:00
          newRetentionPeriod: 300
          error: error
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdByOptimizeIt: true
          createdBy: 0000000006743FE8
          filledRanges:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          dataForwardingId: dataForwardingId
          indexId: "1"
          totalBytes: 0
          startTime: 2000-01-23T04:56:07.000+00:00
          modifiedBy: 0000000006743FE8
          id: id
          retentionPeriod: 60
          status: status
      properties:
        data:
          description: List of scheduled views.
          items:
            $ref: '#/components/schemas/ScheduledView'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    ScheduledView:
      allOf:
      - $ref: '#/components/schemas/CreateScheduledViewDefinition'
      - $ref: '#/components/schemas/ViewRetentionProperties'
      - properties:
          id:
            description: Identifier for the scheduled view.
            type: string
          indexId:
            description: The `id` of the Index where the output from Scheduled view
              is stored.
            example: "1"
            type: string
          createdAt:
            description: Creation timestamp in UTC.
            format: date-time
            type: string
          modifiedAt:
            description: "Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
              \ format."
            format: date-time
            type: string
          createdByOptimizeIt:
            description: If the scheduled view is created by OptimizeIt.
            type: boolean
          error:
            description: Errors related to the scheduled view.
            type: string
          status:
            description: |-
              Status of the scheduled view. Possible values are:
                1. `NOT_STARTED`
                2. `FILLING`
                3. `STOPPED`
                4. `COMPLETE`
                5. `FAILED`
                6. `PAUSED`
            type: string
          totalBytes:
            description: Total storage consumed by the scheduled view.
            format: int64
            type: integer
          totalMessageCount:
            description: Total number of messages for the scheduled view.
            format: int64
            type: integer
          createdBy:
            description: Identifier of the user who created the scheduled view.
            example: 0000000006743FE8
            type: string
          modifiedBy:
            description: Identifier of the user who last modified the resource.
            example: 0000000006743FE8
            type: string
          filledRanges:
            description: List of the different units of filled ranges since the autoview
              has been created.
            items:
              $ref: '#/components/schemas/FilledRange'
            type: array
        required:
        - id
      example:
        parsingMode: AutoParse
        indexName: TestScheduledView
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        totalMessageCount: 6
        query: _sourceCategory=*/Apache
        retentionEffectiveAt: 2000-01-23T04:56:07.000+00:00
        newRetentionPeriod: 300
        error: error
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdByOptimizeIt: true
        createdBy: 0000000006743FE8
        filledRanges:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        dataForwardingId: dataForwardingId
        indexId: "1"
        totalBytes: 0
        startTime: 2000-01-23T04:56:07.000+00:00
        modifiedBy: 0000000006743FE8
        id: id
        retentionPeriod: 60
        status: status
      type: object
      x-tf-generated-properties: "id,query,indexName,startTime,retentionPeriod,parsingMode"
      x-tf-resource-name: ScheduledView
    CreateScheduledViewDefinition:
      example:
        parsingMode: AutoParse
        indexName: TestScheduledView
        query: _sourceCategory=*/Apache
        dataForwardingId: dataForwardingId
        startTime: 2000-01-23T04:56:07.000+00:00
        retentionPeriod: 60
      properties:
        query:
          description: The query that defines the data to be included in the scheduled
            view.
          example: _sourceCategory=*/Apache
          maxLength: 16384
          minLength: 1
          type: string
        indexName:
          description: Name of the index for the scheduled view.
          example: TestScheduledView
          maxLength: 255
          minLength: 0
          type: string
        startTime:
          description: "Start timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: date-time
          type: string
        retentionPeriod:
          default: -1
          description: "The number of days to retain data in the scheduled view, or\
            \ -1 to use the default value for your account. Only relevant if your\
            \ account has multi-retention enabled."
          example: 60
          format: int32
          type: integer
        dataForwardingId:
          description: An optional ID of a data forwarding configuration to be used
            by the scheduled view.
          type: string
        parsingMode:
          default: Manual
          description: |-
            Define the parsing mode to scan the JSON format log messages. Possible values are:
              1. `AutoParse`
              2. `Manual`
            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
          example: AutoParse
          pattern: ^(AutoParse|Manual)$
          type: string
          x-pattern-message: should be either AutoParse or Manual
      required:
      - indexName
      - query
      - startTime
      type: object
    FilledRange:
      description: Range of timestamps already filled since the autoview has been
        created.
      example:
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
      properties:
        startTime:
          description: "Start of the timestamp for each unit of filled ranges, expressed\
            \ in UTC."
          format: date-time
          type: string
        endTime:
          description: "End of the timestamp for each unit of filled ranges, expressed\
            \ in UTC."
          format: date-time
          type: string
      required:
      - endTime
      - startTime
      type: object
    UpdateScheduledViewDefinition:
      example:
        reduceRetentionPeriodImmediately: false
        dataForwardingId: dataForwardingId
        retentionPeriod: 365
      properties:
        dataForwardingId:
          description: An optional ID of a data forwarding configuration to be used
            by the scheduled view.
          type: string
        retentionPeriod:
          default: -1
          description: "The number of days to retain data in the scheduled view, or\
            \ -1 to use the default value for your account.  Only relevant if your\
            \ account has multi-retention. enabled."
          example: 365
          format: int32
          type: integer
        reduceRetentionPeriodImmediately:
          default: false
          description: "This is required if the newly specified `retentionPeriod`\
            \ is less than the existing retention period.  In such a situation, a\
            \ value of `true` says that data between the existing retention period\
            \ and the new retention period should be deleted immediately; if `false`,\
            \ such data will be deleted after seven days. This property is optional\
            \ and ignored if the specified `retentionPeriod` is greater than or equal\
            \ to the current retention period."
          type: boolean
      type: object
    ScheduledViewsQuotaUsage:
      example:
        quota: 200
        remaining: 121
      properties:
        quota:
          description: Maximum number of Scheduled Views allowed.
          example: 200
          format: int32
          type: integer
        remaining:
          description: Remaining number of Scheduled Views allowed.
          example: 121
          format: int32
          type: integer
      required:
      - quota
      - remaining
      type: object
    LookupTable:
      allOf:
      - $ref: '#/components/schemas/MetadataModel'
      - $ref: '#/components/schemas/LookupTableDefinition'
      - properties:
          id:
            description: Identifier of the lookup table as a content item.
            example: 0000000001C41EE4
            type: string
          contentPath:
            description: "Address/path of the parent folder of this lookup table in\
              \ content library. For example, a lookup table existing  in the personal/lookupTable\
              \ folder for user johndoe would be: /Library/Users/johndoe@acme.com/lookupTable"
            example: /Library/Users/johndoe@acme.com/lookupTable
            type: string
          size:
            description: The current size of the lookup table in bytes
            example: 100
            format: int64
            type: integer
      description: Lookup table definition and metadata.
      example:
        parentFolderId: 0000000001C41EE4
        modifiedAt: 2018-10-16T09:10:00Z
        description: This is a sample lookup table description.
        sizeLimitAction: DeleteOldData
        ttl: 100
        createdAt: 2018-10-16T09:10:00Z
        contentPath: /Library/Users/johndoe@acme.com/lookupTable
        primaryKeys:
        - FieldName1
        size: 100
        createdBy: 0000000006743FDD
        name: SampleLookupTable
        modifiedBy: 0000000006743FE8
        id: 0000000001C41EE4
        fields:
        - fieldName: FieldName1
          fieldType: boolean
        - fieldName: FieldName1
          fieldType: boolean
      required:
      - id
      type: object
    LookupTableDefinition:
      allOf:
      - $ref: '#/components/schemas/ExportableLookupTableInfo'
      - properties:
          name:
            description: The name of the lookup table.
            example: SampleLookupTable
            maxLength: 255
            type: string
          parentFolderId:
            description: The parent-folder-path identifier of the lookup table in
              the Library.
            example: 0000000001C41EE4
            type: string
      description: Definition of the lookup table.
      example:
        primaryKeys:
        - FieldName1
        parentFolderId: 0000000001C41EE4
        name: SampleLookupTable
        description: This is a sample lookup table description.
        sizeLimitAction: DeleteOldData
        fields:
        - fieldName: FieldName1
          fieldType: boolean
        - fieldName: FieldName1
          fieldType: boolean
        ttl: 100
      required:
      - name
      - parentFolderId
      type: object
    ExportableLookupTableInfo:
      description: The lookup table definition independent of its location in the
        Library and name.
      properties:
        description:
          description: The description of the lookup table.
          example: This is a sample lookup table description.
          maxLength: 1000
          type: string
        fields:
          description: The list of fields in the lookup table.
          items:
            $ref: '#/components/schemas/LookupTableField'
          minItems: 1
          type: array
        primaryKeys:
          description: The names of the fields that make up the primary key for the
            lookup table. These will be a subset of the fields that the table will
            contain.
          example:
          - FieldName1
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        ttl:
          default: 0
          description: A time to live for each entry in the lookup table (in minutes).
            365 days is the maximum time to live for each entry that you can specify.
            Setting it to 0 means that the records will not expire automatically.
          example: 100
          format: int32
          maximum: 525600
          minimum: 0
          type: integer
        sizeLimitAction:
          default: StopIncomingMessages
          description: The action that needs to be taken when the size limit is reached
            for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`.
            DeleteOldData will start deleting old data once size limit is reached
            whereas StopIncomingMessages will discard all the updates made to the
            lookup table once size limit is reached.
          example: DeleteOldData
          pattern: ^(StopIncomingMessages|DeleteOldData)$
          type: string
          x-pattern-message: must be either `StopIncomingMessages` or `DeleteOldData`
      required:
      - description
      - fields
      - primaryKeys
      type: object
    LookupTableField:
      description: The definition of the field.
      example:
        fieldName: FieldName1
        fieldType: boolean
      properties:
        fieldName:
          description: The name of the field.
          example: FieldName1
          type: string
        fieldType:
          description: |-
            The data type of the field. Supported types:
              - `boolean`
              - `int`
              - `long`
              - `double`
              - `string`
          example: boolean
          pattern: ^(boolean|int|long|double|string)$
          type: string
          x-pattern-message: "must be one of the following: `boolean`, `int`, `long`,\
            \ `double`, `string`"
      required:
      - fieldName
      - fieldType
      type: object
    LookupUpdateDefinition:
      description: The updated lookup table parameters.
      example:
        description: This is a sample lookup table description.
        sizeLimitAction: DeleteOldData
        ttl: 100
      properties:
        ttl:
          default: 0
          description: A time to live for each entry in the lookup table (in minutes).
            0 is a special value. A TTL of 0 implies entry will never be deleted from
            the table.
          example: 100
          format: int32
          maximum: 525600
          minimum: 0
          type: integer
        description:
          description: The description of the lookup table. The description cannot
            be blank.
          example: This is a sample lookup table description.
          maxLength: 1000
          type: string
        sizeLimitAction:
          default: StopIncomingMessages
          description: The action that needs to be taken when the size limit is reached
            for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`.
            DeleteOldData will starting deleting old data once size limit is reached
            whereas StopIncomingMessages will discard all the updates made to the
            lookup table once size limit is reached.
          example: DeleteOldData
          type: string
      required:
      - description
      - ttl
      type: object
    LookupRequestToken:
      description: Allows you to track the status of an upload or export request.
      example:
        id: 0000000001C41EF2
      properties:
        id:
          description: The identifier used to track the request.
          example: 0000000001C41EF2
          type: string
      required:
      - id
      type: object
    LookupAsyncJobStatus:
      description: Lookup table async job status.
      example:
        jobId: 0000000001C41EF2
        statusMessages:
        - statusMessages
        - statusMessages
        createdAt: 2018-10-16T09:10:00Z
        requestType: BulkMerge
        modifiedAt: 2018-10-16T09:10:00Z
        warnings:
        - cause: Primary key values were duplicate.
          message: 60 rows were dropped.
        - cause: Primary key values were duplicate.
          message: 60 rows were dropped.
        lookupContentId: 0000000001C41EE4
        lookupContentPath: /Library/Users/xyz@demo.com/sampleLookup
        userId: 0000000006743FDD
        errors:
        - code: auth:password_too_short
          meta:
            minLength: 12
            actualLength: 5
          detail: "Your password was 5 characters long, the minimum length is 12 characters.\
            \ See http://example.com/password for more information."
          message: Your password was too short.
        - code: auth:password_too_short
          meta:
            minLength: 12
            actualLength: 5
          detail: "Your password was 5 characters long, the minimum length is 12 characters.\
            \ See http://example.com/password for more information."
          message: Your password was too short.
        lookupName: sampleLookup
        status: status
      properties:
        jobId:
          description: An identifier returned in response to an asynchronous request.
          example: 0000000001C41EF2
          type: string
        status:
          description: "Whether or not the request is pending (`Pending`), in progress\
            \ (`InProgress`), has completed successfully (`Success`), has completed\
            \ partially with warnings (`PartialSuccess`) or has completed with an\
            \ error (`Failed`)."
          type: string
        statusMessages:
          description: Additional status messages generated if any if the status is
            `Success`.
          items:
            type: string
          type: array
        errors:
          description: "More information about the failures, if the status is `Failed`."
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
        warnings:
          description: "More information about the warnings, if the status is `PartialSuccess`."
          items:
            $ref: '#/components/schemas/warningDescription'
          type: array
        lookupContentId:
          description: Content id of lookup table on which this operation was performed.
          example: 0000000001C41EE4
          type: string
        lookupName:
          description: Name of lookup table on which this operation was performed.
          example: sampleLookup
          type: string
        lookupContentPath:
          description: Content path of lookup table on which this operation was performed.
          example: /Library/Users/xyz@demo.com/sampleLookup
          type: string
        requestType:
          description: |-
            Type of asynchronous request made:
              - `BulkMerge`
              - `BulkReplace`
              - `Truncate`
          example: BulkMerge
          type: string
        userId:
          description: User id of user who initiated this operation.
          example: 0000000006743FDD
          type: string
        createdAt:
          description: Creation time of this job in UTC.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        modifiedAt:
          description: Timestamp in UTC when status was last updated.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
      required:
      - createdAt
      - eventType
      - jobId
      - lookupContentId
      - lookupContentPath
      - lookupName
      - modifiedAt
      - status
      - userId
      type: object
    warningDescription:
      description: Warning description
      example:
        cause: Primary key values were duplicate.
        message: 60 rows were dropped.
      properties:
        message:
          description: Description of the warning.
          example: 60 rows were dropped.
          type: string
        cause:
          description: An optional cause of this warning.
          example: Primary key values were duplicate.
          type: string
      required:
      - message
      type: object
    LookupPreviewData:
      description: The preview data of the lookup table.
      properties:
        fieldProperties:
          description: "The field properties of the lookup table. This includes the\
            \ field name, field description, and an identifier associated with each\
            \ field."
          items:
            $ref: '#/components/schemas/PreviewLookupTableField'
          type: array
        fieldValueMapList:
          description: The data of the lookup table as a list of field identifiers
            mapped to their values.
          items:
            additionalProperties:
              type: string
            description: A map of all the field identifiers and their corresponding
              values.
            maxProperties: 1000
            type: object
          type: array
      type: object
    PreviewLookupTableField:
      description: The properties of the field.
      properties:
        fieldName:
          description: The name of the field.
          example: sampleFieldName
          type: string
        fieldType:
          description: |-
            The data type of the field. Supported types:
              - `boolean`
              - `int`
              - `long`
              - `double`
              - `string`
          example: boolean
          type: string
        fieldId:
          description: Identifier associated with each field of the table.
          example: "1"
          type: string
      required:
      - fieldId
      - fieldName
      - fieldType
      type: object
    RowUpdateDefinition:
      description: Lookup table data to be uploaded.
      example:
        row:
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
      properties:
        row:
          description: A list of all the field identifiers and their corresponding
            values.
          items:
            $ref: '#/components/schemas/TableRow'
          maxItems: 1000
          type: array
      required:
      - row
      type: object
    TableRow:
      description: Lookup table row column and column value.
      example:
        columnValue: user1
        columnName: user_id
      properties:
        columnName:
          description: Name of the column of the table.
          example: user_id
          type: string
        columnValue:
          description: Value of the specified column.
          example: user1
          type: string
      required:
      - columnName
      - columnValue
      type: object
    RowDeleteDefinition:
      description: Lookup table primary key of the row to be deleted.
      example:
        primaryKey:
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
      properties:
        primaryKey:
          description: A list of all the primary key field identifiers and their corresponding
            values which defines the row to delete.
          items:
            $ref: '#/components/schemas/TableRow'
          maxItems: 1000
          type: array
      required:
      - primaryKey
      type: object
    SecondaryKeysDefinition:
      description: The secondary keys of the lookup table
      example:
      - - ip
      - - latitude
        - longitude
      items:
        items:
          type: string
        type: array
      maxItems: 20
      minItems: 1
      type: array
    LookupTablesLimits:
      description: Properties related to lookup tables being allowed and created.
      properties:
        tablesCreated:
          description: Number of lookup tables currently created.
          example: 8
          format: int32
          type: integer
        tableCapacityRemaining:
          description: Remaining count of lookup tables that can be created.
          example: 2
          format: int32
          type: integer
        totalTableCapacity:
          description: Total capacity of lookup tables that can be created for the
            given org id.
          example: 10
          format: int32
          type: integer
      type: object
    ListPartitionsResponse:
      example:
        next: "1"
        data:
        - modifiedAt: 2018-10-16T09:10:00Z
          retentionEffectiveAt: 2000-01-23T04:56:07.000+00:00
          newRetentionPeriod: 300
          isIncludedInDefaultSearch: true
          isActive: true
          isCompliant: false
          routingExpression: _sourcecategory=*/Apache
          analyticsTier: continuous
          createdAt: 2018-10-16T09:10:00Z
          indexType: Partition
          createdBy: 0000000006743FDD
          name: apache
          totalBytes: 42
          dataForwardingId: dataForwardingId
          modifiedBy: 0000000006743FE8
          id: "1"
          retentionPeriod: 365
        - modifiedAt: 2018-10-16T09:10:00Z
          retentionEffectiveAt: 2000-01-23T04:56:07.000+00:00
          newRetentionPeriod: 300
          isIncludedInDefaultSearch: true
          isActive: true
          isCompliant: false
          routingExpression: _sourcecategory=*/Apache
          analyticsTier: continuous
          createdAt: 2018-10-16T09:10:00Z
          indexType: Partition
          createdBy: 0000000006743FDD
          name: apache
          totalBytes: 42
          dataForwardingId: dataForwardingId
          modifiedBy: 0000000006743FE8
          id: "1"
          retentionPeriod: 365
      properties:
        data:
          description: List of partitions.
          items:
            $ref: '#/components/schemas/Partition'
          type: array
        next:
          description: Next continuation token.
          example: "1"
          type: string
      required:
      - data
      type: object
    Partition:
      allOf:
      - $ref: '#/components/schemas/CreatePartitionDefinition'
      - $ref: '#/components/schemas/ViewRetentionProperties'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Unique identifier for the partition.
            example: "1"
            type: string
          totalBytes:
            description: Size of data in partition in bytes.
            example: 42
            format: int64
            type: integer
          isActive:
            description: This has the value `true` if the partition is active and
              `false` if it has been decommissioned.
            type: boolean
          indexType:
            description: "This has the value `DefaultIndex`, `AuditIndex`or `Partition`\
              \ depending upon the type of partition."
            example: Partition
            pattern: ^(DefaultIndex|AuditIndex|Partition)$
            type: string
          dataForwardingId:
            description: Id of the data forwarding configuration to be used by the
              partition.
            type: string
        required:
        - id
        - totalBytes
      example:
        modifiedAt: 2018-10-16T09:10:00Z
        retentionEffectiveAt: 2000-01-23T04:56:07.000+00:00
        newRetentionPeriod: 300
        isIncludedInDefaultSearch: true
        isActive: true
        isCompliant: false
        routingExpression: _sourcecategory=*/Apache
        analyticsTier: continuous
        createdAt: 2018-10-16T09:10:00Z
        indexType: Partition
        createdBy: 0000000006743FDD
        name: apache
        totalBytes: 42
        dataForwardingId: dataForwardingId
        modifiedBy: 0000000006743FE8
        id: "1"
        retentionPeriod: 365
      type: object
    CreatePartitionDefinition:
      example:
        routingExpression: _sourcecategory=*/Apache
        analyticsTier: continuous
        name: apache
        isIncludedInDefaultSearch: true
        isCompliant: false
        retentionPeriod: 365
      properties:
        name:
          description: The name of the partition.
          example: apache
          maxLength: 255
          type: string
        routingExpression:
          description: The query that defines the data to be included in the partition.
          example: _sourcecategory=*/Apache
          maxLength: 16384
          minLength: 1
          type: string
        analyticsTier:
          description: |-
            The Data Tier where the data in the partition will reside. Possible values are:
                          1. `continuous`
                          2. `frequent`
                          3. `infrequent`
            Note: The "infrequent" and "frequent" tiers are only available to Cloud Flex Credits Enterprise Suite accounts.
          example: continuous
          type: string
          x-limited-description: The Data Tier where the data in the partition will
            reside. You can leave it empty or send `flex`. It is the only value applicable
            on your account.
          x-limited-example: flex
        retentionPeriod:
          default: -1
          description: "The number of days to retain data in the partition, or -1\
            \ to use the default value for your account.  Only relevant if your account\
            \ has variable retention enabled."
          example: 365
          type: integer
        isCompliant:
          default: false
          description: "Whether the partition is compliant or not. Mark a partition\
            \ as compliant if it contains data used for compliance or audit purpose.\
            \ Retention for a compliant partition can only be increased and cannot\
            \ be reduced after the partition is marked compliant. A partition once\
            \ marked compliant, cannot be marked non-compliant later."
          example: false
          type: boolean
        isIncludedInDefaultSearch:
          description: "Indicates whether the partition is included in the default\
            \ search scope. When executing a  query such as \"error | count,\" certain\
            \ partitions are automatically part of the search scope.  However, for\
            \ specific partitions, the user must explicitly mention the partition\
            \ using the _index  term, as in \"_index=webApp error | count\". This\
            \ property governs the default inclusion of the  partition in the search\
            \ scope. Configuring this property is exclusively permitted for flex partitions."
          example: true
          type: boolean
      required:
      - name
      - routingExpression
      type: object
    ViewRetentionProperties:
      properties:
        newRetentionPeriod:
          description: "If the retention period is scheduled to be updated in the\
            \ future (i.e., if retention period is previously reduced with value of\
            \ reduceRetentionPeriodImmediately as false), this property gives the\
            \ future value of retention period while retentionPeriod gives the current\
            \ value. retentionPeriod will take up the value of newRetentionPeriod\
            \ after the scheduled time."
          example: 300
          format: int32
          type: integer
        retentionEffectiveAt:
          description: When the newRetentionPeriod will become effective in UTC format.
          format: date-time
          type: string
      type: object
    ListPartitionsInfoResponse:
      properties:
        data:
          description: List of partitions information
          items:
            $ref: '#/components/schemas/PartitionInfo'
          type: array
        next:
          description: Next continuation token.
          example: "1"
          type: string
      required:
      - data
      type: object
    PartitionInfo:
      properties:
        name:
          description: The name of the partition.
          example: apache
          maxLength: 255
          type: string
        analyticsTier:
          description: |-
            The Data Tier where the data in the partition will reside. Possible values are:
                          1. `continuous`
                          2. `frequent`
                          3. `infrequent`
            Note: The "infrequent" and "frequent" tiers are only available to Cloud Flex Credits Enterprise Suite accounts.
          example: continuous
          type: string
          x-limited-description: The Data Tier where the data in the partition will
            reside. `flex` is the default value.
          x-limited-example: flex
        dataFilterGroup:
          description: |-
            The Data Filter Group to which this parition belongs to. Possible values are :
                          1. `LOGS`
                          2. `SECURITY`
                          3. `AUDIT`
          example: LOGS
          type: string
      required:
      - name
      type: object
    UpdatePartitionDefinition:
      example:
        reduceRetentionPeriodImmediately: false
        routingExpression: _sourcecategory=*/Apache
        isIncludedInDefaultSearch: true
        isCompliant: false
        retentionPeriod: 365
      properties:
        retentionPeriod:
          description: "The number of days to retain data in the partition, or -1\
            \ to use the default value for your account. Only relevant if your account\
            \ has variable retention enabled."
          example: 365
          type: integer
        reduceRetentionPeriodImmediately:
          default: false
          description: "This is required if the newly specified `retentionPeriod`\
            \ is less than the existing retention period.  In such a situation, a\
            \ value of `true` says that data between the existing retention period\
            \ and the new  retention period should be deleted immediately; if `false`,\
            \ such data will be deleted after seven days.  This property is optional\
            \ and ignored if the specified `retentionPeriod` is greater than or equal\
            \ to the  current retention period."
          type: boolean
        isCompliant:
          default: false
          description: "Whether to mark a partition as compliant. Mark a partition\
            \ as compliant if it contains data used for compliance or audit purpose.\
            \ Retention for a compliant partition can only be increased and cannot\
            \ be reduced after the partition marked as compliant. A partition once\
            \ marked compliant, cannot be marked non-compliant later."
          example: false
          type: boolean
        isIncludedInDefaultSearch:
          description: "Indicates whether the partition is included in the default\
            \ search scope. When executing a  query such as \"error | count,\" certain\
            \ partitions are automatically part of the search scope.  However, for\
            \ specific partitions, the user must explicitly mention the partition\
            \ using the _index  term, as in \"_index=webApp error | count\". This\
            \ property governs the default inclusion of the  partition in the search\
            \ scope. Configuring this property is exclusively permitted for flex partitions."
          type: boolean
        routingExpression:
          description: The query that defines the data to be included in the partition.
          example: _sourcecategory=*/Apache
          maxLength: 16384
          minLength: 1
          type: string
      type: object
    PartitionsResponse:
      properties:
        data:
          description: Array of partitions.
          items:
            $ref: '#/components/schemas/Partition'
          type: array
      required:
      - data
      type: object
    PartitionsQuotaUsage:
      example:
        quota: 200
        remaining: 121
      properties:
        quota:
          description: Maximum number of Partitions allowed.
          example: 200
          format: int32
          type: integer
        remaining:
          description: Remaining number of Partitions allowed.
          example: 121
          format: int32
          type: integer
      required:
      - quota
      - remaining
      type: object
    GetDataForwardingDestinations:
      example:
        data:
        - accessKeyId: accessKeyId
          bucketName: df-bucket
          modifiedAt: 2018-10-16T09:10:00Z
          description: description
          enabled: true
          invalidatedBySystem: true
          secretAccessKey: secretAccessKey
          createdAt: 2018-10-16T09:10:00Z
          encrypted: true
          createdBy: 0000000006743FDD
          roleArn: roleArn
          destinationName: df-destination
          modifiedBy: 0000000006743FE8
          id: "1"
          region: us-east-1
          authenticationMode: RoleBased
        - accessKeyId: accessKeyId
          bucketName: df-bucket
          modifiedAt: 2018-10-16T09:10:00Z
          description: description
          enabled: true
          invalidatedBySystem: true
          secretAccessKey: secretAccessKey
          createdAt: 2018-10-16T09:10:00Z
          encrypted: true
          createdBy: 0000000006743FDD
          roleArn: roleArn
          destinationName: df-destination
          modifiedBy: 0000000006743FE8
          id: "1"
          region: us-east-1
          authenticationMode: RoleBased
        nextToken: VEZuRU4veXF2UWFCUURYSDNQUzJxWlpRRUsvTlBieXA
      properties:
        nextToken:
          description: Next continuation token.
          example: VEZuRU4veXF2UWFCUURYSDNQUzJxWlpRRUsvTlBieXA
          type: string
        data:
          description: List of data forwarding destinations.
          items:
            $ref: '#/components/schemas/BucketDefinition'
          type: array
      type: object
    BucketDefinition:
      allOf:
      - $ref: '#/components/schemas/CreateBucketDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: The unique identifier of the data forwarding destination.
            example: "1"
            type: string
          invalidatedBySystem:
            description: True if invalidated by the system.
            type: boolean
        required:
        - bucketName
        - destinationName
        - id
      example:
        accessKeyId: accessKeyId
        bucketName: df-bucket
        modifiedAt: 2018-10-16T09:10:00Z
        description: description
        enabled: true
        invalidatedBySystem: true
        secretAccessKey: secretAccessKey
        createdAt: 2018-10-16T09:10:00Z
        encrypted: true
        createdBy: 0000000006743FDD
        roleArn: roleArn
        destinationName: df-destination
        modifiedBy: 0000000006743FE8
        id: "1"
        region: us-east-1
        authenticationMode: RoleBased
      type: object
    CreateBucketDefinition:
      allOf:
      - $ref: '#/components/schemas/UpdateBucketDefinition'
      - $ref: '#/components/schemas/CreateBucketDefinitionItems'
      example:
        accessKeyId: accessKeyId
        secretAccessKey: secretAccessKey
        bucketName: df-bucket
        encrypted: true
        roleArn: roleArn
        destinationName: df-destination
        description: description
        region: us-east-1
        authenticationMode: RoleBased
        enabled: true
      type: object
    UpdateBucketDefinition:
      example:
        accessKeyId: accessKeyId
        secretAccessKey: secretAccessKey
        encrypted: true
        roleArn: roleArn
        destinationName: df-destination
        description: description
        region: us-east-1
        authenticationMode: RoleBased
        enabled: true
      properties:
        destinationName:
          description: Name of the S3 data forwarding destination.
          example: df-destination
          type: string
        description:
          description: Description of the S3 data forwarding destination.
          type: string
        authenticationMode:
          description: "AWS IAM authentication method used for access. Possible values\
            \ are: 1. `AccessKey` 2. `RoleBased`"
          example: RoleBased
          type: string
        accessKeyId:
          description: The AWS Access ID to access the S3 bucket.
          example: accessKeyId
          type: string
        secretAccessKey:
          description: The AWS Secret Key to access the S3 bucket.
          example: secretAccessKey
          type: string
        roleArn:
          description: The AWS Role ARN to access the S3 bucket.
          example: roleArn
          type: string
        region:
          description: The region where the S3 bucket is located.
          example: us-east-1
          type: string
        encrypted:
          description: Enable S3 server-side encryption.
          type: boolean
        enabled:
          description: True if the destination is Active.
          example: true
          type: boolean
      required:
      - authenticationMode
      type: object
    CreateBucketDefinitionItems:
      properties:
        bucketName:
          description: The name of the Amazon S3 bucket.
          example: df-bucket
          pattern: "(?!(^xn--|-s3alias$))^[a-z0-9][a-z0-9-.]{1,61}[a-z0-9]$"
          type: string
          x-pattern-message: Must be a valid AWS S3 Bucket name.
      required:
      - authenticationMode
      - bucketName
      - destinationName
      type: object
    GetRulesAndBucketsResult:
      example:
        data:
        - bucket: null
          createdAt: 2018-10-16T09:10:00Z
          payloadSchema: builtInFields
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          format: csv
          indexId: "1"
          modifiedBy: 0000000006743FE8
          id: "1"
          destinationId: "1"
          enabled: true
          fileFormat: "{index}_{day}_{hour}_{minute}_{second}"
        - bucket: null
          createdAt: 2018-10-16T09:10:00Z
          payloadSchema: builtInFields
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          format: csv
          indexId: "1"
          modifiedBy: 0000000006743FE8
          id: "1"
          destinationId: "1"
          enabled: true
          fileFormat: "{index}_{day}_{hour}_{minute}_{second}"
        nextToken: VEZuRU4veXF2UWFCUURYSDNQUzJxWlpRRUsvTlBieXA
      properties:
        data:
          description: List of S3 data forwarding rules.
          items:
            $ref: '#/components/schemas/RuleAndBucketDetail'
          type: array
        nextToken:
          description: Next continuation token.
          example: VEZuRU4veXF2UWFCUURYSDNQUzJxWlpRRUsvTlBieXA
          type: string
      type: object
    RuleAndBucketDetail:
      allOf:
      - $ref: '#/components/schemas/DataForwardingRule'
      - properties:
          bucket:
            $ref: '#/components/schemas/logs-data-forwarding-rule-management'
        type: object
      example:
        bucket: null
        createdAt: 2018-10-16T09:10:00Z
        payloadSchema: builtInFields
        createdBy: 0000000006743FDD
        modifiedAt: 2018-10-16T09:10:00Z
        format: csv
        indexId: "1"
        modifiedBy: 0000000006743FE8
        id: "1"
        destinationId: "1"
        enabled: true
        fileFormat: "{index}_{day}_{hour}_{minute}_{second}"
    DataForwardingRule:
      allOf:
      - $ref: '#/components/schemas/CreateDataForwardingRule'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: The unique identifier of the data forwarding rule.
            example: "1"
            type: string
        type: object
      example:
        createdAt: 2018-10-16T09:10:00Z
        payloadSchema: builtInFields
        createdBy: 0000000006743FDD
        modifiedAt: 2018-10-16T09:10:00Z
        format: csv
        indexId: "1"
        modifiedBy: 0000000006743FE8
        id: "1"
        destinationId: "1"
        enabled: true
        fileFormat: "{index}_{day}_{hour}_{minute}_{second}"
    CreateDataForwardingRule:
      example:
        payloadSchema: builtInFields
        format: csv
        indexId: "1"
        destinationId: "1"
        enabled: true
        fileFormat: "{index}_{day}_{hour}_{minute}_{second}"
      properties:
        indexId:
          description: The `id` of the Partition or Scheduled View the rule applies
            to.
          example: "1"
          type: string
        destinationId:
          description: The data forwarding destination id.
          example: "1"
          type: string
        enabled:
          description: True when the data forwarding rule is enabled.
          example: true
          type: boolean
        fileFormat:
          description: Specify the path prefix to a directory in the S3 bucket and
            how to format the file name.
          example: "{index}_{day}_{hour}_{minute}_{second}"
          type: string
        payloadSchema:
          description: "Schema for the payload. Default value of the payload schema\
            \ is \"allFields\" for scheduled view, and \"builtInFields\" for partition.\
            \ \"raw\" payloadSchema should be used in conjunction with \"text\" format\
            \ and vice-versa."
          example: builtInFields
          pattern: ^(builtInFields|allFields|raw)$
          type: string
          x-pattern-message: "should be one of the following: 'builtInFields', 'allFields'\
            \ or 'raw'"
        format:
          description: Format of the payload. Default format will be "csv". "text"
            format should be used in conjunction with "raw" payloadSchema and vice-versa.
          example: csv
          pattern: ^(csv|json|text)$
          type: string
          x-pattern-message: "should be one of the following: 'csv', 'json' or 'text'"
      required:
      - destinationId
      - indexId
      type: object
    UpdateDataForwardingRule:
      example:
        payloadSchema: builtInFields
        format: csv
        destinationId: "1"
        enabled: true
        fileFormat: "{index}_{day}_{hour}_{minute}_{second}"
      properties:
        destinationId:
          description: Data forwarding destination id.
          example: "1"
          type: string
        enabled:
          description: True when the data forwarding rule is enabled.
          example: true
          type: boolean
        fileFormat:
          description: Specify the path prefix to a directory in the S3 bucket and
            how to format the file name.
          example: "{index}_{day}_{hour}_{minute}_{second}"
          type: string
        payloadSchema:
          description: "Schema for the payload. Default value of the payload schema\
            \ is \"allFields\" for scheduled view, and \"builtInFields\" for partition.\
            \ \"raw\" payloadSchema should be used in conjunction with \"text\" format\
            \ and vice-versa."
          example: builtInFields
          pattern: ^(builtInFields|allFields|raw)$
          type: string
          x-pattern-message: "should be one of the following: 'builtInFields', 'allFields'\
            \ or 'raw'"
        format:
          description: Format of the payload. Default format will be "csv". "text"
            format should be used in conjunction with "raw" payloadSchema and vice-versa.
          example: csv
          pattern: ^(csv|json|text)$
          type: string
          x-pattern-message: "should be one of the following: 'csv', 'json' or 'text'"
      type: object
    PaginatedLogSearches:
      example:
        logSearches:
        - runByReceiptTime: false
          parsingMode: AutoParse
          modifiedAt: 2018-10-16T09:10:00Z
          description: Long and detailed description
          queryString: "error {{sourceCategory}}| count by _sourceCategory"
          parentId: 0000000000007D2B
          schedule:
            cronExpression: 0 0/15 * * * ? *
            parseableTimeRange:
              type: BeginBoundedTimeRange
              from:
                type: RelativeTimeRangeBoundary
                relativeTime: -15m
            notification:
              taskType: taskType
            muteErrorEmails: true
            scheduleType: scheduleType
            displayableTimeRange: -2h
            timeZone: timeZone
            threshold:
              count: 0
              thresholdType: thresholdType
              operator: operator
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          createdAt: 2018-10-16T09:10:00Z
          queryParameters:
          - dataType: STRING
            name: sourceCategory
            description: source category for the string
            value: apache
          - dataType: STRING
            name: sourceCategory
            description: source category for the string
            value: apache
          createdBy: 0000000006743FDD
          name: Short title
          modifiedBy: 0000000006743FE8
          id: 000000000000001A
          properties: "{ \"key\": \"value\" }"
          timeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
        - runByReceiptTime: false
          parsingMode: AutoParse
          modifiedAt: 2018-10-16T09:10:00Z
          description: Long and detailed description
          queryString: "error {{sourceCategory}}| count by _sourceCategory"
          parentId: 0000000000007D2B
          schedule:
            cronExpression: 0 0/15 * * * ? *
            parseableTimeRange:
              type: BeginBoundedTimeRange
              from:
                type: RelativeTimeRangeBoundary
                relativeTime: -15m
            notification:
              taskType: taskType
            muteErrorEmails: true
            scheduleType: scheduleType
            displayableTimeRange: -2h
            timeZone: timeZone
            threshold:
              count: 0
              thresholdType: thresholdType
              operator: operator
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          createdAt: 2018-10-16T09:10:00Z
          queryParameters:
          - dataType: STRING
            name: sourceCategory
            description: source category for the string
            value: apache
          - dataType: STRING
            name: sourceCategory
            description: source category for the string
            value: apache
          createdBy: 0000000006743FDD
          name: Short title
          modifiedBy: 0000000006743FE8
          id: 000000000000001A
          properties: "{ \"key\": \"value\" }"
          timeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
        warnings:
        - "Invalid saved search: <saved_search_name>. Please validate your saved search."
        - "Invalid saved search: <saved_search_name>. Please validate your saved search."
        token: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
      properties:
        logSearches:
          description: List of log searches.
          items:
            $ref: '#/components/schemas/LogSearch'
          type: array
        warnings:
          description: List of warning messages for invalid log search definitions.
          items:
            example: "Invalid saved search: <saved_search_name>. Please validate your\
              \ saved search."
            type: string
          type: array
        token:
          description: Next continuation token. `token` is set to null when no more
            pages are left.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - logSearches
      type: object
    LogSearch:
      allOf:
      - $ref: '#/components/schemas/LogSearchDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Identifier of the saved log search.
            example: 000000000000001A
            type: string
          parentId:
            description: "Identifier of the parent element in the content library,\
              \ such as folder."
            example: 0000000000007D2B
            type: string
        required:
        - id
        type: object
      example:
        runByReceiptTime: false
        parsingMode: AutoParse
        modifiedAt: 2018-10-16T09:10:00Z
        description: Long and detailed description
        queryString: "error {{sourceCategory}}| count by _sourceCategory"
        parentId: 0000000000007D2B
        schedule:
          cronExpression: 0 0/15 * * * ? *
          parseableTimeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
          notification:
            taskType: taskType
          muteErrorEmails: true
          scheduleType: scheduleType
          displayableTimeRange: -2h
          timeZone: timeZone
          threshold:
            count: 0
            thresholdType: thresholdType
            operator: operator
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        createdAt: 2018-10-16T09:10:00Z
        queryParameters:
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        createdBy: 0000000006743FDD
        name: Short title
        modifiedBy: 0000000006743FE8
        id: 000000000000001A
        properties: "{ \"key\": \"value\" }"
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      x-tf-generated-properties: "id,parentId,name,description,schedule,queryString,timeRange,runByReceiptTime,queryParameters,parsingMode"
      x-tf-resource-name: LogSearch
    LogSearchDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBase'
      - properties:
          name:
            description: Name of the item in the content library.
            example: Short title
            maxLength: 255
            minLength: 1
            pattern: "^[a-zA-Z0-9 +%-@.,_()\\\\]+$"
            type: string
          description:
            description: Item description in the content library.
            example: Long and detailed description
            maxLength: 255
            type: string
          schedule:
            $ref: '#/components/schemas/LogSearchScheduleSyncDefinition'
          properties:
            description: |
              Aggregate Results Settings and View configurations, Legends settings, and different visualisation settings overrides. Leave this field empty to use the defaults.
              This property contains JSON object encoded as a string.
            example: "{ \"key\": \"value\" }"
            maxLength: 65536
            type: string
        required:
        - name
      example:
        schedule:
          cronExpression: 0 0/15 * * * ? *
          parseableTimeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
          notification:
            taskType: taskType
          muteErrorEmails: true
          scheduleType: scheduleType
          displayableTimeRange: -2h
          timeZone: timeZone
          threshold:
            count: 0
            thresholdType: thresholdType
            operator: operator
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        runByReceiptTime: false
        queryParameters:
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        parsingMode: AutoParse
        name: Short title
        description: Long and detailed description
        queryString: "error {{sourceCategory}}| count by _sourceCategory"
        properties: "{ \"key\": \"value\" }"
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      type: object
    LogSearchQueryTimeRangeBase:
      allOf:
      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBaseExceptParsingMode'
      - $ref: '#/components/schemas/LogSearchQueryParsingMode'
      description: Definition of the saved log search with query and timerange.
    LogSearchQueryTimeRangeBaseExceptParsingMode:
      description: Definition of the saved log search with query and timerange.
      properties:
        queryString:
          description: Query to perform.
          example: "error {{sourceCategory}}| count by _sourceCategory"
          maxLength: 15000
          type: string
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        runByReceiptTime:
          default: false
          description: This has the value `true` if the search is to be run by receipt
            time and `false` if it is to be run by message time.
          example: false
          type: boolean
        queryParameters:
          description: "Values for search template used in the search query. Learn\
            \ more about the search templates here : https://help.sumologic.com/docs/search/get-started-with-search/build-search/search-templates/"
          items:
            $ref: '#/components/schemas/LogSearchQueryParameterSyncDefinitionBase'
          maxLength: 50
          type: array
      required:
      - queryString
      - timeRange
      type: object
    LogSearchQueryParameterSyncDefinitionBase:
      example:
        dataType: STRING
        name: sourceCategory
        description: source category for the string
        value: apache
      properties:
        name:
          description: The name of the parameter.
          example: sourceCategory
          maxLength: 50
          pattern: "^[a-zA-Z0-9_]+$"
          type: string
          x-pattern-message: Name must be between 1 and 50 Characters. Can only consist
            alphanumeric and underscore characters.
        description:
          description: A description of the parameter.
          example: source category for the string
          maxLength: 256
          pattern: "^[a-zA-Z0-9@ \\-_\\.]+$"
          type: string
          x-pattern-message: "Description must be between 1 and 256 Characters. Can\
            \ only consist alphanumeric, @, underscore and dash characters."
        dataType:
          description: |-
            The data type of the parameter. Supported values are:
              1. `NUMBER`
              2. `STRING`
              3. `ANY`
              4. `KEYWORD`
          example: STRING
          pattern: ^(NUMBER|STRING|ANY|KEYWORD)$
          type: string
        value:
          description: A value for the parameter. Should be compatible with the type
            set in dataType field.
          example: apache
          maxLength: 256
          type: string
      required:
      - dataType
      - name
      - value
      type: object
    LogSearchQueryParsingMode:
      description: Definition of log search parsing mode
      properties:
        parsingMode:
          default: Manual
          description: |-
            Define the parsing mode to scan the JSON format log messages. Possible values are:
              1. `AutoParse`
              2. `Manual`
            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
          example: AutoParse
          pattern: ^(AutoParse|Manual)$
          type: string
      type: object
    SaveLogSearchRequest:
      allOf:
      - $ref: '#/components/schemas/LogSearchDefinition'
      - properties:
          parentId:
            description: Identifier of a folder where to save the log search.
            example: 000000000000001A
            type: string
        required:
        - parentId
      description: The definition of the log search to save in the content library.
      example:
        schedule:
          cronExpression: 0 0/15 * * * ? *
          parseableTimeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
          notification:
            taskType: taskType
          muteErrorEmails: true
          scheduleType: scheduleType
          displayableTimeRange: -2h
          timeZone: timeZone
          threshold:
            count: 0
            thresholdType: thresholdType
            operator: operator
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        runByReceiptTime: false
        queryParameters:
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        parsingMode: AutoParse
        name: Short title
        description: Long and detailed description
        queryString: "error {{sourceCategory}}| count by _sourceCategory"
        properties: "{ \"key\": \"value\" }"
        parentId: 000000000000001A
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      type: object
    ListExtractionRulesResponse:
      example:
        next: next
        data:
        - createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          scope: _sourceHost=127.0.0.1
          fieldNames:
          - fieldNames
          - fieldNames
          name: ExtractionRule123
          modifiedBy: 0000000006743FE8
          id: id
          parseExpression: csv _raw extract 1 as f1
          enabled: true
        - createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          scope: _sourceHost=127.0.0.1
          fieldNames:
          - fieldNames
          - fieldNames
          name: ExtractionRule123
          modifiedBy: 0000000006743FE8
          id: id
          parseExpression: csv _raw extract 1 as f1
          enabled: true
      properties:
        data:
          description: List of field extraction rules.
          items:
            $ref: '#/components/schemas/ExtractionRule'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    ExtractionRule:
      allOf:
      - $ref: '#/components/schemas/ExtractionRuleDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Unique identifier for the field extraction rule.
            type: string
          fieldNames:
            description: List of extracted fields from "parseExpression".
            items:
              type: string
            type: array
        required:
        - id
      example:
        createdAt: 2018-10-16T09:10:00Z
        createdBy: 0000000006743FDD
        modifiedAt: 2018-10-16T09:10:00Z
        scope: _sourceHost=127.0.0.1
        fieldNames:
        - fieldNames
        - fieldNames
        name: ExtractionRule123
        modifiedBy: 0000000006743FE8
        id: id
        parseExpression: csv _raw extract 1 as f1
        enabled: true
      type: object
      x-tf-generated-properties: "id,name,scope,parseExpression,enabled"
      x-tf-resource-name: ExtractionRule
    ExtractionRuleDefinition:
      allOf:
      - $ref: '#/components/schemas/BaseExtractionRuleDefinition'
      - properties:
          enabled:
            default: true
            description: Is the field extraction rule enabled.
            type: boolean
        type: object
      example:
        scope: _sourceHost=127.0.0.1
        name: ExtractionRule123
        parseExpression: csv _raw extract 1 as f1
        enabled: true
    BaseExtractionRuleDefinition:
      properties:
        name:
          description: Name of the field extraction rule. Use a name that makes it
            easy to identify the rule.
          example: ExtractionRule123
          maxLength: 256
          minLength: 1
          type: string
        scope:
          description: "Scope of the field extraction rule. This could be a sourceCategory,\
            \ sourceHost, or any other metadata that describes the data you want to\
            \ extract from. Think of the Scope as the first portion of an ad hoc search,\
            \ before the first pipe ( | ). You'll use the Scope to run a search against\
            \ the rule."
          example: _sourceHost=127.0.0.1
          maxLength: 2048
          minLength: 0
          type: string
        parseExpression:
          description: Describes the fields to be parsed.
          example: csv _raw extract 1 as f1
          maxLength: 16384
          type: string
      required:
      - name
      - parseExpression
      - scope
      type: object
    UpdateExtractionRuleDefinition:
      allOf:
      - $ref: '#/components/schemas/BaseExtractionRuleDefinition'
      - properties:
          enabled:
            description: Is the field extraction rule enabled.
            type: boolean
        required:
        - enabled
        type: object
      example:
        scope: _sourceHost=127.0.0.1
        name: ExtractionRule123
        parseExpression: csv _raw extract 1 as f1
        enabled: true
    ListDynamicRulesResponse:
      example:
        next: 0000000001C51FF7
        data:
        - createdAt: createdAt
          createdBy: createdBy
          modifiedAt: modifiedAt
          scope: _sourceHost=127.0.0.1
          name: DynamicParsingRule123
          modifiedBy: modifiedBy
          id: 0000000001C41EE4
          enabled: false
          isSystemRule: false
        - createdAt: createdAt
          createdBy: createdBy
          modifiedAt: modifiedAt
          scope: _sourceHost=127.0.0.1
          name: DynamicParsingRule123
          modifiedBy: modifiedBy
          id: 0000000001C41EE4
          enabled: false
          isSystemRule: false
      properties:
        data:
          description: List of dynamic parsing rules.
          items:
            $ref: '#/components/schemas/DynamicRule'
          type: array
        next:
          description: Next continuation token.
          example: 0000000001C51FF7
          type: string
      required:
      - data
      type: object
    DynamicRule:
      allOf:
      - $ref: '#/components/schemas/DynamicRuleDefinition'
      - $ref: '#/components/schemas/Metadata'
      - properties:
          id:
            description: Unique identifier for the dynamic parsing rule.
            example: 0000000001C41EE4
            type: string
          isSystemRule:
            description: "Whether the rule has been defined by the system, rather\
              \ than by a user."
            example: false
            type: boolean
        required:
        - id
        - isSystemRule
      example:
        createdAt: createdAt
        createdBy: createdBy
        modifiedAt: modifiedAt
        scope: _sourceHost=127.0.0.1
        name: DynamicParsingRule123
        modifiedBy: modifiedBy
        id: 0000000001C41EE4
        enabled: false
        isSystemRule: false
      type: object
    DynamicRuleDefinition:
      example:
        scope: _sourceHost=127.0.0.1
        name: DynamicParsingRule123
        enabled: false
      properties:
        name:
          description: Name of the dynamic parsing rule. Use a name that makes it
            easy to identify the rule.
          example: DynamicParsingRule123
          maxLength: 256
          minLength: 1
          type: string
        scope:
          description: "Scope of the dynamic parsing rule. This could be a sourceCategory,\
            \ sourceHost, or any other metadata that describes the data you want to\
            \ extract from. Think of the Scope as the first portion of an ad hoc search,\
            \ before the first pipe ( | ). You'll use the Scope to run a search against\
            \ the rule."
          example: _sourceHost=127.0.0.1
          maxLength: 2048
          minLength: 1
          type: string
        enabled:
          default: true
          description: Is the dynamic parsing rule enabled.
          example: false
          type: boolean
      required:
      - enabled
      - name
      - scope
      type: object
    ListCustomFieldsResponse:
      example:
        data:
        - fieldName: hostIP
          dataType: String
          state: Enabled
          fieldId: 00000000031D02DA
        - fieldName: hostIP
          dataType: String
          state: Enabled
          fieldId: 00000000031D02DA
      properties:
        data:
          description: List of custom fields.
          items:
            $ref: '#/components/schemas/CustomField'
          type: array
      required:
      - data
      type: object
    CustomField:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      - properties:
          fieldId:
            description: Identifier of the field.
            example: 00000000031D02DA
            type: string
          dataType:
            description: "Field type. Possible values are `String`, `Long`, `Int`,\
              \ `Double`, and `Boolean`."
            example: String
            pattern: ^(String|Long|Int|Double|Boolean)$
            type: string
            x-pattern-message: "Must be `String`, `Long`, `Int`, `Double` or `Boolean`"
          state:
            description: Indicates whether the field is enabled and its values are
              being accepted. Possible values are `Enabled` and `Disabled`.
            example: Enabled
            pattern: ^(Enabled|Disabled)$
            type: string
            x-pattern-message: Must be `Enabled` or `Disabled`
        required:
        - dataType
        - fieldId
        - state
        type: object
      example:
        fieldName: hostIP
        dataType: String
        state: Enabled
        fieldId: 00000000031D02DA
    FieldName:
      example:
        fieldName: hostIP
      properties:
        fieldName:
          description: Field name.
          example: hostIP
          maxLength: 255
          minLength: 1
          type: string
      required:
      - fieldName
      type: object
    ListDroppedFieldsResponse:
      example:
        data:
        - fieldName: hostIP
        - fieldName: hostIP
      properties:
        data:
          description: List of dropped fields.
          items:
            $ref: '#/components/schemas/DroppedField'
          type: array
      required:
      - data
      type: object
    DroppedField:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      example:
        fieldName: hostIP
    ListBuiltinFieldsResponse:
      example:
        data:
        - fieldName: hostIP
          dataType: String
          state: Enabled
          fieldId: 00000000031D02DA
        - fieldName: hostIP
          dataType: String
          state: Enabled
          fieldId: 00000000031D02DA
      properties:
        data:
          description: List of built-in fields.
          items:
            $ref: '#/components/schemas/BuiltinField'
          type: array
      required:
      - data
      type: object
    BuiltinField:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      - properties:
          fieldId:
            description: Identifier of the field.
            example: 00000000031D02DA
            type: string
          dataType:
            description: "Field type. Possible values are `String`, `Long`, `Int`,\
              \ `Double`, and `Boolean`."
            example: String
            pattern: ^(String|Long|Int|Double|Boolean)$
            type: string
            x-pattern-message: "Must be `String`, `Long`, `Int`, `Double` or `Boolean`"
          state:
            description: Indicates whether the field is enabled and its values are
              being accepted. Possible values are `Enabled` and `Disabled`.
            example: Enabled
            pattern: ^(Enabled|Disabled)$
            type: string
            x-pattern-message: Must be `Enabled` or `Disabled`
        required:
        - dataType
        - fieldId
        - state
        type: object
      example:
        fieldName: hostIP
        dataType: String
        state: Enabled
        fieldId: 00000000031D02DA
    FieldQuotaUsage:
      example:
        quota: 200
        remaining: 121
      properties:
        quota:
          description: Maximum number of fields available.
          example: 200
          format: int32
          type: integer
        remaining:
          description: Current number of fields available.
          example: 121
          format: int32
          type: integer
      required:
      - quota
      - remaining
      type: object
    ListFieldNamesResponse:
      properties:
        data:
          description: List of all built-in and custom field names.
          items:
            $ref: '#/components/schemas/FieldName'
          type: array
      required:
      - data
      type: object
    ListCustomFieldsUsageResponse:
      properties:
        data:
          description: List of fields with their usages.
          items:
            $ref: '#/components/schemas/CustomFieldUsage'
          type: array
      required:
      - data
      type: object
    CustomFieldUsage:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      - properties:
          fieldId:
            description: Identifier of the field.
            example: 00000000031D02DA
            type: string
          dataType:
            description: "Field type. Possible values are `String`, `Long`, `Int`,\
              \ `Double`, `Boolean`."
            example: String
            pattern: ^(String|Long|Int|Double|Boolean)$
            type: string
            x-pattern-message: "Must be `String`, `Long`, `Int`, `Double` or `Boolean`"
          state:
            description: Indicates whether the field is enabled and its values are
              being accepted. Possible values are `Enabled` and `Disabled`.
            example: Enabled
            pattern: ^(Enabled|Disabled)$
            type: string
            x-pattern-message: Must be `Enabled` or `Disabled`
          fieldExtractionRules:
            description: An array of hexadecimal identifiers of field extraction rules
              which use this field.
            items:
              type: string
            type: array
          roles:
            description: An array of hexadecimal identifiers of roles which use this
              field in the search filter.
            items:
              type: string
            type: array
          partitions:
            description: An array of hexadecimal identifiers of partitions which use
              this field in the routing expression.
            items:
              type: string
            type: array
          collectorsCount:
            description: Total number of collectors using this field.
            example: 228
            format: int32
            type: integer
          sourcesCount:
            description: Total number of sources using this field.
            example: 228
            format: int32
            type: integer
        required:
        - dataType
        - fieldId
        - state
        type: object
    ListBuiltinFieldsUsageResponse:
      properties:
        data:
          description: List of fields with their usages.
          items:
            $ref: '#/components/schemas/BuiltinFieldUsage'
          type: array
      required:
      - data
      type: object
    BuiltinFieldUsage:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      - properties:
          fieldId:
            description: Identifier of the field.
            example: 00000000031D02DA
            type: string
          dataType:
            description: "Field type. Possible values are `String`, `Long`, `Int`,\
              \ `Double`, `Boolean`."
            example: String
            pattern: ^(String|Long|Int|Double|Boolean)$
            type: string
            x-pattern-message: "Must be `String`, `Long`, `Int`, `Double` or `Boolean`"
          state:
            description: Indicates whether the field is enabled and its values are
              being accepted. Possible values are `Enabled` and `Disabled`.
            example: Enabled
            pattern: ^(Enabled|Disabled)$
            type: string
            x-pattern-message: Must be `Enabled` or `Disabled`
          fieldExtractionRules:
            description: An array of hexadecimal identifiers of field extraction rules
              which use this field.
            items:
              type: string
            type: array
          roles:
            description: An array of hexadecimal identifiers of roles which use this
              field in the search filter.
            items:
              type: string
            type: array
          partitions:
            description: An array of hexadecimal identifiers of partitions which use
              this field in the routing expression.
            items:
              type: string
            type: array
        required:
        - dataType
        - fieldId
        - state
        type: object
    GetCollectorsUsageResponse:
      properties:
        data:
          description: List of collectors.
          items:
            $ref: '#/components/schemas/Collector'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    Collector:
      properties:
        collectorId:
          description: Identifier of a collector.
          example: 000000000000000F
          type: string
        collectorName:
          description: Name of a collector.
          example: SyslogCollector
          type: string
      required:
      - collectorId
      - collectorName
      type: object
    GetSourcesUsageResponse:
      properties:
        data:
          description: List of sources.
          items:
            $ref: '#/components/schemas/Source'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    Source:
      properties:
        sourceId:
          description: Identifier of a source.
          example: 000000000000000F
          type: string
        sourceName:
          description: Name of a source.
          example: Collector
          type: string
      required:
      - sourceId
      - sourceName
      type: object
    ListIngestBudgetsResponse:
      example:
        next: next
        data:
        - usageStatus: Approaching
          createdByUser:
            firstName: John
            lastName: Doe
            id: 0000000006743FDD
            email: johndoe@acme.com
          capacityBytes: 1000
          timezone: America/Los_Angeles
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          auditThreshold: 85
          description: description
          fieldValue: dev_30_gb
          createdAt: 2000-01-23T04:56:07.000+00:00
          modifiedByUser:
            firstName: John
            lastName: Doe
            id: 0000000006743FDD
            email: johndoe@acme.com
          name: Developer Budget
          numberOfCollectors: 10
          action: stopCollecting
          id: id
          resetTime: "1410"
          usageBytes: 900
        - usageStatus: Approaching
          createdByUser:
            firstName: John
            lastName: Doe
            id: 0000000006743FDD
            email: johndoe@acme.com
          capacityBytes: 1000
          timezone: America/Los_Angeles
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          auditThreshold: 85
          description: description
          fieldValue: dev_30_gb
          createdAt: 2000-01-23T04:56:07.000+00:00
          modifiedByUser:
            firstName: John
            lastName: Doe
            id: 0000000006743FDD
            email: johndoe@acme.com
          name: Developer Budget
          numberOfCollectors: 10
          action: stopCollecting
          id: id
          resetTime: "1410"
          usageBytes: 900
      properties:
        data:
          description: List of ingest budgets.
          items:
            $ref: '#/components/schemas/IngestBudget'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    IngestBudget:
      allOf:
      - $ref: '#/components/schemas/IngestBudgetDefinition'
      - $ref: '#/components/schemas/MetadataWithUserInfo'
      - properties:
          id:
            description: Unique identifier for the ingest budget.
            type: string
          usageBytes:
            description: "Current usage since the last reset, in bytes."
            example: 900
            format: int64
            type: integer
          usageStatus:
            description: "Status of the current usage. Can be `Normal`, `Approaching`,\
              \ `Exceeded`, or `Unknown` (unable to retrieve usage)."
            example: Approaching
            type: string
          numberOfCollectors:
            description: Number of collectors assigned to the ingest budget.
            example: 10
            format: int64
            type: integer
        required:
        - id
      example:
        usageStatus: Approaching
        createdByUser:
          firstName: John
          lastName: Doe
          id: 0000000006743FDD
          email: johndoe@acme.com
        capacityBytes: 1000
        timezone: America/Los_Angeles
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        auditThreshold: 85
        description: description
        fieldValue: dev_30_gb
        createdAt: 2000-01-23T04:56:07.000+00:00
        modifiedByUser:
          firstName: John
          lastName: Doe
          id: 0000000006743FDD
          email: johndoe@acme.com
        name: Developer Budget
        numberOfCollectors: 10
        action: stopCollecting
        id: id
        resetTime: "1410"
        usageBytes: 900
      type: object
    IngestBudgetDefinition:
      example:
        capacityBytes: 1000
        timezone: America/Los_Angeles
        name: Developer Budget
        auditThreshold: 85
        description: description
        action: stopCollecting
        resetTime: "1410"
        fieldValue: dev_30_gb
      properties:
        name:
          description: Display name of the ingest budget.
          example: Developer Budget
          maxLength: 128
          minLength: 1
          type: string
        fieldValue:
          description: Custom field value that is used to assign Collectors to the
            ingest budget.
          example: dev_30_gb
          maxLength: 1024
          minLength: 1
          type: string
        capacityBytes:
          description: "Capacity of the ingest budget, in bytes. It takes a few minutes\
            \ for Collectors to stop collecting when capacity is reached. We recommend\
            \ setting a soft limit that is lower than your needed hard limit."
          example: 1000
          format: int64
          minimum: 0
          type: integer
        timezone:
          description: "Time zone of the reset time for the ingest budget. Follow\
            \ the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          example: America/Los_Angeles
          type: string
        resetTime:
          description: Reset time of the ingest budget in HH:MM format.
          example: "1410"
          maxLength: 5
          minLength: 5
          type: string
        description:
          description: Description of the ingest budget.
          maxLength: 1024
          minLength: 0
          type: string
        action:
          description: |-
            Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:
              * `stopCollecting`
              * `keepCollecting`
          example: stopCollecting
          pattern: ^(keepCollecting|stopCollecting)$
          type: string
          x-pattern-message: must be either `keepCollecting` or `stopCollecting`
        auditThreshold:
          description: The threshold as a percentage of when an ingest budget's capacity
            usage is logged in the Audit Index.
          example: 85
          format: int32
          maximum: 99
          minimum: 1
          type: integer
      required:
      - action
      - capacityBytes
      - fieldValue
      - name
      - resetTime
      - timezone
      type: object
    ListCollectorIdentitiesResponse:
      example:
        next: next
        data:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        data:
          description: List of Collector identities.
          items:
            $ref: '#/components/schemas/CollectorIdentity'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    CollectorIdentity:
      example:
        name: name
        id: id
      properties:
        id:
          description: Unique identifier for the Collector.
          type: string
        name:
          description: The name of the Collector.
          type: string
      required:
      - id
      - name
      type: object
    ListIngestBudgetsResponseV2:
      example:
        next: next
        data:
        - usageStatus: Approaching
          budgetVersion: 2
          capacityBytes: 1000
          timezone: America/Los_Angeles
          modifiedAt: 2018-10-16T09:10:00Z
          auditThreshold: 85
          description: description
          createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006743FDD
          scope: _sourceCategory=*prod*nginx*
          name: Developer Budget
          action: stopCollecting
          modifiedBy: 0000000001243FDD
          id: 0000000003343FDD
          resetTime: "1410"
          usageBytes: 900
        - usageStatus: Approaching
          budgetVersion: 2
          capacityBytes: 1000
          timezone: America/Los_Angeles
          modifiedAt: 2018-10-16T09:10:00Z
          auditThreshold: 85
          description: description
          createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006743FDD
          scope: _sourceCategory=*prod*nginx*
          name: Developer Budget
          action: stopCollecting
          modifiedBy: 0000000001243FDD
          id: 0000000003343FDD
          resetTime: "1410"
          usageBytes: 900
      properties:
        data:
          description: List of ingest budgets.
          items:
            $ref: '#/components/schemas/IngestBudgetV2'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    IngestBudgetV2:
      allOf:
      - $ref: '#/components/schemas/IngestBudgetDefinitionV2'
      - properties:
          id:
            description: Unique identifier for the ingest budget.
            example: 0000000003343FDD
            type: string
          usageBytes:
            description: "Current usage since the last reset, in bytes."
            example: 900
            format: int64
            type: integer
          usageStatus:
            description: "Status of the current usage. Can be `Normal`, `Approaching`,\
              \ `Exceeded`, or `Unknown` (unable to retrieve usage)."
            example: Approaching
            pattern: ^(Normal|Approaching|Exceeded|Unknown)$
            type: string
            x-pattern-message: "must be either `Normal`, `Approaching`, `Exceeded`,\
              \ or `Unknown`"
          createdAt:
            description: The creation timestamp in UTC of the Ingest Budget.
            example: 2018-10-16T09:10:00Z
            format: date-time
            type: string
          createdBy:
            description: The identifier of the user who created the Ingest Budget.
            example: 0000000006743FDD
            type: string
          modifiedAt:
            description: The modified timestamp in UTC of the Ingest Budget.
            example: 2018-10-16T09:10:00Z
            format: date-time
            type: string
          modifiedBy:
            description: The identifier of the user who modified the Ingest Budget.
            example: 0000000001243FDD
            type: string
          budgetVersion:
            description: The version of the Ingest Budget
            example: 2
            format: int32
            type: integer
        required:
        - createdAt
        - createdBy
        - id
        - modifiedAt
        - modifiedBy
        - version
      example:
        usageStatus: Approaching
        budgetVersion: 2
        capacityBytes: 1000
        timezone: America/Los_Angeles
        modifiedAt: 2018-10-16T09:10:00Z
        auditThreshold: 85
        description: description
        createdAt: 2018-10-16T09:10:00Z
        createdBy: 0000000006743FDD
        scope: _sourceCategory=*prod*nginx*
        name: Developer Budget
        action: stopCollecting
        modifiedBy: 0000000001243FDD
        id: 0000000003343FDD
        resetTime: "1410"
        usageBytes: 900
      type: object
    IngestBudgetDefinitionV2:
      example:
        capacityBytes: 1000
        timezone: America/Los_Angeles
        scope: _sourceCategory=*prod*nginx*
        name: Developer Budget
        auditThreshold: 85
        description: description
        action: stopCollecting
        resetTime: "1410"
      properties:
        name:
          description: Display name of the ingest budget.
          example: Developer Budget
          maxLength: 128
          minLength: 1
          type: string
        scope:
          description: "A scope is a constraint that will be used to identify the\
            \ messages on which budget needs to be applied. A scope is consists of\
            \ key and value separated by =. The field must be enabled in the fields\
            \ table. Value supports wildcard. e.g. _sourceCategory=*prod*payment*,\
            \ cluster=kafka. If the scope is defined _sourceCategory=*nginx* in this\
            \ budget will be applied on messages having fields _sourceCategory=prod/nginx,\
            \ _sourceCategory=dev/nginx, or _sourceCategory=dev/nginx/error"
          example: _sourceCategory=*prod*nginx*
          maxLength: 1024
          minLength: 1
          type: string
        capacityBytes:
          description: "Capacity of the ingest budget, in bytes. It takes a few minutes\
            \ for Collectors to stop collecting when capacity is reached. We recommend\
            \ setting a soft limit that is lower than your needed hard limit. The\
            \ capacity bytes unit varies based on the budgetType field. For `dailyVolume`\
            \ budgetType the capacity specified is in bytes/day whereas for `minuteVolume`\
            \ budgetType its bytes/min."
          example: 1000
          format: int64
          minimum: 1
          type: integer
        timezone:
          default: Etc/UTC
          description: "Time zone of the reset time for the ingest budget. Follow\
            \ the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          example: America/Los_Angeles
          type: string
        resetTime:
          default: 00:00
          description: Reset time of the ingest budget in HH:MM format.
          example: "1410"
          maxLength: 5
          minLength: 5
          type: string
        description:
          description: Description of the ingest budget.
          maxLength: 1024
          minLength: 0
          type: string
        action:
          description: |-
            Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:
              * `stopCollecting`
              * `keepCollecting`
          example: stopCollecting
          pattern: ^(keepCollecting|stopCollecting)$
          type: string
          x-pattern-message: must be either `keepCollecting` or `stopCollecting`
        auditThreshold:
          description: The threshold as a percentage of when an ingest budget's capacity
            usage is logged in the Audit Index.
          example: 85
          format: int32
          maximum: 99
          minimum: 1
          type: integer
      required:
      - action
      - capacityBytes
      - name
      - scope
      type: object
    ListUserModelsResponse:
      example:
        next: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        data:
        - lastName: Doe
          modifiedAt: 2018-10-16T09:10:00Z
          isActive: true
          isMfaEnabled: false
          lastLoginTimestamp: 2000-01-23T04:56:07.000+00:00
          firstName: John
          createdAt: 2018-10-16T09:10:00Z
          roleIds:
          - 00000000000001DF
          - 00000000000002D2
          createdBy: 0000000006743FDD
          isLocked: false
          modifiedBy: 0000000006743FE8
          id: 000000000FE20FE2
          email: johndoe@acme.com
        - lastName: Doe
          modifiedAt: 2018-10-16T09:10:00Z
          isActive: true
          isMfaEnabled: false
          lastLoginTimestamp: 2000-01-23T04:56:07.000+00:00
          firstName: John
          createdAt: 2018-10-16T09:10:00Z
          roleIds:
          - 00000000000001DF
          - 00000000000002D2
          createdBy: 0000000006743FDD
          isLocked: false
          modifiedBy: 0000000006743FE8
          id: 000000000FE20FE2
          email: johndoe@acme.com
      properties:
        data:
          description: List of users.
          items:
            $ref: '#/components/schemas/UserModel'
          type: array
        next:
          description: Next continuation token.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - data
      type: object
    UserModel:
      allOf:
      - $ref: '#/components/schemas/CreateUserDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Unique identifier for the user.
            example: 000000000FE20FE2
            type: string
          isActive:
            description: True if the user is active.
            example: true
            type: boolean
          isLocked:
            description: "This has the value `true` if the user's account has been\
              \ locked. If a user tries to log into their account several times and\
              \ fails, his or her account will be locked for security reasons."
            example: false
            type: boolean
          isMfaEnabled:
            description: True if multi factor authentication is enabled for the user.
            example: false
            type: boolean
          lastLoginTimestamp:
            description: Timestamp of the last login for the user in UTC. Will be
              null if the user has never logged in.
            format: date-time
            type: string
        required:
        - id
      example:
        lastName: Doe
        modifiedAt: 2018-10-16T09:10:00Z
        isActive: true
        isMfaEnabled: false
        lastLoginTimestamp: 2000-01-23T04:56:07.000+00:00
        firstName: John
        createdAt: 2018-10-16T09:10:00Z
        roleIds:
        - 00000000000001DF
        - 00000000000002D2
        createdBy: 0000000006743FDD
        isLocked: false
        modifiedBy: 0000000006743FE8
        id: 000000000FE20FE2
        email: johndoe@acme.com
      type: object
    CreateUserDefinition:
      example:
        firstName: John
        lastName: Doe
        roleIds:
        - 00000000000001DF
        - 00000000000002D2
        email: johndoe@acme.com
      properties:
        firstName:
          description: First name of the user.
          example: John
          maxLength: 128
          minLength: 1
          type: string
        lastName:
          description: Last name of the user.
          example: Doe
          maxLength: 128
          minLength: 0
          type: string
        email:
          description: Email address of the user.
          example: johndoe@acme.com
          format: email
          maxLength: 255
          type: string
        roleIds:
          description: List of roleIds associated with the user.
          example:
          - 00000000000001DF
          - 00000000000002D2
          items:
            type: string
          type: array
      required:
      - email
      - firstName
      - lastName
      - roleIds
      type: object
    ListUserId:
      properties:
        data:
          description: List of users.
          items:
            type: string
          type: array
      required:
      - data
      type: object
    UpdateUserDefinition:
      example:
        firstName: John
        lastName: Doe
        roleIds:
        - 00000000000001DF
        - 00000000000002D2
        isActive: true
      properties:
        firstName:
          description: "First name of the user. If the caller has `manageUsersAndRoles`\
            \ capability, this field can be updated for any user. If the caller does\
            \ NOT have `manageUsersAndRoles` capability, then only the calling user's\
            \ firstName can be updated."
          example: John
          maxLength: 128
          minLength: 1
          type: string
        lastName:
          description: "Last name of the user. If the caller has `manageUsersAndRoles`\
            \ capability, this field can be updated for any user. If the caller does\
            \ NOT have `manageUsersAndRoles` capability, then only the calling user's\
            \ lastName can be updated."
          example: Doe
          maxLength: 128
          minLength: 0
          type: string
        isActive:
          description: This has the value `true` if the user is active and `false`
            if they have been deactivated. To modify this field you must have the
            `manageUserAndRoles` capability.
          example: true
          type: boolean
        roleIds:
          description: List of role identifiers associated with the user. To modify
            this field you must have the `manageUserAndRoles` capability.
          example:
          - 00000000000001DF
          - 00000000000002D2
          items:
            type: string
          type: array
      required:
      - firstName
      - lastName
      type: object
    ChangeEmailRequest:
      example:
        email: johndoe@acme.com
      properties:
        email:
          description: New email address of the user.
          example: johndoe@acme.com
          format: email
          maxLength: 255
          type: string
      required:
      - email
      type: object
    DisableMfaRequest:
      example:
        password: password
        email: johndoe@cme.com
      properties:
        email:
          description: Email of user whose mfa is being disabled.
          example: johndoe@cme.com
          format: email
          maxLength: 255
          type: string
        password:
          description: Password of user whose mfa is being disabled.
          type: string
      required:
      - email
      - password
      type: object
    UserInterests:
      properties:
        interests:
          description: Labels of user interests.
          example:
          - Kubernetes
          - AWS
          items:
            type: string
          type: array
      required:
      - interests
      type: object
    ListRoleModelsResponse:
      example:
        next: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        data:
        - createdAt: 2018-10-16T09:10:00Z
          autofillDependencies: true
          capabilities:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          name: DataAdmin
          description: Manage data of the org.
          modifiedBy: 0000000006743FE8
          id: 0000000000E20FE3
          systemDefined: false
          filterPredicate: '!_sourceCategory=billing'
          users:
          - 0000000006743FE0
          - 0000000005FCE0EE
        - createdAt: 2018-10-16T09:10:00Z
          autofillDependencies: true
          capabilities:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          name: DataAdmin
          description: Manage data of the org.
          modifiedBy: 0000000006743FE8
          id: 0000000000E20FE3
          systemDefined: false
          filterPredicate: '!_sourceCategory=billing'
          users:
          - 0000000006743FE0
          - 0000000005FCE0EE
      properties:
        data:
          description: List of roles.
          items:
            $ref: '#/components/schemas/RoleModel'
          type: array
        next:
          description: Next continuation token.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - data
      type: object
    RoleModel:
      allOf:
      - $ref: '#/components/schemas/CreateRoleDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Unique identifier for the role.
            example: 0000000000E20FE3
            type: string
          systemDefined:
            description: Role is system or user defined.
            example: false
            type: boolean
        required:
        - id
      example:
        createdAt: 2018-10-16T09:10:00Z
        autofillDependencies: true
        capabilities:
        - manageContent
        - manageDataVolumeFeed
        - manageFieldExtractionRules
        - manageS3DataForwarding
        createdBy: 0000000006743FDD
        modifiedAt: 2018-10-16T09:10:00Z
        name: DataAdmin
        description: Manage data of the org.
        modifiedBy: 0000000006743FE8
        id: 0000000000E20FE3
        systemDefined: false
        filterPredicate: '!_sourceCategory=billing'
        users:
        - 0000000006743FE0
        - 0000000005FCE0EE
      type: object
      x-tf-generated-properties: "id,name,description,filterPredicate,capabilities"
      x-tf-resource-name: Role
    CreateRoleDefinition:
      example:
        autofillDependencies: true
        capabilities:
        - manageContent
        - manageDataVolumeFeed
        - manageFieldExtractionRules
        - manageS3DataForwarding
        name: DataAdmin
        description: Manage data of the org.
        filterPredicate: '!_sourceCategory=billing'
        users:
        - 0000000006743FE0
        - 0000000005FCE0EE
      properties:
        name:
          description: Name of the role.
          example: DataAdmin
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: Description of the role.
          example: Manage data of the org.
          maxLength: 255
          minLength: 0
          type: string
        filterPredicate:
          description: "A search filter to restrict access to specific logs. The filter\
            \ is silently added to the beginning of each query a user runs. For example,\
            \ using '!_sourceCategory=billing' as a filter predicate will prevent\
            \ users assigned to the role from viewing logs from the source category\
            \ named 'billing'."
          example: '!_sourceCategory=billing'
          type: string
        users:
          description: List of user identifiers to assign the role to.
          example:
          - 0000000006743FE0
          - 0000000005FCE0EE
          items:
            type: string
          type: array
        capabilities:
          description: "List of [capabilities](https://help.sumologic.com/docs/manage/users-roles/roles/role-capabilities/)\
            \ associated with this role. Valid values are\n### Data Management\n \
            \ - viewCollectors\n  - manageCollectors\n  - manageBudgets\n  - manageDataVolumeFeed\n\
            \  - viewFieldExtraction\n  - manageFieldExtractionRules\n  - manageS3DataForwarding\n\
            \  - manageContent\n  - manageApps\n  - dataVolumeIndex\n  - manageConnections\n\
            \  - viewScheduledViews\n  - manageScheduledViews\n  - viewPartitions\n\
            \  - managePartitions\n  - viewFields\n  - manageFields\n  - viewAccountOverview\n\
            \  - manageTokens\n  - downloadSearchResults\n  - manageIndexes\n  - manageDataStreams\n\
            \  - viewParsers\n  - viewDataStreams\n\n### Entity management\n  - manageEntityTypeConfig\n\
            \n### Metrics\n  - metricsTransformation\n  - metricsExtraction\n  - metricsRules\n\
            \n### Security\n  - managePasswordPolicy\n  - ipAllowlisting\n  - ipWhitelisting\n\
            \  - createAccessKeys\n  - manageAccessKeys\n  - manageSupportAccountAccess\n\
            \  - manageAuditDataFeed\n  - manageSaml\n  - shareDashboardOutsideOrg\n\
            \  - manageOrgSettings\n  - changeDataAccessLevel\n\n### Dashboards\n\
            \  - shareDashboardWorld\n  - shareDashboardAllowlist\n  - shareDashboardWhitelist\n\
            \n### UserManagement\n  - manageUsersAndRoles\n\n### Observability\n \
            \ - searchAuditIndex\n  - auditEventIndex\n\n### Cloud SIEM Enterprise\n\
            \  - viewCse\n  - cseViewAutomations\n  - cseManageContextActions\n  -\
            \ cseViewNetworkBlocks\n  - cseManageInsightTags\n  - cseViewRules\n \
            \ - cseViewThreatIntelligence\n  - cseCommentOnInsights\n  - cseViewEntityGroups\n\
            \  - cseManageEntityConfiguration\n  - cseManageNetworkBlocks\n  - cseManageMatchLists\n\
            \  - cseViewCustomInsights\n  - cseManageActions\n  - cseManageAutomations\n\
            \  - cseManageMappings\n  - cseManageThreatIntelligence\n  - cseViewActions\n\
            \  - cseCreateInsights\n  - cseManageTagSchemas\n  - cseInvokeInsights\n\
            \  - cseManageCustomEntityType\n  - cseViewTagSchemas\n  - cseDeleteInsights\n\
            \  - cseManageCustomInsights\n  - cseViewFileAnalysis\n  - cseManageFileAnalysis\n\
            \  - cseManageEntityCriticality\n  - cseViewEntityCriticality\n  - cseViewEntity\n\
            \  - cseManageCustomInsightStatuses\n  - cseViewContextActions\n  - cseViewMappings\n\
            \  - cseViewCustomEntityType\n  - cseManageEntityGroups\n  - cseViewCustomInsightStatuses\n\
            \  - cseViewEnrichments\n  - cseManageInsightSignals\n  - cseManageRules\n\
            \  - cseManageArtifacts\n  - cseViewMatchLists\n  - cseManageInsightPolicy\n\
            \  - cseManageEnrichments\n  - cseViewEntityConfiguration\n  - cseManageEntity\n\
            \  - cseExecuteAutomations\n  - cseManageSuppressedEntities\n  - cseManageInsightStatus\
            \  \n  - cseManageInsightAssignee\n  - cseManageFavoriteFields\n  - cseViewSuppressedEntities\n\
            \n### Alerting\n  - viewMonitorsV2\n  - manageMonitorsV2\n  - viewAlerts\n\
            \  - viewMutingSchedules\n  - manageMutingSchedules\n  - adminMonitorsV2\n\
            \n### SLO\n  - viewSlos\n  - manageSlos\n\n### CloudSoar\n  - cloudSoarPlaybooksAccess\n\
            \  - cloudSoarNotificationConfigure\n  - cloudSoarReportAll\n  - cloudSoarIncidentTriageAccess\n\
            \  - cloudSoarIncidentTaskView\n  - cloudSoarIncidentChangeOwnership\n\
            \  - cloudSoarIncidentNotesEdit\n  - cloudSoarAPIEmailEdit\n  - cloudSoarIncidentTemplatesAccess\n\
            \  - cloudSoarIncidentPlaybooksManage\n  - cloudSoarGeneralConfigure\n\
            \  - cloudSoarEntitiesAccess\n  - cloudSoarEntitiesBulkPhysicalDelete\n\
            \  - cloudSoarIncidentAttachmentsAccess\n  - cloudSoarAppCentralAccess\n\
            \  - cloudSoarBridgeMonitoringAccess\n  - viewCloudSoar\n  - cloudSoarIncidentView\n\
            \  - cloudSoarObservabilityAccess\n  - cloudSoarAPIEmailRead\n  - cloudSoarAppCentralExport\n\
            \  - cloudSoarWidgetsAll\n  - cloudSoarIncidentTaskReassign\n  - cloudSoarIntegrationsAccess\n\
            \  - cloudSoarCustomizationIncidentLabels\n  - cloudSoarAutomationRulesConfigure\n\
            \  - cloudSoarIncidentTaskAccessAll\n  - cloudSoarAuditAndInformationConfigureAuditTrail\n\
            \  - cloudSoarIncidentTriageEdit\n  - cloudSoarIncidentEdit\n  - cloudSoarNotificationTriage\n\
            \  - cloudSoarIncidentTriageBulkPhysicalDelete\n  - cloudSoarIncidentNotesAccess\n\
            \  - cloudSoarAPIUse\n  - cloudSoarIncidentPlaybooksEdit\n  - cloudSoarDashboardAll\n\
            \  - cloudSoarEntitiesManage\n  - cloudSoarIncidentTemplatesConfigure\n\
            \  - cloudSoarIncidentTriageAccessAll\n  - cloudSoarPlaybooksConfigure\n\
            \  - cloudSoarIncidentAccessAll\n  - cloudSoarCustomizationLogo\n  - cloudSoarIncidentTaskAccess\n\
            \  - cloudSoarIncidentTriageView\n  - cloudSoarIntegrationsConfigure\n\
            \  - cloudSoarIncidentManageInvestigators\n  - cloudSoarIncidentAccess\n\
            \  - cloudSoarAuditAndInformationLicenseInformation\n  - cloudSoarIncidentBulkOperations\n\
            \  - cloudSoarCustomizationFields\n  - cloudSoarIncidentTaskEdit\n  -\
            \ cloudSoarDashboardAccess\n  - cloudSoarIncidentAttachmentsEdit\n  -\
            \ cloudSoarIncidentFoldersEdit\n  - cloudSoarUserManagementGroups\n  -\
            \ cloudSoarIncidentPlaybooksAccess\n  - cloudSoarIncidentWarRoomUse\n\
            \  - cloudSoarReportAccess\n  - cloudSoarAuditAndInformationAuditTrail\n\
            \  - cloudSoarAutomationRulesAccess\n  - cloudSoarIncidentTriageChangeOwnership\n\
            \  - cloudSoarObservabilityManagement"
          example:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          items:
            type: string
          type: array
        autofillDependencies:
          default: true
          description: Set this to true if you want to automatically append all missing
            capability requirements. If set to false an error will be thrown if any
            capabilities are missing their dependencies.
          type: boolean
      required:
      - name
      type: object
    UpdateRoleDefinition:
      example:
        autofillDependencies: true
        capabilities:
        - manageContent
        - manageDataVolumeFeed
        - manageFieldExtractionRules
        - manageS3DataForwarding
        name: DataAdmin
        description: Manage data of the org.
        filterPredicate: '!_sourceCategory=billing'
        users:
        - 0000000006743FE0
        - 0000000005FCE0EE
      properties:
        name:
          description: Name of the role.
          example: DataAdmin
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: Description of the role.
          example: Manage data of the org.
          maxLength: 255
          minLength: 0
          type: string
        filterPredicate:
          description: "A search filter to restrict access to specific logs. The filter\
            \ is silently added to the beginning of each query a user runs. For example,\
            \ using '!_sourceCategory=billing' as a filter predicate will prevent\
            \ users assigned to the role from viewing logs from the source category\
            \ named 'billing'."
          example: '!_sourceCategory=billing'
          type: string
        users:
          description: List of user identifiers to assign the role to.
          example:
          - 0000000006743FE0
          - 0000000005FCE0EE
          items:
            type: string
          type: array
        capabilities:
          description: |-
            List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are
            ### Data Management
              - viewCollectors
              - manageCollectors
              - manageBudgets
              - manageDataVolumeFeed
              - viewFieldExtraction
              - manageFieldExtractionRules
              - manageS3DataForwarding
              - manageContent
              - manageApps
              - dataVolumeIndex
              - manageConnections
              - viewScheduledViews
              - manageScheduledViews
              - viewPartitions
              - managePartitions
              - viewFields
              - manageFields
              - viewAccountOverview
              - manageTokens
              - downloadSearchResults

            ### Entity management
              - manageEntityTypeConfig

            ### Metrics
              - metricsTransformation
              - metricsExtraction
              - metricsRules

            ### Security
              - managePasswordPolicy
              - ipAllowlisting
              - createAccessKeys
              - manageAccessKeys
              - manageSupportAccountAccess
              - manageAuditDataFeed
              - manageSaml
              - shareDashboardOutsideOrg
              - manageOrgSettings
              - changeDataAccessLevel

            ### Dashboards
              - shareDashboardWorld
              - shareDashboardAllowlist

            ### UserManagement
              - manageUsersAndRoles

            ### Observability
              - searchAuditIndex
              - auditEventIndex

            ### Cloud SIEM Enterprise
              - viewCse

            ### Alerting
              - viewMonitorsV2
              - manageMonitorsV2
              - viewAlerts
          example:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          items:
            type: string
          type: array
        autofillDependencies:
          default: true
          description: Set this to true if you want to automatically append all missing
            capability requirements. If set to false an error will be thrown if any
            capabilities are missing their dependencies.
          type: boolean
      required:
      - capabilities
      - description
      - filterPredicate
      - name
      - users
      type: object
    CapabilityMap:
      properties:
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/CapabilityDefinition'
          description: Map of capabilities to their attributes
          maxProperties: 1000
          type: object
      required:
      - capabilities
      type: object
    CapabilityDefinition:
      properties:
        id:
          description: The name of the capability
          example: manageParsers
          type: string
        label:
          description: The UI label for the capability.
          example: Manage Parsers
          type: string
        dependsOn:
          description: Any capabilities that are required for this capability to be
            enabled.
          example:
          - ViewParsers
          - EditParsers
          items:
            type: string
          type: array
        group:
          $ref: '#/components/schemas/CapabilityDefinition_group'
        message:
          description: Warning message that appears when this capability is enabled.
          example: "By enabling this capability, you are allowing any user in this\
            \ role to share a dashboard, including its contents, with ANYONE who has\
            \ the URL. This URL can be shared with users outside of your organization,\
            \ allowing them to view the dashboard and its contents. Are you sure you\
            \ want to enable this permission?"
          type: string
      required:
      - dependsOn
      - group
      - id
      - label
      type: object
    CapabilityList:
      properties:
        data:
          description: List of capabilities
          items:
            $ref: '#/components/schemas/CapabilityDefinition'
          type: array
      required:
      - data
      type: object
    ListRoleModelsResponseV2:
      example:
        next: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        data:
        - autofillDependencies: true
          capabilities:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          logAnalyticsFilter: '!_sourceCategory=collector'
          modifiedAt: 2018-10-16T09:10:00Z
          description: Manage data of the org.
          users:
          - 0000000006743FE0
          - 0000000005FCE0EE
          createdAt: 2018-10-16T09:10:00Z
          auditDataFilter: info
          selectionType: All
          createdBy: 0000000006743FDD
          name: DataAdmin
          modifiedBy: 0000000006743FE8
          securityDataFilter: error
          id: 0000000000E20FE3
          systemDefined: false
          selectedViews:
          - viewName: auditData
          - viewName: auditData
        - autofillDependencies: true
          capabilities:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          logAnalyticsFilter: '!_sourceCategory=collector'
          modifiedAt: 2018-10-16T09:10:00Z
          description: Manage data of the org.
          users:
          - 0000000006743FE0
          - 0000000005FCE0EE
          createdAt: 2018-10-16T09:10:00Z
          auditDataFilter: info
          selectionType: All
          createdBy: 0000000006743FDD
          name: DataAdmin
          modifiedBy: 0000000006743FE8
          securityDataFilter: error
          id: 0000000000E20FE3
          systemDefined: false
          selectedViews:
          - viewName: auditData
          - viewName: auditData
      properties:
        data:
          description: List of roles.
          items:
            $ref: '#/components/schemas/GetRoleDefinitionV2'
          type: array
        next:
          description: Next continuation token.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - data
      type: object
    GetRoleDefinitionV2:
      allOf:
      - $ref: '#/components/schemas/RoleDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Unique identifier for the role.
            example: 0000000000E20FE3
            type: string
          systemDefined:
            description: Role is system or user defined.
            example: false
            type: boolean
        required:
        - id
      example:
        autofillDependencies: true
        capabilities:
        - manageContent
        - manageDataVolumeFeed
        - manageFieldExtractionRules
        - manageS3DataForwarding
        logAnalyticsFilter: '!_sourceCategory=collector'
        modifiedAt: 2018-10-16T09:10:00Z
        description: Manage data of the org.
        users:
        - 0000000006743FE0
        - 0000000005FCE0EE
        createdAt: 2018-10-16T09:10:00Z
        auditDataFilter: info
        selectionType: All
        createdBy: 0000000006743FDD
        name: DataAdmin
        modifiedBy: 0000000006743FE8
        securityDataFilter: error
        id: 0000000000E20FE3
        systemDefined: false
        selectedViews:
        - viewName: auditData
        - viewName: auditData
      type: object
    RoleDefinition:
      properties:
        name:
          description: Name of the role.
          example: DataAdmin
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: Description of the role.
          example: Manage data of the org.
          maxLength: 255
          minLength: 0
          type: string
        logAnalyticsFilter:
          description: A search filter which would be applied on partitions which
            belong to Log Analytics product area.
          example: '!_sourceCategory=collector'
          type: string
        auditDataFilter:
          description: "A search filter which would be applied on partitions which\
            \ belong to Audit Data product area. Help Doc : (https://help.sumologic.com/docs/manage/security/audit-index/)."
          example: info
          type: string
        securityDataFilter:
          description: A search filter which would be applied on partitions which
            belong to Security Data product area.
          example: error
          type: string
        selectionType:
          description: "Describes the Permission Construct for the list of views in\
            \ \"selectedViews\" parameter. \n### Valid Values are : \n  - `All` selectionType\
            \ would allow access to all views in the org.\n  - `Allow` selectionType\
            \ would allow access to specific views mentioned in \"selectedViews\"\
            \ parameter.\n  - `Deny` selectionType would deny access to specific views\
            \ mentioned in \"selectedViews\" parameter."
          example: All
          type: string
        selectedViews:
          description: List of views which with specific view level filters in accordance
            to the selectionType chosen.
          items:
            $ref: '#/components/schemas/GetViewFilterDefinition'
          type: array
        users:
          description: List of user identifiers to assign the role to.
          example:
          - 0000000006743FE0
          - 0000000005FCE0EE
          items:
            type: string
          type: array
        capabilities:
          description: |-
            List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are
            ### Data Management
              - viewCollectors
              - manageCollectors
              - manageBudgets
              - manageDataVolumeFeed
              - viewFieldExtraction
              - manageFieldExtractionRules
              - manageS3DataForwarding
              - manageContent
              - manageApps
              - dataVolumeIndex
              - manageConnections
              - viewScheduledViews
              - manageScheduledViews
              - viewPartitions
              - managePartitions
              - viewFields
              - manageFields
              - viewAccountOverview
              - manageTokens
              - downloadSearchResults

            ### Entity management
              - manageEntityTypeConfig

            ### Metrics
              - metricsTransformation
              - metricsExtraction
              - metricsRules

            ### Security
              - managePasswordPolicy
              - ipAllowlisting
              - createAccessKeys
              - manageAccessKeys
              - manageSupportAccountAccess
              - manageAuditDataFeed
              - manageSaml
              - shareDashboardOutsideOrg
              - manageOrgSettings
              - changeDataAccessLevel

            ### Dashboards
              - shareDashboardWorld
              - shareDashboardAllowlist

            ### UserManagement
              - manageUsersAndRoles

            ### Observability
              - searchAuditIndex
              - auditEventIndex

            ### Cloud SIEM Enterprise
              - viewCse

            ### Alerting
              - viewMonitorsV2
              - manageMonitorsV2
              - viewAlerts
          example:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          items:
            type: string
          type: array
        autofillDependencies:
          default: true
          description: Set this to true if you want to automatically append all missing
            capability requirements. If set to false an error will be thrown if any
            capabilities are missing their dependencies.
          type: boolean
      required:
      - name
      type: object
    GetViewFilterDefinition:
      example:
        viewName: auditData
      properties:
        viewName:
          description: Name of the view. Help Doc:- (https://help.sumologic.com/docs/manage/partitions-data-tiers/)
          example: auditData
          type: string
      required:
      - viewName
      type: object
    RoleModelV2:
      allOf:
      - $ref: '#/components/schemas/CreateRoleDefinitionV2'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Unique identifier for the role.
            example: 0000000000E20FE3
            type: string
          systemDefined:
            description: Role is system or user defined.
            example: false
            type: boolean
        required:
        - id
      example:
        autofillDependencies: true
        capabilities:
        - manageContent
        - manageDataVolumeFeed
        - manageFieldExtractionRules
        - manageS3DataForwarding
        logAnalyticsFilter: '!_sourceCategory=collector'
        modifiedAt: 2018-10-16T09:10:00Z
        description: Manage data of the org.
        users:
        - 0000000006743FE0
        - 0000000005FCE0EE
        createdAt: 2018-10-16T09:10:00Z
        auditDataFilter: info
        selectionType: All
        createdBy: 0000000006743FDD
        name: DataAdmin
        modifiedBy: 0000000006743FE8
        securityDataFilter: error
        id: 0000000000E20FE3
        systemDefined: false
        selectedViews:
        - viewName: auditData
        - viewName: auditData
      type: object
      x-tf-generated-properties: "id,name,description,logAnalyticsFilter,auditDataFilter,securityDataFilter,selectionType,selectedViews,capabilities"
      x-tf-resource-name: RoleV2
    CreateRoleDefinitionV2:
      example:
        auditDataFilter: info
        selectionType: All
        autofillDependencies: true
        capabilities:
        - manageContent
        - manageDataVolumeFeed
        - manageFieldExtractionRules
        - manageS3DataForwarding
        logAnalyticsFilter: '!_sourceCategory=collector'
        name: DataAdmin
        description: Manage data of the org.
        securityDataFilter: error
        selectedViews:
        - viewName: auditData
        - viewName: auditData
        users:
        - 0000000006743FE0
        - 0000000005FCE0EE
      properties:
        name:
          description: Name of the role.
          example: DataAdmin
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: Description of the role.
          example: Manage data of the org.
          maxLength: 255
          minLength: 0
          type: string
        logAnalyticsFilter:
          description: A search filter which would be applied on partitions which
            belong to Log Analytics product area.
          example: '!_sourceCategory=collector'
          type: string
        auditDataFilter:
          description: "A search filter which would be applied on partitions which\
            \ belong to Audit Data product area. Help Doc : (https://help.sumologic.com/docs/manage/security/audit-index/)."
          example: info
          type: string
        securityDataFilter:
          description: A search filter which would be applied on partitions which
            belong to Security Data product area.
          example: error
          type: string
        selectionType:
          description: "Describes the Permission Construct for the list of views in\
            \ \"selectedViews\" parameter. \n### Valid Values are : \n  - `All` selectionType\
            \ would allow access to all views in the org.\n  - `Allow` selectionType\
            \ would allow access to specific views mentioned in \"selectedViews\"\
            \ parameter.\n  - `Deny` selectionType would deny access to specific views\
            \ mentioned in \"selectedViews\" parameter."
          example: All
          type: string
        selectedViews:
          description: List of views which with specific view level filters in accordance
            to the selectionType chosen.
          items:
            $ref: '#/components/schemas/ViewFilterDefinition'
          type: array
        users:
          description: List of user identifiers to assign the role to.
          example:
          - 0000000006743FE0
          - 0000000005FCE0EE
          items:
            type: string
          type: array
        capabilities:
          description: "List of [capabilities](https://help.sumologic.com/docs/manage/users-roles/roles/role-capabilities/)\
            \ associated with this role. Valid values are\n### Data Management\n \
            \ - viewCollectors\n  - manageCollectors\n  - manageBudgets\n  - manageDataVolumeFeed\n\
            \  - viewFieldExtraction\n  - manageFieldExtractionRules\n  - manageS3DataForwarding\n\
            \  - manageContent\n  - manageApps\n  - dataVolumeIndex\n  - manageConnections\n\
            \  - viewScheduledViews\n  - manageScheduledViews\n  - viewPartitions\n\
            \  - managePartitions\n  - viewFields\n  - manageFields\n  - viewAccountOverview\n\
            \  - manageTokens\n  - downloadSearchResults\n  - manageIndexes\n  - manageDataStreams\n\
            \  - viewParsers\n  - viewDataStreams\n\n### Entity management\n  - manageEntityTypeConfig\n\
            \n### Metrics\n  - metricsTransformation\n  - metricsExtraction\n  - metricsRules\n\
            \n### Security\n  - managePasswordPolicy\n  - ipAllowlisting\n  - ipWhitelisting\n\
            \  - createAccessKeys\n  - manageAccessKeys\n  - manageSupportAccountAccess\n\
            \  - manageAuditDataFeed\n  - manageSaml\n  - shareDashboardOutsideOrg\n\
            \  - manageOrgSettings\n  - changeDataAccessLevel\n\n### Dashboards\n\
            \  - shareDashboardWorld\n  - shareDashboardAllowlist\n  - shareDashboardWhitelist\n\
            \n### UserManagement\n  - manageUsersAndRoles\n\n### Observability\n \
            \ - searchAuditIndex\n  - auditEventIndex\n\n### Cloud SIEM Enterprise\n\
            \  - viewCse\n  - cseViewAutomations\n  - cseManageContextActions\n  -\
            \ cseViewNetworkBlocks\n  - cseManageInsightTags\n  - cseViewRules\n \
            \ - cseViewThreatIntelligence\n  - cseCommentOnInsights\n  - cseViewEntityGroups\n\
            \  - cseManageEntityConfiguration\n  - cseManageNetworkBlocks\n  - cseManageMatchLists\n\
            \  - cseViewCustomInsights\n  - cseManageActions\n  - cseManageAutomations\n\
            \  - cseManageMappings\n  - cseManageThreatIntelligence\n  - cseViewActions\n\
            \  - cseCreateInsights\n  - cseManageTagSchemas\n  - cseInvokeInsights\n\
            \  - cseManageCustomEntityType\n  - cseViewTagSchemas\n  - cseDeleteInsights\n\
            \  - cseManageCustomInsights\n  - cseViewFileAnalysis\n  - cseManageFileAnalysis\n\
            \  - cseManageEntityCriticality\n  - cseViewEntityCriticality\n  - cseViewEntity\n\
            \  - cseManageCustomInsightStatuses\n  - cseViewContextActions\n  - cseViewMappings\n\
            \  - cseViewCustomEntityType\n  - cseManageEntityGroups\n  - cseViewCustomInsightStatuses\n\
            \  - cseViewEnrichments\n  - cseManageInsightSignals\n  - cseManageRules\n\
            \  - cseManageArtifacts\n  - cseViewMatchLists\n  - cseManageInsightPolicy\n\
            \  - cseManageEnrichments\n  - cseViewEntityConfiguration\n  - cseManageEntity\n\
            \  - cseExecuteAutomations\n  - cseManageSuppressedEntities\n  - cseManageInsightStatus\
            \  \n  - cseManageInsightAssignee\n  - cseManageFavoriteFields\n  - cseViewSuppressedEntities\n\
            \n### Alerting\n  - viewMonitorsV2\n  - manageMonitorsV2\n  - viewAlerts\n\
            \  - viewMutingSchedules\n  - manageMutingSchedules\n  - adminMonitorsV2\n\
            \n### SLO\n  - viewSlos\n  - manageSlos\n\n### CloudSoar\n  - cloudSoarPlaybooksAccess\n\
            \  - cloudSoarNotificationConfigure\n  - cloudSoarReportAll\n  - cloudSoarIncidentTriageAccess\n\
            \  - cloudSoarIncidentTaskView\n  - cloudSoarIncidentChangeOwnership\n\
            \  - cloudSoarIncidentNotesEdit\n  - cloudSoarAPIEmailEdit\n  - cloudSoarIncidentTemplatesAccess\n\
            \  - cloudSoarIncidentPlaybooksManage\n  - cloudSoarGeneralConfigure\n\
            \  - cloudSoarEntitiesAccess\n  - cloudSoarEntitiesBulkPhysicalDelete\n\
            \  - cloudSoarIncidentAttachmentsAccess\n  - cloudSoarAppCentralAccess\n\
            \  - cloudSoarBridgeMonitoringAccess\n  - viewCloudSoar\n  - cloudSoarIncidentView\n\
            \  - cloudSoarObservabilityAccess\n  - cloudSoarAPIEmailRead\n  - cloudSoarAppCentralExport\n\
            \  - cloudSoarWidgetsAll\n  - cloudSoarIncidentTaskReassign\n  - cloudSoarIntegrationsAccess\n\
            \  - cloudSoarCustomizationIncidentLabels\n  - cloudSoarAutomationRulesConfigure\n\
            \  - cloudSoarIncidentTaskAccessAll\n  - cloudSoarAuditAndInformationConfigureAuditTrail\n\
            \  - cloudSoarIncidentTriageEdit\n  - cloudSoarIncidentEdit\n  - cloudSoarNotificationTriage\n\
            \  - cloudSoarIncidentTriageBulkPhysicalDelete\n  - cloudSoarIncidentNotesAccess\n\
            \  - cloudSoarAPIUse\n  - cloudSoarIncidentPlaybooksEdit\n  - cloudSoarDashboardAll\n\
            \  - cloudSoarEntitiesManage\n  - cloudSoarIncidentTemplatesConfigure\n\
            \  - cloudSoarIncidentTriageAccessAll\n  - cloudSoarPlaybooksConfigure\n\
            \  - cloudSoarIncidentAccessAll\n  - cloudSoarCustomizationLogo\n  - cloudSoarIncidentTaskAccess\n\
            \  - cloudSoarIncidentTriageView\n  - cloudSoarIntegrationsConfigure\n\
            \  - cloudSoarIncidentManageInvestigators\n  - cloudSoarIncidentAccess\n\
            \  - cloudSoarAuditAndInformationLicenseInformation\n  - cloudSoarIncidentBulkOperations\n\
            \  - cloudSoarCustomizationFields\n  - cloudSoarIncidentTaskEdit\n  -\
            \ cloudSoarDashboardAccess\n  - cloudSoarIncidentAttachmentsEdit\n  -\
            \ cloudSoarIncidentFoldersEdit\n  - cloudSoarUserManagementGroups\n  -\
            \ cloudSoarIncidentPlaybooksAccess\n  - cloudSoarIncidentWarRoomUse\n\
            \  - cloudSoarReportAccess\n  - cloudSoarAuditAndInformationAuditTrail\n\
            \  - cloudSoarAutomationRulesAccess\n  - cloudSoarIncidentTriageChangeOwnership\n\
            \  - cloudSoarObservabilityManagement"
          example:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          items:
            type: string
          type: array
        autofillDependencies:
          default: true
          description: Set this to true if you want to automatically append all missing
            capability requirements. If set to false an error will be thrown if any
            capabilities are missing their dependencies.
          type: boolean
      required:
      - name
      type: object
    ViewFilterDefinition:
      example:
        viewName: auditData
      properties:
        viewName:
          description: Name of the view.
          example: auditData
          type: string
      required:
      - viewName
      type: object
    UpdateRoleDefinitionV2:
      example:
        auditDataFilter: info
        selectionType: All
        autofillDependencies: true
        capabilities:
        - manageContent
        - manageDataVolumeFeed
        - manageFieldExtractionRules
        - manageS3DataForwarding
        logAnalyticsFilter: '!_sourceCategory=collector'
        name: DataAdmin
        description: Manage data of the org.
        securityDataFilter: error
        selectedViews:
        - viewName: auditData
        - viewName: auditData
        users:
        - 0000000006743FE0
        - 0000000005FCE0EE
      properties:
        name:
          description: Name of the role.
          example: DataAdmin
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: Description of the role.
          example: Manage data of the org.
          maxLength: 255
          minLength: 0
          type: string
        logAnalyticsFilter:
          description: A search filter which would be applied on partitions which
            belong to Log Analytics product area.
          example: '!_sourceCategory=collector'
          type: string
        auditDataFilter:
          description: "A search filter which would be applied on partitions which\
            \ belong to Audit Data product area. Help Doc : (https://help.sumologic.com/docs/manage/security/audit-index/)."
          example: info
          type: string
        securityDataFilter:
          description: A search filter which would be applied on partitions which
            belong to Security Data product area.
          example: error
          type: string
        selectionType:
          description: "Describes the Permission Construct for the list of views in\
            \ \"selectedViews\" parameter. \n### Valid Values are : \n  - `All` selectionType\
            \ would allow access to all views in the org.\n  - `Allow` selectionType\
            \ would allow access to specific views mentioned in \"selectedViews\"\
            \ parameter.\n  - `Deny` selectionType would deny access to specific views\
            \ mentioned in \"selectedViews\" parameter."
          example: All
          type: string
        selectedViews:
          description: List of views which with specific view level filters in accordance
            to the selectionType chosen.
          items:
            $ref: '#/components/schemas/ViewFilterDefinition'
          type: array
        users:
          description: List of user identifiers to assign the role to.
          example:
          - 0000000006743FE0
          - 0000000005FCE0EE
          items:
            type: string
          type: array
        capabilities:
          description: |-
            List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are
            ### Data Management
              - viewCollectors
              - manageCollectors
              - manageBudgets
              - manageDataVolumeFeed
              - viewFieldExtraction
              - manageFieldExtractionRules
              - manageS3DataForwarding
              - manageContent
              - manageApps
              - dataVolumeIndex
              - manageConnections
              - viewScheduledViews
              - manageScheduledViews
              - viewPartitions
              - managePartitions
              - viewFields
              - manageFields
              - viewAccountOverview
              - manageTokens
              - downloadSearchResults

            ### Entity management
              - manageEntityTypeConfig

            ### Metrics
              - metricsTransformation
              - metricsExtraction
              - metricsRules

            ### Security
              - managePasswordPolicy
              - ipAllowlisting
              - createAccessKeys
              - manageAccessKeys
              - manageSupportAccountAccess
              - manageAuditDataFeed
              - manageSaml
              - shareDashboardOutsideOrg
              - manageOrgSettings
              - changeDataAccessLevel

            ### Dashboards
              - shareDashboardWorld
              - shareDashboardAllowlist

            ### UserManagement
              - manageUsersAndRoles

            ### Observability
              - searchAuditIndex
              - auditEventIndex

            ### Cloud SIEM Enterprise
              - viewCse

            ### Alerting
              - viewMonitorsV2
              - manageMonitorsV2
              - viewAlerts
          example:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          items:
            type: string
          type: array
        autofillDependencies:
          default: true
          description: Set this to true if you want to automatically append all missing
            capability requirements. If set to false an error will be thrown if any
            capabilities are missing their dependencies.
          type: boolean
      required:
      - auditDataFilter
      - capabilities
      - description
      - logAnalyticsFilter
      - name
      - securityDataFilter
      - selectedViews
      - selectionType
      - users
      type: object
    Folder:
      allOf:
      - $ref: '#/components/schemas/Content'
      - properties:
          description:
            description: The description of the folder.
            example: This is a sample folder.
            maxLength: 255
            minLength: 0
            type: string
          children:
            description: A list of the content items.
            items:
              $ref: '#/components/schemas/Content'
            type: array
        type: object
      example:
        createdAt: 2018-10-16T09:10:00Z
        itemType: Folder
        createdBy: 0000000006743FDD
        children:
        - createdAt: 2018-10-16T09:10:00Z
          itemType: Folder
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          permissions:
          - View
          - GrantView
          - Edit
          name: Personal
          modifiedBy: 0000000006743FE8
          id: 000000000C1C17C6
          parentId: 0000000001C41EF2
        - createdAt: 2018-10-16T09:10:00Z
          itemType: Folder
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          permissions:
          - View
          - GrantView
          - Edit
          name: Personal
          modifiedBy: 0000000006743FE8
          id: 000000000C1C17C6
          parentId: 0000000001C41EF2
        modifiedAt: 2018-10-16T09:10:00Z
        permissions:
        - View
        - GrantView
        - Edit
        name: Personal
        description: This is a sample folder.
        modifiedBy: 0000000006743FE8
        id: 000000000C1C17C6
        parentId: 0000000001C41EF2
    FolderDefinition:
      example:
        name: SampleFolder
        description: This is a sample folder.
        parentId: parentId
      properties:
        name:
          description: The name of the folder.
          example: SampleFolder
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: The description of the folder.
          example: This is a sample folder.
          maxLength: 255
          minLength: 0
          type: string
        parentId:
          description: The identifier of the parent folder.
          type: string
      required:
      - name
      - parentId
      type: object
    UpdateFolderRequest:
      example:
        name: SampleFolder
        description: This is a sample folder.
      properties:
        name:
          description: The name of the folder.
          example: SampleFolder
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: The description of the folder.
          example: This is a sample folder.
          maxLength: 255
          minLength: 0
          type: string
      required:
      - name
      type: object
    ContentList:
      example:
        data:
        - createdAt: 2018-10-16T09:10:00Z
          itemType: Folder
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          permissions:
          - View
          - GrantView
          - Edit
          name: Personal
          modifiedBy: 0000000006743FE8
          id: 000000000C1C17C6
          parentId: 0000000001C41EF2
        - createdAt: 2018-10-16T09:10:00Z
          itemType: Folder
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          permissions:
          - View
          - GrantView
          - Edit
          name: Personal
          modifiedBy: 0000000006743FE8
          id: 000000000C1C17C6
          parentId: 0000000001C41EF2
      properties:
        data:
          description: A list of the content items.
          items:
            $ref: '#/components/schemas/Content'
          type: array
      required:
      - data
      type: object
    ContentPermissionResult:
      example:
        explicitPermissions:
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
        implicitPermissions:
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
      properties:
        explicitPermissions:
          description: Explicitly assigned content permissions.
          items:
            $ref: '#/components/schemas/ContentPermissionAssignment'
          type: array
        implicitPermissions:
          description: Implicitly inherited content permissions.
          items:
            $ref: '#/components/schemas/ContentPermissionAssignment'
          type: array
      required:
      - explicitPermissions
      type: object
    ContentPermissionAssignment:
      example:
        sourceId: sourceId
        sourceType: role
        contentId: contentId
        permissionName: permissionName
      properties:
        permissionName:
          description: "Content permission name. Valid values are: `View`, `GrantView`,\
            \ `Edit`, `GrantEdit`, `Manage`, and `GrantManage`."
          pattern: ^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$
          type: string
          x-pattern-message: "must be one of the following: `View`, `GrantView`, `Edit`,\
            \ `GrantEdit`, `Manage`, `GrantManage`"
        sourceType:
          description: "Type of source for the permission. Valid values are: `user`,\
            \ `role`, and `org`."
          example: role
          pattern: ^(user|role|org)$
          type: string
          x-pattern-message: "must be one of the following: `user`, `role`, `org`"
        sourceId:
          description: "An identifier that belongs to the source type chosen above.\
            \ For e.g. if the sourceType is set to \"user\", sourceId should be identifier\
            \ of a user (same goes for `role` and `org` sourceType)"
          type: string
        contentId:
          description: Unique identifier for the content item.
          type: string
      required:
      - contentId
      - permissionName
      - sourceId
      - sourceType
      type: object
    ContentPermissionUpdateRequest:
      example:
        contentPermissionAssignments:
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
        notificationMessage: notificationMessage
        notifyRecipients: true
      properties:
        contentPermissionAssignments:
          description: Content permissions to be updated.
          items:
            $ref: '#/components/schemas/ContentPermissionAssignment'
          type: array
        notifyRecipients:
          description: Set this to "true" to notify the users who had a permission
            update.
          type: boolean
        notificationMessage:
          description: The notification message sent to the users who had a permission
            update.
          type: string
      required:
      - contentPermissionAssignments
      - notificationMessage
      - notifyRecipients
      type: object
    Content:
      allOf:
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Identifier of the content item.
            example: 000000000C1C17C6
            type: string
          name:
            description: The name of the content item.
            example: Personal
            type: string
          itemType:
            description: |-
              Type of the content item. Supported values are:
                1. Folder
                2. Search
                3. Report (for old dashboards)
                4. Dashboard (for new dashboards)
                5. Lookups
            example: Folder
            type: string
          parentId:
            description: Identifier of the parent content item.
            example: 0000000001C41EF2
            type: string
          permissions:
            description: List of permissions the user has on the content item.
            example:
            - View
            - GrantView
            - Edit
            items:
              type: string
            type: array
        required:
        - id
        - itemType
        - name
        - parentId
        - permissions
      example:
        createdAt: 2018-10-16T09:10:00Z
        itemType: Folder
        createdBy: 0000000006743FDD
        modifiedAt: 2018-10-16T09:10:00Z
        permissions:
        - View
        - GrantView
        - Edit
        name: Personal
        modifiedBy: 0000000006743FE8
        id: 000000000C1C17C6
        parentId: 0000000001C41EF2
      type: object
    MetadataModel:
      properties:
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          example: 0000000006743FDD
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          example: 0000000006743FE8
          type: string
      required:
      - createdAt
      - createdBy
      - modifiedAt
      - modifiedBy
      type: object
    ContentPath:
      example:
        path: /Library/Users/user@test.com/SampleFolder
      properties:
        path:
          description: Path of the content item.
          example: /Library/Users/user@test.com/SampleFolder
          type: string
      required:
      - path
      type: object
    ContentSyncDefinition:
      discriminator:
        propertyName: type
      example:
        name: name
        type: type
      properties:
        type:
          description: |-
            The content item type.
            **Note:**
             - `MewboardSyncDefinition` _is depreciated, and will soon be removed. Please use_ `DashboardV2SyncDefinition`
               _instead_.
             - Dashboard links are not supported for dashboards.
          type: string
        name:
          description: The name of the item.
          type: string
      required:
      - name
      - type
      type: object
    IdArray:
      items:
        type: string
      type: array
    BulkBeginAsyncJobResponse:
      properties:
        jobIds:
          additionalProperties:
            type: string
          description: Map of content identifiers to job identifiers.
          maxProperties: 1000
          type: object
        errors:
          additionalProperties:
            $ref: '#/components/schemas/BulkErrorResponse'
          description: Map of content identifiers to error messages for all failed
            job requests
          maxProperties: 1000
          type: object
      required:
      - errors
      - jobIds
      type: object
    BulkErrorResponse:
      properties:
        status:
          description: HTTP status code of individual request
          type: integer
        errorResponse:
          $ref: '#/components/schemas/ErrorResponse'
      required:
      - errorResponse
      - status
      type: object
    BulkAsyncStatusResponse:
      properties:
        jobStatuses:
          additionalProperties:
            $ref: '#/components/schemas/AsyncJobStatus'
          description: Map of job identifiers to job statuses.
          maxProperties: 1000
          type: object
        errors:
          additionalProperties:
            $ref: '#/components/schemas/BulkErrorResponse'
          description: Map of content identifiers to error messages for all failed
            job requests
          maxProperties: 1000
          type: object
      required:
      - errors
      - jobStatuses
      type: object
    TransformationRulesResponse:
      description: A generic response for transformation rule.
      example:
        next: aGNzTmZBN1ZZWFk9
        data:
        - createdAt: 2018-10-16T09:10:00Z
          ruleDefinition:
            name: Transformation Rule 1
            selector: _sourceCategory=metricsstore
            transformedMetricsRetention: 8
            retention: 8
            dimensionTransformations:
            - transformationType: AggregateOnTransformation
              aggregateOn:
              - metric
            - transformationType: AddOrReplaceTransformation
              dimensionToReplace: metric
              value: "{{metric}}_aggregated"
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          modifiedBy: 0000000006743FE8
          id: id
          enabled: true
        - createdAt: 2018-10-16T09:10:00Z
          ruleDefinition:
            name: Transformation Rule 1
            selector: _sourceCategory=metricsstore
            transformedMetricsRetention: 8
            retention: 8
            dimensionTransformations:
            - transformationType: AggregateOnTransformation
              aggregateOn:
              - metric
            - transformationType: AddOrReplaceTransformation
              dimensionToReplace: metric
              value: "{{metric}}_aggregated"
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          modifiedBy: 0000000006743FE8
          id: id
          enabled: true
      properties:
        data:
          description: List of transformation rules.
          items:
            $ref: '#/components/schemas/TransformationRuleResponse'
          type: array
        next:
          description: Next continuation token.
          example: aGNzTmZBN1ZZWFk9
          type: string
      required:
      - data
      type: object
    TransformationRuleResponse:
      allOf:
      - $ref: '#/components/schemas/TransformationRuleRequest'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Unique identifier for the transformation rule.
            type: string
        required:
        - id
      description: A generic response for transformation rule.
      example:
        createdAt: 2018-10-16T09:10:00Z
        ruleDefinition:
          name: Transformation Rule 1
          selector: _sourceCategory=metricsstore
          transformedMetricsRetention: 8
          retention: 8
          dimensionTransformations:
          - transformationType: AggregateOnTransformation
            aggregateOn:
            - metric
          - transformationType: AddOrReplaceTransformation
            dimensionToReplace: metric
            value: "{{metric}}_aggregated"
        createdBy: 0000000006743FDD
        modifiedAt: 2018-10-16T09:10:00Z
        modifiedBy: 0000000006743FE8
        id: id
        enabled: true
      type: object
    TransformationRuleRequest:
      description: A request for creating or updating a transformation rule.
      example:
        ruleDefinition:
          name: Transformation Rule 1
          selector: _sourceCategory=metricsstore
          transformedMetricsRetention: 8
          retention: 8
          dimensionTransformations:
          - transformationType: AggregateOnTransformation
            aggregateOn:
            - metric
          - transformationType: AddOrReplaceTransformation
            dimensionToReplace: metric
            value: "{{metric}}_aggregated"
        enabled: true
      properties:
        ruleDefinition:
          $ref: '#/components/schemas/TransformationRuleDefinition'
        enabled:
          description: True if the rule is enabled.
          example: true
          type: boolean
      required:
      - enabled
      - ruleDefinition
      type: object
    TransformationRuleDefinition:
      description: The properties that define a transformation rule.
      example:
        name: Transformation Rule 1
        selector: _sourceCategory=metricsstore
        transformedMetricsRetention: 8
        retention: 8
        dimensionTransformations:
        - transformationType: AggregateOnTransformation
          aggregateOn:
          - metric
        - transformationType: AddOrReplaceTransformation
          dimensionToReplace: metric
          value: "{{metric}}_aggregated"
      properties:
        name:
          description: Name of the transformation rule.
          example: Transformation Rule 1
          type: string
        selector:
          description: Selector of the transformation rule.
          example: _sourceCategory=metricsstore
          type: string
        dimensionTransformations:
          default: []
          description: Dimension transformations of the transformation rule.
          example:
          - transformationType: AggregateOnTransformation
            aggregateOn:
            - metric
          - transformationType: AddOrReplaceTransformation
            dimensionToReplace: metric
            value: "{{metric}}_aggregated"
          items:
            $ref: '#/components/schemas/DimensionTransformation'
          type: array
        transformedMetricsRetention:
          default: 0
          description: "Retention period in days for the transformed metrics that\
            \ are generated by this rule. The supported retention periods for transformed\
            \ metrics are 8 days, and 400 days. If no dimension transformations are\
            \ defined, this value will be set to 0."
          example: 8
          format: int64
          type: integer
        retention:
          default: 400
          description: "Retention period in days for the metrics that are selected\
            \ by the selector. The supported retention periods for selected metrics\
            \ are 8 days, 400 days, and 0 (Do not store) if this rule contains dimension\
            \ transformation."
          example: 8
          format: int64
          type: integer
      required:
      - name
      - retention
      - selector
      type: object
    DimensionTransformation:
      description: Base class of all transformation types.
      discriminator:
        propertyName: transformationType
      properties:
        transformationType:
          description: This is the base type of all dimension transformations.
          type: string
      required:
      - transformationType
      type: object
    ContractDetails:
      description: |
        Contract details include Entitlements of the customer such as ContinuousLogs, FrequentLogs, Metrics, Storage, and Dashboards along with the entitlement value of each entitlement.
      properties:
        orgId:
          description: Organization identifier of the account.
          type: string
        planType:
          description: Plan name of the account.
          example: Sumo Logic Logs and Metrics Analytics Service - Enterprise Edition
            (Cloud Flex)
          type: string
        entitlements:
          description: List of the entitlements of the account. Entitlements of the
            account are the list of products subscribed by the user.
          items:
            $ref: '#/components/schemas/Entitlements'
          type: array
        sharedBuckets:
          description: Contains list of buckets. Bucket means shared pool from which
            multiple entitlements can use capacity.
          items:
            $ref: '#/components/schemas/SharedBucket'
          type: array
        contractPeriod:
          $ref: '#/components/schemas/ContractPeriod'
        currentBillingPeriod:
          $ref: '#/components/schemas/CurrentBillingPeriod'
      required:
      - contractPeriod
      - currentBillingPeriod
      - entitlements
      - orgId
      - planType
      type: object
    Entitlements:
      properties:
        contractType:
          description: Details of the contract type. `AnnualBucket` are contracts
            that buy and consume ingest on yearly basis. `Credits` are contracts that
            buy a single unit called credits for all our features. `DailyAverage`
            are contracts that buy and consume ingest on a monthly basis.
          example: "AnnualBucket, Credits, DailyAverage"
          type: string
        entitlementType:
          description: "Text denoting the type of entitlement. - `continuous` for\
            \ Continuous Analytics, - `frequent` for Frequent Analytics, - `storage`\
            \ for Total Storage, - `metrics` for Metrics."
          type: string
        label:
          description: The label of an entitlement is the plan name displayed on the
            accounts page in our user interface.
          example: Continuous log entitlement is represented by `Daily Log Ingest
            (Continuous Analytics)`.
          type: string
        capacity:
          $ref: '#/components/schemas/Capacity'
        capacities:
          description: Contains the capacities that were part of the contract.
          items:
            $ref: '#/components/schemas/Capacity'
          type: array
      required:
      - capacity
      - contractType
      - entitlementType
      - label
      type: object
    Capacity:
      description: Amount of entitlement provided by Sumo Logic for the entitlement
        type of the account.
      properties:
        value:
          description: The value of the entitlement in units.
          example: 61425.23
          format: double
          type: number
        unit:
          description: The unit of the entitlement. Units are provided in `GB` or
            `DPM`(data points per minute).
          example: GB
          type: string
        capacityType:
          description: "Type of capacity. Valid values are: 1) `Paid` : This means\
            \ that the capacity is chargeable. 2) `Free` : This means that this capacity\
            \ is not chargeable."
          pattern: ^(Paid|Free)$
          type: string
      required:
      - unit
      - value
      type: object
    SharedBucket:
      description: A shared bucket contains capacities which can be used my multiple
        entitlements which are linked to the bucket. There will be a 1:many mapping
        between SharedBucket:Entitlement.
      properties:
        name:
          description: Name of the bucket.
          example: totalReservedCredits
          type: string
        label:
          description: The text to be displayed on UI for this bucket.
          example: Sumo Credits
          type: string
        linkedEntitlementTypes:
          description: List of entitlement types which can consume from this bucket.
          example:
          - continuous
          - frequent
          - metrics
          - storage
          items:
            type: string
          type: array
        capacitites:
          description: List of capacities alloted.
          items:
            $ref: '#/components/schemas/Capacity'
          type: array
      required:
      - capacities
      - label
      - linkedEntitlementTypes
      - name
      type: object
    ContractPeriod:
      example:
        endDate: 2000-01-23
        startDate: 2000-01-23
      properties:
        startDate:
          description: Start date of the contract.
          format: date
          type: string
        endDate:
          description: End date of the contract.
          format: date
          type: string
      required:
      - endDate
      - startDate
      type: object
    CurrentBillingPeriod:
      example:
        endDate: 2012-02-02
        startDate: 2012-02-02
      properties:
        startDate:
          description: Start date of the current billing period.
          example: 2012-02-02
          format: date
          type: string
        endDate:
          description: End date of the current billing period.
          example: 2012-02-02
          format: date
          type: string
      required:
      - endDate
      - startDate
      type: object
    ConsumptionDetails:
      description: List of entitlements consumption.
      properties:
        entitlementConsumptions:
          description: An array of entitlements.
          items:
            $ref: '#/components/schemas/EntitlementConsumption'
          type: array
        startDate:
          description: Start date of the data usage.
          example: 2019-07-20
          format: date
          type: string
        endDate:
          description: End date of the data usage.
          example: 2019-10-20
          format: date
          type: string
      required:
      - endDate
      - entitlementConsumptions
      - startDate
      type: object
    EntitlementConsumption:
      properties:
        entitlementType:
          description: "String value denoting the type of entitlement. - `continuous`\
            \ for Continuous Analytics, - `frequent` for Frequent Analytics, - `storage`\
            \ for Total Storage, - `metrics` for Metrics."
          type: string
        datapoints:
          description: Array of data points of the entitlement with their respective
            date range.
          items:
            $ref: '#/components/schemas/DataPoints'
          type: array
        operators:
          description: "Operators used on the data. Available operators are `sum`,\
            \ `average`, `usagePercentage`, `forecastValue`, `forecastPercentage`,\
            \ and `forecastRemainingDays`. sum - Returns the sum of the usages. average\
            \ - Returns the average of the usages. usagePercentage - Returns percentage\
            \ of total capacity used for the startDate and endDate. forecastValue\
            \ - Returns expected usage value assuming current usage behavior continues.\
            \ forecastPercentage - Returns expected percentage usage by the endDate\
            \ assuming current usage behavior continues. forecastRemainingDays- Returns\
            \ the number of expected days, from today, that consumption will last\
            \ assuming current usage behavior continues."
          items:
            $ref: '#/components/schemas/Operator'
          type: array
        contractType:
          description: "Consumption model of the entitlements, available values are\
            \ `DailyAverage`, `AnnualBucket`, and `Credits`."
          example: DailyAverage
          type: string
      required:
      - contractType
      - dataPoints
      - entitlementType
      - operators
      type: object
    DataPoints:
      description: Denotes the data points as a result of the groupBy function performed
        on the usage data.
      properties:
        timeRange:
          $ref: '#/components/schemas/BeginBoundedTimeRange'
        values:
          description: An array of objects denoting the value and unit of the data
            points.
          items:
            $ref: '#/components/schemas/DataValue'
          type: array
      required:
      - timeRange
      - value
      type: object
    DataValue:
      properties:
        value:
          description: The value of the data point in units.
          example: 425
          format: double
          type: number
        unit:
          description: "The unit of the entitlement, possible values are `GB`, `DPM`,\
            \ or `Credits`."
          example: GB
          type: string
      required:
      - unit
      - value
      type: object
    Operator:
      description: "Result of the aggregations performed on the usages. Operator can\
        \ be `sum`, `average`, `usagePercentage`, `forecastValue`,`forecastPercentage`,\
        \ or `forecastRemainingDays`."
      properties:
        values:
          description: An array of objects denoting the value and unit of the results.
          items:
            $ref: '#/components/schemas/DataValue'
          type: array
        name:
          description: The name of the operator applied to the data.
          example: sum
          type: string
      required:
      - name
      - values
      type: object
    PlansCatalog:
      description: Plans available for the account to update.
      properties:
        plans:
          description: List of plans available.
          items:
            $ref: '#/components/schemas/SelfServicePlan'
          type: array
      required:
      - plans
      type: object
    SelfServicePlan:
      description: "Details about a Plan, along with its product groups and subscription\
        \ options"
      properties:
        productId:
          description: |
            Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`
          example: Essentials
          pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$
          type: string
          x-pattern-message: "must be one of the following: `Essentials`, `Trial`,\
            \ `Free`, `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`"
        productName:
          description: Name for the product.
          example: Sumo Logic Continuous Intelligence Service - Essentials Edition
          type: string
        productGroups:
          description: A list of product group for preview.
          items:
            $ref: '#/components/schemas/ProductGroup'
          type: array
        productSubscriptionOptions:
          description: A list of product subscription option.
          items:
            $ref: '#/components/schemas/ProductSubscriptionOption'
          type: array
      required:
      - productGroups
      - productId
      - productName
      - productSubscriptionOptions
      type: object
    ProductId:
      description: |
        Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`
      example: Essentials
      pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$
      type: string
      x-pattern-message: "must be one of the following: `Essentials`, `Trial`, `Free`,\
        \ `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`"
    ProductName:
      description: Name for the product.
      example: Sumo Logic Continuous Intelligence Service - Essentials Edition
      type: string
    ProductGroup:
      description: Details of product group and its quantity.
      properties:
        productGroupName:
          description: |
            Name of the Product group:
          example: Continuous Analytics
          type: string
        productGroupId:
          description: Id of the Product group
          example: CSE
          type: string
        productVariables:
          description: Different product variables of the product group
          items:
            $ref: '#/components/schemas/ProductVariable'
          type: array
        provisioningSupported:
          description: Is provisioning supported on this Product Group. This is applicable
            for product variables which are not enabled by default.
          example: true
          type: boolean
        description:
          description: Description about the Product group
          example: CSE activations can take upto 24 hours.
          type: string
        learnMoreLink:
          description: Link to learn more about the Product group
          example: https://help.sumologic.com/Manage/01Manage_Subscription/08Create_and_Manage_Orgs
          type: string
      required:
      - productGroupName
      - productVariables
      type: object
    ProductVariable:
      description: Details of product variable and its quantity.
      properties:
        productVariableName:
          description: Name of a product variable.
          example: Continuous Log Ingest
          type: string
        productVariableId:
          description: Unique Identifier of the product variable.
          example: continuousIngest
          pattern: ^(continuousIngest|continuousStorage|frequentIngest|frequentStorage|infrequentIngest|infrequentStorage|infrequentScannedData|cseIngest|cseStorage|metrics)$
          type: string
          x-pattern-message: "must be one of the following: `continuousIngest`, `continuousStorage`,\
            \ `frequentIngest`, `frequentStorage`, `infrequentIngest`, `infrequentStorage`,\
            \ `infrequentScannedData`, `cseIngest`, `cseStorage`, `metrics`"
        unit:
          description: Unit of measure for the productvariable.
          example: GB
          type: string
        possibleValues:
          description: Possible values allowed for the productvariable.
          example:
          - 3
          - 5
          - 10
          - 20
          items:
            format: int64
            type: integer
          type: array
      required:
      - possibleValues
      - productVariableId
      - productVariableName
      - unit
      type: object
    ProductSubscriptionOption:
      description: Subscription option containing billing frequency and discount details.
      properties:
        billingFrequency:
          description: |
            Identifier for the plans billing term. Valid values are:
             1. Monthly
             2. Annually
          example: Monthly
          pattern: ^(Monthly|Annually)$
          type: string
          x-pattern-message: "must be one of the following: `Monthly`, `Annually`"
        discountPercentage:
          description: Discount percentage for this plan's subscription.
          example: 20
          type: integer
      required:
      - billingFrequency
      - discountPercentage
      type: object
    BillingFrequency:
      description: |
        Identifier for the plans billing term. Valid values are:
         1. Monthly
         2. Annually
      example: Monthly
      pattern: ^(Monthly|Annually)$
      type: string
      x-pattern-message: "must be one of the following: `Monthly`, `Annually`"
    CurrentPlan:
      description: Current plan of the account.
      example:
        billingFrequency: Monthly
        planType: Free
        baselines:
          infrequentScan: 50000
          flexScanRatio: 5
          cseStorage: 50000
          frequentIngest: 50000
          infrequentIngest: 50000
          flexIngest: 5
          tracingIngest: 50000
          frequentStorage: 30
          continuousIngest: 50000
          continuousStorage: 30
          flexStorage: 30
          infrequentStorage: 30
          cseIngest: 50000
          metrics: 50000
        productId: Essentials
        pendingUpdateRequest: true
        consumables:
        - quantity:
            unit: GB
            value: 61425
          consumableId: Metrics
        - quantity:
            unit: GB
            value: 61425
          consumableId: Metrics
        planName: planName
        discountAmount: 0
        prorationDetails:
          proratedCost: 5.962133916683182
          remainingDays: 6
          proratedCredits: 1
        planCost: 725.46
        contractPeriod:
          endDate: 2000-01-23
          startDate: 2000-01-23
        credits: 300
        currentBillingPeriod:
          endDate: 2012-02-02
          startDate: 2012-02-02
      properties:
        productId:
          description: |
            Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`
          example: Essentials
          pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$
          type: string
          x-pattern-message: "must be one of the following: `Essentials`, `Trial`,\
            \ `Free`, `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`"
        planCost:
          description: Cost incurred for the current plan.
          example: 725.46
          format: double
          type: number
        billingFrequency:
          description: |
            Billing frequency for the current plan. Valid values are: 1. `Monthly` 2. `Annually`
          example: Monthly
          pattern: ^(Monthly|Annually)$
          type: string
          x-pattern-message: "must be one of the following: `Monthly` or `Annually`"
        consumables:
          description: Consumables in the current plan.
          items:
            $ref: '#/components/schemas/Consumable'
          type: array
        planType:
          description: Whether the account is `Free`/`Trial`/`Paid`
          example: Free
          pattern: ^(Free|Trial|Paid)$
          type: string
          x-pattern-message: "must be one of the following: `Free`, `Trial` or `Paid`"
        planName:
          description: The plan name for the product being used.
          type: string
        discountAmount:
          description: The discount offered for the given contract period.
          type: integer
        contractPeriod:
          $ref: '#/components/schemas/ContractPeriod'
        currentBillingPeriod:
          $ref: '#/components/schemas/CurrentBillingPeriod'
        credits:
          description: Numerical value of the amount of credits
          example: 300
          format: int64
          type: integer
        baselines:
          $ref: '#/components/schemas/Baselines'
        pendingUpdateRequest:
          description: True if there is a pending update request
          type: boolean
        prorationDetails:
          $ref: '#/components/schemas/ProrationDetails'
      required:
      - billingFrequency
      - planCost
      - productId
      type: object
    Consumable:
      description: Details of consumable and its quantity.
      example:
        quantity:
          unit: GB
          value: 61425
        consumableId: Metrics
      properties:
        consumableId:
          description: |
            Unique identifier of the consumable. Valid values are: 1. `Storage` 2. `Metrics` 3. `Continuous` 4. `Credits`
          example: Metrics
          pattern: ^(Storage|Metrics|Continuous|Credits)$
          type: string
          x-pattern-message: "must be one of the following: `Storage`, `Metrics`,\
            \ `Continuous`, `Credits`"
        quantity:
          $ref: '#/components/schemas/Quantity'
      required:
      - consumableId
      - quantity
      type: object
    Quantity:
      description: Details of unit of consumption and its value.
      example:
        unit: GB
        value: 61425
      properties:
        value:
          description: The value of the consumable in units.
          example: 61425
          format: int64
          type: integer
        unit:
          description: |
            The unit of the consumable. Units are provided in: 1. `GB` 2. `DPM`(Data Points Per Minute) 3. `Credits` 4. `Days`
          example: GB
          pattern: ^(GB|DPM|Credits|Days)$
          type: string
          x-pattern-message: "must be one of the following: `GB`, `DPM`, `Credits`,\
            \ `Days`"
      required:
      - unit
      - value
      type: object
    Baselines:
      description: Details of consumable and its quantity.
      example:
        infrequentScan: 50000
        flexScanRatio: 5
        cseStorage: 50000
        frequentIngest: 50000
        infrequentIngest: 50000
        flexIngest: 5
        tracingIngest: 50000
        frequentStorage: 30
        continuousIngest: 50000
        continuousStorage: 30
        flexStorage: 30
        infrequentStorage: 30
        cseIngest: 50000
        metrics: 50000
      properties:
        continuousIngest:
          default: 0
          description: "The amount of continuous logs ingest to allocate to the organization,\
            \ in GBs."
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        continuousStorage:
          default: 30
          description: "Number of days of continuous logs storage to allocate to the\
            \ organization, in Days."
          example: 30
          format: int64
          maximum: 30
          minimum: 30
          type: integer
        frequentIngest:
          default: 0
          description: "The amount of frequent logs ingest to allocate to the organization,\
            \ in GBs."
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        frequentStorage:
          default: 30
          description: "Number of days of frequent logs storage to allocate to the\
            \ organization, in Days."
          example: 30
          format: int64
          maximum: 30
          minimum: 30
          type: integer
        infrequentIngest:
          default: 0
          description: "The amount of infrequent logs ingest to allocate to the organization,\
            \ in GBs."
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        infrequentStorage:
          default: 30
          description: "The amount of infrequent logs storage to allocate to the organization,\
            \ in Days."
          example: 30
          format: int64
          maximum: 30
          minimum: 30
          type: integer
        infrequentScan:
          default: 0
          description: "The amount of infrequent logs scan to allocate to the organization,\
            \ in GBs."
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        metrics:
          default: 0
          description: "The amount of Metrics usage to allocate to the organization,\
            \ in DPMs (Data Points per Minute)."
          example: 50000
          format: int64
          maximum: 5000000
          minimum: 0
          type: integer
        cseIngest:
          default: 0
          description: "The amount of CSE ingest to allocate to the organization,\
            \ in GBs."
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        cseStorage:
          default: 0
          description: "The amount of CSE storage to allocate to the organization,\
            \ in GBs."
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        tracingIngest:
          default: 0
          description: "The amount of tracing data ingest to allocate to the organization,\
            \ in GBs."
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        flexIngest:
          default: 0
          description: "The amount of flex logs ingest to allocate to the organization,\
            \ in GBs."
          example: 5
          format: int64
          minimum: 0
          type: integer
        flexStorage:
          default: 0
          description: "Number of days of flex logs storage to allocate to the organization,\
            \ in Days."
          example: 30
          format: int64
          minimum: 0
          type: integer
        flexScanRatio:
          default: 0
          description: The amount of flex logs ingest scan ratio.
          example: 5
          format: int64
          minimum: 0
          type: integer
      type: object
    ProrationDetails:
      description: Details about the prorated credits and prorated cost in case of
        immediate monthly to monthly cycle upgrades.
      example:
        proratedCost: 5.962133916683182
        remainingDays: 6
        proratedCredits: 1
      properties:
        remainingDays:
          description: Remaining days in the billing cycle for which the new plan
            is prorated.
          format: int32
          type: integer
        proratedCredits:
          description: Total prorated credits that get added to the bucket based on
            the remaining billing period.
          format: int32
          type: integer
        proratedCost:
          description: Cost of the total prorated credits.
          format: double
          type: number
      required:
      - proratedCost
      - proratedCredits
      - remainingDays
      type: object
    UpdateRequest:
      description: Update request for the account.
      properties:
        productId:
          description: |
            Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`
          example: Essentials
          pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$
          type: string
          x-pattern-message: "must be one of the following: `Essentials`, `Trial`,\
            \ `Free`, `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`"
        billingFrequency:
          description: |
            Identifier for the plans billing term. Valid values are:
             1. Monthly
             2. Annually
          example: Monthly
          pattern: ^(Monthly|Annually)$
          type: string
          x-pattern-message: "must be one of the following: `Monthly`, `Annually`"
        baselines:
          $ref: '#/components/schemas/SelfServiceCreditsBaselines'
        immediate:
          default: false
          description: true in case the subscription baselines need to be updated
            immediately(only for monthly customers who are staying on the monthly
            plan)
          type: boolean
      required:
      - baselines
      - billingFrequency
      - productId
      type: object
    SelfServiceCreditsBaselines:
      description: Details of product variables and its quantity as required for credits.
      properties:
        continuousIngest:
          default: 0
          description: "The amount of continuous logs ingest to allocate to the organization,\
            \ in GBs."
          example: 5
          format: int64
          minimum: 0
          type: integer
        continuousStorage:
          default: 0
          description: "Number of days of continuous logs storage to allocate to the\
            \ organization, in Days."
          example: 30
          format: int64
          minimum: 0
          type: integer
        metrics:
          default: 0
          description: "The amount of Metrics usage to allocate to the organization,\
            \ in DPMs (Data Points per Minute)."
          example: 20000
          format: int64
          minimum: 0
          type: integer
        tracingIngest:
          default: 0
          description: "The amount of tracing data ingest to allocate to the organization,\
            \ in GBs."
          example: 1
          format: int64
          minimum: 0
          type: integer
        flexIngest:
          default: 0
          description: "The amount of flex logs ingest to allocate to the organization,\
            \ in GBs."
          example: 5
          format: int64
          minimum: 0
          type: integer
        flexStorage:
          default: 0
          description: "Number of days of flex logs storage to allocate to the organization,\
            \ in Days."
          example: 30
          format: int64
          minimum: 0
          type: integer
        flexScanRatio:
          default: 0
          description: The amount of flex logs ingest scan ratio.
          example: 5
          format: int64
          minimum: 0
          type: integer
      type: object
    UpgradePlans:
      description: Upgrade plans available for the account.
      properties:
        plans:
          description: List of plans available.
          items:
            $ref: '#/components/schemas/Plan'
          type: array
      required:
      - plans
      type: object
    Plan:
      description: Upgrade preview request for the account.
      properties:
        productId:
          description: |
            Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`
          example: Essentials
          pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$
          type: string
          x-pattern-message: "must be one of the following: `Essentials`, `Trial`,\
            \ `Free`, `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`"
        productName:
          description: Name for the product.
          example: Sumo Logic Continuous Intelligence Service - Essentials Edition
          type: string
        productGroups:
          description: A list of product group for preview.
          items:
            $ref: '#/components/schemas/ProductGroup'
          type: array
      required:
      - productGroups
      - productId
      - productName
      type: object
    AccountStatusResponse:
      description: Information about the account's plan and payment.
      example:
        pricingModel: credits
        applicationUse: ALLOWED
        totalCredits: 400
        planType: Free
        logModel: Flex
        accountActivated: true
        planExpirationDays: 20
        canUpdatePlan: true
      properties:
        pricingModel:
          description: Whether the account is `cloudflex` or `credits`
          example: credits
          pattern: ^(credits|cloudflex)$
          type: string
        canUpdatePlan:
          description: If the plan can be updated by the given user
          example: true
          type: boolean
        planType:
          description: Whether the account is `Free`/`Trial`/`Paid`
          example: Free
          pattern: ^(Free|Trial|Paid)$
          type: string
        planExpirationDays:
          description: The number of days in which the plan will expire
          example: 20
          type: integer
        applicationUse:
          description: The current usage of the application.
          example: ALLOWED
          pattern: ^(ALLOWED|ALLOWED_WITH_WARNING|THROTTLED|RESTRICTED)$
          type: string
        accountActivated:
          description: If the account is activated or not
          example: true
          type: boolean
        totalCredits:
          description: Total amount of credits assigned to the account
          example: 400
          type: integer
        logModel:
          description: The log model of the account
          example: Flex
          pattern: ^(Flex|Tiered|FlexPlusTiered)$
          type: string
      required:
      - applicationUse
      - canUpdatePlan
      - planType
      - pricingModel
      type: object
    SubdomainDefinitionResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        subdomain: my-company
        modifiedBy: modifiedBy
        url: https://your-company.sumologic.com
      properties:
        createdAt:
          description: |
            Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        subdomain:
          description: The new subdomain.
          example: my-company
          type: string
        url:
          description: Login URL corresponding to the subdomain.
          example: https://your-company.sumologic.com
          type: string
      required:
      - createdAt
      - createdBy
      - modifiedAt
      - modifiedBy
      - subdomain
      - url
      type: object
    ConfigureSubdomainRequest:
      example:
        subdomain: my-company
      properties:
        subdomain:
          description: The new subdomain.
          example: my-company
          maxLength: 63
          minLength: 4
          pattern: "^(?!xn--)[a-z0-9]([a-z0-9-]*[a-z0-9])?$"
          type: string
      required:
      - subdomain
      type: object
    SubdomainAvailabilityResponse:
      properties:
        isAvailable:
          description: Subdomain is available for use or not.
          example: false
          type: boolean
      required:
      - isAvailable
      type: object
    SubdomainUrlResponse:
      properties:
        url:
          description: Login URL corresponding to the subdomain.
          example: https://your-company.sumologic.com
          type: string
      required:
      - url
      type: object
    TotalCredits:
      description: Total amount of credits to be deducted from the parent organization
        corresponding to the baselines
      properties:
        totalCredits:
          description: Numerical value of the amount of credits
          example: 300.0
          format: double
          type: number
        breakdown:
          $ref: '#/components/schemas/CreditsBreakdown'
      required:
      - totalCredits
      type: object
    CreditsBreakdown:
      description: Breakdown of the credits.
      properties:
        deploymentChargeCredits:
          description: The total credits deducted from the parent organization in
            the form of deployment charge.
          example: 100.0
          format: double
          type: number
        allocatedCredits:
          description: The total useable credits allocated to the child organization.
          example: 200.0
          format: double
          type: number
      required:
      - allocatedCredits
      - deploymentChargeCredits
      type: object
    CalculatorRequest:
      description: Details of the request
      properties:
        parentDeploymentId:
          description: Identifier of the deployment in which the parent org is present.
          example: us2
          maxLength: 4
          type: string
        deploymentId:
          description: Identifier of the deployment in which the child org is present.
          example: us2
          type: string
        trialPlanPeriod:
          description: length of the trial period.
          example: 45
          type: integer
        baselines:
          $ref: '#/components/schemas/Baselines'
      type: object
    PlanUpdateEmail:
      description: details of the plan for updating with contact information
      properties:
        emailId:
          description: email id on which support team will contact on
          example: johndoe@acme.com
          format: email
          maxLength: 255
          type: string
        phoneNumber:
          description: contact number on which support team can call user
          example: +01-87789-65749
          maxLength: 30
          type: string
        billingFrequency:
          description: The frequency with with the customer needs to be billed at.
            The current supported values are Monthly and Annually
          example: Monthly
          pattern: ^(Monthly|Annually|)$
          type: string
          x-pattern-message: "must be one of the following: `Monthly`, `Annually`"
        baselines:
          $ref: '#/components/schemas/SelfServiceCreditsBaselines'
        details:
          description: option details the user might want to inform
          example: I need some help with my plan.
          type: string
      required:
      - baselines
      - emailId
      type: object
    UsageDetails:
      description: List of entitlements usages.
      properties:
        entitlementUsages:
          description: An array of usages.
          items:
            $ref: '#/components/schemas/EntitlementUsage'
          type: array
        startDate:
          description: Start date of the data usage.
          example: 2019-07-20
          format: date
          type: string
        endDate:
          description: End date of the data usage.
          example: 2019-10-20
          format: date
          type: string
      required:
      - endDate
      - entitlementUsages
      - startDate
      type: object
    EntitlementUsage:
      properties:
        entitlementType:
          description: "String value denoting the type of entitlement. - `continuous`\
            \ for Continuous Analytics, - `frequent` for Frequent Analytics, - `storage`\
            \ for Total Storage, - `metrics` for Metrics, - `inFrequentIngest` for\
            \  Infrequent Ingest, - `inFrequentsStorage` for Infrequent Storage, -\
            \ `inFrequentScannedBytes` for Infrequent Scan, - `cloudSIEMContinuous`\
            \ for CSE Ingest, - `tracing` for Tracing Ingest, - `soarCount` for Soar\
            \ Count, - `dataForwarding` for Data Forwarding"
          type: string
        datapoints:
          description: Array of data points of the entitlement with their respective
            date range.
          items:
            $ref: '#/components/schemas/DataPoints'
          type: array
        operators:
          description: "Operators used on the data. Available operators are `sum`,\
            \ `average`, `usagePercentage`, `forecastValue`, `forecastPercentage`,\
            \ and `forecastRemainingDays`. sum - Returns the sum of the usages. average\
            \ - Returns the average of the usages. usagePercentage - Returns percentage\
            \ of total capacity used for the startDate and endDate. forecastValue\
            \ - Returns expected usage value assuming current usage behavior continues.\
            \ forecastPercentage - Returns expected percentage usage by the endDate\
            \ assuming current usage behavior continues. forecastRemainingDays- Returns\
            \ the number of expected days, from today, that consumption will last\
            \ assuming current usage behavior continues."
          items:
            $ref: '#/components/schemas/Operator'
          type: array
        tier:
          description: Tier defines the priority in which the usage for an entitlement
            is calculated. For example `promotional`  for promotional tier.
          type: string
        label:
          description: The label for the entitlement.
          type: string
      required:
      - dataPoints
      - entitlementType
      - label
      - operators
      - tier
      type: object
    UsageReportResponse:
      description: Export Usage response containing the jobId
      example:
        jobId: "12345678"
      properties:
        jobId:
          description: Job Id for export
          example: "12345678"
          type: string
      type: object
    UsageReportRequest:
      description: Usage Export Report Request
      example:
        reportType: standard
        endDate: 2019-08-20
        groupBy: day
        startDate: 2019-07-20
        includeDeploymentCharge: false
      properties:
        startDate:
          description: "Start date, without the time, of the usage data to fetch.\
            \ If no value is provided startDate is used as the start of the subscription.\
            \ The start date cannot be before the start of the subscription."
          example: 2019-07-20
          type: string
        endDate:
          description: "End date, without the time, of usage data to fetch. If no\
            \ value is provided endDate is used as the end of the subscription. The\
            \ end date cannot be after the end of the subscription."
          example: 2019-08-20
          type: string
        groupBy:
          default: day
          description: "Perform a groupBy operation on the usage details. If no value\
            \ is provided data is grouped by `Day` - `day`: Aggregate the data by\
            \ day - `week`: Aggregate the data by week. Week starts at Monday and\
            \ ends at sunday night. - `month`: Aggregate the data by calendar month."
          example: day
          pattern: ^(day|week|month)$
          type: string
        reportType:
          default: standard
          description: Specifies the type of report to be exported. Available types
            are `standard` and `detailed`. An additional `childDetailed` type is available
            for Sumo Orgs parents. Detailed report will have raw consumption along
            with the credits breakdown. If no value is provided Standard reports will
            be exported.
          example: standard
          pattern: ^(standard|detailed|childDetailed)$
          type: string
        includeDeploymentCharge:
          default: false
          description: Deployment charges will be applied to the returned usages csv
            if this is set to true and the organization  is a part of Sumo Organizations
            as a child organization.
          example: false
          type: boolean
      type: object
    UsageReportStatusResponse:
      allOf:
      - $ref: '#/components/schemas/ErrorDescription'
      - description: Status response containing status and downloadURL if successful
        properties:
          status:
            description: Status export
            example: Success
            pattern: ^(Success|InProgress|Failed)$
            type: string
          statusMessage:
            description: Status message export
            example: Successful request
            type: string
          reportDownloadURL:
            description: S3 presigned download URL for the report. It is valid for
              10 minutes.
            example: www.example.com
            type: string
        type: object
      example:
        code: auth:password_too_short
        meta:
          minLength: 12
          actualLength: 5
        reportDownloadURL: www.example.com
        detail: "Your password was 5 characters long, the minimum length is 12 characters.\
          \ See http://example.com/password for more information."
        message: Your password was too short.
        statusMessage: Successful request
        status: Success
    UsageForecastResponse:
      description: Usage forecast for the organization.
      example:
        forecastedUsagePercentage: 5.0
        remainingDays: 10.0
        averageUsage: 4.0
        usagePercentage: 7.0
        forecastedUsage: 10.0
      properties:
        averageUsage:
          description: Average credit usage per day till now.
          example: 4.0
          format: double
          type: number
        usagePercentage:
          description: Percentage of total credits used till date.
          example: 7.0
          format: double
          type: number
        forecastedUsage:
          description: Total expected usage by the end of contract period.
          example: 10.0
          format: double
          type: number
        forecastedUsagePercentage:
          description: Percentage of allocated credits that will be used in the contract
            period.
          example: 5.0
          format: double
          type: number
        remainingDays:
          description: Days remaining till all the credits are consumed.
          example: 10.0
          format: double
          type: number
      type: object
    PendingUpdateRequest:
      description: The pending plan update request for the account
      example:
        createdOn: 2000-01-23
        plan:
          billingFrequency: Monthly
          planType: Free
          baselines:
            infrequentScan: 50000
            flexScanRatio: 5
            cseStorage: 50000
            frequentIngest: 50000
            infrequentIngest: 50000
            flexIngest: 5
            tracingIngest: 50000
            frequentStorage: 30
            continuousIngest: 50000
            continuousStorage: 30
            flexStorage: 30
            infrequentStorage: 30
            cseIngest: 50000
            metrics: 50000
          productId: Essentials
          pendingUpdateRequest: true
          consumables:
          - quantity:
              unit: GB
              value: 61425
            consumableId: Metrics
          - quantity:
              unit: GB
              value: 61425
            consumableId: Metrics
          planName: planName
          discountAmount: 0
          prorationDetails:
            proratedCost: 5.962133916683182
            remainingDays: 6
            proratedCredits: 1
          planCost: 725.46
          contractPeriod:
            endDate: 2000-01-23
            startDate: 2000-01-23
          credits: 300
          currentBillingPeriod:
            endDate: 2012-02-02
            startDate: 2012-02-02
      properties:
        createdOn:
          description: The date on which the update request was created.
          format: date
          type: string
        plan:
          $ref: '#/components/schemas/CurrentPlan'
      required:
      - createdOn
      - plan
      type: object
    SumoOrgsUsageBackfillRequest:
      properties:
        customerId:
          description: the customer ID of a mam org
          example: 12345
          format: int64
          type: integer
        from:
          description: epoch millis of date from which usage is to be copied
          example: 1661106600000
          format: int64
          type: integer
        to:
          description: epoch millis of date upto which usage is to be copied
          example: 1661426182666
          format: int64
          type: integer
      required:
      - customerId
      - from
      - to
      type: object
    ChildUsageDetailsResponse:
      example:
        data:
        - orgName: DSW Corp - Prod/Main
          allocatedCredits: 10000.0
          usages:
            forecastPercentage: 10000.0
            usagePercentChangeWoW: 10000.0
            totalCreditsUsed: 10000.0
            usagePercentage: 10000.0
            usagePercentChange: 10000.0
          orgId: us2-00000000FF42A0C3
          status: Active
        - orgName: DSW Corp - Prod/Main
          allocatedCredits: 10000.0
          usages:
            forecastPercentage: 10000.0
            usagePercentChangeWoW: 10000.0
            totalCreditsUsed: 10000.0
            usagePercentage: 10000.0
            usagePercentChange: 10000.0
          orgId: us2-00000000FF42A0C3
          status: Active
      properties:
        data:
          description: Usage details of the child orgs.
          items:
            $ref: '#/components/schemas/ChildUsageDetail'
          type: array
      required:
      - data
      type: object
    ChildUsageDetail:
      example:
        orgName: DSW Corp - Prod/Main
        allocatedCredits: 10000.0
        usages:
          forecastPercentage: 10000.0
          usagePercentChangeWoW: 10000.0
          totalCreditsUsed: 10000.0
          usagePercentage: 10000.0
          usagePercentChange: 10000.0
        orgId: us2-00000000FF42A0C3
        status: Active
      properties:
        status:
          description: Status of the child org.
          example: Active
          pattern: ^(Active|Delinked|Deactivated)$
          type: string
          x-pattern-message: "Valid values are `Active`, `Delinked`, and `Deactivated`"
        orgName:
          description: Name of the child org.
          example: DSW Corp - Prod/Main
          type: string
        orgId:
          description: The unique identifier of an organization. It consists of the
            deployment ID and the hexadecimal account ID separated by a dash `-` character.
          example: us2-00000000FF42A0C3
          maxLength: 23
          minLength: 19
          type: string
        allocatedCredits:
          description: Denotes the total number of credits provisioned for the child
            organization to use.
          example: 10000.0
          format: double
          type: number
        usages:
          $ref: '#/components/schemas/ChildUsage'
      required:
      - orgId
      - status
      - usages
      type: object
    ChildUsage:
      example:
        forecastPercentage: 10000.0
        usagePercentChangeWoW: 10000.0
        totalCreditsUsed: 10000.0
        usagePercentage: 10000.0
        usagePercentChange: 10000.0
      properties:
        totalCreditsUsed:
          description: Total Credits used by the child org.
          example: 10000.0
          format: double
          type: number
        usagePercentage:
          description: Percentage of used credits from the allocated credits.
          example: 10000.0
          format: double
          type: number
        forecastPercentage:
          description: Forecasted percentage of credits will be used in the given
            time period.
          example: 10000.0
          format: double
          type: number
        usagePercentChangeWoW:
          description: Week over week usage percentage for the subscription period.
          example: 10000.0
          format: double
          type: number
        usagePercentChange:
          description: Percentage of usage change over the given time period.
          example: 10000.0
          format: double
          type: number
      required:
      - totalCreditsUsed
      type: object
    ChildUsageDetailsRequest:
      description: The child usage details request for the parent account
      example:
        endDate: 2019-10-20
        startDate: 2019-07-20
      properties:
        startDate:
          description: "Start date, without the time, of the usage data to fetch."
          example: 2019-07-20
          type: string
        endDate:
          description: "End date, without the time, of usage data to fetch."
          example: 2019-10-20
          type: string
      type: object
    FlexPlanUpdateEmail:
      description: details of the flex plan for updating with contact information
      properties:
        emailId:
          description: email id on which support team will contact on
          example: johndoe@acme.com
          format: email
          maxLength: 255
          type: string
        phoneNumber:
          description: contact number on which support team can call user
          example: +01-87789-65749
          maxLength: 15
          type: string
        details:
          description: option details the user might want to inform
          example: I need some help with my plan.
          type: string
      required:
      - emailId
      type: object
    MetricsSearchInstance:
      allOf:
      - $ref: '#/components/schemas/MetricsSearchV1'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Identifier of the metrics search.
            example: 000000000000001A
            type: string
          parentId:
            description: "Identifier of the parent element in the content library,\
              \ such as folder."
            example: 0000000000007D2B
            type: string
        required:
        - id
        type: object
      example:
        logQuery: my_metric | timeslice 1m | count by _timeslice
        modifiedAt: 2018-10-16T09:10:00Z
        description: Long and detailed description
        title: Short title
        parentId: 0000000000007D2B
        createdAt: 2018-10-16T09:10:00Z
        desiredQuantizationInSecs: 60
        createdBy: 0000000006743FDD
        modifiedBy: 0000000006743FE8
        metricsQueries:
        - query: my_metric | avg
          rowId: A
        - query: my_metric | avg
          rowId: A
        id: 000000000000001A
        properties: "{ \\\"key\\\": \\\"value\\\" }"
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
    MetricsSearchV1:
      description: Definition of a metrics search.
      example:
        logQuery: my_metric | timeslice 1m | count by _timeslice
        desiredQuantizationInSecs: 60
        description: Long and detailed description
        metricsQueries:
        - query: my_metric | avg
          rowId: A
        - query: my_metric | avg
          rowId: A
        title: Short title
        properties: "{ \\\"key\\\": \\\"value\\\" }"
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      properties:
        title:
          description: Item title in the content library.
          example: Short title
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9 +%-@.,_()]+$"
          type: string
        description:
          description: Item description in the content library.
          example: Long and detailed description
          maxLength: 8192
          type: string
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        logQuery:
          description: Log query used to add an overlay to the chart.
          example: my_metric | timeslice 1m | count by _timeslice
          maxLength: 10240
          type: string
        metricsQueries:
          description: "Metrics queries, up to the maximum of six."
          items:
            $ref: '#/components/schemas/MetricsSearchQuery'
          type: array
        desiredQuantizationInSecs:
          default: 0
          description: Desired quantization in seconds.
          example: 60
          format: int32
          minimum: 0
          type: integer
        properties:
          description: |
            Chart properties, like line width, color palette, and the fill missing data method. Leave this field empty to use the defaults.
            This property contains JSON object encoded as a string.
          example: "{ \\\"key\\\": \\\"value\\\" }"
          type: string
      required:
      - description
      - metricsQueries
      - timeRange
      - title
      type: object
    MetricsSearchQuery:
      description: Definition of a metrics query.
      example:
        query: my_metric | avg
        rowId: A
      properties:
        rowId:
          description: Row identifier. All row IDs are represented by subsequent upper
            case letters starting with `A`.
          example: A
          type: string
        query:
          description: Metrics query.
          example: my_metric | avg
          type: string
      required:
      - query
      - rowId
      type: object
    SaveMetricsSearchRequest:
      allOf:
      - $ref: '#/components/schemas/MetricsSearchV1'
      - properties:
          parentId:
            description: Identifier of a folder to which the metrics search should
              be added.
            example: 000000000000001A
            type: string
        required:
        - parentId
        type: object
      description: The definition of the metrics search to save in the content library.
      example:
        logQuery: my_metric | timeslice 1m | count by _timeslice
        desiredQuantizationInSecs: 60
        description: Long and detailed description
        metricsQueries:
        - query: my_metric | avg
          rowId: A
        - query: my_metric | avg
          rowId: A
        title: Short title
        properties: "{ \\\"key\\\": \\\"value\\\" }"
        parentId: 000000000000001A
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      type: object
    ListTokensBaseResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: token-name
          description: "token description: for test."
          modifiedBy: modifiedBy
          id: id
          type: CollectorRegistrationTokenResponse
          version: 0
          status: Active
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: token-name
          description: "token description: for test."
          modifiedBy: modifiedBy
          id: id
          type: CollectorRegistrationTokenResponse
          version: 0
          status: Active
      properties:
        data:
          description: List of tokens.
          items:
            $ref: '#/components/schemas/TokenBaseResponse'
          type: array
      required:
      - data
      type: object
    TokenBaseResponse:
      discriminator:
        propertyName: type
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        name: token-name
        description: "token description: for test."
        modifiedBy: modifiedBy
        id: id
        type: CollectorRegistrationTokenResponse
        version: 0
        status: Active
      properties:
        id:
          description: Identifier of the token.
          type: string
        name:
          description: Name of the token.
          example: token-name
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the token.
          example: "token description: for test."
          maxLength: 4096
          minLength: 0
          type: string
        status:
          description: "Status of the token. Can be `Active`, or `Inactive`."
          example: Active
          pattern: ^(Active|Inactive)$
          type: string
          x-pattern-message: must be either `Active` or `Inactive`
        type:
          description: "Type of the token. Valid values: 1) CollectorRegistrationTokenResponse"
          example: CollectorRegistrationTokenResponse
          pattern: ^(CollectorRegistrationTokenResponse)$
          type: string
          x-pattern-message: must be `CollectorRegistrationTokenResponse`
        version:
          description: Version of the token.
          format: int64
          type: integer
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
      required:
      - createdAt
      - createdBy
      - description
      - id
      - modifiedAt
      - modifiedBy
      - name
      - status
      - type
      - version
      type: object
    TokenBaseDefinition:
      example:
        name: token-name
        description: "token description: for test."
        type: CollectorRegistration
        status: Active
      properties:
        name:
          description: Name of the token.
          example: token-name
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the token.
          example: "token description: for test."
          maxLength: 4096
          minLength: 0
          type: string
        status:
          description: "Status of the token. Can be `Active`, or `Inactive`."
          example: Active
          pattern: ^(Active|Inactive)$
          type: string
          x-pattern-message: must be either `Active` or `Inactive`
        type:
          description: "Type of the token. Valid values: 1) CollectorRegistration"
          example: CollectorRegistration
          pattern: ^(CollectorRegistration)$
          type: string
          x-pattern-message: must be `CollectorRegistration`
      required:
      - name
      - status
      - type
      type: object
    TokenBaseDefinitionUpdate:
      example:
        name: token-name
        description: "token description: for test."
        type: CollectorRegistration
        version: 0
        status: Active
      properties:
        name:
          description: Name of the token.
          example: token-name
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the token.
          example: "token description: for test."
          maxLength: 4096
          minLength: 0
          type: string
        status:
          description: "Status of the token. Can be `Active`, or `Inactive`."
          example: Active
          pattern: ^(Active|Inactive)$
          type: string
          x-pattern-message: must be either `Active` or `Inactive`
        type:
          description: "Type of the token. Valid values: 1) CollectorRegistration"
          example: CollectorRegistration
          pattern: ^(CollectorRegistration)$
          type: string
          x-pattern-message: must be `CollectorRegistration`
        version:
          description: Version of the token.
          format: int64
          type: integer
      required:
      - name
      - status
      - type
      - version
      type: object
    PaginatedListAccessKeysResult:
      description: List of access keys.
      example:
        next: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        data:
        - corsHeaders:
          - https://my-app.com
          - https://mail.my-app.com
          lastUsed: 2018-10-16T09:10:00Z
          createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          disabled: false
          id: su0w3Q37CBzHUM
          label: collector access key
          scopes:
          - manageUsersAndRoles
          - viewCollectors
          effectiveScopes:
          - manageUsersAndRoles
          - viewCollectors
        - corsHeaders:
          - https://my-app.com
          - https://mail.my-app.com
          lastUsed: 2018-10-16T09:10:00Z
          createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          disabled: false
          id: su0w3Q37CBzHUM
          label: collector access key
          scopes:
          - manageUsersAndRoles
          - viewCollectors
          effectiveScopes:
          - manageUsersAndRoles
          - viewCollectors
      properties:
        data:
          description: An array of access keys.
          items:
            $ref: '#/components/schemas/AccessKeyPublic'
          type: array
        next:
          description: Next continuation token.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - data
      type: object
    AccessKeyPublic:
      example:
        corsHeaders:
        - https://my-app.com
        - https://mail.my-app.com
        lastUsed: 2018-10-16T09:10:00Z
        createdAt: 2018-10-16T09:10:00Z
        createdBy: 0000000006743FDD
        modifiedAt: 2018-10-16T09:10:00Z
        disabled: false
        id: su0w3Q37CBzHUM
        label: collector access key
        scopes:
        - manageUsersAndRoles
        - viewCollectors
        effectiveScopes:
        - manageUsersAndRoles
        - viewCollectors
      properties:
        id:
          description: Identifier of the access key.
          example: su0w3Q37CBzHUM
          type: string
        label:
          description: The name of the access key.
          example: collector access key
          type: string
        corsHeaders:
          description: |-
            An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:
              1. Requests with an ORIGIN header but the allowlist is empty.
              2. Requests with an ORIGIN header that don't match any entry in the allowlist.
          example:
          - https://my-app.com
          - https://mail.my-app.com
          items:
            type: string
          type: array
        disabled:
          description: Indicates whether the access key is disabled or not.
          example: false
          type: boolean
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the access key.
          example: 0000000006743FDD
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        lastUsed:
          description: "Last used timestamp in UTC.  <br> **Note:** Property not in\
            \ use, it is part of an upcoming feature."
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        scopes:
          description: "Scopes assigned to the key.\n### Alerting\n  - adminMonitorsV2\n\
            \  - viewMonitorsV2\n  - manageMonitorsV2\n\n### Data Management\n  -\
            \ manageApps\n  - viewCollectors\n  - manageCollectors\n  - viewConnections\n\
            \  - manageConnections\n  - contentAdmin\n  - viewFieldExtractionRules\n\
            \  - manageFieldExtractionRules            \n  - viewFields\n  - manageFields\n\
            \  - manageBudgets\n  - viewLibrary\n  - manageLibrary\n  - viewPartitions\n\
            \  - managePartitions \n  - manageS3DataForwarding\n  - viewScheduledViews\n\
            \  - manageScheduledViews\n  - manageTokens\n\n### Logs\n  - runLogSearch\n\
            \n### Metrics\n  - runMetricsQuery \n\n### Reliability Management\n  -\
            \ viewSlos\n  - manageSlos\n\n### Security\n  - manageAccessKeys\n  -\
            \ viewPersonalAccessKeys\n  - managePersonalAccessKeys\n\n### UserManagement\n\
            \  - viewUsersAndRoles\n  - manageUsersAndRoles"
          example:
          - manageUsersAndRoles
          - viewCollectors
          items:
            type: string
          type: array
        effectiveScopes:
          description: Effective scopes based on the intersection of the user's RBAC
            capabilities and the assigned scopes.
          example:
          - manageUsersAndRoles
          - viewCollectors
          items:
            type: string
          type: array
      required:
      - createdAt
      - createdBy
      - disabled
      - id
      - label
      - modifiedAt
      type: object
    AccessKey:
      allOf:
      - $ref: '#/components/schemas/AccessKeyPublic'
      - properties:
          key:
            description: The key for the created access key. This field will have
              values only in the response for an access key create request. The value
              will be an empty string while listing all keys.
            example: F9GZvb4fISxUZHM7pqHCsGXGWf4OArgmt9Tz8ewZ
            type: string
        required:
        - key
        type: object
      example:
        corsHeaders:
        - https://my-app.com
        - https://mail.my-app.com
        lastUsed: 2018-10-16T09:10:00Z
        createdAt: 2018-10-16T09:10:00Z
        createdBy: 0000000006743FDD
        modifiedAt: 2018-10-16T09:10:00Z
        disabled: false
        id: su0w3Q37CBzHUM
        label: collector access key
        scopes:
        - manageUsersAndRoles
        - viewCollectors
        effectiveScopes:
        - manageUsersAndRoles
        - viewCollectors
        key: F9GZvb4fISxUZHM7pqHCsGXGWf4OArgmt9Tz8ewZ
    AccessKeyCreateRequest:
      example:
        corsHeaders:
        - https://my-app.com
        - https://mail.my-app.com
        label: automation access key
        scopes:
        - manageUsersAndRoles
        - viewCollectors
      properties:
        label:
          description: A name for the access key to be created.
          example: automation access key
          maxLength: 128
          type: string
        corsHeaders:
          description: |-
            An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request
            depends on whether it contains an ORIGIN header and the entries in the allowlist.
            Sumo Logic will reject:
              1. Requests with an ORIGIN header but the allowlist is empty.
              2. Requests with an ORIGIN header that don't match any entry in the allowlist.
          example:
          - https://my-app.com
          - https://mail.my-app.com
          items:
            type: string
          maxItems: 20
          type: array
        scopes:
          description: "Scopes assigned to the key.\n### Alerting\n  - adminMonitorsV2\n\
            \  - viewMonitorsV2\n  - manageMonitorsV2\n\n### Data Management\n  -\
            \ manageApps\n  - viewCollectors\n  - manageCollectors\n  - viewConnections\n\
            \  - manageConnections\n  - contentAdmin\n  - viewFieldExtractionRules\n\
            \  - manageFieldExtractionRules            \n  - viewFields\n  - manageFields\n\
            \  - manageBudgets\n  - viewLibrary\n  - manageLibrary\n  - viewPartitions\n\
            \  - managePartitions\n  - manageS3DataForwarding\n  - viewScheduledViews\n\
            \  - manageScheduledViews\n  - manageTokens\n\n### Logs\n  - runLogSearch\n\
            \n### Metrics\n  - runMetricsQuery \n\n### Reliability Management\n  -\
            \ viewSlos\n  - manageSlos\n\n### Security\n  - manageAccessKeys\n  -\
            \ viewPersonalAccessKeys\n  - managePersonalAccessKeys\n\n### UserManagement\n\
            \  - viewUsersAndRoles\n  - manageUsersAndRoles"
          example:
          - manageUsersAndRoles
          - viewCollectors
          items:
            type: string
          type: array
      required:
      - label
      type: object
    ListAccessKeysResult:
      description: List of access keys.
      example:
        data:
        - corsHeaders:
          - https://my-app.com
          - https://mail.my-app.com
          lastUsed: 2018-10-16T09:10:00Z
          createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          disabled: false
          id: su0w3Q37CBzHUM
          label: collector access key
          scopes:
          - manageUsersAndRoles
          - viewCollectors
          effectiveScopes:
          - manageUsersAndRoles
          - viewCollectors
        - corsHeaders:
          - https://my-app.com
          - https://mail.my-app.com
          lastUsed: 2018-10-16T09:10:00Z
          createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          disabled: false
          id: su0w3Q37CBzHUM
          label: collector access key
          scopes:
          - manageUsersAndRoles
          - viewCollectors
          effectiveScopes:
          - manageUsersAndRoles
          - viewCollectors
      properties:
        data:
          description: An array of access keys.
          items:
            $ref: '#/components/schemas/AccessKeyPublic'
          type: array
      required:
      - data
      type: object
    ScopesList:
      example:
        data:
        - dependsOn:
          - viewPartitions
          id: managePartitions
          label: Manage Partitions
          type: Manage
          group:
            id: dataManagement
            label: Data Management
            parentId: parentId
        - dependsOn:
          - viewPartitions
          id: managePartitions
          label: Manage Partitions
          type: Manage
          group:
            id: dataManagement
            label: Data Management
            parentId: parentId
      properties:
        data:
          description: List of scopes
          items:
            $ref: '#/components/schemas/ScopeDefinition'
          type: array
      required:
      - data
      type: object
    ScopeDefinition:
      example:
        dependsOn:
        - viewPartitions
        id: managePartitions
        label: Manage Partitions
        type: Manage
        group:
          id: dataManagement
          label: Data Management
          parentId: parentId
      properties:
        id:
          description: The name of the scope.
          example: managePartitions
          type: string
        label:
          description: The UI label for the scope.
          example: Manage Partitions
          type: string
        type:
          description: Type of scope.
          example: Manage
          type: string
        dependsOn:
          description: Any scopes that are required for this scope to be enabled.
          example:
          - viewPartitions
          items:
            type: string
          type: array
        group:
          $ref: '#/components/schemas/ScopeDefinition_group'
      required:
      - dependsOn
      - group
      - id
      - label
      - type
      type: object
    AccessKeyUpdateRequest:
      example:
        corsHeaders:
        - https://my-app.com
        - https://mail.my-app.com
        disabled: true
        scopes:
        - manageUsersAndRoles
        - viewCollectors
      properties:
        disabled:
          description: Indicates whether the access key is disabled or not.
          example: true
          type: boolean
        corsHeaders:
          description: |-
            An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:
              1. Requests with an ORIGIN header but the allowlist is empty.
              2. Requests with an ORIGIN header that don't match any entry in the allowlist.
          example:
          - https://my-app.com
          - https://mail.my-app.com
          items:
            type: string
          maxItems: 20
          type: array
        scopes:
          description: "Scopes assigned to the key. <br><br> Note: Updates to scopes\
            \ will take up to 5m to reflect due to caching in the system.\n### Alerting\n\
            \  - adminMonitorsV2\n  - viewMonitorsV2\n  - manageMonitorsV2\n\n###\
            \ Data Management\n  - manageApps\n  - viewCollectors\n  - manageCollectors\n\
            \  - viewConnections\n  - manageConnections\n  - contentAdmin\n  - viewFieldExtractionRules\n\
            \  - manageFieldExtractionRules            \n  - viewFields\n  - manageFields\n\
            \  - manageBudgets\n  - viewLibrary\n  - manageLibrary\n  - viewPartitions\n\
            \  - managePartitions\n  - manageS3DataForwarding\n  - viewScheduledViews\n\
            \  - manageScheduledViews\n  - manageTokens\n\n### Logs\n  - runLogSearch\n\
            \n### Metrics\n  - runMetricsQuery \n\n### Reliability Management\n  -\
            \ viewSlos\n  - manageSlos\n\n### Security\n  - manageAccessKeys\n  -\
            \ viewPersonalAccessKeys\n  - managePersonalAccessKeys\n\n### UserManagement\n\
            \  - viewUsersAndRoles\n  - manageUsersAndRoles"
          example:
          - manageUsersAndRoles
          - viewCollectors
          items:
            type: string
          type: array
      required:
      - disabled
      type: object
    SamlIdentityProvider:
      allOf:
      - $ref: '#/components/schemas/SamlIdentityProviderRequest'
      - $ref: '#/components/schemas/AuthnCertificateResult'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Unique identifier of the SAML Identity Provider.
            example: 00000000361130F7
            type: string
          assertionConsumerUrl:
            default: ""
            description: The URL on Sumo Logic where the IdP will redirect to with
              its authentication response.
            example: https://service.sumologic.com/sumo/saml/consume/9483922
            type: string
          entityId:
            default: ""
            description: A unique identifier that is the intended audience of the
              SAML assertion.
            example: https://service.sumologic.com/sumo/saml/9483922
            type: string
          metadataUrl:
            default: ""
            description: The URL to fetch SAML metadata XML.
            example: https://api.sumologic.com/api/v1/saml/identityProviders/00000000361130F7/metadata
            type: string
        required:
        - id
      example:
        x509cert1: x509cert1
        modifiedAt: 2018-10-16T09:10:00Z
        certificate: certificate
        signAuthnRequest: false
        x509cert2: ""
        x509cert3: ""
        issuer: http://www.okta.com/abxcseyuiwelflkdjh
        spInitiatedLoginEnabled: false
        spInitiatedLoginPath: http://www.okta.com/abxcseyuiwelflkdjh
        authnRequestUrl: https://www.okta.com/app/sumologic/abxcseyuiwelflkdjh/sso/saml
        createdAt: 2018-10-16T09:10:00Z
        assertionConsumerUrl: https://service.sumologic.com/sumo/saml/consume/9483922
        logoutEnabled: false
        modifiedBy: 0000000006743FE8
        id: 00000000361130F7
        isRedirectBinding: false
        rolesAttribute: Sumo_Role
        configurationName: SumoLogic
        entityId: https://service.sumologic.com/sumo/saml/9483922
        disableRequestedAuthnContext: false
        metadataUrl: https://api.sumologic.com/api/v1/saml/identityProviders/00000000361130F7/metadata
        onDemandProvisioningEnabled:
          firstNameAttribute: http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname
          onDemandProvisioningRoles: "[\"Analyst\", \"Administrator\"]"
          lastNameAttribute: http://schemas.microsoft.com/ws/2008/06/identity/claims/surname
        createdBy: 0000000006743FDD
        logoutUrl: https://www.sumologic.com
        emailAttribute: attribute/subject
        debugMode: false
      type: object
    SamlIdentityProviderRequest:
      example:
        x509cert1: x509cert1
        isRedirectBinding: false
        rolesAttribute: Sumo_Role
        configurationName: SumoLogic
        signAuthnRequest: false
        x509cert2: ""
        x509cert3: ""
        disableRequestedAuthnContext: false
        issuer: http://www.okta.com/abxcseyuiwelflkdjh
        spInitiatedLoginEnabled: false
        spInitiatedLoginPath: http://www.okta.com/abxcseyuiwelflkdjh
        authnRequestUrl: https://www.okta.com/app/sumologic/abxcseyuiwelflkdjh/sso/saml
        onDemandProvisioningEnabled:
          firstNameAttribute: http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname
          onDemandProvisioningRoles: "[\"Analyst\", \"Administrator\"]"
          lastNameAttribute: http://schemas.microsoft.com/ws/2008/06/identity/claims/surname
        logoutUrl: https://www.sumologic.com
        logoutEnabled: false
        emailAttribute: attribute/subject
        debugMode: false
      properties:
        spInitiatedLoginPath:
          default: ""
          deprecated: true
          description: This property has been deprecated and is no longer used.
          example: http://www.okta.com/abxcseyuiwelflkdjh
          type: string
        configurationName:
          description: Name of the SSO policy or another name used to describe the
            policy internally.
          example: SumoLogic
          type: string
        issuer:
          description: The unique URL assigned to the organization by the SAML Identity
            Provider.
          example: http://www.okta.com/abxcseyuiwelflkdjh
          type: string
        spInitiatedLoginEnabled:
          default: false
          description: True if Sumo Logic redirects users to your identity provider
            with a SAML AuthnRequest when signing in.
          type: boolean
        authnRequestUrl:
          default: ""
          description: The URL that the identity provider has assigned for Sumo Logic
            to submit SAML authentication requests to the identity provider.
          example: https://www.okta.com/app/sumologic/abxcseyuiwelflkdjh/sso/saml
          type: string
        x509cert1:
          description: The certificate is used to verify the signature in SAML assertions.
          type: string
        x509cert2:
          default: ""
          description: The backup certificate used to verify the signature in SAML
            assertions when x509cert1 expires.
          type: string
        x509cert3:
          default: ""
          description: The backup certificate used to verify the signature in SAML
            assertions when x509cert1 expires and x509cert2 is empty.
          type: string
        onDemandProvisioningEnabled:
          $ref: '#/components/schemas/OnDemandProvisioningInfo'
        rolesAttribute:
          default: ""
          description: The role that Sumo Logic will assign to users when they sign
            in.
          example: Sumo_Role
          type: string
        logoutEnabled:
          default: false
          description: True if users are redirected to a URL after signing out of
            Sumo Logic.
          type: boolean
        logoutUrl:
          default: ""
          description: The URL that users will be redirected to after signing out
            of Sumo Logic.
          example: https://www.sumologic.com
          type: string
        emailAttribute:
          default: ""
          description: The email address of the new user account.
          example: attribute/subject
          type: string
        debugMode:
          default: false
          description: True if additional details are included when a user fails to
            sign in.
          type: boolean
        signAuthnRequest:
          default: false
          description: True if Sumo Logic will send signed Authn requests to the identity
            provider.
          type: boolean
        disableRequestedAuthnContext:
          default: false
          description: True if Sumo Logic will include the RequestedAuthnContext element
            of the SAML AuthnRequests it sends to the identity provider.
          type: boolean
        isRedirectBinding:
          default: false
          description: True if the SAML binding is of HTTP Redirect type.
          type: boolean
      required:
      - configurationName
      - issuer
      - x509cert1
      type: object
    OnDemandProvisioningInfo:
      example:
        firstNameAttribute: http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname
        onDemandProvisioningRoles: "[\"Analyst\", \"Administrator\"]"
        lastNameAttribute: http://schemas.microsoft.com/ws/2008/06/identity/claims/surname
      properties:
        firstNameAttribute:
          default: ""
          description: First name attribute of the new user account.
          example: http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname
          type: string
        lastNameAttribute:
          default: ""
          description: Last name attribute of the new user account.
          example: http://schemas.microsoft.com/ws/2008/06/identity/claims/surname
          type: string
        onDemandProvisioningRoles:
          default: []
          description: Sumo Logic RBAC roles to be assigned when user accounts are
            provisioned.
          example: "[\"Analyst\", \"Administrator\"]"
          items:
            type: string
          type: array
      required:
      - onDemandProvisioningRoles
      type: object
    AuthnCertificateResult:
      properties:
        certificate:
          description: Authentication Request Signing Certificate for the user.
          type: string
      required:
      - certificate
      type: object
    AllowlistedUserResult:
      example:
        firstName: firstName
        lastName: lastName
        lastLogin: 2000-01-23T04:56:07.000+00:00
        isActive: true
        userId: userId
        email: john@sumologic.com
        canManageSaml: true
      properties:
        userId:
          description: Unique identifier of the user.
          type: string
        firstName:
          description: First name of the user.
          type: string
        lastName:
          description: Last name of the user.
          type: string
        email:
          description: Email of the user.
          example: john@sumologic.com
          type: string
        canManageSaml:
          description: If the user can manage SAML Configurations.
          type: boolean
        isActive:
          description: Checks if the user is active.
          type: boolean
        lastLogin:
          description: Timestamp of the last login of the user.
          format: date-time
          type: string
      required:
      - canManageSaml
      - email
      - firstName
      - isActive
      - lastLogin
      - lastName
      - userId
      type: object
    CreateParentOrgSamlConfigRequest:
      properties:
        parentOrgId:
          description: Identified of the parent organization.
          example: 00000000361130F7
          type: string
        parentOrgDeployment:
          description: Deployment where parent org exists.
          example: us2
          type: string
      required:
      - parentOrgDeployment
      - parentOrgId
      type: object
    CidrList:
      description: A list of CIDR notations and/or IP addresses.
      example:
        data:
        - description: Accountant
          cidr: 192.35.24.1
        - description: Accountant
          cidr: 192.35.24.1
        - description: Accountant
          cidr: 192.35.24.1
        - description: Accountant
          cidr: 192.35.24.1
        - description: Accountant
          cidr: 192.35.24.1
      properties:
        data:
          description: An array of CIDR notations and/or IP addresses.
          items:
            $ref: '#/components/schemas/Cidr'
          maxItems: 50
          type: array
      required:
      - data
      type: object
    Cidr:
      description: A CIDR notation or IP address along with its description.
      example:
        description: Accountant
        cidr: 192.35.24.1
      properties:
        cidr:
          description: The string representation of the CIDR notation or IP address.
          example: 192.35.24.1
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\
            /([0-9]|[1-2][0-9]|3[0-2]))?$"
          type: string
          x-pattern-message: Invalid CIDR/IP
        description:
          description: Description of the CIDR notation or IP address.
          example: Accountant
          type: string
      required:
      - cidr
      type: object
    AllowlistingStatus:
      description: The status of service allowlisting for Content and Login.
      example:
        contentEnabled: true
        loginEnabled: true
      properties:
        contentEnabled:
          description: Whether service allowlisting is enabled for Content.
          type: boolean
        loginEnabled:
          description: Whether service allowlisting is enabled for Login.
          type: boolean
      required:
      - contentEnabled
      - loginEnabled
      type: object
    AuditPolicy:
      description: Audit policy.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether the Audit policy is enabled.
          example: true
          type: boolean
      required:
      - enabled
      type: object
    SearchAuditPolicy:
      description: Search Audit policy.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether the Search Audit policy is enabled.
          example: true
          type: boolean
      required:
      - enabled
      type: object
    ShareDashboardsOutsideOrganizationPolicy:
      description: Share Dashboards Outside Organization policy.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether the Share Dashboards Outside Organization policy is
            enabled.
          example: true
          type: boolean
      required:
      - enabled
      type: object
    DataAccessLevelPolicy:
      description: Data Access Level policy.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether the Data Access Level policy is enabled.
          example: true
          type: boolean
      required:
      - enabled
      type: object
    UserConcurrentSessionsLimitPolicy:
      description: User Concurrent Sessions Limit policy.
      example:
        maxConcurrentSessions: 50
        enabled: true
      properties:
        enabled:
          description: Whether the User Concurrent Sessions Limit policy is enabled.
          example: true
          type: boolean
        maxConcurrentSessions:
          default: 100
          description: Maximum number of concurrent sessions a user may have.
          example: 50
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - enabled
      type: object
    MaxUserSessionTimeoutPolicy:
      description: Max User Session Timeout policy.
      example:
        maxUserSessionTimeout: 1d
      properties:
        maxUserSessionTimeout:
          description: "Maximum web session timeout users are able to configure within\
            \ their user preferences. Valid values are: `5m`, `15m`, `30m`, `1h`,\
            \ `2h`, `6h`, `12h`, `1d`, `2d`, `3d`, `5d`, or `7d`"
          example: 1d
          pattern: ^(5m|15m|30m|1h|2h|6h|12h|1d|2d|3d|5d|7d)$
          type: string
          x-pattern-message: "must be one of the following: `5m`, `15m`, `30m`, `1h`,\
            \ `2h`, `6h`, `12h`, `1d`, `2d`, `3d`, `5d`, or `7d`"
      required:
      - maxUserSessionTimeout
      type: object
    DisableUnusedAccessKeysPolicy:
      description: Disable Unused Access Keys policy.
      properties:
        unusedAccessKeysDisableAfterInDays:
          description: The number of days it will take for an unused access key to
            automatically disable. Setting it to 0 (never) means that the accessKeys
            will not be disabled automatically.
          example: 60
          format: int32
          maximum: 365
          minimum: 0
          type: integer
      required:
      - unusedAccessKeysDisableAfterInDays
      type: object
    AccessKeysLifetimePolicy:
      description: Access Keys Lifetime policy.
      properties:
        accessKeysLifetimeInDays:
          description: The number of days it will take for an access key to expire
            without being rotated/copied. Setting it to 0 (never) means that access
            keys will never expire.
          example: 60
          format: int32
          maximum: 365
          minimum: 0
          type: integer
      required:
      - accessKeysLifetimeInDays
      type: object
    ListHealthEventResponse:
      example:
        next: next
        data:
        - eventId: e801dc7d-f483-46e9-bcc9-410f08f96497
          severityLevel: severityLevel
          resourceIdentity:
            name: "S3 Source, Scheduled View name."
            id: C03E086C137F38B4
            type: Collector
          eventTime: 2018-10-16T09:10:00Z
          eventName: InstalledCollectorOffline
          subsystem: subsystem
          details:
            trackerId: trackerId
            description: S3 collection is not working as expected because of access
              issues.
            error: Access denied to Amazon S3 bucket
        - eventId: e801dc7d-f483-46e9-bcc9-410f08f96497
          severityLevel: severityLevel
          resourceIdentity:
            name: "S3 Source, Scheduled View name."
            id: C03E086C137F38B4
            type: Collector
          eventTime: 2018-10-16T09:10:00Z
          eventName: InstalledCollectorOffline
          subsystem: subsystem
          details:
            trackerId: trackerId
            description: S3 collection is not working as expected because of access
              issues.
            error: Access denied to Amazon S3 bucket
      properties:
        data:
          description: List of health events.
          items:
            $ref: '#/components/schemas/HealthEvent'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    HealthEvent:
      example:
        eventId: e801dc7d-f483-46e9-bcc9-410f08f96497
        severityLevel: severityLevel
        resourceIdentity:
          name: "S3 Source, Scheduled View name."
          id: C03E086C137F38B4
          type: Collector
        eventTime: 2018-10-16T09:10:00Z
        eventName: InstalledCollectorOffline
        subsystem: subsystem
        details:
          trackerId: trackerId
          description: S3 collection is not working as expected because of access
            issues.
          error: Access denied to Amazon S3 bucket
      properties:
        eventId:
          description: The unique identifier of the event.
          example: e801dc7d-f483-46e9-bcc9-410f08f96497
          type: string
        eventName:
          description: The name of the event.
          example: InstalledCollectorOffline
          type: string
        details:
          $ref: '#/components/schemas/TrackerIdentity'
        resourceIdentity:
          $ref: '#/components/schemas/ResourceIdentity'
        eventTime:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        subsystem:
          description: The product area of the event.
          type: string
        severityLevel:
          description: The criticality of the event. It is either `Error` or `Warning`
          type: string
      required:
      - details
      - eventId
      - eventName
      - eventTime
      - resourceIdentity
      - severityLevel
      - subsystem
      type: object
    ResourceIdentities:
      example:
        data:
        - name: "S3 Source, Scheduled View name."
          id: C03E086C137F38B4
          type: Collector
        - name: "S3 Source, Scheduled View name."
          id: C03E086C137F38B4
          type: Collector
      properties:
        data:
          description: A list of the resources.
          items:
            $ref: '#/components/schemas/ResourceIdentity'
          type: array
      required:
      - data
      type: object
    ListArchiveJobsResponse:
      example:
        next: next
        data:
        - createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006743FDD
          totalObjectsScanned: 25
          name: name
          startTime: 2018-10-16T09:10:00Z
          endTime: 2018-10-16T10:10:00Z
          id: 4e214571-cf27-4114-93e6-69a98c017f3
          totalBytesIngested: 100
          totalObjectsIngested: 10
          status: Scanning
        - createdAt: 2018-10-16T09:10:00Z
          createdBy: 0000000006743FDD
          totalObjectsScanned: 25
          name: name
          startTime: 2018-10-16T09:10:00Z
          endTime: 2018-10-16T10:10:00Z
          id: 4e214571-cf27-4114-93e6-69a98c017f3
          totalBytesIngested: 100
          totalObjectsIngested: 10
          status: Scanning
      properties:
        data:
          description: List of Archive Jobs.
          items:
            $ref: '#/components/schemas/ArchiveJob'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    ArchiveJob:
      allOf:
      - $ref: '#/components/schemas/CreateArchiveJobRequest'
      - properties:
          id:
            description: The unique identifier of the ingestion job.
            example: 4e214571-cf27-4114-93e6-69a98c017f3
            type: string
          totalObjectsScanned:
            description: The total number of objects scanned by the ingestion job.
            example: 25
            format: int64
            type: integer
          totalObjectsIngested:
            description: The total number of objects ingested by the ingestion job.
            example: 10
            format: int64
            type: integer
          totalBytesIngested:
            description: The total bytes ingested by the ingestion job.
            example: 100
            format: int64
            type: integer
          status:
            description: "The status of the ingestion job, either `Pending`,`Scanning`,`Ingesting`,`Failed`,\
              \ or `Succeeded`."
            example: Scanning
            type: string
          createdAt:
            description: The creation timestamp in UTC of the ingestion job.
            example: 2018-10-16T09:10:00Z
            format: date-time
            type: string
          createdBy:
            description: The identifier of the user who created the ingestion job.
            example: 0000000006743FDD
            type: string
        required:
        - createdAt
        - createdBy
        - id
        - status
        - totalBytesIngested
        - totalObjectsIngested
        - totalObjectsScanned
      example:
        createdAt: 2018-10-16T09:10:00Z
        createdBy: 0000000006743FDD
        totalObjectsScanned: 25
        name: name
        startTime: 2018-10-16T09:10:00Z
        endTime: 2018-10-16T10:10:00Z
        id: 4e214571-cf27-4114-93e6-69a98c017f3
        totalBytesIngested: 100
        totalObjectsIngested: 10
        status: Scanning
      type: object
    CreateArchiveJobRequest:
      example:
        name: name
        startTime: 2018-10-16T09:10:00Z
        endTime: 2018-10-16T10:10:00Z
      properties:
        name:
          description: The name of the ingestion job.
          maxLength: 128
          minLength: 1
          type: string
        startTime:
          description: The starting timestamp of the ingestion job.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        endTime:
          description: The ending timestamp of the ingestion job.
          example: 2018-10-16T10:10:00Z
          format: date-time
          type: string
      required:
      - endTime
      - name
      - startTime
      type: object
    ListArchiveJobsCount:
      example:
        data:
        - sourceId: 000000000606C009
          scanning: 1
          ingesting: 2
          pending: 4
          failed: 5
          succeeded: 20
        - sourceId: 000000000606C009
          scanning: 1
          ingesting: 2
          pending: 4
          failed: 5
          succeeded: 20
      properties:
        data:
          description: List of archive sources with count of jobs having various statuses.
          items:
            $ref: '#/components/schemas/ArchiveJobsCount'
          type: array
      required:
      - data
      type: object
    ArchiveJobsCount:
      example:
        sourceId: 000000000606C009
        scanning: 1
        ingesting: 2
        pending: 4
        failed: 5
        succeeded: 20
      properties:
        sourceId:
          description: Identifier for the archive source.
          example: 000000000606C009
          type: string
        pending:
          description: The total number of archive jobs with pending status for the
            archive source.
          example: 4
          format: int64
          type: integer
        scanning:
          description: The total number of archive jobs with scanning status for the
            archive source.
          example: 1
          format: int64
          type: integer
        ingesting:
          description: The total number of archive jobs with ingesting status for
            the archive source.
          example: 2
          format: int64
          type: integer
        failed:
          description: The total number of archive jobs with failed status for the
            archive source.
          example: 5
          format: int64
          type: integer
        succeeded:
          description: The total number of archive jobs with succeeded status for
            the archive source.
          example: 20
          format: int64
          type: integer
      required:
      - failed
      - ingesting
      - pending
      - scanning
      - sourceId
      - succeeded
      type: object
    LogSearchEstimatedUsageDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchEstimatedUsageRequest'
      - properties:
          estimatedUsageDetails:
            $ref: '#/components/schemas/EstimatedUsageDetails'
        required:
        - estimatedUsageDetails
        type: object
      example:
        runByReceiptTime: false
        queryParameters:
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        parsingMode: AutoParse
        timezone: America/Los_Angeles
        estimatedUsageDetails:
          dataScannedInBytes: 114086541
        queryString: "error {{sourceCategory}}| count by _sourceCategory"
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
    LogSearchEstimatedUsageRequest:
      allOf:
      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBase'
      - properties:
          timezone:
            description: |
              Time zone to get the estimated usage details. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
            example: America/Los_Angeles
            type: string
        required:
        - timezone
        type: object
      example:
        runByReceiptTime: false
        queryParameters:
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        parsingMode: AutoParse
        timezone: America/Los_Angeles
        queryString: "error {{sourceCategory}}| count by _sourceCategory"
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
    EstimatedUsageDetails:
      example:
        dataScannedInBytes: 114086541
      properties:
        dataScannedInBytes:
          description: "Amount of data scanned in bytes, to run the query."
          example: 114086541
          format: int64
          type: integer
      type: object
    LogSearchEstimatedUsageByTierDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchEstimatedUsageRequestV2'
      - properties:
          estimatedUsageDetails:
            items:
              $ref: '#/components/schemas/EstimatedUsageDetailsWithTier'
            type: array
        required:
        - estimatedUsageDetails
        type: object
      example:
        runByReceiptTime: false
        queryParameters:
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        timezone: America/Los_Angeles
        estimatedUsageDetails:
        - tier: Continuous
          dataScannedInBytes: 114086541
        - tier: Continuous
          dataScannedInBytes: 114086541
        queryString: "error {{sourceCategory}}| count by _sourceCategory"
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
    LogSearchEstimatedUsageRequestV2:
      allOf:
      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBaseExceptParsingMode'
      - properties:
          timezone:
            description: |
              Time zone to get the estimated usage details. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
            example: America/Los_Angeles
            type: string
        required:
        - timezone
        type: object
      example:
        runByReceiptTime: false
        queryParameters:
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        timezone: America/Los_Angeles
        queryString: "error {{sourceCategory}}| count by _sourceCategory"
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
    EstimatedUsageDetailsWithTier:
      example:
        tier: Continuous
        dataScannedInBytes: 114086541
      properties:
        tier:
          description: "Name of the data tier. Supported Values are Continuous, Frequent,\
            \ Infrequent"
          example: Continuous
          type: string
        dataScannedInBytes:
          description: "Amount of data scanned in bytes, to run the query."
          example: 114086541
          format: int64
          type: integer
      type: object
    LogSearchEstimatedUsageByMeteringTypeDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchEstimatedUsageRequestV3'
      - properties:
          estimatedUsageDetails:
            items:
              $ref: '#/components/schemas/EstimatedUsageDetailsWithMeteringType'
            type: array
        required:
        - estimatedUsageDetails
        type: object
      example:
        runByReceiptTime: false
        queryParameters:
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        timezone: America/Los_Angeles
        estimatedUsageDetails:
        - scanCreditAccounted: false
          meteringType: Continuous
          tier: Continuous
          dataScannedInBytes: 114086541
        - scanCreditAccounted: false
          meteringType: Continuous
          tier: Continuous
          dataScannedInBytes: 114086541
        queryString: "error {{sourceCategory}}| count by _sourceCategory"
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
        emulateSearchContext:
          roleIds:
          - 000000000000000C
          userId: 000000000000019F
    LogSearchEstimatedUsageRequestV3:
      allOf:
      - $ref: '#/components/schemas/LogSearchQueryEstimationQueryDefinition'
      - properties:
          timezone:
            description: |
              Time zone to get the estimated usage details. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
            example: America/Los_Angeles
            type: string
          emulateSearchContext:
            $ref: '#/components/schemas/LogSearchEstimatedUsageRequestV3_allOf_emulateSearchContext'
        required:
        - timezone
        type: object
      example:
        runByReceiptTime: false
        queryParameters:
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        - dataType: STRING
          name: sourceCategory
          description: source category for the string
          value: apache
        timezone: America/Los_Angeles
        queryString: "error {{sourceCategory}}| count by _sourceCategory"
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
        emulateSearchContext:
          roleIds:
          - 000000000000000C
          userId: 000000000000019F
    LogSearchQueryEstimationQueryDefinition:
      description: Definition of the log search with query and timerange.
      properties:
        queryString:
          description: Log search Query to compute the estimated volume of data scanned.
          example: "error {{sourceCategory}}| count by _sourceCategory"
          maxLength: 15000
          type: string
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        runByReceiptTime:
          default: false
          description: This has the value `true` if the search is to be run by receipt
            time and `false` if it is to be run by message time.
          example: false
          type: boolean
        queryParameters:
          description: "Values for search template used in the search query. Learn\
            \ more about the search templates here : https://help.sumologic.com/docs/search/get-started-with-search/build-search/search-templates/"
          items:
            $ref: '#/components/schemas/LogSearchQueryParameterSyncDefinitionBase'
          maxLength: 50
          type: array
      required:
      - queryString
      - timeRange
      type: object
    EstimatedUsageDetailsWithMeteringType:
      description: Estimated Usage details for the given log search query with the
        above timerange.
      example:
        scanCreditAccounted: false
        meteringType: Continuous
        tier: Continuous
        dataScannedInBytes: 114086541
      properties:
        meteringType:
          description: |
            Name of the metering type. Metering type indicates how the data scanned within a particular data tier is actually metered and billed. Supported Values are Continuous, Frequent, Infrequent, ContinuousSecurity and FlexSecurity.
          example: Continuous
          type: string
        dataScannedInBytes:
          description: "Amount of data scanned in bytes, to run the query."
          example: 114086541
          format: int64
          type: integer
        tier:
          description: "Name of the data tier. Supported Values are Continuous, Frequent,\
            \ Infrequent and Flex."
          example: Continuous
          type: string
        scanCreditAccounted:
          description: |
            Whether particular metering type is accounted against a customer's credit on a per scan basis.  e.g Data belonging to "Flex" and "Infrequent" metering type is accounted for credits on per scan basis. For other metering types, eg. "Continuous" it's charged upfront during ingestion.
          example: false
          type: boolean
      type: object
    ScheduledSearchEstimatedUsageResponse:
      properties:
        scanEstimates:
          description: Scan estimate detail for a particular tier.
          items:
            $ref: '#/components/schemas/ScanEstimateDetails'
          type: array
      type: object
    ScanEstimateDetails:
      properties:
        tier:
          description: Name of the tier for which usage is estimated.
          example: Flex
          type: string
        perScanInBytes:
          description: "Amount of data scanned in bytes, to run the schedule search\
            \ once."
          example: 114086541
          format: int64
          type: integer
        perDayInBytes:
          description: "Amount of data scanned in bytes, to run the schedule search\
            \ each day."
          example: 3140865413
          format: int64
          type: integer
        perYearInBytes:
          description: "Amount of data scanned in bytes, to run the schedule search\
            \ each year."
          example: 51408654155
          format: int64
          type: integer
      type: object
    ScheduledSearchEstimatedUsageRequest:
      properties:
        queryString:
          description: The text of a logs search query.
          example: "error {{sourceCategory}}| count by _sourceCategory"
          maxLength: 15000
          type: string
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        cronSchedule:
          description: "Cron-like expression specifying the search's schedule. Field\
            \ scheduleType must be set to \"Custom\", otherwise, scheduleType takes\
            \ precedence over cronSchedule."
          example: 0 0/15 * * * ? *
          type: string
        scheduleType:
          description: |-
            Run schedule of the scheduled search. Set to "Custom" to specify the schedule with a CRON expression. Please note that  with Custom, 1Day and 1Week schedule types you need to provide the corresponding cron expression to determine when to  actually run the search. e.g. Sample Valid Cron for 1Day is "0 0 16 ? * 2-6 *". Possible schedule types are:
              - `RealTime`
              - `15Minutes`
              - `1Hour`
              - `2Hours`
              - `4Hours`
              - `6Hours`
              - `8Hours`
              - `12Hours`
              - `1Day`
              - `1Week`
              - `Custom`
          pattern: ^(RealTime|15Minutes|1Hour|2Hours|4Hours|6Hours|8Hours|12Hours|1Day|1Week|Custom)$
          type: string
          x-pattern-message: "must be one of the following: `RealTime`, `15Minutes`,\
            \ `1Hour`, `2Hours`, `4Hours`, `6Hours`, `8Hours`, `12Hours`, `1Day`,\
            \ `1Week`, `Custom`"
        byReceiptTime:
          default: false
          description: "Set it to true to run the search using receipt time. By default,\
            \ searches do not run by receipt time."
          type: boolean
        queryParameters:
          description: An array of search query parameter objects.
          items:
            $ref: '#/components/schemas/QueryParameterSyncDefinition'
          type: array
        timeZone:
          description: "Time zone identifier for the estimates. Follow the format\
            \ in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          example: America/Los_Angeles
          type: string
      required:
      - queryString
      - scheduleType
      - timeRange
      - timeZone
      type: object
    PaginatedDashboards:
      example:
        next: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        dashboards:
        - variables:
          - hideFromUI: false
            allowMultiSelect: false
            displayName: Source Host
            defaultValue: default_value
            sourceDefinition:
              variableSourceType: MetadataVariableSourceDefinition
            valueType: Any
            name: _sourceHost
            includeAllOption: true
            id: id
          - hideFromUI: false
            allowMultiSelect: false
            displayName: Source Host
            defaultValue: default_value
            sourceDefinition:
              variableSourceType: MetadataVariableSourceDefinition
            valueType: Any
            name: _sourceHost
            includeAllOption: true
            id: id
          hierarchies:
          - Kubernetes Node View
          refreshInterval: 30
          panels:
          - keepVisualSettingsConsistentWithParent: true
            visualSettings: "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}"
            id: 2F7D449E3D511066
            title: This panel shows memory usage for your kubernetes pod.
            panelType: SumoSearchPanel
            key: panelca6280e4a75fca45
          - keepVisualSettingsConsistentWithParent: true
            visualSettings: "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}"
            id: 2F7D449E3D511066
            title: This panel shows memory usage for your kubernetes pod.
            panelType: SumoSearchPanel
            key: panelca6280e4a75fca45
          contentId: "1"
          description: "A view of pods, namespaces and nodes of your cluster."
          title: Kubernetes Dashboard
          scheduleCount: 10
          highlightViolations: false
          folderId: 000000000C1C17C6
          layout:
            layoutStructures:
            - key: panelPANE-3DC454FD977E2A46
              structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\"\
                :0}"
            - key: panelPANE-3DC454FD977E2A46
              structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\"\
                :0}"
            layoutType: Grid
          topologyLabelMap:
            data:
              service:
              - kube-scheduler
              - kube-dns
          domain: aws
          isPublic: false
          theme: light
          id: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          scheduleId: RdQHYPh2jxoS90DXtKfA7nAJV2rsQ9BncpfY7IkjNzQWi52ug85W7r6Rrmtd
          timeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
        - variables:
          - hideFromUI: false
            allowMultiSelect: false
            displayName: Source Host
            defaultValue: default_value
            sourceDefinition:
              variableSourceType: MetadataVariableSourceDefinition
            valueType: Any
            name: _sourceHost
            includeAllOption: true
            id: id
          - hideFromUI: false
            allowMultiSelect: false
            displayName: Source Host
            defaultValue: default_value
            sourceDefinition:
              variableSourceType: MetadataVariableSourceDefinition
            valueType: Any
            name: _sourceHost
            includeAllOption: true
            id: id
          hierarchies:
          - Kubernetes Node View
          refreshInterval: 30
          panels:
          - keepVisualSettingsConsistentWithParent: true
            visualSettings: "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}"
            id: 2F7D449E3D511066
            title: This panel shows memory usage for your kubernetes pod.
            panelType: SumoSearchPanel
            key: panelca6280e4a75fca45
          - keepVisualSettingsConsistentWithParent: true
            visualSettings: "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}"
            id: 2F7D449E3D511066
            title: This panel shows memory usage for your kubernetes pod.
            panelType: SumoSearchPanel
            key: panelca6280e4a75fca45
          contentId: "1"
          description: "A view of pods, namespaces and nodes of your cluster."
          title: Kubernetes Dashboard
          scheduleCount: 10
          highlightViolations: false
          folderId: 000000000C1C17C6
          layout:
            layoutStructures:
            - key: panelPANE-3DC454FD977E2A46
              structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\"\
                :0}"
            - key: panelPANE-3DC454FD977E2A46
              structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\"\
                :0}"
            layoutType: Grid
          topologyLabelMap:
            data:
              service:
              - kube-scheduler
              - kube-dns
          domain: aws
          isPublic: false
          theme: light
          id: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          scheduleId: RdQHYPh2jxoS90DXtKfA7nAJV2rsQ9BncpfY7IkjNzQWi52ug85W7r6Rrmtd
          timeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
      properties:
        dashboards:
          description: List of dashboards.
          items:
            $ref: '#/components/schemas/Dashboard'
          type: array
        next:
          description: Next continuation token. `token` is set to null when no more
            pages are left.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - dashboards
      type: object
    Dashboard:
      allOf:
      - $ref: '#/components/schemas/DashboardRequest'
      - properties:
          id:
            description: |
              Unique identifier for the dashboard. This id is used to get detailed information about the dashboard, such as panels, variables and the layout.
            example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
            type: string
          contentId:
            description: |
              Content identifier for the dashboard. This id is used to connect to the Sumo Content Library and get general metadata about the dashboard. Use this id if you want to search for dashboards in Sumo folders.
            example: "1"
            type: string
          scheduleId:
            description: |
              Scheduled report identifier for the dashboard. Only most recently modified report schedule is rerun per dashboard. This id is used to manage the schedule details through the scheduled report API.
            example: RdQHYPh2jxoS90DXtKfA7nAJV2rsQ9BncpfY7IkjNzQWi52ug85W7r6Rrmtd
            type: string
          scheduleCount:
            description: Count of report schedules for the dashboard.
            example: 10
            format: int32
            type: integer
        type: object
      example:
        variables:
        - hideFromUI: false
          allowMultiSelect: false
          displayName: Source Host
          defaultValue: default_value
          sourceDefinition:
            variableSourceType: MetadataVariableSourceDefinition
          valueType: Any
          name: _sourceHost
          includeAllOption: true
          id: id
        - hideFromUI: false
          allowMultiSelect: false
          displayName: Source Host
          defaultValue: default_value
          sourceDefinition:
            variableSourceType: MetadataVariableSourceDefinition
          valueType: Any
          name: _sourceHost
          includeAllOption: true
          id: id
        hierarchies:
        - Kubernetes Node View
        refreshInterval: 30
        panels:
        - keepVisualSettingsConsistentWithParent: true
          visualSettings: "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}"
          id: 2F7D449E3D511066
          title: This panel shows memory usage for your kubernetes pod.
          panelType: SumoSearchPanel
          key: panelca6280e4a75fca45
        - keepVisualSettingsConsistentWithParent: true
          visualSettings: "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}"
          id: 2F7D449E3D511066
          title: This panel shows memory usage for your kubernetes pod.
          panelType: SumoSearchPanel
          key: panelca6280e4a75fca45
        contentId: "1"
        description: "A view of pods, namespaces and nodes of your cluster."
        title: Kubernetes Dashboard
        scheduleCount: 10
        highlightViolations: false
        folderId: 000000000C1C17C6
        layout:
          layoutStructures:
          - key: panelPANE-3DC454FD977E2A46
            structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}"
          - key: panelPANE-3DC454FD977E2A46
            structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}"
          layoutType: Grid
        topologyLabelMap:
          data:
            service:
            - kube-scheduler
            - kube-dns
        domain: aws
        isPublic: false
        theme: light
        id: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
        scheduleId: RdQHYPh2jxoS90DXtKfA7nAJV2rsQ9BncpfY7IkjNzQWi52ug85W7r6Rrmtd
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
    DashboardRequest:
      example:
        variables:
        - hideFromUI: false
          allowMultiSelect: false
          displayName: Source Host
          defaultValue: default_value
          sourceDefinition:
            variableSourceType: MetadataVariableSourceDefinition
          valueType: Any
          name: _sourceHost
          includeAllOption: true
          id: id
        - hideFromUI: false
          allowMultiSelect: false
          displayName: Source Host
          defaultValue: default_value
          sourceDefinition:
            variableSourceType: MetadataVariableSourceDefinition
          valueType: Any
          name: _sourceHost
          includeAllOption: true
          id: id
        hierarchies:
        - Kubernetes Node View
        refreshInterval: 30
        panels:
        - keepVisualSettingsConsistentWithParent: true
          visualSettings: "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}"
          id: 2F7D449E3D511066
          title: This panel shows memory usage for your kubernetes pod.
          panelType: SumoSearchPanel
          key: panelca6280e4a75fca45
        - keepVisualSettingsConsistentWithParent: true
          visualSettings: "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}"
          id: 2F7D449E3D511066
          title: This panel shows memory usage for your kubernetes pod.
          panelType: SumoSearchPanel
          key: panelca6280e4a75fca45
        description: "A view of pods, namespaces and nodes of your cluster."
        title: Kubernetes Dashboard
        highlightViolations: false
        folderId: 000000000C1C17C6
        layout:
          layoutStructures:
          - key: panelPANE-3DC454FD977E2A46
            structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}"
          - key: panelPANE-3DC454FD977E2A46
            structure: "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}"
          layoutType: Grid
        topologyLabelMap:
          data:
            service:
            - kube-scheduler
            - kube-dns
        domain: aws
        isPublic: false
        theme: light
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      properties:
        title:
          description: Title of the dashboard.
          example: Kubernetes Dashboard
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the dashboard.
          example: "A view of pods, namespaces and nodes of your cluster."
          type: string
        folderId:
          description: |
            The identifier of the folder to save the dashboard in. By default it is saved in your personal folder.
          example: 000000000C1C17C6
          type: string
        topologyLabelMap:
          $ref: '#/components/schemas/TopologyLabelMap'
        domain:
          default: ""
          description: "If set denotes that the dashboard concerns a given domain\
            \ (e.g. `aws`, `k8s`, `app`)."
          example: aws
          type: string
        hierarchies:
          default: []
          description: If set to non-empty array denotes that the dashboard concerns
            given hierarchies.
          example:
          - Kubernetes Node View
          items:
            type: string
          maxItems: 20
          type: array
        refreshInterval:
          description: |
            Interval of time (in seconds) to automatically refresh the dashboard. A value of 0 means we never automatically refresh the dashboard. Allowed values are `0`, `30`, `60`, `120`, `300`, `900`, `1800`, `3600`, `7200`, `86400`.
          example: 30
          format: int32
          type: integer
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        panels:
          description: Panels in the dashboard.
          items:
            $ref: '#/components/schemas/Panel'
          type: array
        layout:
          $ref: '#/components/schemas/Layout'
        variables:
          description: Variables to apply to the panels.
          items:
            $ref: '#/components/schemas/Variable'
          type: array
        theme:
          default: Light
          description: Theme for the dashboard. Either `Light` or `Dark`.
          example: light
          pattern: ^(light|dark|Light|Dark)$
          type: string
          x-pattern-message: "Must be `Light`, or `Dark`"
        isPublic:
          default: false
          description: Is the dashboard public
          type: boolean
        highlightViolations:
          default: false
          description: Whether to highlight threshold violations.
          type: boolean
      required:
      - timeRange
      - title
      type: object
    DashboardMigrationRequest:
      example:
        contentIds:
        - 00000000000001C8
        - 00000000000001C8
        - 00000000000001C8
        - 00000000000001C8
        - 00000000000001C8
      properties:
        contentIds:
          description: Content identifiers of the Legacy dashboards.
          items:
            description: Content identifier of the Legacy dashboard.
            example: 00000000000001C8
            type: string
          maxItems: 50
          type: array
      required:
      - contentIds
      type: object
    MigrationPreviewResponse:
      description: Preview of the dashboard migration.
      example:
        count: 5
      properties:
        count:
          description: Count of dashboards to be migrated.
          example: 5
          type: integer
      required:
      - count
      type: object
    DashboardMigrationResult:
      example:
        data:
          "1": 64
        warnings:
          key:
          - code: auth:password_too_short
            meta:
              minLength: 12
              actualLength: 5
            detail: "Your password was 5 characters long, the minimum length is 12\
              \ characters. See http://example.com/password for more information."
            message: Your password was too short.
          - code: auth:password_too_short
            meta:
              minLength: 12
              actualLength: 5
            detail: "Your password was 5 characters long, the minimum length is 12\
              \ characters. See http://example.com/password for more information."
            message: Your password was too short.
        richData:
          key:
            name: New Dashboard
            id: jgiJLiFP9dX6YdNG0u9t0yqUVOF0iIlNcX0usw2Uy6g8BYTgBj0vYVeiRjRj
        errors:
          key:
          - code: auth:password_too_short
            meta:
              minLength: 12
              actualLength: 5
            detail: "Your password was 5 characters long, the minimum length is 12\
              \ characters. See http://example.com/password for more information."
            message: Your password was too short.
          - code: auth:password_too_short
            meta:
              minLength: 12
              actualLength: 5
            detail: "Your password was 5 characters long, the minimum length is 12\
              \ characters. See http://example.com/password for more information."
            message: Your password was too short.
        status:
          failedCount: 1
          successCount: 3
          totalCount: 10
      properties:
        data:
          additionalProperties:
            type: string
          description: |
            A mapping of Legacy Dashboard Content Ids to migrated Dashboard(New) Content Ids. Only successful migration are shown here, see errors field for failed migrations and the failure reason.
          example:
            "1": 64
          maxProperties: 1000
          type: object
        richData:
          additionalProperties:
            $ref: '#/components/schemas/MigratedDashboardInfo'
          description: |
            A mapping of Legacy Dashboard Content Ids to migrated Dashboard(New) info. Only successful migration are shown here, see errors field for failed migrations and the failure reason.
          maxProperties: 1000
          type: object
        status:
          $ref: '#/components/schemas/DashboardMigrationStatus'
        errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDescription'
            type: array
          description: A mapping of Legacy Dashboards Content Identifiers that failed
            validation to the failure reason(s).
          maxProperties: 1000
          type: object
        warnings:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDescription'
            type: array
          description: A mapping of Legacy Dashboards Content Identifiers to warnings.
          maxProperties: 1000
          type: object
      required:
      - data
      - status
      type: object
    MigratedDashboardInfo:
      example:
        name: New Dashboard
        id: jgiJLiFP9dX6YdNG0u9t0yqUVOF0iIlNcX0usw2Uy6g8BYTgBj0vYVeiRjRj
      properties:
        id:
          description: The id of the Dashboard(New)
          example: jgiJLiFP9dX6YdNG0u9t0yqUVOF0iIlNcX0usw2Uy6g8BYTgBj0vYVeiRjRj
          type: string
        name:
          description: The name of the Dashboard(New)
          example: New Dashboard
          type: string
      required:
      - id
      - name
      type: object
    DashboardMigrationStatus:
      example:
        failedCount: 1
        successCount: 3
        totalCount: 10
      properties:
        successCount:
          description: A successful migration to Dashboard(New).
          example: 3
          type: integer
        failedCount:
          description: A failed migration to Dashboard(New).
          example: 1
          type: integer
        totalCount:
          description: The total number of Legacy Dashboards to migrate.
          example: 10
          type: integer
      required:
      - failedCount
      - successCount
      - totalCount
      type: object
    PaginatedReportSchedules:
      example:
        next: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        reportSchedules:
        - variableValues:
            data:
              key:
              - data
              - data
            richData:
              key:
                variableValues:
                - myCluster
                variableType: LogQueryVariableSourceDefinition
                allowMultiSelect: false
                valueType: Any
                variableKey: _source
                errors:
                - code: auth:password_too_short
                  meta:
                    minLength: 12
                    actualLength: 5
                  detail: "Your password was 5 characters long, the minimum length\
                    \ is 12 characters. See http://example.com/password for more information."
                  message: Your password was too short.
                - code: auth:password_too_short
                  meta:
                    minLength: 12
                    actualLength: 5
                  detail: "Your password was 5 characters long, the minimum length\
                    \ is 12 characters. See http://example.com/password for more information."
                  message: Your password was too short.
                status:
                  percentCompleted: 8
                  state: state
          cronExpression: 0 0/15 * * * ? *
          emailNotification:
            messageBody: Sample Email Message Body
            recipients:
            - john@doe.com
            - john@doe.com
            subject: Sample Email Subject
            timeZone: timeZone
            connectionType: connectionType
          scheduleType: 1Day
          dashboardId: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          timeZone: America/Los_Angeles
          reportFormat: Pdf
          isActive: true
          scheduleId: RdQHYPh2jxoS90DXtKfA7nAJV2rsQ9BncpfY7IkjNzQWi52ug85W7r6Rrmtd
          timeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
        - variableValues:
            data:
              key:
              - data
              - data
            richData:
              key:
                variableValues:
                - myCluster
                variableType: LogQueryVariableSourceDefinition
                allowMultiSelect: false
                valueType: Any
                variableKey: _source
                errors:
                - code: auth:password_too_short
                  meta:
                    minLength: 12
                    actualLength: 5
                  detail: "Your password was 5 characters long, the minimum length\
                    \ is 12 characters. See http://example.com/password for more information."
                  message: Your password was too short.
                - code: auth:password_too_short
                  meta:
                    minLength: 12
                    actualLength: 5
                  detail: "Your password was 5 characters long, the minimum length\
                    \ is 12 characters. See http://example.com/password for more information."
                  message: Your password was too short.
                status:
                  percentCompleted: 8
                  state: state
          cronExpression: 0 0/15 * * * ? *
          emailNotification:
            messageBody: Sample Email Message Body
            recipients:
            - john@doe.com
            - john@doe.com
            subject: Sample Email Subject
            timeZone: timeZone
            connectionType: connectionType
          scheduleType: 1Day
          dashboardId: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          timeZone: America/Los_Angeles
          reportFormat: Pdf
          isActive: true
          scheduleId: RdQHYPh2jxoS90DXtKfA7nAJV2rsQ9BncpfY7IkjNzQWi52ug85W7r6Rrmtd
          timeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
      properties:
        reportSchedules:
          description: List of dashboard report schedules.
          items:
            $ref: '#/components/schemas/ReportSchedule'
          type: array
        next:
          description: Next continuation token. `token` is set to null when no more
            pages are left.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - reportSchedules
      type: object
    ReportSchedule:
      allOf:
      - $ref: '#/components/schemas/ReportScheduleRequest'
      - properties:
          scheduleId:
            description: Identifier of the dashboard report schedule.
            example: RdQHYPh2jxoS90DXtKfA7nAJV2rsQ9BncpfY7IkjNzQWi52ug85W7r6Rrmtd
            type: string
        type: object
      example:
        variableValues:
          data:
            key:
            - data
            - data
          richData:
            key:
              variableValues:
              - myCluster
              variableType: LogQueryVariableSourceDefinition
              allowMultiSelect: false
              valueType: Any
              variableKey: _source
              errors:
              - code: auth:password_too_short
                meta:
                  minLength: 12
                  actualLength: 5
                detail: "Your password was 5 characters long, the minimum length is\
                  \ 12 characters. See http://example.com/password for more information."
                message: Your password was too short.
              - code: auth:password_too_short
                meta:
                  minLength: 12
                  actualLength: 5
                detail: "Your password was 5 characters long, the minimum length is\
                  \ 12 characters. See http://example.com/password for more information."
                message: Your password was too short.
              status:
                percentCompleted: 8
                state: state
        cronExpression: 0 0/15 * * * ? *
        emailNotification:
          messageBody: Sample Email Message Body
          recipients:
          - john@doe.com
          - john@doe.com
          subject: Sample Email Subject
          timeZone: timeZone
          connectionType: connectionType
        scheduleType: 1Day
        dashboardId: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
        timeZone: America/Los_Angeles
        reportFormat: Pdf
        isActive: true
        scheduleId: RdQHYPh2jxoS90DXtKfA7nAJV2rsQ9BncpfY7IkjNzQWi52ug85W7r6Rrmtd
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
    ReportScheduleRequest:
      example:
        variableValues:
          data:
            key:
            - data
            - data
          richData:
            key:
              variableValues:
              - myCluster
              variableType: LogQueryVariableSourceDefinition
              allowMultiSelect: false
              valueType: Any
              variableKey: _source
              errors:
              - code: auth:password_too_short
                meta:
                  minLength: 12
                  actualLength: 5
                detail: "Your password was 5 characters long, the minimum length is\
                  \ 12 characters. See http://example.com/password for more information."
                message: Your password was too short.
              - code: auth:password_too_short
                meta:
                  minLength: 12
                  actualLength: 5
                detail: "Your password was 5 characters long, the minimum length is\
                  \ 12 characters. See http://example.com/password for more information."
                message: Your password was too short.
              status:
                percentCompleted: 8
                state: state
        cronExpression: 0 0/15 * * * ? *
        emailNotification:
          messageBody: Sample Email Message Body
          recipients:
          - john@doe.com
          - john@doe.com
          subject: Sample Email Subject
          timeZone: timeZone
          connectionType: connectionType
        scheduleType: 1Day
        dashboardId: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
        timeZone: America/Los_Angeles
        reportFormat: Pdf
        isActive: true
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      properties:
        dashboardId:
          description: Identifier of dashboard the schedule will generate report for.
          example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          type: string
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        variableValues:
          $ref: '#/components/schemas/VariablesValuesData'
        reportFormat:
          description: File format of the report. Can be `Pdf` or `Png`. `Pdf` is
            portable document format. `Png` is portable graphics image format.
          example: Pdf
          pattern: ^(Pdf|Png)$
          type: string
          x-pattern-message: "should be one of the following: 'Pdf', 'Png'"
        scheduleType:
          description: |-
            Run schedule of the scheduled report. Set to "Custom" to specify the schedule with a CRON expression. Possible schedule types are:
              - `RealTime`
              - `15Minutes`
              - `1Hour`
              - `2Hours`
              - `4Hours`
              - `6Hours`
              - `8Hours`
              - `12Hours`
              - `1Day`
              - `1Week`
              - `Custom`
          example: 1Day
          type: string
        cronExpression:
          description: "Cron-like expression specifying the report's schedule. Field\
            \ scheduleType must be set to \"Custom\", otherwise, scheduleType takes\
            \ precedence over cronExpression."
          example: 0 0/15 * * * ? *
          type: string
        timeZone:
          description: "Time zone identifier for time specification. Either an abbreviation\
            \ such as \"PST\", a full name such as \"America/Los_Angeles\", or a custom\
            \ ID such as \"GMT-8:00\". Note that the support of abbreviations is for\
            \ JDK 1.1.x compatibility only and full names should be used."
          example: America/Los_Angeles
          maxLength: 1024
          minLength: 1
          type: string
        emailNotification:
          $ref: '#/components/schemas/ReportScheduleRequest_emailNotification'
        isActive:
          default: true
          description: Is the dashboard report schedule active
          type: boolean
      required:
      - dashboardId
      - emailNotification
      - reportFormat
      - scheduleType
      - timeZone
      type: object
    PaginatedMetricsSearches:
      example:
        next: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        metricsSearches:
        - visualSettings: visualSettings
          description: description
          id: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          title: title
          queries:
          - queryKey: A
            metricsQueryMode: Basic
            transient: false
            outputCardinalityLimit: 1000
            metricsQueryData:
              metric: CPU_user
              aggregationType: count
              groupBy: _sourceHost
              filters:
              - key: _sourceCategory
                value: kubernetes
              - key: _sourceHost
                value: dep-kubernetes-1
              operators:
                operatorName: avg
                parameters:
                - key: aggregator
                  value: max
                - key: operation
                  value: ""
                - key: value
                  value: 50
            spansQueryData:
              visualizations:
              - name: duration_pct_95
                type: count
              - name: duration_pct_95
                type: count
              limit:
              - limitValue: 10
                direction: asc
              - limitValue: 10
                direction: asc
              filters:
              - fieldName: service
                type: StandaloneKey
              - fieldName: service
                type: StandaloneKey
              groupBy:
              - type: time
              - type: time
            timeSource: Message
            queryString: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
            tracesQueryData:
              filters:
              - type: FieldDescriptor
              - type: FieldDescriptor
            parseMode: Auto
            queryType: Logs
          - queryKey: A
            metricsQueryMode: Basic
            transient: false
            outputCardinalityLimit: 1000
            metricsQueryData:
              metric: CPU_user
              aggregationType: count
              groupBy: _sourceHost
              filters:
              - key: _sourceCategory
                value: kubernetes
              - key: _sourceHost
                value: dep-kubernetes-1
              operators:
                operatorName: avg
                parameters:
                - key: aggregator
                  value: max
                - key: operation
                  value: ""
                - key: value
                  value: 50
            spansQueryData:
              visualizations:
              - name: duration_pct_95
                type: count
              - name: duration_pct_95
                type: count
              limit:
              - limitValue: 10
                direction: asc
              - limitValue: 10
                direction: asc
              filters:
              - fieldName: service
                type: StandaloneKey
              - fieldName: service
                type: StandaloneKey
              groupBy:
              - type: time
              - type: time
            timeSource: Message
            queryString: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
            tracesQueryData:
              filters:
              - type: FieldDescriptor
              - type: FieldDescriptor
            parseMode: Auto
            queryType: Logs
          folderId: 000000000C1C17C6
          timeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
        - visualSettings: visualSettings
          description: description
          id: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          title: title
          queries:
          - queryKey: A
            metricsQueryMode: Basic
            transient: false
            outputCardinalityLimit: 1000
            metricsQueryData:
              metric: CPU_user
              aggregationType: count
              groupBy: _sourceHost
              filters:
              - key: _sourceCategory
                value: kubernetes
              - key: _sourceHost
                value: dep-kubernetes-1
              operators:
                operatorName: avg
                parameters:
                - key: aggregator
                  value: max
                - key: operation
                  value: ""
                - key: value
                  value: 50
            spansQueryData:
              visualizations:
              - name: duration_pct_95
                type: count
              - name: duration_pct_95
                type: count
              limit:
              - limitValue: 10
                direction: asc
              - limitValue: 10
                direction: asc
              filters:
              - fieldName: service
                type: StandaloneKey
              - fieldName: service
                type: StandaloneKey
              groupBy:
              - type: time
              - type: time
            timeSource: Message
            queryString: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
            tracesQueryData:
              filters:
              - type: FieldDescriptor
              - type: FieldDescriptor
            parseMode: Auto
            queryType: Logs
          - queryKey: A
            metricsQueryMode: Basic
            transient: false
            outputCardinalityLimit: 1000
            metricsQueryData:
              metric: CPU_user
              aggregationType: count
              groupBy: _sourceHost
              filters:
              - key: _sourceCategory
                value: kubernetes
              - key: _sourceHost
                value: dep-kubernetes-1
              operators:
                operatorName: avg
                parameters:
                - key: aggregator
                  value: max
                - key: operation
                  value: ""
                - key: value
                  value: 50
            spansQueryData:
              visualizations:
              - name: duration_pct_95
                type: count
              - name: duration_pct_95
                type: count
              limit:
              - limitValue: 10
                direction: asc
              - limitValue: 10
                direction: asc
              filters:
              - fieldName: service
                type: StandaloneKey
              - fieldName: service
                type: StandaloneKey
              groupBy:
              - type: time
              - type: time
            timeSource: Message
            queryString: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
            tracesQueryData:
              filters:
              - type: FieldDescriptor
              - type: FieldDescriptor
            parseMode: Auto
            queryType: Logs
          folderId: 000000000C1C17C6
          timeRange:
            type: BeginBoundedTimeRange
            from:
              type: RelativeTimeRangeBoundary
              relativeTime: -15m
      properties:
        metricsSearches:
          description: List of metrics search pages.
          items:
            $ref: '#/components/schemas/MetricsSearchResponse'
          type: array
        next:
          description: Next continuation token. `token` is set to null when no more
            pages are left.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - metricsSearches
      type: object
    MetricsSearchResponse:
      allOf:
      - $ref: '#/components/schemas/MetricsSearchRequest'
      - properties:
          id:
            description: Unique identifier for the metrics search page.
            example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
            type: string
        type: object
      example:
        visualSettings: visualSettings
        description: description
        id: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
        title: title
        queries:
        - queryKey: A
          metricsQueryMode: Basic
          transient: false
          outputCardinalityLimit: 1000
          metricsQueryData:
            metric: CPU_user
            aggregationType: count
            groupBy: _sourceHost
            filters:
            - key: _sourceCategory
              value: kubernetes
            - key: _sourceHost
              value: dep-kubernetes-1
            operators:
              operatorName: avg
              parameters:
              - key: aggregator
                value: max
              - key: operation
                value: ""
              - key: value
                value: 50
          spansQueryData:
            visualizations:
            - name: duration_pct_95
              type: count
            - name: duration_pct_95
              type: count
            limit:
            - limitValue: 10
              direction: asc
            - limitValue: 10
              direction: asc
            filters:
            - fieldName: service
              type: StandaloneKey
            - fieldName: service
              type: StandaloneKey
            groupBy:
            - type: time
            - type: time
          timeSource: Message
          queryString: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
          tracesQueryData:
            filters:
            - type: FieldDescriptor
            - type: FieldDescriptor
          parseMode: Auto
          queryType: Logs
        - queryKey: A
          metricsQueryMode: Basic
          transient: false
          outputCardinalityLimit: 1000
          metricsQueryData:
            metric: CPU_user
            aggregationType: count
            groupBy: _sourceHost
            filters:
            - key: _sourceCategory
              value: kubernetes
            - key: _sourceHost
              value: dep-kubernetes-1
            operators:
              operatorName: avg
              parameters:
              - key: aggregator
                value: max
              - key: operation
                value: ""
              - key: value
                value: 50
          spansQueryData:
            visualizations:
            - name: duration_pct_95
              type: count
            - name: duration_pct_95
              type: count
            limit:
            - limitValue: 10
              direction: asc
            - limitValue: 10
              direction: asc
            filters:
            - fieldName: service
              type: StandaloneKey
            - fieldName: service
              type: StandaloneKey
            groupBy:
            - type: time
            - type: time
          timeSource: Message
          queryString: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
          tracesQueryData:
            filters:
            - type: FieldDescriptor
            - type: FieldDescriptor
          parseMode: Auto
          queryType: Logs
        folderId: 000000000C1C17C6
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
    MetricsSearchRequest:
      allOf:
      - $ref: '#/components/schemas/MetricsSearch'
      - properties:
          folderId:
            description: |
              The identifier of the folder to save the metrics search in. By default it is saved in your personal folder.
            example: 000000000C1C17C6
            type: string
        type: object
      example:
        visualSettings: visualSettings
        description: description
        title: title
        queries:
        - queryKey: A
          metricsQueryMode: Basic
          transient: false
          outputCardinalityLimit: 1000
          metricsQueryData:
            metric: CPU_user
            aggregationType: count
            groupBy: _sourceHost
            filters:
            - key: _sourceCategory
              value: kubernetes
            - key: _sourceHost
              value: dep-kubernetes-1
            operators:
              operatorName: avg
              parameters:
              - key: aggregator
                value: max
              - key: operation
                value: ""
              - key: value
                value: 50
          spansQueryData:
            visualizations:
            - name: duration_pct_95
              type: count
            - name: duration_pct_95
              type: count
            limit:
            - limitValue: 10
              direction: asc
            - limitValue: 10
              direction: asc
            filters:
            - fieldName: service
              type: StandaloneKey
            - fieldName: service
              type: StandaloneKey
            groupBy:
            - type: time
            - type: time
          timeSource: Message
          queryString: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
          tracesQueryData:
            filters:
            - type: FieldDescriptor
            - type: FieldDescriptor
          parseMode: Auto
          queryType: Logs
        - queryKey: A
          metricsQueryMode: Basic
          transient: false
          outputCardinalityLimit: 1000
          metricsQueryData:
            metric: CPU_user
            aggregationType: count
            groupBy: _sourceHost
            filters:
            - key: _sourceCategory
              value: kubernetes
            - key: _sourceHost
              value: dep-kubernetes-1
            operators:
              operatorName: avg
              parameters:
              - key: aggregator
                value: max
              - key: operation
                value: ""
              - key: value
                value: 50
          spansQueryData:
            visualizations:
            - name: duration_pct_95
              type: count
            - name: duration_pct_95
              type: count
            limit:
            - limitValue: 10
              direction: asc
            - limitValue: 10
              direction: asc
            filters:
            - fieldName: service
              type: StandaloneKey
            - fieldName: service
              type: StandaloneKey
            groupBy:
            - type: time
            - type: time
          timeSource: Message
          queryString: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
          tracesQueryData:
            filters:
            - type: FieldDescriptor
            - type: FieldDescriptor
          parseMode: Auto
          queryType: Logs
        folderId: 000000000C1C17C6
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
    MetricsSearch:
      properties:
        title:
          description: Title of the metrics search page.
          maxLength: 255
          minLength: 1
          pattern: ^\s*\S.*$
          type: string
          x-pattern-message: must contain at least 1 non-whitespace character
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        description:
          description: Description of the metrics search page.
          type: string
        queries:
          description: Queries of the metrics search page.
          items:
            $ref: '#/components/schemas/Query'
          type: array
        visualSettings:
          description: Visual settings of the metrics search page.
          type: string
      required:
      - queries
      - timeRange
      - title
      type: object
    MonitorUsageInfo:
      description: The usage info of logs and metrics monitors.
      items:
        $ref: '#/components/schemas/MonitorUsage'
      type: array
    MonitorUsage:
      description: The usage info of monitors.
      example:
        monitorType: Logs
        total: 100
        usage: 100
        limit: 100
      properties:
        monitorType:
          description: The type of monitor usage info (Logs or Metrics).
          enum:
          - Logs
          - Metrics
          example: Logs
          type: string
        usage:
          description: Current number of active Logs/Metrics monitors.
          example: 100
          type: integer
        limit:
          description: The limit of active Logs/Metrics monitors.
          example: 100
          type: integer
        total:
          description: The total number of monitors created. (Including both active
            and disabled Logs/Metrics monitors)
          example: 100
          type: integer
    QueriesParametersResult:
      description: Queries validation and extracted parameters result.
      properties:
        isValid:
          description: Whether or not if queries are valid.
          example: false
          type: boolean
        errors:
          default: []
          description: Error messages from validation.
          example:
          - "Field fieldName not found, please check the spelling and try again."
          items:
            type: string
          type: array
        logsOutlier:
          $ref: '#/components/schemas/LogsOutlier'
        metricsOutlier:
          $ref: '#/components/schemas/MetricsOutlier'
      type: object
    LogsOutlier:
      description: The parameters extracted from the logs outlier query.
      properties:
        trimmedQuery:
          description: The query string after trimming out the outlier clause.
          example: _sourceCategory=search error | timeslice 1m | count by _timeslice
          type: string
        window:
          default: 10
          description: Sets the trailing number of data points to calculate mean and
            sigma.
          example: 15
          format: int64
          type: integer
        consecutive:
          default: 1
          description: Sets the required number of consecutive indicator data points
            (outliers) to trigger a violation.
          example: 3
          format: int64
          type: integer
        direction:
          description: |-
            Specifies which direction should trigger violations. Valid values:
              1. `Both`: Both positive and negative deviations
              2. `Up`: Positive deviations only
              3. `Down`: Negative deviations only
            example: "Up" pattern: "^(Both|Up|Down)$" default: "Both" x-pattern-message: "should be one of the following: 'Both', 'Up', 'Down'"
          type: string
        threshold:
          default: 3.0
          description: Sets the number of standard deviations for calculating violations.
          example: 10.0
          format: double
          type: number
        field:
          description: The name of the field that the trigger condition will alert
            on.
          example: _count
          type: string
      type: object
    OutlierDirection:
      description: |-
        Specifies which direction should trigger violations. Valid values:
          1. `Both`: Both positive and negative deviations
          2. `Up`: Positive deviations only
          3. `Down`: Negative deviations only
        example: "Up" pattern: "^(Both|Up|Down)$" default: "Both" x-pattern-message: "should be one of the following: 'Both', 'Up', 'Down'"
      type: string
    MetricsOutlier:
      description: The parameters extracted from the metrics outlier query.
      properties:
        trimmedQuery:
          description: The query string after trimming out the outlier clause.
          example: _sourceHost=prod-search-1 metric=CPU_User
          type: string
        baselineWindow:
          default: 5m
          description: The time range used to compute the baseline.
          example: 10m
          type: string
        baselineTimeRangeWindow:
          $ref: '#/components/schemas/ResolvableTimeRange'
        direction:
          description: |-
            Specifies which direction should trigger violations. Valid values:
              1. `Both`: Both positive and negative deviations
              2. `Up`: Positive deviations only
              3. `Down`: Negative deviations only
            example: "Up" pattern: "^(Both|Up|Down)$" default: "Both" x-pattern-message: "should be one of the following: 'Both', 'Up', 'Down'"
          type: string
        threshold:
          default: 3.0
          description: How much should the indicator be different from the baseline
            for each datapoint.
          example: 10.0
          format: double
          type: number
      type: object
    MonitorQueries:
      description: Queries to be validated.
      properties:
        monitorType:
          description: |-
            The type of monitor. Valid values:
              1. `Logs`: A logs query monitor.
              2. `Metrics`: A metrics query monitor.
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
          x-pattern-message: should be either 'Logs' or 'Metrics'
        timeRange:
          description: "The relative time range of the monitor. Valid values of time\
            \ ranges are `5m`, `10m`, `15m`, `30m`, `1h`, `3h`, `6h`, `12h`, or `24h`."
          example: 15m
          type: string
        queries:
          description: Queries to be validated.
          items:
            $ref: '#/components/schemas/UnvalidatedMonitorQuery'
          type: array
      required:
      - monitorType
      - queries
      - timeRange
      type: object
    UnvalidatedMonitorQuery:
      description: A search query.
      properties:
        rowId:
          description: "The unique identifier of the row. Defaults to sequential capital\
            \ letters, `A`, `B`, `C`, etc."
          example: A
          type: string
        query:
          description: The logs or metrics query that defines the stream of data the
            monitor runs on.
          example: "_sourceCategory=search error | timeslice 1m | count by _timeslice\
            \ | outlier _count window=5,threshold=3,consecutive=2,direction=+"
          type: string
      required:
      - query
      - rowId
      type: object
    SeriesData:
      description: The data for visualizing monitor chart.
      properties:
        name:
          description: Name of the series.
          example: monitor-manager-cpu-1
          type: string
        dataPoints:
          description: Data points of the series.
          items:
            $ref: '#/components/schemas/DataPoint'
          type: array
        seriesAxisRange:
          $ref: '#/components/schemas/SeriesAxisRange'
        aggregateInfo:
          $ref: '#/components/schemas/VisualAggregateData'
        seriesMetadata:
          $ref: '#/components/schemas/SeriesMetadata'
      required:
      - dataPoints
      - name
      - seriesAxisRange
      type: object
    DataPoint:
      description: Data for visualizing monitor chart.
      discriminator:
        propertyName: dataPointType
      properties:
        dataPointType:
          description: Type of the data point.
          example: OutlierSeriesData
          pattern: ^(OutlierSeriesData|StaticSeriesData)$
          type: string
      type: object
    SeriesAxisRange:
      description: The axis limitation for chart data.
      properties:
        x:
          $ref: '#/components/schemas/AxisRange'
        "y":
          $ref: '#/components/schemas/AxisRange'
      type: object
    AxisRange:
      description: "The min and max of the x,y axis of the monitor chart."
      properties:
        min:
          description: minimum limit of x or y axis.
          example: 50
          format: int64
          type: integer
        max:
          description: maximum limit of x or y axis.
          example: 100
          format: int64
          type: integer
      type: object
    SeriesMetadata:
      description: The metadata of time series for chart.
      properties:
        rowId:
          description: Row ID of the query this time series belongs to.
          example: A
          type: string
        dimensions:
          description: Dimensions for the time series.
          items:
            $ref: '#/components/schemas/DimensionKeyValue'
          type: array
      type: object
    DimensionKeyValue:
      description: The key and value pair for each metric dimension.
      properties:
        key:
          description: The key of the metric dimension.
          example: region
          type: string
        value:
          description: The value of the metric dimension.
          example: us-east-1
          type: string
      type: object
    MonitorQuery:
      description: A search query.
      example:
        query: _sourceCategory=search error
        rowId: A
      properties:
        rowId:
          description: "The unique identifier of the row. Defaults to sequential capital\
            \ letters, `A`, `B`, `C`, etc."
          example: A
          type: string
        query:
          description: The logs or metrics query that defines the stream of data the
            monitor runs on.
          example: _sourceCategory=search error
          type: string
      required:
      - query
      - rowId
      type: object
    LogSearchQuery:
      description: Query for which to get log fields.
      properties:
        queryString:
          description: Query string for which to get log fields.
          example: _sourceCategory=service
          type: string
      required:
      - queryString
      type: object
    GroupFieldsResponse:
      description: Group fields for the monitor
      properties:
        groupFields:
          description: List of group fields
          items:
            type: string
          type: array
        isQueryAggregate:
          default: false
          description: Whether or not the queries are aggregate.
          example: false
          type: boolean
      required:
      - groupFields
      - isQueryAggregate
      type: object
    GroupFieldsRequest:
      description: Monitor type and queries
      properties:
        queries:
          description: All queries from the monitor.
          items:
            $ref: '#/components/schemas/MonitorQuery'
          type: array
          uniqueItems: true
        monitorType:
          description: |-
            The type of monitor. Valid values:
              1. `Logs`: A logs query monitor.
              2. `Metrics`: A metrics query monitor.
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
      required:
      - monitorType
      - queries
      type: object
    DisableMonitorResponse:
      description: Response for disabling monitors.
      example:
        warnings:
        - code: content:not_found
          message: Monitor id=0000000000000001 not found.
        - code: content:not_found
          message: Monitor id=0000000000000001 not found.
        monitors:
          key:
            modifiedAt: 2000-01-23T04:56:07.000+00:00
            description: description
            type: type
            createdAt: 2000-01-23T04:56:07.000+00:00
            monitorType: Logs
            alertName: alertName
            permissions:
            - Read
            - Delete
            modifiedBy: modifiedBy
            id: id
            isDisabled: false
            contentType: contentType
            playbook: This issue typically happens when database calls are timing
              out. Look at ServiceA's dashboard to investigate further
            runAs: null
            notificationGroupFields:
            - service
            - env
            warnings:
              key: warnings
            timeZone: America/Los_Angeles
            triggers:
            - detectionMethod: LogsStaticCondition
              timeRange: 15m
              triggerType: Critical
              threshold: 50
              thresholdType: GreaterThanOrEqual
            - detectionMethod: LogsStaticCondition
              timeRange: 15m
              triggerType: ResolvedCritical
              threshold: 50
              thresholdType: LessThan
            version: 0
            queries:
            - query: _sourceCategory=search error
              rowId: A
            - query: _sourceCategory=search error
              rowId: A
            parentId: parentId
            isSystem: true
            groupNotifications: true
            isMutable: true
            createdBy: createdBy
            sloId: sloId
            evaluationDelay: 5m
            name: name
            automatedPlaybookIds:
            - 649dcb922b70c74b5d2110f8
            - 649dcb912b70c74b5d2110a0
            notifications:
            - notification:
                connectionType: Slack
                connectionId: "0000000000000005"
              runForTriggerTypes:
              - Critical
            - notification:
                connectionType: Email
                messageBody: Alert Triggered!
                recipients:
                - john@doe.com
                subject: "Monitor Alert: {{TriggerType}} on {{SearchName}}"
                timeZone: America/Los_Angeles
              runForTriggerTypes:
              - Critical
            status: "[Normal]"
      properties:
        monitors:
          additionalProperties:
            $ref: '#/components/schemas/MonitorsLibraryMonitorResponse'
          description: A map between an identifier and its monitor.
          maxProperties: 1000
          type: object
        warnings:
          description: Warnings from the operation.
          items:
            $ref: '#/components/schemas/DisableMonitorWarning'
          type: array
      type: object
    DisableMonitorWarning:
      description: Warning object from the operation providing details such as when
        a given monitor to disable does not exist.
      example:
        code: content:not_found
        message: Monitor id=0000000000000001 not found.
      properties:
        code:
          description: A code for the warning message.
          example: content:not_found
          type: string
        message:
          description: A short message with details about the warning.
          example: Monitor id=0000000000000001 not found.
          type: string
      type: object
    MonitorSubscriptionsListResponse:
      description: List of existing subscriptions.
      properties:
        subscriptions:
          description: List of existing subscriptions.
          items:
            $ref: '#/components/schemas/MonitorSubscription'
          type: array
        exhaustive:
          description: "If true, the list contains all existing subscriptions."
          example: true
          type: boolean
      required:
      - exhaustive
      - subscriptions
      type: object
    MonitorSubscription:
      description: The monitor subscription. Alerts can be filtered by a monitor subscription
        status.
      properties:
        targetId:
          description: The id of the subscription target. It can be either a monitor
            or a folder id.
          example: 000000000000676F
          type: string
      type: object
    MonitorSubscriptionsTargetsInput:
      description: Input array with ids of monitors or monitor folders.
      items:
        type: string
      maxItems: 100
      minItems: 1
      type: array
    MonitorSubscriptionsStatus:
      description: Subscription status of the element.
      properties:
        targetId:
          description: Id of the subscription target.
          example: 000000000000676F
          type: string
        status:
          description: Status of the subscription.
          example: Subscribed
          pattern: ^(Subscribed|SubscribedByAncestor|NotSubscribed)$
          type: string
          x-pattern-message: "should be one of the following: 'Subscribed', 'SubscribedByAncestor',\
            \ 'NotSubscribed'"
      required:
      - status
      - targetId
      type: object
    MutingInformationResponse:
      description: Muting information fields for the monitor.
      properties:
        id:
          description: Identifier of the monitor.
          example: "0000000000000001"
          type: string
        isMuted:
          default: false
          description: Flag to indicate the monitor muted or not.
          example: true
          type: boolean
        mutingEndTime:
          description: Timestamp in Epoch that this monitor is currently muted until.
          example: 1678084636
          format: int64
          type: integer
        mutingSchedules:
          description: Array of muting schedules that this monitor is associated with.
          items:
            $ref: '#/components/schemas/MutingScheduleResponse'
          type: array
        adhocMuting:
          $ref: '#/components/schemas/AdhocMutingResponse'
      required:
      - isMuted
      type: object
    MutingScheduleResponse:
      description: Muting information fields for the monitor.
      properties:
        id:
          description: Id of the muting schedule in hex.
          example: 000000000000676F
          type: string
      required:
      - id
      type: object
    AdhocMutingResponse:
      description: Muting information fields for the monitor.
      properties:
        startTime:
          description: Start time of adhoc muting period in Epoch.
          example: 1678118000
          format: int64
          type: integer
        endTime:
          description: "End time of the adhoc muting period in Epoch.If muting indefinitely,\
            \ this will be empty."
          example: 1678118025
          format: int64
          type: integer
      required:
      - startTime
      type: object
    IdToMutingInformationResponseMap:
      additionalProperties:
        $ref: '#/components/schemas/MutingInformationResponse'
      maxProperties: 1000
      type: object
    DataPointCount:
      description: The number of anomaly data points in the monitor window.
      properties:
        count:
          description: The number of data points
          example: 20
          format: int32
          type: integer
      required:
      - count
      type: object
    AnomalyDataPointsCountRequest:
      description: Monitor query and time range to calculate the number of data points.
      properties:
        relativeTimeRange:
          description: "The relative time range of the monitor. Valid values of time\
            \ ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`, `-12h`,\
            \ or `-24h`."
          example: -15m
          type: string
        queries:
          description: All queries from the monitor.
          items:
            $ref: '#/components/schemas/MonitorQuery'
          type: array
          uniqueItems: true
        monitorType:
          default: Logs
          description: The type of anomaly monitor (Logs or Metrics).
          pattern: ^(Logs|Metrics)$
          type: string
          x-pattern-message: should be either 'Logs' or 'Metrics'
      required:
      - queries
      - relativeTimeRange
      type: object
    MonitorGroupInfo:
      description: The monitor group key info for all monitors.
      properties:
        keys:
          description: The monitor group keys.
          example:
          - _host
          - _sourceCategory
          items:
            type: string
          type: array
      type: object
    MonitorScanEstimatesResponse:
      description: Monitor scan estimates
      properties:
        scanEstimates:
          description: array of scan estimates
          items:
            $ref: '#/components/schemas/TierEstimate'
          type: array
      type: object
    TierEstimate:
      description: estimate for a tier
      properties:
        tier:
          description: Name of the data tier
          example: Flex
          type: string
        perScanInBytes:
          description: estimate data scanned per monitor scan in bytes
          format: int64
          type: integer
        perDayInBytes:
          description: estimate data scanned per day in bytes
          format: int64
          type: integer
        perYearInBytes:
          description: estimate data scanned per year in bytes
          format: int64
          type: integer
        trainingScanInBytes:
          description: one-time scan for log anomaly monitor
          format: int64
          type: integer
      type: object
    MonitorScanEstimatesRequest:
      description: Request object to get monitor scan estimates
      properties:
        query:
          description: The logs query that defines the stream of data the monitor
            runs on.
          example: _sourceCategory=remix
          maxLength: 15000
          type: string
        triggers:
          description: Defines the conditions of when to send notifications.
          items:
            $ref: '#/components/schemas/TriggerCondition'
          type: array
        timezone:
          description: "Time zone for the monitor [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          example: America/Los_Angeles
          type: string
      required:
      - query
      - timezone
      - triggers
      type: object
    MonitorPlaybooksList:
      description: The list of monitor playbooks.
      items:
        $ref: '#/components/schemas/MonitorPlaybook'
      type: array
    MonitorPlaybook:
      description: The single monitor playbook.
      example:
        versionId: "1"
        playbookId: "1"
        name: Test
        description: <p>30 Seconds API Will Take To Respond</p>
        type: Analytics
      properties:
        description:
          description: The description of the monitor playbook.
          example: <p>30 Seconds API Will Take To Respond</p>
          type: string
        playbookId:
          description: The id of the playbook.
          example: "1"
          type: string
        name:
          description: The name of the playbook.
          example: Test
          type: string
        versionId:
          description: The version id of the playbook.
          example: "1"
          type: string
        type:
          description: The type of the playbook.
          example: Analytics
          type: string
      required:
      - description
      - name
      - playbookId
      - type
      - versionId
      type: object
    NextInstancesResponse:
      properties:
        nextInstances:
          description: list of next instances in epoch
          items:
            description: epoch in millisecond
            example: 1689119100000
            format: int64
            type: integer
          type: array
      type: object
    NextInstancesRequest:
      properties:
        timezone:
          description: "Time zone for the schedule per [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          type: string
        startDate:
          description: Schedule start date in the format of `yyyy-mm-dd`
          type: string
        startTime:
          description: Schedule start time in the format of `hh:mm`
          type: string
        rrule:
          description: RRule (Recurrence Rule)
          type: string
      required:
      - rrule
      - startDate
      - startTime
      - timezone
      type: object
    ListAlertsLibraryAlertResponse:
      description: List of Alerts.
      items:
        $ref: '#/components/schemas/AlertsLibraryAlertResponse'
      type: array
    RelatedAlertsLibraryAlertResponse:
      description: List of related Alerts.
      properties:
        data:
          description: All alerts related to the given alert and their relationship
            tags.
          items:
            $ref: '#/components/schemas/RelatedAlert'
          type: array
      type: object
    RelatedAlert:
      description: An alert and how it is related to the given alert
      properties:
        alert:
          $ref: '#/components/schemas/AlertsLibraryAlertResponse'
        relations:
          description: Tags describing the relationship between the two alerts.
          items:
            $ref: '#/components/schemas/RelationTypeTag'
          type: array
      type: object
    RelationTypeTag:
      description: |-
        The nature of the relationship between alerts. Valid values:
          1. `Time`: Alerts are related by their time of creation.
          2. `Entity`: Alerts are related by the entities linked to their queries.
      example: Time
      pattern: ^(Time|Entity)$
      type: string
      x-pattern-message: should be either 'Time' or 'Entity'
    AlertsListPageResponse:
      description: List of Alert list page objects.
      properties:
        data:
          description: List of alerts summaries.
          items:
            $ref: '#/components/schemas/AlertsListPageObject'
          type: array
      type: object
    AlertsListPageObject:
      description: Alert list page object.
      properties:
        id:
          description: Identifier of the alert.
          example: 000000000000000A
          type: string
        name:
          description: Name of the alert.
          example: CPU Total above 90
          type: string
        severity:
          description: |-
            The severity of the Alert. Valid values:
              1. `Critical`
              2. `Warning`
              3. `MissingData`
          example: Warning
          pattern: ^(Critical|Warning|MissingData)$
          type: string
          x-pattern-message: "should be either 'Critical', 'Warning' or 'MissingData'"
        status:
          description: |-
            The status of the Alert. Valid values:
              1. `Active`
              2. `Resolved`
          example: Active
          pattern: ^(Active|Resolved)$
          type: string
          x-pattern-message: should be either 'Active' or 'Resolved'
        entitiesInfo:
          description: |
            List of AlertEntityInfo for primary entities. The primary entity is the most concrete entity  (e.g. k8s container) that can be assigned per time series or log group,  secondary entities are the less specific ones (e.g. k8s cluster or EC2 host).
          items:
            $ref: '#/components/schemas/AlertEntityInfo'
          type: array
        secondaryEntitiesInfo:
          description: |
            List of secondary AlertEntityInfo for primary entities. Primary/secondary entities are explained in description for `entitiesInfo`.
          items:
            $ref: '#/components/schemas/AlertEntityInfo'
          type: array
        violationCount:
          description: The number of unique result groups that have met the alert
            condition.
          example: "2"
          type: string
        lastViolation:
          description: The condition from the last alert violation.
          example: greater than 90.0 for all of the last 5 minutes
          type: string
        duration:
          description: The current duration of the alert.
          example: 2 hours
          type: string
        createdAt:
          description: The creation time of the alert.
          example: "11:11 AM August 25, 2021"
          type: string
        lastUpdated:
          description: The time when this alert was updated with the most recent violation.
          example: "1:11 PM August 25, 2021"
          type: string
        isMuted:
          default: false
          description: True if the ARP was created while the monitor was muted
          example: true
          type: boolean
      type: object
    AlertChartDataResult:
      description: Response for alert response chart data visualization.
      properties:
        series:
          description: List of time series of the alert chart data.
          items:
            $ref: '#/components/schemas/SeriesData'
          type: array
        metadata:
          $ref: '#/components/schemas/AlertChartMetadata'
      required:
      - metadata
      - series
      type: object
    AlertChartMetadata:
      description: The metadata timestamps of alert chart data
      properties:
        abnormalityStartTime:
          description: The time stamp at which abnomarlity started.
          example: 1630017549842
          format: int64
          type: integer
        abnormalityEndTime:
          description: The time stamp at which abnomarlity ended.
          example: 1630017549842
          format: int64
          type: integer
        evaluationDelay:
          description: The delay duration for evaluating the monitor (relative to
            current time). The timerange of monitor will be shifted in the past by
            this delay time.
          example: 1630017549842
          format: int64
          type: integer
        alertCreatedAt:
          description: The time stamp at which the alert response page is created.
          example: 1630017549842
          format: int64
          type: integer
        alertResolvedAt:
          description: The time stamp at which the alert response page is resolved.
          example: 1630017549842
          format: int64
          type: integer
      type: object
    ActiveCount:
      description: The number of currently active alerts.
      example: 205
      format: int32
      type: integer
    PlaybookExecutionResponse:
      description: The response for executing the playbook.
      properties:
        runningId:
          description: The id of the playbook which is running.
          type: string
        playbookExecutedId:
          description: The id of the playbook when it is executed.
          type: string
      type: object
    PlaybookExecutionParameters:
      description: The parameters for executing the playbook.
      properties:
        playbookId:
          description: The id of the playbook which needs to run.
          example: "1"
          type: string
        alertId:
          description: The alert id which needs to run the playbook.
          type: string
      required:
      - alertId
      - playbookId
      type: object
    PlaybookRunningResultList:
      items:
        $ref: '#/components/schemas/PlaybookRunningResult'
      type: array
    PlaybookRunningResult:
      properties:
        startDate:
          description: The running start date time of the playbook.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        endDate:
          description: The running end date time of the playbook.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        id:
          description: The id of the playbook running.
          type: string
        playbookId:
          description: The id of the playbook.
          type: string
        isChild:
          default: false
          description: The isChild of other playbook.
          type: boolean
        name:
          description: The name of the playbook running.
          type: string
        status:
          description: The status of the playbook running.
          type: string
        statusCode:
          description: The status code of the playbook running.
          example: 200
          format: int32
          type: integer
      required:
      - id
      - isChild
      - name
      - playbookId
      - status
      - statusCode
      type: object
    PlaybookRunningListRequest:
      description: The request parameters for getting all running playbooks' status.
      properties:
        alertId:
          description: The alert id.
          example: "0000000000000001"
          type: string
      required:
      - alertId
      type: object
    CompliancePeriodRef:
      description: Reference to the compliance period of the SLO.
      properties:
        complianceRefType:
          description: Type of reference to the compliance period. Must be `Relative`.
          example: Relative
          pattern: ^(Relative)$
          type: string
          x-pattern-message: Must be `Relative`
        relativeShift:
          description: Relative shift of compliance period from the latest/current
            compliance period.
          example: -1
          type: integer
      required:
      - complianceRefType
      type: object
    DashboardSearchResult:
      properties:
        status:
          $ref: '#/components/schemas/DashboardSearchStatus'
        axes:
          $ref: '#/components/schemas/VisualDataAxes'
        series:
          description: The series returned from a search.
          items:
            $ref: '#/components/schemas/VisualDataSeries'
          type: array
        errors:
          description: Errors returned by backend.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
        timeRange:
          $ref: '#/components/schemas/BeginBoundedTimeRange'
        requestToken:
          description: A user-generated string to uniquely identify the search request.
            This field can be safely ignored if you don't intend to identify a search
            request.
          type: string
        fieldOrdering:
          description: |
            The expected ordering of the column fields in tabular format. If null or empty, the ordering is unknown or indeterminate.
          example:
          - _timeslice
          - _sourceHost
          items:
            type: string
          type: array
        infrequentScannedBytes:
          description: The total number of scanned bytes from infrequent tier data
            for the query in bytes.
          example: 350000
          format: int64
          type: number
        scannedBytes:
          $ref: '#/components/schemas/ScannedBytes'
        backfillPercent:
          description: The backfill percentage of a continuous query.
          format: float
          type: number
      required:
      - axes
      - series
      - status
      type: object
    DashboardSearchStatus:
      example:
        percentCompleted: 8
        state: state
      properties:
        state:
          description: Current state of the search.
          type: string
        percentCompleted:
          description: Percentage of search completed.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - state
      type: object
    VisualDataAxes:
      properties:
        x:
          description: The data of the primary x axis.
          items:
            $ref: '#/components/schemas/VisualAxisData'
          type: array
        "y":
          description: The data of the primary y axis.
          items:
            $ref: '#/components/schemas/VisualAxisData'
          type: array
        x2:
          description: The data of the secondary x axis.
          items:
            $ref: '#/components/schemas/VisualAxisData'
          type: array
        y2:
          description: The data of the secondary y axis.
          items:
            $ref: '#/components/schemas/VisualAxisData'
          type: array
      required:
      - x
      - "y"
      type: object
    VisualAxisData:
      properties:
        index:
          description: The value of the axis labels.
          example: 0
          format: int32
          type: integer
      type: object
    VisualDataSeries:
      properties:
        queryId:
          description: The id of the query.
          example: A
          type: string
        name:
          description: |
            The meaning of 'name' depends on the series type.
              - For results of type 'timeseries', it is the value of the 'metric' key.
              - For results of type 'nontimeseries', it is the name of one of the fields that is not part of 'xAxisKeys'.
              - For results of type 'table', it is the comma-separated string of names of all fields.
          example: max(Disk_Used)
          type: string
        dataPoints:
          description: A list of data points in the visual series.
          items:
            $ref: '#/components/schemas/VisualPointData'
          type: array
        aggregateInfo:
          $ref: '#/components/schemas/VisualAggregateData'
        metaData:
          $ref: '#/components/schemas/VisualMetaData'
        seriesType:
          description: Type of the visual series.
          example: timeseries
          pattern: ^(timeseries|nontimeseries|table)$|^$
          type: string
        xAxisKeys:
          description: Keys that will be plotted as a point on the x axis.
          example:
          - _sourceCategory
          - _sourceHost
          items:
            type: string
          type: array
        valueType:
          description: Value that represents if the series values are String or Double
          example: Double
          type: string
        source:
          description: Source of the visual series.
          example: Logs
          pattern: ^(Logs|Metrics)$|^$
          type: string
        xAxisKeyTypes:
          additionalProperties:
            type: string
          default: {}
          description: Keys that will be plotted as a point on the x axis and their
            data type
          example:
            _sourceCategory: String
          maxProperties: 1000
          type: object
        queryInfo:
          $ref: '#/components/schemas/MetricsQueryResultInfo'
      required:
      - dataPoints
      - name
      - queryId
      type: object
    VisualPointData:
      properties:
        x:
          description: Value that represents a point on the x axis.
          example: 1.0
          format: double
          type: number
        "y":
          description: Value that represents a point on the y axis.
          example: "12.3"
          type: string
        isFilled:
          default: false
          description: Whether the field is interpolated or extrapolated - not derived
            from underlying data.
          example: false
          type: boolean
        xAxisValues:
          additionalProperties:
            type: string
          default: {}
          description: Values that represents a point on the x axis.
          example:
            _sourceCategory: collector
            _collector: stag-index-7
          maxProperties: 1000
          type: object
        outlierData:
          $ref: '#/components/schemas/VisualOutlierData'
      required:
      - "y"
      type: object
    VisualOutlierData:
      properties:
        baseline:
          description: The estimated value of the data point.
          example: 1.2
          format: double
          type: number
        unit:
          description: The variation in the estimated value of the data point.
          example: 5.6
          format: double
          type: number
        lowerBound:
          description: The lower bound of the outlier band
          example: 5.3
          format: double
          type: number
        upperBound:
          description: The upper bound of the outlier band
          example: 6.3
          format: double
          type: number
        isOutlier:
          description: Indicates if the data point is outlier or not.
          example: false
          type: boolean
      required:
      - baseline
      - isOutlier
      - lowerBound
      - unit
      - upperBound
      type: object
    VisualAggregateData:
      properties:
        max:
          description: The maximum value in the series.
          example: 10.0
          format: double
          type: number
        min:
          description: The minimum value in the series.
          example: 1.2
          format: double
          type: number
        avg:
          description: The average value in the series.
          example: 5.6
          format: double
          type: number
        sum:
          description: The sum of all the values in the series.
          example: 123.4
          format: double
          type: number
        latest:
          description: The last value in the series.
          example: 23.4
          format: double
          type: number
        count:
          description: The number of values in the series.
          example: 600
          format: double
          type: number
      required:
      - avg
      - latest
      - max
      - min
      - sum
      type: object
    VisualMetaData:
      properties:
        data:
          additionalProperties:
            type: string
          default: {}
          description: The value of the metadata.
          example:
            deployment: dev
            cluster: frontend
            instance: frontend-12
          maxProperties: 1000
          type: object
      required:
      - data
      type: object
    MetricsQueryResultInfo:
      properties:
        rowId:
          description: Metrics Query row id.
          type: string
        resultContext:
          $ref: '#/components/schemas/MetricsQueryResultContext'
      type: object
    ScannedBytes:
      description: |
        The total number of scanned bytes from tiered data sources (ex. infrequent, continuous, frequent). See https://help.sumologic.com/docs/manage/partitions-data-tiers/data-tiers/ for a more detailed explaination.
      properties:
        infrequent:
          description: The total number of scanned bytes from infrequent tier data
            for the query in bytes.
          example: 350000
          format: int64
          type: integer
        continuous:
          description: The total number of scanned bytes from continuous tier data
            for the query in bytes.
          example: 350000
          format: int64
          type: integer
        frequent:
          description: The total number of scanned bytes from frequent tier data for
            the query in bytes.
          example: 350000
          format: int64
          type: integer
        security:
          description: The total number of scanned bytes from security tier data for
            the query in bytes.
          example: 350000
          format: int64
          type: integer
        tracing:
          description: The total number of scanned bytes from tracing tier data for
            the query in bytes.
          example: 350000
          format: int64
          type: integer
        upfront:
          description: The total number of scanned bytes from upfront tier data for
            the query in bytes.
          example: 350000
          format: int64
          type: integer
        metered:
          description: The total number of scanned bytes from metered tier data for
            the query in bytes.
          example: 350000
          format: int64
          type: integer
        rce:
          description: The total number of scanned bytes from rce tier data for the
            query in bytes.
          example: 350000
          format: int64
          type: integer
        flex:
          description: The total number of scanned bytes from flex tier data for the
            query in bytes.
          example: 350000
          format: int64
          type: integer
        continuousSecurity:
          description: The total number of scanned bytes from continuous security
            tier data for the query in bytes.
          example: 350000
          format: int64
          type: integer
        flexSecurity:
          description: The total number of scanned bytes from flex security tier data
            for the query in bytes.
          example: 350000
          format: int64
          type: integer
        flexUpfront:
          description: The total number of scanned bytes from flex upfront tier data
            for the query in bytes.
          example: 350000
          format: int64
          type: integer
        flexMetered:
          description: The total number of scanned bytes from flex metered tier data
            for the query in bytes.
          example: 350000
          format: int64
          type: integer
      type: object
    CompliancePeriods:
      description: Compliance periods along with SLO data availability progress.
      properties:
        timezone:
          description: "Time zone for the compliance periods as per the [IANA Time\
            \ Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          example: America/Los_Angeles
          type: string
        periods:
          description: List of CompliancePeriodProgress.
          items:
            $ref: '#/components/schemas/CompliancePeriodProgress'
          type: array
      required:
      - periods
      - timezone
      type: object
    CompliancePeriodProgress:
      description: SLO data availability progress of a compliance period.
      properties:
        relativeReference:
          description: Relative shift of compliance period from the latest/current
            compliance period.
          example: -1
          type: integer
        startTime:
          description: Start time of the compliance period.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        endTime:
          description: End time of the compliance period.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        progress:
          description: SLO data availability progress.
          example: 50.0
          format: double
          maximum: 100.0
          minimum: 0.0
          type: number
        irrecoverableError:
          description: Whether a permanent error is encountered and no further progress
            is expected.
          type: boolean
      required:
      - endTime
      - irrecoverableError
      - progress
      - relativeReference
      - startTime
      type: object
    SliQueriesValidationResult:
      description: Validation result for the SLI queries.
      properties:
        isValid:
          description: Whether or not if queries are valid.
          example: false
          type: boolean
        message:
          default: ""
          description: Message from validation.
          example: "Field fieldName not found, please check the spelling and try again."
          type: string
      type: object
    SliQueries:
      properties:
        queryGroup:
          $ref: '#/components/schemas/SliQueryGroup'
        queryType:
          description: Type of queries for SLI (Logs/Metrics).
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
          x-pattern-message: Must be `Logs` or `Metrics`
        evaluationType:
          description: SLI evaluation type.
          example: Window
          pattern: ^(Window|Request|Monitor)$
          type: string
          x-pattern-message: Must be `Window` or `Request` or `Monitor`
        windowSize:
          description: Size of the SLI aggregation window (valid only for `Window`
            evaluation type).
          example: 15m
          type: string
      required:
      - queryGroup
      - queryType
      type: object
    IdToSliStatusMap:
      additionalProperties:
        $ref: '#/components/schemas/SliStatus'
      description: Map of SLO identifier to SliStatus object.
      maxProperties: 1000
      type: object
    SliStatus:
      description: "Status of the SLI computation. If the status is successful, also\
        \ contains the SLI value and error budget remaining for the current compliance\
        \ period."
      properties:
        status:
          description: Whether the SLI computation is complete / had an error / is
            in progress.
          example: Success
          pattern: ^(Success|Error|InProgress)$
          type: string
        sliPercentage:
          description: SLI percentage for the compliance period. Available if `status`
            is `Success`.
          example: 95.14
          format: double
          type: number
        errorBudgetRemainingPercentage:
          description: Percentage of error budget remaining for the compliance period.
            Available if `status` is `Success`.
          format: double
          type: number
        absoluteErrorBudgetRemaining:
          description: "Formatted string for the absolute error budget remaining (time\
            \ duration for window-based SLIs, request count for request-based SLIs).\
            \ Available if `status` is `Success`."
          example: "1h56m, -3h45m, -241.3k req, 1.5k req"
          type: string
        progressPercentage:
          description: SLI computation progress.
          format: double
          type: number
      required:
      - status
      type: object
    SloUsageInfo:
      description: The usage info of logs and metrics SLOs.
      items:
        $ref: '#/components/schemas/SloUsage'
      type: array
    SloUsage:
      description: The usage info of SLOs.
      example:
        usage: 100
        limit: 100
        sliType: Logs
      properties:
        sliType:
          description: The type of SLO usage info (Logs/Metrics/Monitor based).
          example: Logs
          pattern: ^(Logs|Metrics|Monitors)$
          type: string
          x-pattern-message: Either `Logs` or `Metrics` or `Monitors`.
        usage:
          description: Current number of active Logs/Metrics/Monitors SLOs.
          example: 100
          type: integer
        limit:
          description: The limit of active Logs/Metrics/Monitors SLOs.
          example: 100
          type: integer
    SloScanEstimatesResponse:
      description: SLO scan estimates.
      properties:
        scanEstimates:
          description: Scan estimates by data tier for the SLO configuration.
          items:
            $ref: '#/components/schemas/TierEstimate_1'
          type: array
      type: object
    TierEstimate_1:
      description: estimate for a tier
      properties:
        tier:
          description: Name of the data tier
          example: Flex
          type: string
        perDayInBytes:
          description: estimate data scanned per day in bytes
          format: int64
          type: integer
        perYearInBytes:
          description: estimate data scanned per year in bytes
          format: int64
          type: integer
      type: object
    PasswordPolicy:
      description: Password Policy
      example:
        accountLockoutDurationInMins: 30
        minLength: 8
        accountLockoutThreshold: 6
        rememberMfa: true
        mustContainLowercase: true
        minUniquePasswords: 10
        disallowWeakPasswords: false
        mustContainUppercase: true
        failedLoginResetDurationInMins: 10
        mustContainDigits: true
        mustContainSpecialChars: true
        maxPasswordAgeInDays: 365
        requireMfa: false
        maxLength: 128
      properties:
        minLength:
          default: 8
          description: The minimum length of the password.
          example: 8
          format: int32
          maximum: 128
          minimum: 8
          type: integer
        maxLength:
          default: 128
          description: The maximum length of the password. (Setting this to any value
            other than 128 is no longer supported; this field may be deprecated in
            the future.)
          example: 128
          format: int32
          maximum: 128
          minimum: 128
          type: integer
        mustContainLowercase:
          default: true
          description: If the password must contain lower case characters.
          example: true
          type: boolean
        mustContainUppercase:
          default: true
          description: If the password must contain upper case characters.
          example: true
          type: boolean
        mustContainDigits:
          default: true
          description: If the password must contain digits.
          example: true
          type: boolean
        mustContainSpecialChars:
          default: true
          description: If the password must contain special characters.
          example: true
          type: boolean
        maxPasswordAgeInDays:
          default: 365
          description: Maximum number of days that a password can be used before user
            is required to change it. Put -1 if the user should not have to change
            their password.
          example: 365
          format: int32
          maximum: 365
          minimum: -1
          type: integer
        minUniquePasswords:
          default: 10
          description: The minimum number of unique new passwords that a user must
            use before an old password can be reused.
          example: 10
          format: int32
          maximum: 12
          minimum: 4
          type: integer
        accountLockoutThreshold:
          default: 6
          description: Number of failed login attempts allowed before account is locked-out.
          example: 6
          format: int32
          maximum: 10
          minimum: 3
          type: integer
        failedLoginResetDurationInMins:
          default: 10
          description: The duration of time in minutes that must elapse from the first
            failed login attempt after which failed login count is reset to 0.
          example: 10
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        accountLockoutDurationInMins:
          default: 30
          description: The duration of time in minutes that a locked-out account remained
            locked before getting unlocked automatically.
          example: 30
          format: int32
          maximum: 120
          minimum: 30
          type: integer
        requireMfa:
          default: false
          description: "If MFA should be required to log in. By default, this field\
            \ is set to `false`."
          example: false
          type: boolean
        rememberMfa:
          default: true
          description: If MFA should be remembered on the browser.
          example: true
          type: boolean
        disallowWeakPasswords:
          default: false
          description: "If weak passwords should be disallowed. By default, this field\
            \ is set to `false`."
          example: false
          type: boolean
      type: object
    Path:
      example:
        path: path
        pathItems:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        pathItems:
          description: Elements of the path.
          items:
            $ref: '#/components/schemas/PathItem'
          type: array
        path:
          description: String representation of the path.
          type: string
      required:
      - path
      - pathItems
      type: object
    PathItem:
      example:
        name: name
        id: id
      properties:
        id:
          description: Identifier of the path element.
          type: string
        name:
          description: Name of the path element.
          type: string
      required:
      - id
      - name
      type: object
    ContentCopyParams:
      example:
        name: name
        description: description
        parentId: parentId
      properties:
        parentId:
          description: Identifier of the parent folder to copy to.
          type: string
        name:
          description: Optionally provide a new name.
          type: string
        description:
          description: Optionally provide a new description.
          type: string
      required:
      - parentId
      type: object
    ConfidenceScoreResponse:
      description: CSE insight confidence score.
      properties:
        confidenceScore:
          description: List of confidence scores to the CSE Insights.
          type: string
      required:
      - confidenceScore
      type: object
    CseInsightConfidenceRequest:
      description: CSE insight JSON object.
      properties:
        cseInsight:
          description: List of CSE Insight Created logs for which the confidence score
            should be calculated.
          example: "\"[{\\\"timestamp\\\":\\\"1605562085024\\\",\\\"type\\\":\\\"\
            event\\\",\\\"name\\\":\\\"insight_closed\\\",\\\"tenant_hash\\\":\\\"\
            d130a603dea563686c911aa5d3f196881b1e6e7a\\\",\\\"created\\\":1605550459107,\\\
            \"id\\\":\\\"ef444d0e-b1f0-351e-aae6-b608d2a4769c\\\",\\\"insight_threshold\\\
            \":12,\\\"insight_lookback_days\\\":14,\\\"resolution\\\":\\\"Resolved\\\
            \",\\\"source\\\":\\\"RULE\\\",\\\"entity_id\\\":\\\"2254232b-d7b4-567b-b4ce-61466b79e491\\\
            \",\\\"entity_type\\\":\\\"username\\\",\\\"rule_ids\\\":[\\\"MATCH-U00018\\\
            \"],\\\"mitre_tactics\\\":[\\\"Initial Access\\\"],\\\"signals\\\":[{\\\
            \"rule_id\\\":\\\"MATCH-U00018\\\",\\\"mitre_tactic\\\":\\\"Initial Access\\\
            \",\\\"timestamp\\\":\\\"1605549391000\\\",\\\"name_hash\\\":\\\"091d66fc35b6ad361d7525238d37319b06ff0bd5\\\
            \",\\\"severity\\\":5,\\\"vendors\\\":[\\\"Proofpoint\\\"],\\\"products\\\
            \":[\\\"Targeted Attack Protection\\\"],\\\"vendor_products\\\":[\\\"\
            Proofpoint Targeted Attack Protection\\\"],\\\"object_types\\\":[\\\"\
            Email\\\"]}]}]\""
          type: string
      required:
      - cseInsight
      type: object
    PaginatedListEndpoints:
      description: List of open analytics endpoints.
      properties:
        data:
          description: An array of endpoints.
          items:
            $ref: '#/components/schemas/EndpointResponse'
          type: array
        next:
          description: Next continuation token.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - data
      type: object
    EndpointResponse:
      description: Endpoint response object.
      properties:
        id:
          description: Identifier of endpoint.
          example: 00000000000001A5
          type: string
        name:
          description: Unique name of endpoint.
          example: linear_regression
          type: string
        url:
          description: Address of endpoint.
          example: http://my-aws-lambda/linear-regression/predict
          type: string
        inputSchema:
          description: Schema of the input table to endpoint.
          example: "[]"
          type: string
        outputSchema:
          description: Schema of the output table from endpoint.
          example: "[]"
          type: string
      required:
      - id
      - inputSchema
      - name
      - outputSchema
      - url
    EndpointDefinition:
      description: Endpoint creation request object.
      properties:
        name:
          description: Unique name of endpoint.
          example: linear_regression
          type: string
        url:
          description: Address of endpoint.
          example: http://my-aws-lambda/linear-regression/predict
          type: string
        inputSchema:
          description: Schema of the input table to endpoint.
          example: "[\"field1\", \"field2\"]"
          type: string
        outputSchema:
          description: Schema of the output table from endpoint.
          example: "[\"field1\", \"field2\", \"score\"]"
          type: string
        headers:
          description: HTTP headers for endpoint.
          example: "[{\"awsRegion\": \"us-west-2\"}, {\"serviceName\": \"execute-api\"\
            }, {\"accessKey\": \"myAccessKey\"}, {\"secretKey\": \"mySecretKey\"}]"
          type: string
      required:
      - headers
      - inputSchema
      - name
      - outputSchema
      - url
    SignalsRequest:
      description: Signal Request object.
      properties:
        signalTypes:
          description: |
            A list of signal types to compute. Can be `LogFluctuation`, `DimensionalityExplanation`, `GisBenchmark` or `Anomalies`
          items:
            pattern: ^(LogFluctuation|DimensionalityExplanation|GisBenchmark|Anomalies)$|^$
            type: string
            x-pattern-message: "Must be `LogFluctuation`, `DimensionalityExplanation`,\
              \ `GisBenchmark` or `Anomalies`"
          maxItems: 1
          minItems: 1
          type: array
        signalContext:
          $ref: '#/components/schemas/SignalContext'
      required:
      - signalContext
      - signalTypes
      type: object
    SignalContext:
      discriminator:
        mapping:
          Alert: '#/components/schemas/AlertSignalContext'
        propertyName: contextType
      properties:
        contextType:
          description: Type of context of the request object.
          pattern: ^(Alert)$|^$
          type: string
          x-pattern-message: Must be `Alert`
      required:
      - contextType
      type: object
    SignalsJobResult:
      description: "The job result containing the job status, computed signals and\
        \ any warnings."
      properties:
        isComplete:
          description: Whether the signal computing job finished.
          example: true
          type: boolean
        signals:
          description: Sequence of computed signals.
          items:
            $ref: '#/components/schemas/SignalsResponse'
          type: array
        warnings:
          description: List of warnings while computing signals.
          items:
            $ref: '#/components/schemas/WarningDetails'
          type: array
      required:
      - isComplete
      - signals
      - warnings
      type: object
    SignalsResponse:
      description: Signal response object.
      properties:
        signalType:
          description: |
            The type of the signal to compute. Can be `LogFluctuation`, `DimensionalityExplanation`, `GisBenchmark` or `Anomalies`
          pattern: ^(LogFluctuation|DimensionalityExplanation|GisBenchmark|Anomalies)$|^$
          type: string
          x-pattern-message: "Must be `LogFluctuation`, `DimensionalityExplanation`,\
            \ `GisBenchmark` or `Anomalies`"
        signalId:
          description: The id for the signal result in hex format.
          example: 00000000F5000634
          type: string
        startTime:
          description: Start time of the signal.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        endTime:
          description: End time of the signal.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        summary:
          description: Description of the payload.
          example: Variation in the logs
          type: string
        payload:
          description: Json string for computed signal.
          type: string
        openInQueries:
          description: Raw data queries for the computed signal.
          items:
            $ref: '#/components/schemas/OpenInQuery'
          type: array
      required:
      - endTime
      - openInQueries
      - payload
      - signalId
      - signalType
      - startTime
      - summary
      type: object
    OpenInQuery:
      description: Raw data query for the computed signal.
      properties:
        query:
          $ref: '#/components/schemas/Query'
        startTime:
          description: Start time of the query.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        endTime:
          description: End time of the query.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
      required:
      - endTime
      - query
      - startTime
      type: object
    WarningDetails:
      description: Warning while computing signals.
      properties:
        code:
          description: Warning code.
          type: string
        message:
          description: Warning message.
          type: string
        detail:
          description: Details related to warning.
          type: string
      required:
      - code
      - detail
      - message
      type: object
    ListServiceAccountModelsResponse:
      properties:
        data:
          description: List of service accounts.
          items:
            $ref: '#/components/schemas/ServiceAccountModel'
          type: array
      required:
      - data
      type: object
    ServiceAccountModel:
      allOf:
      - $ref: '#/components/schemas/CreateServiceAccountDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - properties:
          id:
            description: Unique identifier for the service account.
            example: 000000000FE20FE2
            type: string
          isActive:
            description: True if the service account is active.
            example: true
            type: boolean
        required:
        - id
      type: object
    CreateServiceAccountDefinition:
      properties:
        name:
          description: Name of the service account.
          example: Service Account
          maxLength: 128
          minLength: 0
          type: string
        email:
          description: Email address of the service account.
          example: johndoe@acme.com
          format: email
          maxLength: 255
          type: string
        roleIds:
          description: List of roleIds associated with the service account.
          example:
          - 00000000000001DF
          - 00000000000002D2
          items:
            type: string
          type: array
      required:
      - email
      - name
      - roleIds
      type: object
    UpdateServiceAccountDefinition:
      properties:
        name:
          description: Name of the service account.
          example: Service Account
          maxLength: 128
          minLength: 0
          type: string
        isActive:
          description: This has the value `true` if the service account is active
            and `false` if it has been deactivated.
          example: true
          type: boolean
        roleIds:
          description: List of role identifiers associated with the service account.
          example:
          - 00000000000001DF
          - 00000000000002D2
          items:
            type: string
          type: array
        email:
          description: New email address of the service account.
          example: johndoe@acme.com
          format: email
          maxLength: 255
          type: string
      type: object
    ListSCIMUserModelsResponse:
      properties:
        totalResults:
          description: Total number of users that match the filter criteria
          example: 100
          type: integer
        startIndex:
          description: The index of the first returned result
          example: 1
          type: integer
        itemsPerPage:
          description: The number of results returned in this page
          example: 10
          type: integer
        Resources:
          description: List of SCIM user resources
          items:
            $ref: '#/components/schemas/SCIMUserModel'
          type: array
      type: object
    SCIMUserModel:
      allOf:
      - $ref: '#/components/schemas/SCIMCreateUserDefinition'
      - properties:
          id:
            description: Unique SCIM identifier for the user
            example: 000000000FE20FE2
            type: string
          active:
            description: True if the user is active
            example: true
            type: boolean
          meta:
            $ref: '#/components/schemas/ResourceData'
        required:
        - id
      type: object
    SCIMCreateUserDefinition:
      properties:
        schemas:
          description: Defines the SCIM schemas for the user
          example:
          - urn:ietf:params:scim:schemas:core:2.0:User
          items:
            type: string
          type: array
        userName:
          description: Unique identifier for the user (email)
          example: jdoe@example.com
          maxLength: 64
          type: string
        name:
          $ref: '#/components/schemas/NameInfo'
        emails:
          description: Sumo logic accepts only one email address
          items:
            $ref: '#/components/schemas/SCIMCreateUserDefinition_emails_inner'
          type: array
        roles:
          description: Roles should exactly match with role names within sumologic
          items:
            $ref: '#/components/schemas/SCIMCreateUserDefinition_roles_inner'
          type: array
      required:
      - emails
      - name
      - roles
      - schemas
      - userName
      type: object
    NameInfo:
      properties:
        givenName:
          description: Given name of the user (firstName)
          example: John
          type: string
        familyName:
          description: Family name of the user (lastName)
          example: Doe
          type: string
      type: object
    ResourceData:
      description: Resource meta data of a user.
      properties:
        resourceType:
          description: The name of the resource type of the resource.
          example: User
          type: string
        created:
          description: Creation timestamp in date-time format.
          example: 2024-01-01T12:00:00Z
          format: date-time
          type: string
        lastModified:
          description: Last modification timestamp in date-time format.
          example: 2024-01-01T12:00:00Z
          format: date-time
          type: string
      type: object
    SCIMUpdateUserDefinition:
      properties:
        schemas:
          description: Defines the SCIM schemas for the user
          example:
          - urn:ietf:params:scim:schemas:core:2.0:User
          items:
            type: string
          type: array
        name:
          $ref: '#/components/schemas/NameInfo'
        active:
          description: Indicates whether the user is active.
          example: true
          type: boolean
        roles:
          description: Roles should exactly match with role names within sumologic
          items:
            $ref: '#/components/schemas/SCIMCreateUserDefinition_roles_inner'
          type: array
      required:
      - active
      - name
      - roles
      - schemas
      type: object
    SCIMPatchUserDefinition:
      properties:
        schemas:
          description: Defines the SCIM schemas for the patch operation
          example:
          - urn:ietf:params:scim:api:messages:2.0:PatchOp
          items:
            type: string
          type: array
        Operations:
          description: Updates one or more attributes of a SCIM resource using a sequence
            of operations
          items:
            $ref: '#/components/schemas/SCIMPatchUserDefinition_Operations_inner'
          type: array
      required:
      - Operations
      - schemas
      type: object
    MetricsQueryResponse:
      example:
        queryResult:
        - timeSeriesList:
            timeSeries:
            - metricDefinition:
                metric: CPU_Total
                dimensions:
                  _sourceHost: us2-alert-1
                  _sourceCategory: alert
              points:
                timestamps:
                - 1623258710000
                - 1623258710000
                values:
                - 1.5
                - 1.5
            - metricDefinition:
                metric: CPU_Total
                dimensions:
                  _sourceHost: us2-alert-1
                  _sourceCategory: alert
              points:
                timestamps:
                - 1623258710000
                - 1623258710000
                values:
                - 1.5
                - 1.5
            resultContext:
              quantizationGranularity: 30000
              actualQueryTimeRange:
                start: 2018-10-16T09:10:00Z
                end: 2018-10-16T09:20:00Z
              rollup: Avg
            unit: 1/second
            timeShiftLabel: -1h
          rowId: A
        - timeSeriesList:
            timeSeries:
            - metricDefinition:
                metric: CPU_Total
                dimensions:
                  _sourceHost: us2-alert-1
                  _sourceCategory: alert
              points:
                timestamps:
                - 1623258710000
                - 1623258710000
                values:
                - 1.5
                - 1.5
            - metricDefinition:
                metric: CPU_Total
                dimensions:
                  _sourceHost: us2-alert-1
                  _sourceCategory: alert
              points:
                timestamps:
                - 1623258710000
                - 1623258710000
                values:
                - 1.5
                - 1.5
            resultContext:
              quantizationGranularity: 30000
              actualQueryTimeRange:
                start: 2018-10-16T09:10:00Z
                end: 2018-10-16T09:20:00Z
              rollup: Avg
            unit: 1/second
            timeShiftLabel: -1h
          rowId: A
        errors:
          id: AXDUI-DGH5I-TJ045
          errors:
          - code: metrics:incomplete_results
            message: Incomplete results
      properties:
        queryResult:
          description: A list of the time series returned by metric query.
          items:
            $ref: '#/components/schemas/TimeSeriesRow'
          type: array
        errors:
          allOf:
          - $ref: '#/components/schemas/ErrorResponse'
          description: "Errors, warnings, and information logged for the query."
          example:
            id: AXDUI-DGH5I-TJ045
            errors:
            - code: metrics:incomplete_results
              message: Incomplete results
          type: object
      required:
      - errors
      - queryResults
      type: object
    TimeSeriesRow:
      example:
        timeSeriesList:
          timeSeries:
          - metricDefinition:
              metric: CPU_Total
              dimensions:
                _sourceHost: us2-alert-1
                _sourceCategory: alert
            points:
              timestamps:
              - 1623258710000
              - 1623258710000
              values:
              - 1.5
              - 1.5
          - metricDefinition:
              metric: CPU_Total
              dimensions:
                _sourceHost: us2-alert-1
                _sourceCategory: alert
            points:
              timestamps:
              - 1623258710000
              - 1623258710000
              values:
              - 1.5
              - 1.5
          resultContext:
            quantizationGranularity: 30000
            actualQueryTimeRange:
              start: 2018-10-16T09:10:00Z
              end: 2018-10-16T09:20:00Z
            rollup: Avg
          unit: 1/second
          timeShiftLabel: -1h
        rowId: A
      properties:
        rowId:
          description: Row id for the query row as specified in the request.
          example: A
          type: string
        timeSeriesList:
          $ref: '#/components/schemas/TimeSeriesList'
      required:
      - rowId
      - timeSeriesList
      type: object
    TimeSeriesList:
      example:
        timeSeries:
        - metricDefinition:
            metric: CPU_Total
            dimensions:
              _sourceHost: us2-alert-1
              _sourceCategory: alert
          points:
            timestamps:
            - 1623258710000
            - 1623258710000
            values:
            - 1.5
            - 1.5
        - metricDefinition:
            metric: CPU_Total
            dimensions:
              _sourceHost: us2-alert-1
              _sourceCategory: alert
          points:
            timestamps:
            - 1623258710000
            - 1623258710000
            values:
            - 1.5
            - 1.5
        resultContext:
          quantizationGranularity: 30000
          actualQueryTimeRange:
            start: 2018-10-16T09:10:00Z
            end: 2018-10-16T09:20:00Z
          rollup: Avg
        unit: 1/second
        timeShiftLabel: -1h
      properties:
        timeSeries:
          description: A list of timeseries returned by corresponding query.
          items:
            $ref: '#/components/schemas/TimeSeries'
          type: array
        unit:
          description: Unit of the query.
          example: 1/second
          type: string
        timeShiftLabel:
          description: Time shift value if specified in request in human readable
            format.
          example: -1h
          type: string
        resultContext:
          $ref: '#/components/schemas/MetricsQueryResultContext'
      required:
      - timeSeries
      type: object
    TimeSeries:
      example:
        metricDefinition:
          metric: CPU_Total
          dimensions:
            _sourceHost: us2-alert-1
            _sourceCategory: alert
        points:
          timestamps:
          - 1623258710000
          - 1623258710000
          values:
          - 1.5
          - 1.5
      properties:
        metricDefinition:
          $ref: '#/components/schemas/MetricDefinition'
        points:
          $ref: '#/components/schemas/Points'
      required:
      - metricDefinition
      - points
      type: object
    MetricDefinition:
      example:
        metric: CPU_Total
        dimensions:
          _sourceHost: us2-alert-1
          _sourceCategory: alert
      properties:
        metric:
          description: Name of the metric returning the timeseries.
          example: CPU_Total
          type: string
        dimensions:
          additionalProperties:
            type: string
          description: Metric dimensions / metadata related to each timeseries.
          example:
            _sourceHost: us2-alert-1
            _sourceCategory: alert
          maxProperties: 1000
          type: object
      type: object
    Points:
      description: "The `values` and `timestamps` are of the same length, and points\
        \ are sorted by time ascending."
      example:
        timestamps:
        - 1623258710000
        - 1623258710000
        values:
        - 1.5
        - 1.5
      properties:
        timestamps:
          description: Array of timestamps of datapoints in milliseconds.
          items:
            example: 1623258710000
            format: int64
            type: integer
          type: array
        values:
          description: Array of values of datapoints corresponding to timestamp array.
          items:
            example: 1.5
            format: double
            type: number
          type: array
      required:
      - timestamps
      - values
      type: object
    MetricsQueryResultContext:
      example:
        quantizationGranularity: 30000
        actualQueryTimeRange:
          start: 2018-10-16T09:10:00Z
          end: 2018-10-16T09:20:00Z
        rollup: Avg
      properties:
        quantizationGranularity:
          description: Quantization granularity. Size of the quantization bucket/quant
            in milliseconds.
          example: 30000
          format: int64
          type: integer
        rollup:
          description: "We use the term rollup to refer to the aggregation function\
            \ Sumo Logic uses when quantizing metrics. Can be `Avg`, `Sum`, `Min`,\
            \ `Max`, `Count` or `Rate`."
          example: Avg
          pattern: ^(Avg|Sum|Min|Max|Count|Rate)$|^$
          type: string
        actualQueryTimeRange:
          $ref: '#/components/schemas/Iso8601TimeRange'
      type: object
    MetricsQueryRequest:
      description: A list of metrics queries to run along with the time range for
        the query.
      example:
        queries:
        - timeshift: -3600000
          query: metric=CPU_Idle
          rowId: A
          quantization: 60000
          rollup: Avg
        - timeshift: -3600000
          query: metric=CPU_Idle
          rowId: A
          quantization: 60000
          rollup: Avg
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      properties:
        queries:
          description: A list of metrics queries.
          items:
            $ref: '#/components/schemas/MetricsQueryRow'
          minItems: 1
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
      required:
      - queries
      - timeRange
      type: object
    MetricsQueryRow:
      example:
        timeshift: -3600000
        query: metric=CPU_Idle
        rowId: A
        quantization: 60000
        rollup: Avg
      properties:
        rowId:
          description: "Row id for the query row, A to Z letter."
          example: A
          pattern: "[A-Z]"
          type: string
          x-pattern-message: Row id must be one character long and must be an upper
            case letter between A and Z
        query:
          description: |-
            A metric query consists of a metric, one or more filters and optionally, one or more [Metrics Operators](https://help.sumologic.com/?cid=10144). Strictly speaking, both filters and operators are optional.

            Most of the [Metrics Operators](https://help.sumologic.com/?cid=10144) are allowed in the query string except `fillmissing`, `outlier`, `quantize` and `timeshift`.

              * `fillmissing`: Not supported in API.
              * `outlier`: Not supported in API.
              * `quantize`: Only supported through `quantization` param.
              * `timeshift`: Only supported through `timeshift` param.


            In practice, your metric queries will almost always contain filters that narrow the scope of your query. For more information about the query language see [Metrics Queries](https://help.sumologic.com/?cid=1079).
          example: metric=CPU_Idle
          maxLength: 3000
          minLength: 3
          type: string
        quantization:
          description: "Segregates time series data by time period. This allows you\
            \ to create aggregated results in buckets of fixed intervals (for example,\
            \ 5-minute intervals). The value is in milliseconds."
          example: 60000
          format: int64
          minimum: 1
          type: integer
        rollup:
          description: "We use the term rollup to refer to the aggregation function\
            \ Sumo Logic uses when quantizing metrics. Can be `Avg`, `Sum`, `Min`,\
            \ `Max`, `Count` or `None`."
          example: Avg
          pattern: ^(Count|Min|Max|Sum|Avg|None)$|^$
          type: string
          x-pattern-message: "Must be `Avg`, `Sum`, `Min`, `Max`, `Count` or `None`"
        timeshift:
          description: Shifts the time series from your metrics query by the specified
            amount of time. This can help when comparing a time series across multiple
            time periods. Specified as a signed duration in milliseconds.
          example: -3600000
          format: int64
          type: integer
      required:
      - query
      - rowId
      type: object
    CreateTraceQueryResponse:
      example:
        queryId: cafaebf2f4f8320f
      properties:
        queryId:
          description: Id of the created query
          example: cafaebf2f4f8320f
          type: string
      required:
      - queryId
      type: object
    AsyncTraceQueryRequest:
      example:
        queryRows:
        - query:
            type: type
          orderBy:
            fieldName: start_timestamp
            order: Asc
          rowId: '#A'
        - query:
            type: type
          orderBy:
            fieldName: start_timestamp
            order: Asc
          rowId: '#A'
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      properties:
        queryRows:
          description: A list of trace queries.
          items:
            $ref: '#/components/schemas/AsyncTraceQueryRow'
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
      required:
      - queryRows
      - timeRange
      type: object
    AsyncTraceQueryRow:
      example:
        query:
          type: type
        orderBy:
          fieldName: start_timestamp
          order: Asc
        rowId: '#A'
      properties:
        query:
          $ref: '#/components/schemas/TraceQueryExpression'
        rowId:
          description: "An identifier used to reference this particular row of the\
            \ query request while fetching a query result. Within a query, row ids\
            \ must have distinct values."
          example: '#A'
          maxLength: 16
          type: string
        orderBy:
          $ref: '#/components/schemas/OrderBy'
      required:
      - query
      - rowId
      type: object
    OrderBy:
      example:
        fieldName: start_timestamp
        order: Asc
      properties:
        fieldName:
          description: "Field based on which results should be sorted. When not provided,\
            \ the default behavior is to sort by timestamp descending. Sortable fields\
            \ values: `trace_id`, `start_timestamp`, `duration`, `spans_number`, `errors`,\
            \ `status_code`."
          example: start_timestamp
          maxLength: 32
          minLength: 1
          type: string
        order:
          default: Desc
          description: Type of sorting values - descending or ascending.
          example: Asc
          pattern: ^(Asc|Desc)$
          type: string
          x-pattern-message: should be either 'Asc' or 'Desc'
      required:
      - fieldName
      - order
      type: object
    TraceQueryStatusResponse:
      example:
        queryRows:
        - count: 3215
          statusMessage: Finished successfully
          rowId: A
          status: Processing
        - count: 3215
          statusMessage: Finished successfully
          rowId: A
          status: Processing
        status: Processing
      properties:
        queryRows:
          description: A list of trace queries.
          items:
            $ref: '#/components/schemas/TraceQueryRowStatus'
          type: array
        status:
          description: "Status of the query. Possible values: `Processing`, `Finished`,\
            \ `Error`, `Canceled`."
          example: Processing
          pattern: ^(Processing|Finished|Error|Canceled)$
          type: string
          x-pattern-message: "Should be either `Processing`, `Finished`, `Error`,\
            \ `Canceled`."
      required:
      - queryRows
      - status
      type: object
    TraceQueryRowStatus:
      example:
        count: 3215
        statusMessage: Finished successfully
        rowId: A
        status: Processing
      properties:
        rowId:
          description: A unique identifier of the query.
          example: A
          type: string
        status:
          description: "Status of the query. Possible values: `Processing`, `Finished`,\
            \ `Error`, `Canceled`."
          example: Processing
          pattern: ^(Processing|Finished|Error|Canceled)$
          type: string
          x-pattern-message: "Should be either `Processing`, `Finished`, `Error`,\
            \ `Canceled`."
        statusMessage:
          description: Descriptive message of the status
          example: Finished successfully
          type: string
        count:
          description: Number of results matching the query
          example: 3215
          format: int64
          minimum: 0
          type: integer
      required:
      - count
      - rowId
      - status
      type: object
    TraceQueryResultResponse:
      example:
        next: "10001"
        results:
        - rootService: user-service
          rootResource: http.request
          startedAt: 2019-11-22T09:00:00Z
          id: 00000000000120CB
          metrics:
            _duration: 143984411
          rootStatus:
            code: OK
            message: "404"
          criticalPathServiceBreakdownSummary:
            elements:
            - duration: 12957153
              service: user-service
              serviceColor: '#fa41c6'
            - duration: 12957153
              service: user-service
              serviceColor: '#fa41c6'
            otherServicesDuration: 12957153
            idleTime: 60000000
          rootOperationName: retrieveAccount
        - rootService: user-service
          rootResource: http.request
          startedAt: 2019-11-22T09:00:00Z
          id: 00000000000120CB
          metrics:
            _duration: 143984411
          rootStatus:
            code: OK
            message: "404"
          criticalPathServiceBreakdownSummary:
            elements:
            - duration: 12957153
              service: user-service
              serviceColor: '#fa41c6'
            - duration: 12957153
              service: user-service
              serviceColor: '#fa41c6'
            otherServicesDuration: 12957153
            idleTime: 60000000
          rootOperationName: retrieveAccount
      properties:
        results:
          description: List of traces matching the query.
          items:
            $ref: '#/components/schemas/TraceDetail'
          type: array
        next:
          description: Next continuation token.
          example: "10001"
          type: string
      required:
      - results
      type: object
    TraceDetail:
      example:
        rootService: user-service
        rootResource: http.request
        startedAt: 2019-11-22T09:00:00Z
        id: 00000000000120CB
        metrics:
          _duration: 143984411
        rootStatus:
          code: OK
          message: "404"
        criticalPathServiceBreakdownSummary:
          elements:
          - duration: 12957153
            service: user-service
            serviceColor: '#fa41c6'
          - duration: 12957153
            service: user-service
            serviceColor: '#fa41c6'
          otherServicesDuration: 12957153
          idleTime: 60000000
        rootOperationName: retrieveAccount
      properties:
        id:
          description: Trace identifier.
          example: 00000000000120CB
          type: string
        rootService:
          description: "Root service which started the trace. Examples: `user-service`,\
            \ `authentication-service`, `payment-service`, `/shopping-cart`"
          example: user-service
          type: string
        rootResource:
          description: "Root resource on which the trace was started. Examples: `db.query`,\
            \ `http.request`, `rpc.call`, `container`"
          example: http.request
          type: string
        rootStatus:
          $ref: '#/components/schemas/TraceSpanStatus'
        rootOperationName:
          description: The name of the operation given to the root span.
          example: retrieveAccount
          type: string
        metrics:
          additionalProperties:
            $ref: '#/components/schemas/DoubleTracingValue'
          description: Calculated trace metrics.
          example:
            _duration: 143984411
          maxProperties: 1000
          type: object
        startedAt:
          description: "Date and time the trace was started in [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2019-11-22T09:00:00Z
          format: date-time
          type: string
        criticalPathServiceBreakdownSummary:
          $ref: '#/components/schemas/CriticalPathServiceBreakdownSummary'
      required:
      - id
      type: object
    TraceSpanStatus:
      example:
        code: OK
        message: "404"
      properties:
        code:
          description: "Status code of the span. Possible values: `OK`, `ERROR`, `UNKNOWN`."
          example: OK
          type: string
        message:
          description: "Optional descriptive message about the status, could be an\
            \ http status code or the kind of an error, e.g. OSError."
          example: "404"
          type: string
      required:
      - code
      type: object
    CriticalPathServiceBreakdownSummary:
      example:
        elements:
        - duration: 12957153
          service: user-service
          serviceColor: '#fa41c6'
        - duration: 12957153
          service: user-service
          serviceColor: '#fa41c6'
        otherServicesDuration: 12957153
        idleTime: 60000000
      properties:
        elements:
          description: List of the elements representing the critical path service
            duration breakdown - contains the first few services with the longest
            overall duration of the spans contributing to the critical path.
          items:
            $ref: '#/components/schemas/CriticalPathServiceBreakdownElementBase'
          type: array
        otherServicesDuration:
          description: Overall processing time in nanoseconds consumed by the rest
            of the spans in the critical path (a sum of the duration times of the
            spans' critical path segments).
          example: 12957153
          format: int64
          type: integer
        idleTime:
          description: Overall time in nanoseconds when no particular operation was
            in progress.
          example: 60000000
          format: int64
          type: integer
      required:
      - elements
      - idleTime
      - otherServicesDuration
      type: object
    CriticalPathServiceBreakdownElementBase:
      example:
        duration: 12957153
        service: user-service
        serviceColor: '#fa41c6'
      properties:
        service:
          description: The name of the service.
          example: user-service
          type: string
        serviceColor:
          description: Color hex code assigned to the service.
          example: '#fa41c6'
          type: string
        duration:
          description: Overall processing time in nanoseconds consumed by the spans
            belonging to this service in the critical path (a sum of the duration
            times of the spans' critical path segments).
          example: 12957153
          format: int64
          type: integer
      required:
      - duration
      type: object
    TraceMetricsResponse:
      example:
        metrics:
        - metric: _duration
          description: The duration of a trace in nanoseconds.
          type: IntegerTracingValue
        - metric: _duration
          description: The duration of a trace in nanoseconds.
          type: IntegerTracingValue
      properties:
        metrics:
          description: List of trace metrics.
          items:
            $ref: '#/components/schemas/TraceMetricDetail'
          type: array
      required:
      - metrics
      type: object
    TraceMetricDetail:
      example:
        metric: _duration
        description: The duration of a trace in nanoseconds.
        type: IntegerTracingValue
      properties:
        metric:
          description: Trace metric name. In trace queries it can be used in `MetricTracingFilter.metric`.
          example: _duration
          type: string
        description:
          description: Short description of the metric.
          example: The duration of a trace in nanoseconds.
          type: string
        type:
          description: "The type the values of this field will have. Possible values:\
            \ `DoubleTracingValue`, `IntegerTracingValue`."
          example: IntegerTracingValue
          type: string
      required:
      - metric
      - type
      type: object
    TraceFieldsResponse:
      example:
        fields:
        - field: operation
          noValuesReason:
            code: HighCardinalityField
            message: Autocomplete has been disabled for this field due to high cardinality.
          valueListing: false
          description: A piece of the workflow represented by a span
          type: StringTracingValue
          fieldType: SpanEventAttribute
        - field: operation
          noValuesReason:
            code: HighCardinalityField
            message: Autocomplete has been disabled for this field due to high cardinality.
          valueListing: false
          description: A piece of the workflow represented by a span
          type: StringTracingValue
          fieldType: SpanEventAttribute
      properties:
        fields:
          description: List of filter fields.
          items:
            $ref: '#/components/schemas/TraceFieldDetail'
          type: array
      required:
      - fields
      type: object
    TraceFieldDetail:
      example:
        field: operation
        noValuesReason:
          code: HighCardinalityField
          message: Autocomplete has been disabled for this field due to high cardinality.
        valueListing: false
        description: A piece of the workflow represented by a span
        type: StringTracingValue
        fieldType: SpanEventAttribute
      properties:
        field:
          description: Filter field name.
          example: operation
          type: string
        fieldType:
          default: SpanAttribute
          description: "Indicates the kind of a field. Possible values: `SpanAttribute`,\
            \ `SpanEventAttribute`."
          example: SpanEventAttribute
          pattern: ^(SpanAttribute|SpanEventAttribute)$
          type: string
          x-pattern-message: "Should be one of: `SpanAttribute`, `SpanEventAttribute`."
        valueListing:
          description: Indicates whether values for this field can be listed.
          example: false
          type: boolean
        description:
          description: Short description of the field.
          example: A piece of the workflow represented by a span
          type: string
        type:
          description: "The type the values of this field will have. Possible values:\
            \ `DoubleTracingValue`, `IntegerTracingValue`, `StringTracingValue`, `DateTimeTracingValue`."
          example: StringTracingValue
          type: string
        noValuesReason:
          $ref: '#/components/schemas/NoTraceFieldValuesReason'
      required:
      - field
      - fieldType
      - type
      type: object
    NoTraceFieldValuesReason:
      example:
        code: HighCardinalityField
        message: Autocomplete has been disabled for this field due to high cardinality.
      properties:
        code:
          description: "A code uniquely identifying the reason for the lack of trace\
            \ field values. Possible values: `HighCardinalityField`, `AutocompleteDisabled`."
          example: HighCardinalityField
          pattern: ^(HighCardinalityField|AutocompleteDisabled)$
          type: string
          x-pattern-message: "Should be either `HighCardinalityField`, `AutocompleteDisabled`."
        message:
          description: A short English-language description of the reason.
          example: Autocomplete has been disabled for this field due to high cardinality.
          type: string
      required:
      - code
      - message
      type: object
    TraceFieldValuesResponse:
      example:
        next: Mi93V0ZqTTBzaW89
        fieldValues:
        - fieldValues
        - fieldValues
        totalCount: 1234
      properties:
        fieldValues:
          description: List of filter field values.
          items:
            type: string
          type: array
        totalCount:
          description: Total number of values for a field matching the query. Can
            be approximated when it's above 3000.
          example: 1234
          format: int64
          type: integer
        next:
          description: Next continuation token.
          example: Mi93V0ZqTTBzaW89
          type: string
      required:
      - fieldValues
      - totalCount
      type: object
    CreateCpcQueryResponse:
      properties:
        queryId:
          description: The id of the created query.
          example: cafaebf2f4f8320f
          type: string
      required:
      - queryId
      type: object
    CpcQueryRequest:
      properties:
        queryRows:
          description: A list of cpc queries.
          items:
            $ref: '#/components/schemas/CpcQueryRow'
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
      required:
      - queryRows
      - timeRange
      type: object
    CpcQueryRow:
      properties:
        query:
          $ref: '#/components/schemas/TraceQueryExpression'
        rowId:
          description: "An identifier used to reference this particular row of the\
            \ query request while fetching a query result. Within a query, row ids\
            \ must have distinct values."
          example: '#A'
          maxLength: 16
          type: string
      required:
      - query
      - rowId
      type: object
    CpcQueryStatusResponse:
      properties:
        queryRows:
          description: A list of statuses on a per query row basis.
          items:
            $ref: '#/components/schemas/CpcQueryRowStatus'
          type: array
        status:
          description: "Status of the query. Possible values: `Processing`, `Finished`,\
            \ `Error`, `Canceled`."
          example: Processing
          pattern: ^(Processing|Finished|Error|Canceled)$
          type: string
          x-pattern-message: "Should be either `Processing`, `Finished`, `Error`,\
            \ `Canceled`."
      required:
      - queryRows
      - status
      type: object
    CpcQueryRowStatus:
      properties:
        rowId:
          description: A unique identifier of the query.
          example: A
          type: string
        buckets:
          description: A list of CPC query statuses on a per time bucket basis.  Each
            status corresponds to the status of calculating aggregated CPC data from
            a sample of traces  matching search criteria falling within a specific
            time slice.
          items:
            $ref: '#/components/schemas/CpcQueryBucketStatus'
          type: array
        status:
          description: "Status of the query. Possible values: `Processing`, `Finished`,\
            \ `Error`, `Canceled`."
          example: Processing
          pattern: ^(Processing|Finished|Error|Canceled)$
          type: string
          x-pattern-message: "Should be either `Processing`, `Finished`, `Error`,\
            \ `Canceled`."
      required:
      - buckets
      - rowId
      - status
      type: object
    CpcQueryBucketStatus:
      properties:
        bucketId:
          description: A unique identifier of the bucket.
          example: A
          type: string
        status:
          description: "Status of the query. Possible values: `Processing`, `Finished`,\
            \ `Error`, `Canceled`."
          example: Processing
          pattern: ^(Processing|Finished|Error|Canceled)$
          type: string
          x-pattern-message: "Should be either `Processing`, `Finished`, `Error`,\
            \ `Canceled`."
        statusMessage:
          description: Descriptive message of the status.
          example: Finished successfully
          type: string
      required:
      - bucketId
      - status
      type: object
    CpcQueryResultResponse:
      properties:
        buckets:
          description: A list of CPC query results on a per time bucket basis.  Each
            bucket result corresponds to the aggregated CPC data from a sample of
            traces matching search criteria falling within a specific time slice.
          items:
            $ref: '#/components/schemas/CpcQueryBucketResult'
          type: array
      required:
      - buckets
      type: object
    CpcQueryBucketResult:
      properties:
        bucketId:
          description: A unique identifier of a time bucket.
          example: bucket1
          type: string
        startTimestamp:
          description: "A start of the time bucket in the [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2021-04-19T17:36:57.47623Z
          format: date-time
          type: string
        length:
          description: The length of a time bucket expressed in milliseconds.
          example: 60000
          format: int64
          type: integer
        totalNumOfTraces:
          description: The total number of traces matching the search criteria based
            on which the CPC data is aggregated.
          example: 500
          format: int64
          type: integer
        avgTraceDuration:
          description: The average duration in nanoseconds of the traces matching
            the search criteria  based on which the CPC data is aggregated.
          example: 5000
          format: double
          type: number
        perServiceCpcSummaries:
          description: The summary of aggregated Critical Path Contribution data on
            a per service basis.  Each element of the array corresponds to a summary
            for a specific service.
          items:
            $ref: '#/components/schemas/CpcServiceSummary'
          type: array
        otherServicesCpcSummary:
          $ref: '#/components/schemas/CpcSummary'
        idleTimeCpcSummary:
          $ref: '#/components/schemas/CpcSummary'
      required:
      - avgTraceDuration
      - bucketId
      - idleTimeCpcSummary
      - length
      - otherServicesCpcSummary
      - perServiceCpcSummaries
      - startTimestamp
      - totalNumOfTraces
      type: object
    CpcServiceSummary:
      properties:
        service:
          description: The name of the service.
          example: user-service
          type: string
        color:
          description: The color hex code assigned to the service.
          example: '#fa41c6'
          type: string
        cpcSummary:
          $ref: '#/components/schemas/CpcSummary'
      required:
      - color
      - cpcSummary
      - service
      type: object
    CpcSummary:
      properties:
        numOfTraces:
          description: The total number of traces matching the search criteria for
            a given service  based on which the CPC data is aggregated.
          example: 200
          format: int64
          type: integer
        avgPercentageInTrace:
          description: The total fraction (value between 0.0 and 1.0) of the trace
            duration time consumed  by a given service (or a group of services) in
            the critical path of analyzed traces.
          example: 0.24
          format: double
          type: number
        avgTimeInTrace:
          description: The average time in nanoseconds spent by a given service (or
            a group of services) in the critical path of analyzed traces.
          example: 520000
          format: double
          type: number
        totalTimeTaken:
          description: The total time in nanoseconds spent by a given service (or
            a group of services) in the critical path  of analyzed traces.
          example: 600000
          format: int64
          type: integer
      required:
      - avgPercentageInTrace
      - avgTimeInTrace
      - numOfTraces
      - totalTimeTaken
      type: object
    CpcQueryResultRequest:
      properties:
        bucketIds:
          description: A list of the identifiers of CPC query buckets for which aggregated
            Critical Path Contribution data should be fetched.
          example:
          - bucket1
          - bucket2
          items:
            type: string
          type: array
      required:
      - bucketIds
      type: object
    CreateAggregationQueryResponse:
      properties:
        queryId:
          description: The id of the created query.
          example: cafaebf2f4f8320f
          type: string
      required:
      - queryId
      type: object
    AggregationQueryRequest:
      properties:
        queryRows:
          description: A list of tracing queries.
          items:
            $ref: '#/components/schemas/AggregationQueryRow'
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        xAxisGroupByAttribute:
          $ref: '#/components/schemas/AggregationGroupByAttribute'
      required:
      - queryRows
      - timeRange
      - xAxisGroupByAttribute
      type: object
    AggregationQueryRow:
      properties:
        query:
          $ref: '#/components/schemas/TraceQueryExpression'
        rowId:
          description: "An identifier used to reference this particular row of the\
            \ query request while fetching a query result. Within a query, row ids\
            \ must have distinct values."
          example: '#A'
          maxLength: 16
          type: string
      required:
      - query
      - rowId
      type: object
    AggregationGroupByAttribute:
      description: Base group by attribute object.
      discriminator:
        propertyName: attributeType
      properties:
        attributeType:
          description: Attribute type of the object model.
          type: string
      required:
      - attributeType
      type: object
    AggregationQueryStatusResponse:
      properties:
        queryRows:
          description: A list of statuses on a per query row basis.
          items:
            $ref: '#/components/schemas/AggregationQueryRowStatus'
          type: array
        status:
          description: "Status of the query. Possible values: `Processing`, `Finished`,\
            \ `Error`, `Canceled`."
          example: Processing
          pattern: ^(Processing|Finished|Error|Canceled)$
          type: string
          x-pattern-message: "Should be either `Processing`, `Finished`, `Error`,\
            \ `Canceled`."
        statusMessage:
          description: Descriptive message of the status.
          example: Finished successfully
          type: string
      required:
      - queryRows
      - status
      type: object
    AggregationQueryRowStatus:
      properties:
        rowId:
          description: A unique identifier of the query.
          example: A
          type: string
        status:
          description: "Status of the query. Possible values: `Processing`, `Finished`,\
            \ `Error`, `Canceled`."
          example: Processing
          pattern: ^(Processing|Finished|Error|Canceled)$
          type: string
          x-pattern-message: "Should be either `Processing`, `Finished`, `Error`,\
            \ `Canceled`."
        statusMessage:
          description: Descriptive message of the status.
          example: Finished successfully
          type: string
      required:
      - rowId
      - status
      type: object
    AggregationQueryResultResponse:
      properties:
        buckets:
          description: A list of an aggregation query results on a per bucket basis.  Each
            bucket result corresponds to the number of trace query results falling
            into the bucket.
          items:
            $ref: '#/components/schemas/AggregationQueryBucketResult'
          type: array
      required:
      - buckets
      type: object
    AggregationQueryBucketResult:
      properties:
        bucketKey:
          $ref: '#/components/schemas/BucketKey'
        bucketValue:
          $ref: '#/components/schemas/BucketValue'
      required:
      - bucketKey
      - bucketValue
      type: object
    BucketKey:
      description: Base bucket key object.
      discriminator:
        propertyName: bucketKeyType
      properties:
        bucketKeyType:
          description: Bucket value type of the object model.
          type: string
      required:
      - bucketKeyType
      type: object
    BucketValue:
      description: Base bucket value object.
      discriminator:
        propertyName: bucketValueType
      properties:
        bucketValueType:
          description: Bucket value type of the object model.
          type: string
        traceCount:
          description: The number of traces per bucket.
          example: 42
          format: int64
          type: integer
      required:
      - bucketValueType
      - traceCount
      type: object
    TraceExistsResponse:
      example:
        exists: true
        url: '#/trace/00000000000120CB'
      properties:
        exists:
          description: Indicates whether the trace with the given trace id exists.
          example: true
          type: boolean
        url:
          description: A path to the trace view page in Sumo Logic UI.
          example: '#/trace/00000000000120CB'
          type: string
      required:
      - exists
      type: object
    TraceSpansResponse:
      example:
        next: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI
        spanPage:
        - serviceType: HTTP
          numberOfLinks: 2
          resource: http.request
          kind: SERVER
          serviceColor: '#fa41c6'
          startedAt: 2019-11-22T09:00:00Z
          operationName: retrieveAccount
          remoteServiceColor: '#fa41c6'
          parentId: 000000000003C7BE
          duration: 212957153
          remoteService: external-service
          service: user-service
          id: 00000000002317A9
          status:
            code: OK
            message: "404"
          remoteServiceType: HTTP
          info:
            type: TraceHttpSpanInfo
        - serviceType: HTTP
          numberOfLinks: 2
          resource: http.request
          kind: SERVER
          serviceColor: '#fa41c6'
          startedAt: 2019-11-22T09:00:00Z
          operationName: retrieveAccount
          remoteServiceColor: '#fa41c6'
          parentId: 000000000003C7BE
          duration: 212957153
          remoteService: external-service
          service: user-service
          id: 00000000002317A9
          status:
            code: OK
            message: "404"
          remoteServiceType: HTTP
          info:
            type: TraceHttpSpanInfo
        totalCount: 1234
      properties:
        spanPage:
          description: List of trace spans.
          items:
            $ref: '#/components/schemas/TraceSpan'
          type: array
        totalCount:
          description: Total count of spans for this trace.
          example: 1234
          format: int64
          type: integer
        next:
          description: Next continuation token.
          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI
          type: string
      required:
      - spans
      - totalCount
      type: object
    TraceSpan:
      example:
        serviceType: HTTP
        numberOfLinks: 2
        resource: http.request
        kind: SERVER
        serviceColor: '#fa41c6'
        startedAt: 2019-11-22T09:00:00Z
        operationName: retrieveAccount
        remoteServiceColor: '#fa41c6'
        parentId: 000000000003C7BE
        duration: 212957153
        remoteService: external-service
        service: user-service
        id: 00000000002317A9
        status:
          code: OK
          message: "404"
        remoteServiceType: HTTP
        info:
          type: TraceHttpSpanInfo
      properties:
        id:
          description: Identifier of the span.
          example: 00000000002317A9
          type: string
        parentId:
          description: "Identifier of the parent span, if any. If the span has no\
            \ parent it's considered a root span."
          example: 000000000003C7BE
          type: string
        operationName:
          description: The name of the operation given to the span.
          example: retrieveAccount
          type: string
        resource:
          description: The name of the resource attached to the span.
          example: http.request
          type: string
        service:
          description: The name of the service this span is part of.
          example: user-service
          type: string
        serviceColor:
          description: Color hex code assigned to the service.
          example: '#fa41c6'
          type: string
        serviceType:
          description: Defines type of service.
          example: HTTP
          pattern: ^(Db|HTTP|MQ|Web|Mixed|Unknown|Cpp|DotNET|Erlang|Go|Java|NodeJS|Php|Python|Ruby|WebJS|Swift|MSSQL|MySQL|Oracle|Db2|PostgreSQL|Redshift|Hive|Cloudscape|HSQLDB|Progress|MaxDB|HANADB|Ingres|FirstSQL|EnterpriseDB|Cache|Adabas|Firebird|ApacheDerby|FileMaker|Informix|InstantDB|InterBase|MariaDB|Netezza|PervasivePSQL|PointBase|SQLite|Sybase|Teradata|Vertica|H2|ColdFusion|Cassandra|HBase|MongoDB|Redis|Couchbase|CouchDB|CosmosDB|DynamoDB|Neo4j|Geode|Elasticsearch|Memcached|CockroachDB|RPC|gRPC|JavaRMI|DotNETWCF|ApacheDubbo)$
          type: string
          x-pattern-message: "Should be either `Db`, `HTTP`, `MQ`, `Web`, `Mixed`,\
            \ `Unknown`, `Cpp`, `DotNET`, `Erlang`, `Go`, `Java`, `NodeJS`, `Php`,\
            \ `Python`, `Ruby`, `WebJS`, `Swift`, `MSSQL`, `MySQL`, `Oracle`, `Db2`,\
            \ `PostgreSQL`, `Redshift`, `Hive`, `Cloudscape`, `HSQLDB`, `Progress`,\
            \ `MaxDB`, `HANADB`, `Ingres`, `FirstSQL`, `EnterpriseDB`, `Cache`, `Adabas`,\
            \ `Firebird`, `ApacheDerby`, `FileMaker`, `Informix`, `InstantDB`, `InterBase`,\
            \ `MariaDB`, `Netezza`, `PervasivePSQL`, `PointBase`, `SQLite`, `Sybase`,\
            \ `Teradata`, `Vertica`, `H2`, `ColdFusion`, `Cassandra`, `HBase`, `MongoDB`,\
            \ `Redis`, `Couchbase`, `CouchDB`, `CosmosDB`, `DynamoDB`, `Neo4j`, `Geode`,\
            \ `Elasticsearch`, `Memcached`, `CockroachDB`, `RPC`, `gRPC`, `JavaRMI`,\
            \ `DotNETWCF` or `ApacheDubbo`"
        duration:
          description: Number of nanoseconds the span lasted.
          example: 212957153
          format: int64
          type: integer
        startedAt:
          description: "Date and time the span was started in the [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2019-11-22T09:00:00Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/TraceSpanStatus'
        kind:
          description: "Span kind describes the relationship between the Span, its\
            \ parents, and its children in a Trace. Possible values: `CLIENT`, `SERVER`,\
            \ `PRODUCER`, `CONSUMER`, `INTERNAL`."
          example: SERVER
          pattern: ^(CLIENT|SERVER|PRODUCER|CONSUMER|INTERNAL)$
          type: string
          x-pattern-message: "Should be either `CLIENT`, `SERVER`, `PRODUCER`, `CONSUMER`\
            \ or `INTERNAL`."
        remoteService:
          description: Name of the possible remote span's service.
          example: external-service
          type: string
        remoteServiceColor:
          description: Color hex code assigned to the remote service.
          example: '#fa41c6'
          type: string
        remoteServiceType:
          description: Defines type of service.
          example: HTTP
          pattern: ^(Db|HTTP|MQ|Web|Mixed|Unknown|Cpp|DotNET|Erlang|Go|Java|NodeJS|Php|Python|Ruby|WebJS|Swift|MSSQL|MySQL|Oracle|Db2|PostgreSQL|Redshift|Hive|Cloudscape|HSQLDB|Progress|MaxDB|HANADB|Ingres|FirstSQL|EnterpriseDB|Cache|Adabas|Firebird|ApacheDerby|FileMaker|Informix|InstantDB|InterBase|MariaDB|Netezza|PervasivePSQL|PointBase|SQLite|Sybase|Teradata|Vertica|H2|ColdFusion|Cassandra|HBase|MongoDB|Redis|Couchbase|CouchDB|CosmosDB|DynamoDB|Neo4j|Geode|Elasticsearch|Memcached|CockroachDB|RPC|gRPC|JavaRMI|DotNETWCF|ApacheDubbo)$
          type: string
          x-pattern-message: "Should be either `Db`, `HTTP`, `MQ`, `Web`, `Mixed`,\
            \ `Unknown`, `Cpp`, `DotNET`, `Erlang`, `Go`, `Java`, `NodeJS`, `Php`,\
            \ `Python`, `Ruby`, `WebJS`, `Swift`, `MSSQL`, `MySQL`, `Oracle`, `Db2`,\
            \ `PostgreSQL`, `Redshift`, `Hive`, `Cloudscape`, `HSQLDB`, `Progress`,\
            \ `MaxDB`, `HANADB`, `Ingres`, `FirstSQL`, `EnterpriseDB`, `Cache`, `Adabas`,\
            \ `Firebird`, `ApacheDerby`, `FileMaker`, `Informix`, `InstantDB`, `InterBase`,\
            \ `MariaDB`, `Netezza`, `PervasivePSQL`, `PointBase`, `SQLite`, `Sybase`,\
            \ `Teradata`, `Vertica`, `H2`, `ColdFusion`, `Cassandra`, `HBase`, `MongoDB`,\
            \ `Redis`, `Couchbase`, `CouchDB`, `CosmosDB`, `DynamoDB`, `Neo4j`, `Geode`,\
            \ `Elasticsearch`, `Memcached`, `CockroachDB`, `RPC`, `gRPC`, `JavaRMI`,\
            \ `DotNETWCF` or `ApacheDubbo`"
        info:
          $ref: '#/components/schemas/TraceSpanInfo'
        numberOfLinks:
          description: Number of span links in this span.
          example: 2
          format: int32
          type: integer
      required:
      - duration
      - id
      - operationName
      - startedAt
      - status
      type: object
    ServiceType:
      description: Defines type of service.
      example: HTTP
      pattern: ^(Db|HTTP|MQ|Web|Mixed|Unknown|Cpp|DotNET|Erlang|Go|Java|NodeJS|Php|Python|Ruby|WebJS|Swift|MSSQL|MySQL|Oracle|Db2|PostgreSQL|Redshift|Hive|Cloudscape|HSQLDB|Progress|MaxDB|HANADB|Ingres|FirstSQL|EnterpriseDB|Cache|Adabas|Firebird|ApacheDerby|FileMaker|Informix|InstantDB|InterBase|MariaDB|Netezza|PervasivePSQL|PointBase|SQLite|Sybase|Teradata|Vertica|H2|ColdFusion|Cassandra|HBase|MongoDB|Redis|Couchbase|CouchDB|CosmosDB|DynamoDB|Neo4j|Geode|Elasticsearch|Memcached|CockroachDB|RPC|gRPC|JavaRMI|DotNETWCF|ApacheDubbo)$
      type: string
      x-pattern-message: "Should be either `Db`, `HTTP`, `MQ`, `Web`, `Mixed`, `Unknown`,\
        \ `Cpp`, `DotNET`, `Erlang`, `Go`, `Java`, `NodeJS`, `Php`, `Python`, `Ruby`,\
        \ `WebJS`, `Swift`, `MSSQL`, `MySQL`, `Oracle`, `Db2`, `PostgreSQL`, `Redshift`,\
        \ `Hive`, `Cloudscape`, `HSQLDB`, `Progress`, `MaxDB`, `HANADB`, `Ingres`,\
        \ `FirstSQL`, `EnterpriseDB`, `Cache`, `Adabas`, `Firebird`, `ApacheDerby`,\
        \ `FileMaker`, `Informix`, `InstantDB`, `InterBase`, `MariaDB`, `Netezza`,\
        \ `PervasivePSQL`, `PointBase`, `SQLite`, `Sybase`, `Teradata`, `Vertica`,\
        \ `H2`, `ColdFusion`, `Cassandra`, `HBase`, `MongoDB`, `Redis`, `Couchbase`,\
        \ `CouchDB`, `CosmosDB`, `DynamoDB`, `Neo4j`, `Geode`, `Elasticsearch`, `Memcached`,\
        \ `CockroachDB`, `RPC`, `gRPC`, `JavaRMI`, `DotNETWCF` or `ApacheDubbo`"
    TraceSpanInfo:
      discriminator:
        propertyName: type
      example:
        type: TraceHttpSpanInfo
      properties:
        type:
          description: "Type of this span. Possible values: `TraceHttpSpanInfo`, `TraceDbSpanInfo`,\
            \ `TraceMessageBusSpanInfo`."
          example: TraceHttpSpanInfo
          type: string
      required:
      - type
      type: object
    TagsReversedIndexResponse:
      properties:
        tagsIndices:
          description: List of spans tag values indices.
          items:
            $ref: '#/components/schemas/TagReversedIndex'
          maxItems: 1000
          minItems: 0
          type: array
        attributesIndices:
          description: List of spans attribute values indices.
          items:
            $ref: '#/components/schemas/AttributeReversedIndex'
          maxItems: 1000
          minItems: 0
          type: array
        next:
          description: Next continuation token.
          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI
          type: string
      type: object
    TagReversedIndex:
      properties:
        tagName:
          description: Name of the tag.
          example: k8s.container.name
          maxLength: 128
          minLength: 1
          type: string
        tagValueStatistics:
          description: List of value statistics of the given tag.
          items:
            $ref: '#/components/schemas/TagValueReversedIndex'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - tagName
      - tagValueStatistics
      type: object
    TagValueReversedIndex:
      properties:
        tagValue:
          description: Value of the tag.
          example: web-proxy
          maxLength: 128
          minLength: 1
          type: string
        spanIds:
          description: List of span ids which have the given tag and value.
          example:
          - 52c3f60425aba353
          - 432630b74ac37c60
          items:
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - spanIds
      - tagValue
      type: object
    AttributeReversedIndex:
      properties:
        attributeName:
          description: Name of the attribute.
          example: service
          maxLength: 128
          minLength: 1
          type: string
        attributeValueStatistics:
          description: List of value statistics of the given attribute.
          items:
            $ref: '#/components/schemas/AttributeValueReversedIndex'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - attributeName
      - attributeValueStatistics
      type: object
    AttributeValueReversedIndex:
      properties:
        attributeValue:
          description: Value of the attribute.
          example: rest-soa
          maxLength: 128
          minLength: 1
          type: string
        spanIds:
          description: List of span ids which have the given attribute and value.
          example:
          - 52c3f60425aba343
          - 432630b74ac37c50
          items:
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - attributeValue
      - spanIds
      type: object
    TraceLightEventsResponse:
      example:
        next: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI
        spanEvents:
          key:
          - name: domContentLoadedEventStart
            timestamp: 2021-04-19T17:36:57.47623Z
          - name: domContentLoadedEventStart
            timestamp: 2021-04-19T17:36:57.47623Z
      properties:
        spanEvents:
          additionalProperties:
            items:
              $ref: '#/components/schemas/LightSpanEvent'
            type: array
          description: "Map of span ids to lists of their events, without their attributes."
          maxProperties: 1000
          type: object
        next:
          description: Next continuation token.
          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI
          type: string
      type: object
    LightSpanEvent:
      description: "Light version of Span Event, without the attributes."
      example:
        name: domContentLoadedEventStart
        timestamp: 2021-04-19T17:36:57.47623Z
      properties:
        timestamp:
          description: "Time when an event happened in the [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2021-04-19T17:36:57.47623Z
          format: date-time
          type: string
        name:
          description: Name of the event.
          example: domContentLoadedEventStart
          type: string
      required:
      - name
      - timestamp
      type: object
    CriticalPathResponse:
      example:
        next: Mi93V0ZqTTBzaW89
        segments:
        - spanId: 00000000000120CB
          duration: 12957153
          startOffset: 311285715
          service: user-service
          serviceColor: '#fa41c6'
          fraction: 0.4
        - spanId: 00000000000120CB
          duration: 12957153
          startOffset: 311285715
          service: user-service
          serviceColor: '#fa41c6'
          fraction: 0.4
      properties:
        segments:
          description: List of span segments from the critical path.
          items:
            $ref: '#/components/schemas/SpanPathSegment'
          type: array
        next:
          description: Next continuation token.
          example: Mi93V0ZqTTBzaW89
          type: string
      required:
      - segments
      type: object
    SpanPathSegment:
      example:
        spanId: 00000000000120CB
        duration: 12957153
        startOffset: 311285715
        service: user-service
        serviceColor: '#fa41c6'
        fraction: 0.4
      properties:
        spanId:
          description: Span identifier.
          example: 00000000000120CB
          type: string
        service:
          description: The name of the service this span is part of.
          example: user-service
          type: string
        serviceColor:
          description: Color hex code assigned to the service.
          example: '#fa41c6'
          type: string
        startOffset:
          description: Number of nanoseconds from the span startedAt the segment started.
          example: 311285715
          format: int64
          type: integer
        duration:
          description: Number of nanoseconds the span segment lasted.
          example: 12957153
          format: int64
          type: integer
        fraction:
          description: The fraction (value between 0.0 and 1.0) from the trace duration
            time this segment took.
          example: 0.4
          format: double
          type: number
      required:
      - duration
      - ratio
      - spanId
      - startOffset
      type: object
    CriticalPathServiceBreakdownResponse:
      example:
        elements:
        - duration: 12957153
          numSpans: 12957153
          service: user-service
          serviceColor: '#fa41c6'
          longestSegmentDuration: 12957153
        - duration: 12957153
          numSpans: 12957153
          service: user-service
          serviceColor: '#fa41c6'
          longestSegmentDuration: 12957153
        idleTime: 60000000
      properties:
        elements:
          description: List of elements representing the critical path service breakdown.
          items:
            $ref: '#/components/schemas/CriticalPathServiceBreakdownElementDetail'
          type: array
        idleTime:
          description: Overall time in nanoseconds when no particular operation was
            in progress.
          example: 60000000
          format: int64
          type: integer
      required:
      - elements
      - idleTime
      type: object
    CriticalPathServiceBreakdownElementDetail:
      allOf:
      - $ref: '#/components/schemas/CriticalPathServiceBreakdownElementBase'
      - properties:
          numSpans:
            description: Number of spans that are part of this service.
            example: 12957153
            format: int32
            type: integer
          longestSegmentDuration:
            description: Number of nanoseconds the longest span segment in the critical
              path lasted.
            example: 12957153
            format: int64
            type: integer
        required:
        - longestSegmentDuration
        - numSpans
        type: object
      example:
        duration: 12957153
        numSpans: 12957153
        service: user-service
        serviceColor: '#fa41c6'
        longestSegmentDuration: 12957153
    TraceSpanDetail:
      allOf:
      - $ref: '#/components/schemas/TraceSpan'
      - properties:
          errorMessage:
            description: "Produced error message (could be a stack trace, database\
              \ error code, ..)"
            example: |
              Exception in thread "local[9]" java.lang.OutOfMemoryError: Java heap space
                  at my.app.force.fields.SpaceShipForceField.main(SpaceShipForceField.java:17)
            type: string
          fields:
            additionalProperties:
              $ref: '#/components/schemas/TracingValue'
            description: Fields attached to this span.
            example:
              component:
                type: StringTracingValue
                value: http
              http.request.method:
                type: StringTracingValue
                value: GET
              url.full:
                type: StringTracingValue
                value: https://example.com/v1/users/123
              http.response.status_code:
                type: StringTracingValue
                value: "200"
            type: object
          criticalPathContribution:
            $ref: '#/components/schemas/TraceSpanCriticalPathContribution'
          logs:
            description: Logs attached to this span.
            example:
            - "[19/Dec/2019:10:58:21 +0000] 'GET /v1/users/123 HTTP/1.1' 200 8215\
              \ 'http://111.111.11.1/' 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_11_1)\
              \ AppleWebKit/111.11 (KHTML, like Gecko) Chrome/11.1.1111.11 Safari/111.11'"
            - "[19/Dec/2019:10:58:24 +0000] 'GET /logo.png HTTP/1.1' 404 555 'http://111.111.11.1/'\
              \ 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_11_1) AppleWebKit/111.11\
              \ (KHTML, like Gecko) Chrome/11.1.1111.11 Safari/111.11'"
            items:
              type: string
            type: array
          events:
            description: Events attached to this span.
            items:
              $ref: '#/components/schemas/SpanEvent'
            type: array
          links:
            description: List of casually related spans.
            items:
              $ref: '#/components/schemas/SpanLink'
            type: array
        type: object
      example:
        serviceType: HTTP
        numberOfLinks: 2
        resource: http.request
        kind: SERVER
        serviceColor: '#fa41c6'
        errorMessage: |
          Exception in thread "local[9]" java.lang.OutOfMemoryError: Java heap space
              at my.app.force.fields.SpaceShipForceField.main(SpaceShipForceField.java:17)
        startedAt: 2019-11-22T09:00:00Z
        operationName: retrieveAccount
        remoteServiceColor: '#fa41c6'
        parentId: 000000000003C7BE
        duration: 212957153
        remoteService: external-service
        service: user-service
        links:
        - traceId: 00000000002317A9
          spanId: 000000000003C7BE
        - traceId: 00000000002317A9
          spanId: 000000000003C7BE
        id: 00000000002317A9
        criticalPathContribution:
          duration: 12957153
          fraction: 0.4
        fields:
          component:
            type: StringTracingValue
            value: http
          http.request.method:
            type: StringTracingValue
            value: GET
          url.full:
            type: StringTracingValue
            value: https://example.com/v1/users/123
          http.response.status_code:
            type: StringTracingValue
            value: "200"
        logs:
        - "[19/Dec/2019:10:58:21 +0000] 'GET /v1/users/123 HTTP/1.1' 200 8215 'http://111.111.11.1/'\
          \ 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_11_1) AppleWebKit/111.11 (KHTML,\
          \ like Gecko) Chrome/11.1.1111.11 Safari/111.11'"
        - "[19/Dec/2019:10:58:24 +0000] 'GET /logo.png HTTP/1.1' 404 555 'http://111.111.11.1/'\
          \ 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_11_1) AppleWebKit/111.11 (KHTML,\
          \ like Gecko) Chrome/11.1.1111.11 Safari/111.11'"
        events:
        - name: domContentLoadedEventStart
          attributes:
          - attributeValue:
              type: BooleanAttributeValue
            attributeName: message_details
          - attributeValue:
              type: BooleanAttributeValue
            attributeName: message_details
          timestamp: 2021-04-19T17:36:57.47623Z
        - name: domContentLoadedEventStart
          attributes:
          - attributeValue:
              type: BooleanAttributeValue
            attributeName: message_details
          - attributeValue:
              type: BooleanAttributeValue
            attributeName: message_details
          timestamp: 2021-04-19T17:36:57.47623Z
        status:
          code: OK
          message: "404"
        remoteServiceType: HTTP
        info:
          type: TraceHttpSpanInfo
    TraceSpanCriticalPathContribution:
      example:
        duration: 12957153
        fraction: 0.4
      properties:
        duration:
          description: Overall processing time in nanoseconds consumed by this span
            in the critical path of its trace (a sum of the duration times of this
            span's critical path segments).
          example: 12957153
          format: int64
          type: integer
        fraction:
          description: The total fraction (value between 0.0 and 1.0) of the trace
            duration time consumed by this span in the critical path of its trace.
          example: 0.4
          format: double
          type: number
      required:
      - duration
      - fraction
      type: object
    SpanEvent:
      allOf:
      - $ref: '#/components/schemas/LightSpanEvent'
      - properties:
          attributes:
            description: Span event attributes.
            items:
              $ref: '#/components/schemas/SpanEventAttribute'
            type: array
        type: object
      description: Span event containing all information (in particular attributes).
      example:
        name: domContentLoadedEventStart
        attributes:
        - attributeValue:
            type: BooleanAttributeValue
          attributeName: message_details
        - attributeValue:
            type: BooleanAttributeValue
          attributeName: message_details
        timestamp: 2021-04-19T17:36:57.47623Z
    SpanEventAttribute:
      example:
        attributeValue:
          type: BooleanAttributeValue
        attributeName: message_details
      properties:
        attributeName:
          description: Name of the attribute.
          example: message_details
          type: string
        attributeValue:
          $ref: '#/components/schemas/EventAttributeValue'
      type: object
    SpanLink:
      description: Details of the linked span.
      example:
        traceId: 00000000002317A9
        spanId: 000000000003C7BE
      properties:
        traceId:
          description: Trace identifier of the linked span.
          example: 00000000002317A9
          type: string
        spanId:
          description: Span identifier of the linked span.
          example: 000000000003C7BE
          type: string
      required:
      - spanId
      - traceId
      type: object
    TraceSpanBillingInfo:
      example:
        billedBytes: 529
        billedFormat: traceId=2ff9c457b1aa00f4;spanId=97872e33215c4275;parentSpanId=98bcdfc5da874c40;operation=spanId-97872e33215c4275;startTimestamp=1603283111874000000;endTimestamp=1603283112268000000;service=ServiceA;status.code=ERROR;status.message=ERROR;kind=SERVER;custom-tag-2=value2;_sourcehost=127.0.0.1;url.full=https://example.com/api/operation-x;message=Some
          error message;_sourcecategory=Http Input;custom-tag-1=value1;error=true;_sourcename=Http
          Input;error.kind=InvalidInput;_collector=trace-generator-collector;http.request.method=GET;
      properties:
        billedBytes:
          description: Number of bytes that were charged for the span.
          example: 529
          type: integer
        billedFormat:
          description: Billing format of the span. Number of bytes of this representation
            of the span is equal to `billedBytes`.
          example: traceId=2ff9c457b1aa00f4;spanId=97872e33215c4275;parentSpanId=98bcdfc5da874c40;operation=spanId-97872e33215c4275;startTimestamp=1603283111874000000;endTimestamp=1603283112268000000;service=ServiceA;status.code=ERROR;status.message=ERROR;kind=SERVER;custom-tag-2=value2;_sourcehost=127.0.0.1;url.full=https://example.com/api/operation-x;message=Some
            error message;_sourcecategory=Http Input;custom-tag-1=value1;error=true;_sourcename=Http
            Input;error.kind=InvalidInput;_collector=trace-generator-collector;http.request.method=GET;
          type: string
      required:
      - billedBytes
      - billedFormat
      type: object
    SpanQueryResponse:
      example:
        hasErrors: true
        queryRows:
        - executedQuery: _index=_trace_spans traceId=00000000002317A9
          isAggregation: true
          errors:
          - code: spanquery:query_validation_error
            details: "[1.78] failure: '(' expected but ')' found."
            message: Query A was invalid
          - code: spanquery:query_validation_error
            details: "[1.78] failure: '(' expected but ')' found."
            message: Query A was invalid
          rowId: A
        - executedQuery: _index=_trace_spans traceId=00000000002317A9
          isAggregation: true
          errors:
          - code: spanquery:query_validation_error
            details: "[1.78] failure: '(' expected but ')' found."
            message: Query A was invalid
          - code: spanquery:query_validation_error
            details: "[1.78] failure: '(' expected but ')' found."
            message: Query A was invalid
          rowId: A
        queryId: queryId
        timeRange:
          from:
            type: RelativeTimeRangeBoundary
          to:
            type: RelativeTimeRangeBoundary
          type: type
      properties:
        queryId:
          description: Id of the created query
          type: string
        queryRows:
          description: A list of row responses with details about individual queries.
          items:
            $ref: '#/components/schemas/SpanQueryRowResponse'
          type: array
        hasErrors:
          default: false
          description: Indicates whether there was an error while executing the query.
          example: true
          type: boolean
        timeRange:
          $ref: '#/components/schemas/BeginBoundedTimeRange'
      required:
      - queryId
      - queryRows
      type: object
    SpanQueryRowResponse:
      example:
        executedQuery: _index=_trace_spans traceId=00000000002317A9
        isAggregation: true
        errors:
        - code: spanquery:query_validation_error
          details: "[1.78] failure: '(' expected but ')' found."
          message: Query A was invalid
        - code: spanquery:query_validation_error
          details: "[1.78] failure: '(' expected but ')' found."
          message: Query A was invalid
        rowId: A
      properties:
        rowId:
          description: A unique identifier of the query.
          example: A
          type: string
        errors:
          description: List of errors which occured when executing the query
          items:
            $ref: '#/components/schemas/SpanQueryRowError'
          type: array
        isAggregation:
          default: false
          description: Indicates whether this query is an aggregation
          example: true
          type: boolean
        executedQuery:
          description: The executed query after rewriting
          example: _index=_trace_spans traceId=00000000002317A9
          type: string
      required:
      - isAggregation
      - rowId
      type: object
    SpanQueryRowError:
      example:
        code: spanquery:query_validation_error
        details: "[1.78] failure: '(' expected but ')' found."
        message: Query A was invalid
      properties:
        code:
          description: The error code.
          example: spanquery:query_validation_error
          type: string
        message:
          description: Short description of the occured error.
          example: Query A was invalid
          type: string
        details:
          description: Details about the occured error.
          example: "[1.78] failure: '(' expected but ')' found."
          type: string
      required:
      - code
      - message
      type: object
    SpanQueryRequest:
      example:
        timeZone: America/Los_Angeles
        queryRows:
        - queryString: queryString
          rowId: A
        - queryString: queryString
          rowId: A
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      properties:
        queryRows:
          description: A list of span analytics queries.
          items:
            $ref: '#/components/schemas/SpanQueryRow'
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        timeZone:
          default: UTC
          description: "Time zone for the query time ranges. Follow the format in\
            \ the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
          example: America/Los_Angeles
          type: string
      required:
      - queryRows
      - timeRange
      type: object
    SpanQueryRow:
      example:
        queryString: queryString
        rowId: A
      properties:
        queryString:
          description: Query string using the log search syntax.
          type: string
        rowId:
          description: "An identifier used to reference this particular row of the\
            \ query request. Within a query, row ids must have distinct values."
          example: A
          pattern: "^[a-zA-Z0-9_]*$"
          type: string
      required:
      - queryString
      - rowId
      type: object
    SpanQueryStatusResponse:
      example:
        queryRows:
        - approximatedFieldCounts: false
          facetsCompleted: false
          count: 3215
          statusMessage: Finished successfully
          rowId: A
          status: Processing
        - approximatedFieldCounts: false
          facetsCompleted: false
          count: 3215
          statusMessage: Finished successfully
          rowId: A
          status: Processing
        status: Processing
      properties:
        queryRows:
          description: A list of span analytics queries.
          items:
            $ref: '#/components/schemas/SpanQueryRowStatus'
          type: array
        status:
          description: "Status of the query. Possible values: `Processing`, `Finished`,\
            \ `Error`, `Paused`"
          example: Processing
          pattern: ^(Processing|Finished|Error|Paused)$
          type: string
          x-pattern-message: "Should be either `Processing`, `Finished`, `Error`,\
            \ `Paused`."
      required:
      - queryRows
      - status
      type: object
    SpanQueryRowStatus:
      example:
        approximatedFieldCounts: false
        facetsCompleted: false
        count: 3215
        statusMessage: Finished successfully
        rowId: A
        status: Processing
      properties:
        rowId:
          description: A unique identifier of the query.
          example: A
          type: string
        status:
          description: "Status of the query. Possible values: `Processing`, `Finished`,\
            \ `Error`, `Paused`."
          example: Processing
          pattern: ^(Processing|Finished|Error|Paused)$
          type: string
          x-pattern-message: "Should be either `Processing`, `Finished`, `Error`,\
            \ `Paused`."
        statusMessage:
          description: Descriptive message of the status.
          example: Finished successfully
          type: string
        count:
          description: Number of results matching the query
          example: 3215
          format: int64
          minimum: 0
          type: integer
        approximatedFieldCounts:
          description: Indicates whether facet field cardinality counts are approximated
            or not.
          example: false
          type: boolean
        facetsCompleted:
          description: Indicates whether facets calculation has completed.
          example: false
          type: boolean
      required:
      - count
      - rowId
      - status
      type: object
    SpanQueryResultSpansResponse:
      example:
        next: Mi93V0ZqTTBzaW89
        spanPage:
        - spanId: 00000000002317A9
          traceId: 1BB004A0005213C2
          duration: 212957153
          metadata:
            _sourceCategory: account-backend
          remoteService: external-service
          service: user-service
          kind: SERVER
          startedAt: 2019-11-22T09:00:00Z
          operationName: retrieveAccount
          parentSpanId: 000000000003C7BE
          tagsJSON: |-
            {
              &quot;http.host&quot;:&quot;http://example.com&quot;,
              &quot;http.request.method&quot;:&quot;GET&quot;
            }
          status:
            code: OK
            message: "404"
        - spanId: 00000000002317A9
          traceId: 1BB004A0005213C2
          duration: 212957153
          metadata:
            _sourceCategory: account-backend
          remoteService: external-service
          service: user-service
          kind: SERVER
          startedAt: 2019-11-22T09:00:00Z
          operationName: retrieveAccount
          parentSpanId: 000000000003C7BE
          tagsJSON: |-
            {
              &quot;http.host&quot;:&quot;http://example.com&quot;,
              &quot;http.request.method&quot;:&quot;GET&quot;
            }
          status:
            code: OK
            message: "404"
      properties:
        spanPage:
          description: List of trace spans.
          items:
            $ref: '#/components/schemas/SpanQuerySpanData'
          type: array
        next:
          description: Next continuation token.
          example: Mi93V0ZqTTBzaW89
          type: string
      required:
      - spanPage
      type: object
    SpanQuerySpanData:
      example:
        spanId: 00000000002317A9
        traceId: 1BB004A0005213C2
        duration: 212957153
        metadata:
          _sourceCategory: account-backend
        remoteService: external-service
        service: user-service
        kind: SERVER
        startedAt: 2019-11-22T09:00:00Z
        operationName: retrieveAccount
        parentSpanId: 000000000003C7BE
        tagsJSON: |-
          {
            &quot;http.host&quot;:&quot;http://example.com&quot;,
            &quot;http.request.method&quot;:&quot;GET&quot;
          }
        status:
          code: OK
          message: "404"
      properties:
        spanId:
          description: Identifier of the span.
          example: 00000000002317A9
          type: string
        traceId:
          description: Identifier of the trace.
          example: 1BB004A0005213C2
          type: string
        parentSpanId:
          description: "Identifier of the parent span, if any. If the span has no\
            \ parent it's considered a root span."
          example: 000000000003C7BE
          type: string
        operationName:
          description: The name of the operation given to the span.
          example: retrieveAccount
          type: string
        service:
          description: The name of the service this span is part of.
          example: user-service
          type: string
        remoteService:
          description: Name of the possible remote span's service.
          example: external-service
          type: string
        duration:
          description: Number of nanoseconds the span lasted.
          example: 212957153
          format: int64
          type: integer
        startedAt:
          description: "Date and time the span was started in [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2019-11-22T09:00:00Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/TraceSpanStatus'
        kind:
          description: "Span kind describes the relationship between the Span, its\
            \ parents, and its children in a Trace. Possible values: `CLIENT`, `SERVER`,\
            \ `PRODUCER`, `CONSUMER`, `INTERNAL`."
          example: SERVER
          pattern: ^(CLIENT|SERVER|PRODUCER|CONSUMER|INTERNAL)$
          type: string
          x-pattern-message: "Should be either `CLIENT`, `SERVER`, `PRODUCER`, `CONSUMER`\
            \ or `INTERNAL`."
        tagsJSON:
          description: Tags attached to this span as JSON.
          example: |-
            {
              &quot;http.host&quot;:&quot;http://example.com&quot;,
              &quot;http.request.method&quot;:&quot;GET&quot;
            }
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Metadata attached to the span.
          example:
            _sourceCategory: account-backend
          maxProperties: 1000
          type: object
      required:
      - duration
      - startedAt
      type: object
    SpanQueryResultFacetsResponse:
      example:
        facets:
        - dataType: String
          name: _sourceHost
          inSchema: false
          valueFrequency:
            _sourceHost: 34099
          cardinality: 3
        - dataType: String
          name: _sourceHost
          inSchema: false
          valueFrequency:
            _sourceHost: 34099
          cardinality: 3
      properties:
        facets:
          description: List of facets.
          items:
            $ref: '#/components/schemas/SpanQueryRowFacet'
          type: array
      required:
      - facets
      type: object
    SpanQueryRowFacet:
      example:
        dataType: String
        name: _sourceHost
        inSchema: false
        valueFrequency:
          _sourceHost: 34099
        cardinality: 3
      properties:
        name:
          description: Name of the field facet.
          example: _sourceHost
          type: string
        cardinality:
          description: The number of unique values this field occured.
          example: 3
          format: int32
          type: integer
        dataType:
          description: Data type of the field.
          example: String
          pattern: ^(String|Int|Long|Double|Boolean)$
          type: string
          x-pattern-message: "Should be either `String`, `Int`, `Long`, `Double` or\
            \ `Boolean`."
        inSchema:
          description: Indicates whether the field is available in the span schema.
          example: false
          type: boolean
        valueFrequency:
          additionalProperties:
            format: int64
            type: integer
          description: Map of field value frequencies.
          example:
            _sourceHost: 34099
          maxProperties: 1000
          type: object
      required:
      - cardinality
      - dataType
      - name
      type: object
    SpanQueryAggregateResponse:
      example:
        result:
          series:
          - metaData:
              data:
                deployment: dev
                cluster: frontend
                instance: frontend-12
            seriesType: TIMESERIES
            valueType: DOUBLE
            name: max(Disk_Used)
            dataPoints:
            - x: 1.0
              "y": "12.3"
              xAxisValues:
                operation: /get/accounts
                service: accountService
            - x: 1.0
              "y": "12.3"
              xAxisValues:
                operation: /get/accounts
                service: accountService
            xAxisKeys:
            - _sourceCategory
            - _sourceHost
            aggregateInfo:
              min: 1.2
              avg: 5.6
              max: 10.0
              count: 600
              sum: 123.4
              latest: 23.4
            queryId: A
          - metaData:
              data:
                deployment: dev
                cluster: frontend
                instance: frontend-12
            seriesType: TIMESERIES
            valueType: DOUBLE
            name: max(Disk_Used)
            dataPoints:
            - x: 1.0
              "y": "12.3"
              xAxisValues:
                operation: /get/accounts
                service: accountService
            - x: 1.0
              "y": "12.3"
              xAxisValues:
                operation: /get/accounts
                service: accountService
            xAxisKeys:
            - _sourceCategory
            - _sourceHost
            aggregateInfo:
              min: 1.2
              avg: 5.6
              max: 10.0
              count: 600
              sum: 123.4
              latest: 23.4
            queryId: A
          statusMessage: Finished successfully
          status: Processing
      properties:
        result:
          $ref: '#/components/schemas/SpanQueryAggregateResult'
      required:
      - result
      type: object
    SpanQueryAggregateResult:
      example:
        series:
        - metaData:
            data:
              deployment: dev
              cluster: frontend
              instance: frontend-12
          seriesType: TIMESERIES
          valueType: DOUBLE
          name: max(Disk_Used)
          dataPoints:
          - x: 1.0
            "y": "12.3"
            xAxisValues:
              operation: /get/accounts
              service: accountService
          - x: 1.0
            "y": "12.3"
            xAxisValues:
              operation: /get/accounts
              service: accountService
          xAxisKeys:
          - _sourceCategory
          - _sourceHost
          aggregateInfo:
            min: 1.2
            avg: 5.6
            max: 10.0
            count: 600
            sum: 123.4
            latest: 23.4
          queryId: A
        - metaData:
            data:
              deployment: dev
              cluster: frontend
              instance: frontend-12
          seriesType: TIMESERIES
          valueType: DOUBLE
          name: max(Disk_Used)
          dataPoints:
          - x: 1.0
            "y": "12.3"
            xAxisValues:
              operation: /get/accounts
              service: accountService
          - x: 1.0
            "y": "12.3"
            xAxisValues:
              operation: /get/accounts
              service: accountService
          xAxisKeys:
          - _sourceCategory
          - _sourceHost
          aggregateInfo:
            min: 1.2
            avg: 5.6
            max: 10.0
            count: 600
            sum: 123.4
            latest: 23.4
          queryId: A
        statusMessage: Finished successfully
        status: Processing
      properties:
        status:
          description: "Status of the query. Possible values: `Processing`, `Finished`,\
            \ `Error`, `Paused`."
          example: Processing
          pattern: ^(Processing|Finished|Error|Paused)$
          type: string
          x-pattern-message: "Should be either `Processing`, `Finished`, `Error`,\
            \ `Paused`."
        statusMessage:
          description: Descriptive message of the status
          example: Finished successfully
          type: string
        series:
          description: The series returned from a search.
          items:
            $ref: '#/components/schemas/SpanQueryAggregateDataSeries'
          type: array
      required:
      - series
      - status
      type: object
    SpanQueryAggregateDataSeries:
      example:
        metaData:
          data:
            deployment: dev
            cluster: frontend
            instance: frontend-12
        seriesType: TIMESERIES
        valueType: DOUBLE
        name: max(Disk_Used)
        dataPoints:
        - x: 1.0
          "y": "12.3"
          xAxisValues:
            operation: /get/accounts
            service: accountService
        - x: 1.0
          "y": "12.3"
          xAxisValues:
            operation: /get/accounts
            service: accountService
        xAxisKeys:
        - _sourceCategory
        - _sourceHost
        aggregateInfo:
          min: 1.2
          avg: 5.6
          max: 10.0
          count: 600
          sum: 123.4
          latest: 23.4
        queryId: A
      properties:
        queryId:
          description: The id of the query.
          example: A
          type: string
        name:
          description: |
            The meaning of 'name' depends on the series type.
              - For results of type 'timeseries', it is the value of the x axis 'field' key.
              - For results of type 'nontimeseries', it is the name of one of the fields that is not part of 'xAxisKeys'.
              - For results of type 'table', it is the comma-separated string of names of all fields.
          example: max(Disk_Used)
          type: string
        dataPoints:
          description: A list of data points in the series.
          items:
            $ref: '#/components/schemas/SpanQueryAggregatePointData'
          type: array
        aggregateInfo:
          $ref: '#/components/schemas/SpanQueryAggregateAggregateData'
        metaData:
          $ref: '#/components/schemas/SpanQueryAggregateMetaData'
        seriesType:
          description: Type of the visual series.
          example: TIMESERIES
          pattern: ^(TIMESERIES|NONTIMESERIES|TABLE)$
          type: string
          x-pattern-message: "Should be either `TIMESERIES`, `NONTIMESERIES`, `TABLE`."
        xAxisKeys:
          description: Keys that will be plotted as a point on the x axis.
          example:
          - _sourceCategory
          - _sourceHost
          items:
            type: string
          type: array
        valueType:
          description: Type of the values in the series.
          example: DOUBLE
          pattern: ^(STRING|DOUBLE)$
          type: string
          x-pattern-message: "Should be either `STRING`, `DOUBLE`."
      required:
      - dataPoints
      - name
      - queryId
      type: object
    SpanQueryAggregatePointData:
      example:
        x: 1.0
        "y": "12.3"
        xAxisValues:
          operation: /get/accounts
          service: accountService
      properties:
        x:
          description: Value that represents a point on the x axis.
          example: 1.0
          format: double
          type: number
        "y":
          description: Value that represents a point on the y axis.
          example: "12.3"
          type: string
        xAxisValues:
          additionalProperties:
            type: string
          default: {}
          description: Values that represents a point on the x axis.
          example:
            operation: /get/accounts
            service: accountService
          maxProperties: 1000
          type: object
      required:
      - "y"
      type: object
    SpanQueryAggregateAggregateData:
      example:
        min: 1.2
        avg: 5.6
        max: 10.0
        count: 600
        sum: 123.4
        latest: 23.4
      properties:
        max:
          description: The maximum value in the series.
          example: 10.0
          format: double
          type: number
        min:
          description: The minimum value in the series.
          example: 1.2
          format: double
          type: number
        avg:
          description: The average value in the series.
          example: 5.6
          format: double
          type: number
        sum:
          description: The sum of all the values in the series.
          example: 123.4
          format: double
          type: number
        latest:
          description: The last value in the series.
          example: 23.4
          format: double
          type: number
        count:
          description: The number of values in the series.
          example: 600
          format: double
          type: number
      required:
      - avg
      - latest
      - max
      - min
      - sum
      type: object
    SpanQueryAggregateMetaData:
      example:
        data:
          deployment: dev
          cluster: frontend
          instance: frontend-12
      properties:
        data:
          additionalProperties:
            type: string
          default: {}
          description: The value of the metadata.
          example:
            deployment: dev
            cluster: frontend
            instance: frontend-12
          maxProperties: 1000
          type: object
      required:
      - data
      type: object
    SpanQueryFieldsResponse:
      example:
        fields:
        - field: operation
          noValuesReason:
            code: HighCardinalityField
            message: Autocomplete has been disabled for this field due to high cardinality.
          valueListing: false
          inSchema: false
          description: A piece of the workflow represented by a span
          type: StringTracingValue
          fieldType: SpanEventAttribute
        - field: operation
          noValuesReason:
            code: HighCardinalityField
            message: Autocomplete has been disabled for this field due to high cardinality.
          valueListing: false
          inSchema: false
          description: A piece of the workflow represented by a span
          type: StringTracingValue
          fieldType: SpanEventAttribute
      properties:
        fields:
          description: List of span fields.
          items:
            $ref: '#/components/schemas/SpanQueryFieldDetail'
          type: array
      required:
      - fields
      type: object
    SpanQueryFieldDetail:
      allOf:
      - $ref: '#/components/schemas/TraceFieldDetail'
      - properties:
          inSchema:
            description: Indicates whether the field is available in the schema.
            example: false
            type: boolean
        required:
        - inSchema
        type: object
      example:
        field: operation
        noValuesReason:
          code: HighCardinalityField
          message: Autocomplete has been disabled for this field due to high cardinality.
        valueListing: false
        inSchema: false
        description: A piece of the workflow represented by a span
        type: StringTracingValue
        fieldType: SpanEventAttribute
    ServiceMapResponse:
      example:
        nodes:
        - lastSeenAt: 2019-11-22T09:00:00Z
          serviceType: HTTP
          serviceColor: '#fa41c6'
          isRemote: true
          serviceName: service_name_1
        - lastSeenAt: 2019-11-22T09:00:00Z
          serviceType: HTTP
          serviceColor: '#fa41c6'
          isRemote: true
          serviceName: service_name_1
        edges:
        - lastSeenAt: 2019-11-22T09:00:00Z
          source: service_name_1
          target: service_name_2
        - lastSeenAt: 2019-11-22T09:00:00Z
          source: service_name_1
          target: service_name_2
      properties:
        nodes:
          description: List of service map nodes.
          items:
            $ref: '#/components/schemas/ServiceMapNode'
          type: array
        edges:
          description: List of service map edges.
          items:
            $ref: '#/components/schemas/ServiceMapEdge'
          type: array
      required:
      - edges
      - nodes
      type: object
    ServiceMapNode:
      example:
        lastSeenAt: 2019-11-22T09:00:00Z
        serviceType: HTTP
        serviceColor: '#fa41c6'
        isRemote: true
        serviceName: service_name_1
      properties:
        serviceName:
          description: Name of a service in a service map.
          example: service_name_1
          type: string
        serviceColor:
          description: Color hex code assigned to the service.
          example: '#fa41c6'
          type: string
        lastSeenAt:
          description: The last time in UTC a service has been seen. Formatted as
            defined by date-time - RFC3339.
          example: 2019-11-22T09:00:00Z
          format: date-time
          type: string
        isRemote:
          description: Indicates whether node comes from inferred remote service or
            instrumented one.
          example: true
          type: boolean
        serviceType:
          description: Defines type of service.
          example: HTTP
          pattern: ^(Db|HTTP|MQ|Web|Mixed|Unknown|Cpp|DotNET|Erlang|Go|Java|NodeJS|Php|Python|Ruby|WebJS|Swift|MSSQL|MySQL|Oracle|Db2|PostgreSQL|Redshift|Hive|Cloudscape|HSQLDB|Progress|MaxDB|HANADB|Ingres|FirstSQL|EnterpriseDB|Cache|Adabas|Firebird|ApacheDerby|FileMaker|Informix|InstantDB|InterBase|MariaDB|Netezza|PervasivePSQL|PointBase|SQLite|Sybase|Teradata|Vertica|H2|ColdFusion|Cassandra|HBase|MongoDB|Redis|Couchbase|CouchDB|CosmosDB|DynamoDB|Neo4j|Geode|Elasticsearch|Memcached|CockroachDB|RPC|gRPC|JavaRMI|DotNETWCF|ApacheDubbo)$
          type: string
          x-pattern-message: "Should be either `Db`, `HTTP`, `MQ`, `Web`, `Mixed`,\
            \ `Unknown`, `Cpp`, `DotNET`, `Erlang`, `Go`, `Java`, `NodeJS`, `Php`,\
            \ `Python`, `Ruby`, `WebJS`, `Swift`, `MSSQL`, `MySQL`, `Oracle`, `Db2`,\
            \ `PostgreSQL`, `Redshift`, `Hive`, `Cloudscape`, `HSQLDB`, `Progress`,\
            \ `MaxDB`, `HANADB`, `Ingres`, `FirstSQL`, `EnterpriseDB`, `Cache`, `Adabas`,\
            \ `Firebird`, `ApacheDerby`, `FileMaker`, `Informix`, `InstantDB`, `InterBase`,\
            \ `MariaDB`, `Netezza`, `PervasivePSQL`, `PointBase`, `SQLite`, `Sybase`,\
            \ `Teradata`, `Vertica`, `H2`, `ColdFusion`, `Cassandra`, `HBase`, `MongoDB`,\
            \ `Redis`, `Couchbase`, `CouchDB`, `CosmosDB`, `DynamoDB`, `Neo4j`, `Geode`,\
            \ `Elasticsearch`, `Memcached`, `CockroachDB`, `RPC`, `gRPC`, `JavaRMI`,\
            \ `DotNETWCF` or `ApacheDubbo`"
      required:
      - isRemote
      - lastSeenAt
      - serviceName
      - serviceType
      type: object
    ServiceMapEdge:
      example:
        lastSeenAt: 2019-11-22T09:00:00Z
        source: service_name_1
        target: service_name_2
      properties:
        source:
          description: Name of a source service. Edge is directed from source to target.
          example: service_name_1
          type: string
        target:
          description: Name of a target service. Edge is directed from source to target.
          example: service_name_2
          type: string
        lastSeenAt:
          description: The last time in UTC an edge has been seen. Formatted as defined
            by date-time - RFC3339.
          example: 2019-11-22T09:00:00Z
          format: date-time
          type: string
      required:
      - lastSeenAt
      - source
      - target
      type: object
    DatastoreStatusResponse:
      example:
        sourceStatus:
        - diskSize: 1024
          indicatorCount: 1024
          sumoProvided: false
          supportsCat: false
          description: This is a stix1.2 indicators source
          source: unit42_source
          enabled: true
        - diskSize: 1024
          indicatorCount: 1024
          sumoProvided: false
          supportsCat: false
          description: This is a stix1.2 indicators source
          source: unit42_source
          enabled: true
        diskSize: 1024
        indicatorCount: 100
        indicatorLimit: 10000000
      properties:
        diskSize:
          description: Total DB size in terms of disk bytes
          example: 1024
          format: int64
          type: integer
        indicatorCount:
          description: Total number of indicators in the DB
          example: 100
          format: int64
          type: integer
        indicatorLimit:
          description: Limit number of indicators supported in the DB
          example: 10000000
          format: int64
          type: integer
        sourceStatus:
          description: A list of sources and their individual DB sizes and indicator
            counts
          items:
            $ref: '#/components/schemas/DatastoreSourceStatusResponse'
          type: array
      required:
      - diskSize
      - indicatorCount
      - indicatorLimit
      - sourceStatus
      type: object
    DatastoreSourceStatusResponse:
      description: DB sizes and indicator counts for an individual source
      example:
        diskSize: 1024
        indicatorCount: 1024
        sumoProvided: false
        supportsCat: false
        description: This is a stix1.2 indicators source
        source: unit42_source
        enabled: true
      properties:
        source:
          description: The source name
          example: unit42_source
          type: string
        description:
          description: The source description
          example: This is a stix1.2 indicators source
          type: string
        diskSize:
          description: Disk utilization in bytes estimate for the indicator source
          example: 1024
          format: int64
          type: integer
        indicatorCount:
          description: Number of indicators for the indicator source
          example: 1024
          format: int64
          type: integer
        sumoProvided:
          description: True if sumo provided source
          example: false
          type: boolean
        supportsCat:
          description: True if can be used in cat operator
          example: false
          type: boolean
        enabled:
          description: True if enabled
          example: true
          type: boolean
      required:
      - source
      type: object
    DatastoreRetentionPeriod:
      example:
        retentionPeriod: 120
      properties:
        retentionPeriod:
          description: Retention period in days.
          example: 120
          format: int64
          type: integer
      required:
      - retentionPeriod
      type: object
    UploadNormalizedIndicatorRequest:
      example:
        indicators:
        - indicator: 182.158.1.1
          killChain: "KC1,KC2"
          actors: "actor1,actor2"
          threatType: indicator
          confidence: 8
          validUntil: 2023-03-21T12:00:00Z
          id: indicator--d81f86b9-975b-4c0b-875e-810c5ad45a4f
          source: FreeTAXII
          validFrom: 2023-03-21T12:00:00Z
          type: ipv4-addr:value
          fields:
            key: fields
          updated: 2023-03-21T12:00:00Z
        - indicator: 182.158.1.1
          killChain: "KC1,KC2"
          actors: "actor1,actor2"
          threatType: indicator
          confidence: 8
          validUntil: 2023-03-21T12:00:00Z
          id: indicator--d81f86b9-975b-4c0b-875e-810c5ad45a4f
          source: FreeTAXII
          validFrom: 2023-03-21T12:00:00Z
          type: ipv4-addr:value
          fields:
            key: fields
          updated: 2023-03-21T12:00:00Z
      properties:
        indicators:
          description: The list of normalized threat intel indicators to upload.
          items:
            $ref: '#/components/schemas/NormalizedIndicator'
          type: array
      required:
      - indicators
      type: object
    NormalizedIndicator:
      example:
        indicator: 182.158.1.1
        killChain: "KC1,KC2"
        actors: "actor1,actor2"
        threatType: indicator
        confidence: 8
        validUntil: 2023-03-21T12:00:00Z
        id: indicator--d81f86b9-975b-4c0b-875e-810c5ad45a4f
        source: FreeTAXII
        validFrom: 2023-03-21T12:00:00Z
        type: ipv4-addr:value
        fields:
          key: fields
        updated: 2023-03-21T12:00:00Z
      properties:
        id:
          description: ID of the indicator
          example: indicator--d81f86b9-975b-4c0b-875e-810c5ad45a4f
          type: string
        indicator:
          description: Value of the indicator
          example: 182.158.1.1
          type: string
        type:
          description: Type of indicator
          example: ipv4-addr:value
          type: string
        source:
          description: User-provided text to identify the source of the indicator
          example: FreeTAXII
          type: string
        updated:
          description: "When this indicator was most recently updated in Sumo. Timestamp\
            \ in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
          example: 2023-03-21T12:00:00Z
          format: date-time
          type: string
        validFrom:
          description: "Beginning time this indicator is valid. Timestamp in UTC in\
            \ [RFC3339](https://tools.ietf.org/html/rfc3339) format."
          example: 2023-03-21T12:00:00Z
          format: date-time
          type: string
        validUntil:
          description: "Time at which this indicator expires. If not set, the indicator\
            \ never expires. . Timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2023-03-21T12:00:00Z
          format: date-time
          type: string
        confidence:
          description: "Confidence that the creator has in the correctness of their\
            \ data, where 100 is highest"
          maximum: 100
          minimum: 1
          type: integer
        threatType:
          description: Type of indicator ( https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html#_cvhfwe3t9vuo
            )
          example: indicator
          type: string
        actors:
          description: Actors as a comma separated list.
          example: "actor1,actor2"
          type: string
        killChain:
          description: Kill Chain as a comma separated list.
          example: "KC1,KC2"
          type: string
        fields:
          additionalProperties:
            type: string
          description: Flattened fields from the original indicator object (e.g. flattened
            STIX fields)
          maxProperties: 1000
          type: object
      required:
      - confidence
      - id
      - indicator
      - source
      - threatType
      - type
      - validFrom
      type: object
    UploadStixIndicatorsResponse:
      example:
        invalidIndicators:
        - indicator--foo
        - indicator--bar
      properties:
        invalidIndicators:
          description: A list of invalid indicator IDs that were not ingested
          example:
          - indicator--foo
          - indicator--bar
          items:
            type: string
          type: array
      required:
      - invalidIndicators
      type: object
    UploadStixIndicatorsRequest:
      example:
        source: FreeTAXII
        indicators:
        - object_marking_refs:
          - marking-definition--089a6ecb-cc15-43cc-9494-767639779123
          spec_version: "2.1"
          pattern_type: stix
          created: 2023-03-21T12:00:00Z
          confidence: 8
          pattern: "[ipv4-addr:value = '1.2.3.4']"
          pattern_version: pattern_version
          description: description
          valid_from: 2023-03-21T12:00:00Z
          type: indicator
          revoked: true
          labels:
          - heartbleed
          - has-logo
          granular_markings:
          - lang: en
            selectors:
            - description
            - labels
            marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
          - lang: en
            selectors:
            - description
            - labels
            marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
          extensions:
            key:
              object_marking_refs:
              - marking-definition--089a6ecb-cc15-43cc-9494-767639779123
              schema: https://www.example.com/schema-my-favorite-sdo-1/v1
              extension_types:
              - new-sdo
              - new-sdo
              spec_version: "2.1"
              created: 2023-03-21T12:00:00Z
              description: description
              type: indicator
              revoked: true
              version: version
              labels:
              - heartbleed
              - has-logo
              extension_properties:
              - extension_properties
              - extension_properties
              granular_markings:
              - lang: en
                selectors:
                - description
                - labels
                marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
              - lang: en
                selectors:
                - description
                - labels
                marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
              name: name
              modified: 2023-03-21T12:00:00Z
              id: acme:indicator-bf8bc5d5-c7e6-46b0-8d22-7500fea77196
              created_by_ref: identity--f431f809-377b-45e0-aa1c-6a4751cae5ff
              external_references:
              - hashes:
                  SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
                description: description
                external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
                source_name: system
                url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
              - hashes:
                  SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
                description: description
                external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
                source_name: system
                url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
          valid_until: 2023-03-21T12:00:00Z
          indicator_types:
          - malicious-activity
          name: name
          modified: 2023-03-21T12:00:00Z
          kill_chain_phases:
          - kill_chain_name: lockheed-martin-cyber-kill-chain
            phase_name: reconnaissance
          - kill_chain_name: lockheed-martin-cyber-kill-chain
            phase_name: reconnaissance
          id: acme:indicator-bf8bc5d5-c7e6-46b0-8d22-7500fea77196
          created_by_ref: identity--f431f809-377b-45e0-aa1c-6a4751cae5ff
          lang: en
          external_references:
          - hashes:
              SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
            description: description
            external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
            source_name: system
            url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
          - hashes:
              SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
            description: description
            external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
            source_name: system
            url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
        - object_marking_refs:
          - marking-definition--089a6ecb-cc15-43cc-9494-767639779123
          spec_version: "2.1"
          pattern_type: stix
          created: 2023-03-21T12:00:00Z
          confidence: 8
          pattern: "[ipv4-addr:value = '1.2.3.4']"
          pattern_version: pattern_version
          description: description
          valid_from: 2023-03-21T12:00:00Z
          type: indicator
          revoked: true
          labels:
          - heartbleed
          - has-logo
          granular_markings:
          - lang: en
            selectors:
            - description
            - labels
            marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
          - lang: en
            selectors:
            - description
            - labels
            marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
          extensions:
            key:
              object_marking_refs:
              - marking-definition--089a6ecb-cc15-43cc-9494-767639779123
              schema: https://www.example.com/schema-my-favorite-sdo-1/v1
              extension_types:
              - new-sdo
              - new-sdo
              spec_version: "2.1"
              created: 2023-03-21T12:00:00Z
              description: description
              type: indicator
              revoked: true
              version: version
              labels:
              - heartbleed
              - has-logo
              extension_properties:
              - extension_properties
              - extension_properties
              granular_markings:
              - lang: en
                selectors:
                - description
                - labels
                marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
              - lang: en
                selectors:
                - description
                - labels
                marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
              name: name
              modified: 2023-03-21T12:00:00Z
              id: acme:indicator-bf8bc5d5-c7e6-46b0-8d22-7500fea77196
              created_by_ref: identity--f431f809-377b-45e0-aa1c-6a4751cae5ff
              external_references:
              - hashes:
                  SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
                description: description
                external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
                source_name: system
                url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
              - hashes:
                  SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
                description: description
                external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
                source_name: system
                url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
          valid_until: 2023-03-21T12:00:00Z
          indicator_types:
          - malicious-activity
          name: name
          modified: 2023-03-21T12:00:00Z
          kill_chain_phases:
          - kill_chain_name: lockheed-martin-cyber-kill-chain
            phase_name: reconnaissance
          - kill_chain_name: lockheed-martin-cyber-kill-chain
            phase_name: reconnaissance
          id: acme:indicator-bf8bc5d5-c7e6-46b0-8d22-7500fea77196
          created_by_ref: identity--f431f809-377b-45e0-aa1c-6a4751cae5ff
          lang: en
          external_references:
          - hashes:
              SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
            description: description
            external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
            source_name: system
            url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
          - hashes:
              SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
            description: description
            external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
            source_name: system
            url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
      properties:
        source:
          description: User-provided text to identify the source of the indicator
          example: FreeTAXII
          type: string
        indicators:
          description: The list of stix threat intel indicators to upload.
          items:
            $ref: '#/components/schemas/StixIndicator'
          type: array
      required:
      - indicators
      - source
      type: object
    StixIndicator:
      example:
        object_marking_refs:
        - marking-definition--089a6ecb-cc15-43cc-9494-767639779123
        spec_version: "2.1"
        pattern_type: stix
        created: 2023-03-21T12:00:00Z
        confidence: 8
        pattern: "[ipv4-addr:value = '1.2.3.4']"
        pattern_version: pattern_version
        description: description
        valid_from: 2023-03-21T12:00:00Z
        type: indicator
        revoked: true
        labels:
        - heartbleed
        - has-logo
        granular_markings:
        - lang: en
          selectors:
          - description
          - labels
          marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
        - lang: en
          selectors:
          - description
          - labels
          marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
        extensions:
          key:
            object_marking_refs:
            - marking-definition--089a6ecb-cc15-43cc-9494-767639779123
            schema: https://www.example.com/schema-my-favorite-sdo-1/v1
            extension_types:
            - new-sdo
            - new-sdo
            spec_version: "2.1"
            created: 2023-03-21T12:00:00Z
            description: description
            type: indicator
            revoked: true
            version: version
            labels:
            - heartbleed
            - has-logo
            extension_properties:
            - extension_properties
            - extension_properties
            granular_markings:
            - lang: en
              selectors:
              - description
              - labels
              marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
            - lang: en
              selectors:
              - description
              - labels
              marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
            name: name
            modified: 2023-03-21T12:00:00Z
            id: acme:indicator-bf8bc5d5-c7e6-46b0-8d22-7500fea77196
            created_by_ref: identity--f431f809-377b-45e0-aa1c-6a4751cae5ff
            external_references:
            - hashes:
                SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
              description: description
              external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
              source_name: system
              url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
            - hashes:
                SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
              description: description
              external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
              source_name: system
              url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
        valid_until: 2023-03-21T12:00:00Z
        indicator_types:
        - malicious-activity
        name: name
        modified: 2023-03-21T12:00:00Z
        kill_chain_phases:
        - kill_chain_name: lockheed-martin-cyber-kill-chain
          phase_name: reconnaissance
        - kill_chain_name: lockheed-martin-cyber-kill-chain
          phase_name: reconnaissance
        id: acme:indicator-bf8bc5d5-c7e6-46b0-8d22-7500fea77196
        created_by_ref: identity--f431f809-377b-45e0-aa1c-6a4751cae5ff
        lang: en
        external_references:
        - hashes:
            SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
          description: description
          external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
          source_name: system
          url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
        - hashes:
            SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
          description: description
          external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
          source_name: system
          url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
      properties:
        type:
          description: The type property identifies the type of STIX Object.
          example: indicator
          type: string
        spec_version:
          description: The STIX version
          example: "2.1"
          type: string
        id:
          description: The ID of the indicator
          example: acme:indicator-bf8bc5d5-c7e6-46b0-8d22-7500fea77196
          type: string
        created:
          description: The time from which this Indicator is considered a valid indicator
            of the behaviors it is related or represents.
          example: 2023-03-21T12:00:00Z
          format: date-time
          type: string
        modified:
          description: The time from which this Indicator is considered a valid indicator
            of the behaviors it is related or represents.
          example: 2023-03-21T12:00:00Z
          format: date-time
          type: string
        created_by_ref:
          description: Identifier of type identity
          example: identity--f431f809-377b-45e0-aa1c-6a4751cae5ff
          type: string
        revoked:
          description: The revoked property is only used by STIX Objects that support
            versioning and indicates whether the object has been revoked.
          type: boolean
        labels:
          description: The labels property specifies a set of terms used to describe
            this object. The terms are user-defined or trust-group defined and their
            meaning is outside the scope of this specification and MAY be ignored.
          example:
          - heartbleed
          - has-logo
          items:
            type: string
          type: array
        confidence:
          description: "Confidence that the creator has in the correctness of their\
            \ data, where 100 is highest"
          maximum: 100
          minimum: 1
          type: integer
        lang:
          description: "The lang property identifies the language of the text content\
            \ in this object. When present, it MUST be a language code conformant\
            \ to [RFC5646]. If the property is not present, then the language of the\
            \ content is en (English)"
          example: en
          type: string
        external_references:
          description: "A list of external references which refer to non-STIX information.\
            \ This property MAY be used to provide one or more Vulnerability identifiers,\
            \ such as a CVE ID"
          items:
            $ref: '#/components/schemas/ExternalReference'
          type: array
        object_marking_refs:
          description: The object_marking_refs property specifies a list of id properties
            of marking-definition objects that apply to this object.
          example:
          - marking-definition--089a6ecb-cc15-43cc-9494-767639779123
          items:
            type: string
          type: array
        granular_markings:
          description: The granular_markings property specifies a list of granular
            markings applied to this object
          items:
            $ref: '#/components/schemas/GranularMarkingType'
          type: array
        extensions:
          additionalProperties:
            $ref: '#/components/schemas/Extension'
          description: "Specifies any extensions of the object, as a dictionary"
          maxProperties: 1000
          type: object
        name:
          description: The name of the object
          type: string
        description:
          description: A human readable description
          type: string
        indicator_types:
          description: A set of categorizations for this indicator.
          example:
          - malicious-activity
          items:
            type: string
          type: array
        pattern:
          description: The detection pattern for this Indicator expressed as a STIX
            patter.
          example: "[ipv4-addr:value = '1.2.3.4']"
          type: string
        pattern_type:
          description: The type of pattern
          example: stix
          type: string
        pattern_version:
          description: The version of the pattern language that is used for the data
            in the pattern property which MUST match the type of pattern data included
            in the pattern property.
          type: string
        valid_from:
          description: The time from which this Indicator is considered a valid indicator
            of the behaviors it is related or represents.
          example: 2023-03-21T12:00:00Z
          format: date-time
          type: string
        valid_until:
          description: The time at which this Indicator should no longer be considered
            a valid indicator of the behaviors it is related to or represents.
          example: 2023-03-21T12:00:00Z
          format: date-time
          type: string
        kill_chain_phases:
          description: The list of Kill Chain Phases for which this Attack Pattern
            is used
          items:
            $ref: '#/components/schemas/KillChainPhase'
          type: array
      required:
      - created
      - id
      - modified
      - pattern
      - pattern_type
      - spec_version
      - type
      - valid_from
      type: object
    ExternalReference:
      example:
        hashes:
          SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
        description: description
        external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
        source_name: system
        url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
      properties:
        source_name:
          description: The name of the source that the external-reference is defined
            within
          example: system
          type: string
        description:
          description: A human readable description
          type: string
        url:
          description: A URL reference to an external resource
          example: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
          type: string
        hashes:
          additionalProperties:
            type: string
          description: Specifies a dictionary of hashes for the contents of the url
          example:
            SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
          maxProperties: 1000
          type: object
        external_id:
          description: An identifier for the external reference content
          example: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
          type: string
      required:
      - source_name
      type: object
    GranularMarkingType:
      example:
        lang: en
        selectors:
        - description
        - labels
        marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
      properties:
        lang:
          description: The lang property identifies the language of the text identified
            by this marking
          example: en
          type: string
        marking_ref:
          description: The marking_ref property specifies the ID of the marking-definition
            object that describes the marking
          example: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
          type: string
        selectors:
          description: The selectors property specifies a list of selectors for content
            contained within the STIX Object in which this property appears
          example:
          - description
          - labels
          items:
            type: string
          type: array
      required:
      - selectors
      type: object
    Extension:
      example:
        object_marking_refs:
        - marking-definition--089a6ecb-cc15-43cc-9494-767639779123
        schema: https://www.example.com/schema-my-favorite-sdo-1/v1
        extension_types:
        - new-sdo
        - new-sdo
        spec_version: "2.1"
        created: 2023-03-21T12:00:00Z
        description: description
        type: indicator
        revoked: true
        version: version
        labels:
        - heartbleed
        - has-logo
        extension_properties:
        - extension_properties
        - extension_properties
        granular_markings:
        - lang: en
          selectors:
          - description
          - labels
          marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
        - lang: en
          selectors:
          - description
          - labels
          marking_ref: marking-definition--089a6ecb-cc15-43cc-9494-767639779123
        name: name
        modified: 2023-03-21T12:00:00Z
        id: acme:indicator-bf8bc5d5-c7e6-46b0-8d22-7500fea77196
        created_by_ref: identity--f431f809-377b-45e0-aa1c-6a4751cae5ff
        external_references:
        - hashes:
            SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
          description: description
          external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
          source_name: system
          url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
        - hashes:
            SHA-256: 6db12788c37247f2316052e142f42f4b259d6561751e5f401a1ae2a6df9c674b
          description: description
          external_id: 0001AA7F-C601-424A-B2B8-BE6C9F5164E7
          source_name: system
          url: https://github.com/vz-risk/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json
      properties:
        type:
          description: The type property identifies the type of object
          example: indicator
          type: string
        spec_version:
          description: The STIX version
          example: "2.1"
          type: string
        id:
          description: The ID of the indicator
          example: acme:indicator-bf8bc5d5-c7e6-46b0-8d22-7500fea77196
          type: string
        created:
          description: The time from which this Indicator is considered a valid indicator
            of the behaviors it is related or represents.
          example: 2023-03-21T12:00:00Z
          format: date-time
          type: string
        modified:
          description: The time from which this Indicator is considered a valid indicator
            of the behaviors it is related or represents.
          example: 2023-03-21T12:00:00Z
          format: date-time
          type: string
        created_by_ref:
          description: Identifier of type identity
          example: identity--f431f809-377b-45e0-aa1c-6a4751cae5ff
          type: string
        revoked:
          description: The revoked property is only used by STIX Objects that support
            versioning and indicates whether the object has been revoked.
          type: boolean
        labels:
          description: The labels property specifies a set of terms used to describe
            this object. The terms are user-defined or trust-group defined and their
            meaning is outside the scope of this specification and MAY be ignored.
          example:
          - heartbleed
          - has-logo
          items:
            type: string
          type: array
        external_references:
          description: "A list of external references which refer to non-STIX information.\
            \ This property MAY be used to provide one or more Vulnerability identifiers,\
            \ such as a CVE ID"
          items:
            $ref: '#/components/schemas/ExternalReference'
          type: array
        object_marking_refs:
          description: The object_marking_refs property specifies a list of id properties
            of marking-definition objects that apply to this object.
          example:
          - marking-definition--089a6ecb-cc15-43cc-9494-767639779123
          items:
            type: string
          type: array
        granular_markings:
          description: The granular_markings property specifies a list of granular
            markings applied to this object
          items:
            $ref: '#/components/schemas/GranularMarkingType'
          type: array
        name:
          description: The name of the object
          type: string
        description:
          description: A human readable description
          type: string
        schema:
          description: "The normative definition of the extension, either as a URL\
            \ or as plain text explaining the definition"
          example: https://www.example.com/schema-my-favorite-sdo-1/v1
          type: string
        version:
          description: The version of this extension
          type: string
        extension_types:
          description: This property specifies one or more extension types contained
            within this extension
          items:
            enum:
            - new-sdo
            - new-sco
            - new-sro
            - property-extension
            - toplevel-property-extension
            type: string
          type: array
        extension_properties:
          description: This property contains the list of new property names that
            are added to an object by an extension
          items:
            type: string
          type: array
      required:
      - created
      - created_by_ref
      - extension_types
      - id
      - modified
      - name
      - schema
      - spec_version
      - type
      - version
      type: object
    KillChainPhase:
      example:
        kill_chain_name: lockheed-martin-cyber-kill-chain
        phase_name: reconnaissance
      properties:
        kill_chain_name:
          description: The name of the kill chain. The value of this property SHOULD
            be all lowercase and SHOULD use hyphens instead of spaces or underscores
            as word separators
          example: lockheed-martin-cyber-kill-chain
          type: string
        phase_name:
          description: The name of the phase in the kill chain. The value of this
            property SHOULD be all lowercase and SHOULD use hyphens instead of spaces
            or underscores as word separators
          example: reconnaissance
          type: string
      required:
      - kill_chain_name
      type: object
    RemoveIndicatorsRequest:
      example:
        source: Crowdstrike
        indicatorIds:
        - indicator--abcd
        - indicator--ef012
      properties:
        source:
          description: The source of the indicator ID to match against
          example: Crowdstrike
          type: string
        indicatorIds:
          description: The list of indicator IDs to match against
          example:
          - indicator--abcd
          - indicator--ef012
          items:
            type: string
          type: array
      required:
      - indicatorIds
      - source
      type: object
    DataSourceProperties:
      example:
        description: This is a stix1.2 data source.
        enabled: true
      properties:
        enabled:
          description: True if enabled.
          example: true
          type: boolean
        description:
          description: The data source description.
          example: This is a stix1.2 data source.
          type: string
      type: object
    ListTagResult:
      properties:
        result:
          description: List of Tag Dictionary Values (e.g. Tag Keys or Tag Values).
          example:
          - aTagKeyOrValue01
          - aTagKeyOrValue02
          items:
            type: string
          type: array
      required:
      - result
      type: object
    OTCollector:
      description: An OT Collector definition.
      example:
        effectiveConfig:
          "00000000000000A3": ZGVtbyBjb25maWc=
          "00000000000000D5": XFVtbfe34tgcvefv=
        alive: true
        modifiedAt: 2018-10-16T09:10:00Z
        description: description
        ephemeral: false
        timeZone: UTC
        sourceTemplateLinkedCount: 1
        version:
          currentVersion: currentVersion
        tags:
          team: app-dev
          showIcon: true
        systemInfo:
          hostName: app.test.com
          hostOsName: Linux
          hostOsVersion: 5.4.144-69.257.amzn2.x86_64
          hostIpAddress: 19.123.24.66
          hostEnv: EKS-1.20.2
        createdAt: 2018-10-16T09:10:00Z
        createdBy: 0000000006A5C7A2
        isRemotelyManaged: true
        name: test OT Collector
        modifiedBy: 0000000006A5C7A2
        id: 0000000005F5E105
        category: apache
        healthIncidentsTracker:
          errorsCount: 0
          warningsCount: 1
      properties:
        id:
          description: Unique identifier of the OT Collector.
          example: 0000000005F5E105
          type: string
        name:
          description: Name of the OT Collector.
          example: test OT Collector
          type: string
        version:
          $ref: '#/components/schemas/OTCollector_version'
        category:
          description: Category of the OT Collector.
          example: apache
          type: string
        description:
          description: Description of the OT Collector.
          type: string
        tags:
          additionalProperties:
            type: string
          description: Tags associated with the OT Collector.
          example:
            team: app-dev
            showIcon: true
          maxProperties: 1000
          type: object
        healthIncidentsTracker:
          $ref: '#/components/schemas/OTCollector_healthIncidentsTracker'
        ephemeral:
          description: Ephemeral Status of the OT Collector.
          example: false
          type: boolean
        alive:
          description: Alive Status of the OT Collector based on heartbeat.
          example: true
          type: boolean
        isRemotelyManaged:
          description: Management Status of the OT Collector based on if it is remotely
            or locally managed.
          example: true
          type: boolean
        effectiveConfig:
          additionalProperties:
            type: string
          description: Config map that includes Base 64 Encoded Effective Configuration
            Yaml of the Remotely managed OT Collector.
          example:
            "00000000000000A3": ZGVtbyBjb25maWc=
            "00000000000000D5": XFVtbfe34tgcvefv=
          maxProperties: 1000
          type: object
        systemInfo:
          $ref: '#/components/schemas/OTCollector_systemInfo'
        timeZone:
          description: timezone of the collector
          example: UTC
          type: string
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          example: 0000000006A5C7A2
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          example: 0000000006A5C7A2
          type: string
        sourceTemplateLinkedCount:
          description: Count of the source templates linked to a collector
          example: 1
          type: integer
      required:
      - createdAt
      - createdBy
      - id
      - modifiedAt
      - modifiedBy
      - name
      - systemInfo
      - version
      type: object
    OtTag:
      example:
        values:
        - value1
        - value1
        key: key1
      properties:
        key:
          description: key of the given tag.
          example: key1
          type: string
        values:
          description: values of the given tag.
          items:
            example: value1
            type: string
          type: array
      required:
      - key
      - values
      type: object
    VersionRange:
      description: Version range for otCollector.
      example:
        minVersion: minVersion
        rangeType: rangeType
        maxVersion: maxVersion
      properties:
        minVersion:
          description: Minimum version of otCollector.
          pattern: "^v(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(-sumo.+)?$"
          type: string
        maxVersion:
          description: Maximum version of the collector.
          pattern: "^v(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(-sumo.+)?$"
          type: string
        rangeType:
          description: "Specifies how filtering should be applied when `minVersion`\
            \ and `maxVersion` are defined. - `Within`: Filtering includes the specified\
            \ range. - `Outside`: Filtering excludes the specified range. By default,\
            \ filtering includes the specified range."
          type: string
      type: object
    SourceTemplateListResponse:
      example:
        data:
        - createdAt: 2018-10-16T09:10:00Z
          schemaRef:
            type: Apache
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          isEnabled: true
          selector:
            names:
            - demo_macOS
            - demo_macOS
            tags:
            - - values:
                - value1
                - value1
                key: key1
              - values:
                - value1
                - value1
                key: key1
            - - values:
                - value1
                - value1
                key: key1
              - values:
                - value1
                - value1
                key: key1
          modifiedBy: 0000000006243FDD
          id: 0000000003343FDD
          inputJson: {}
          totalCollectorLinked: 0
          config: apache.yaml.example
          status: enable
        - createdAt: 2018-10-16T09:10:00Z
          schemaRef:
            type: Apache
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          isEnabled: true
          selector:
            names:
            - demo_macOS
            - demo_macOS
            tags:
            - - values:
                - value1
                - value1
                key: key1
              - values:
                - value1
                - value1
                key: key1
            - - values:
                - value1
                - value1
                key: key1
              - values:
                - value1
                - value1
                key: key1
          modifiedBy: 0000000006243FDD
          id: 0000000003343FDD
          inputJson: {}
          totalCollectorLinked: 0
          config: apache.yaml.example
          status: enable
      properties:
        data:
          description: List of Source Template.
          items:
            $ref: '#/components/schemas/SourceTemplateDefinition'
          type: array
      required:
      - data
      type: object
    SourceTemplateDefinition:
      description: response definition of source template.
      example:
        createdAt: 2018-10-16T09:10:00Z
        schemaRef:
          type: Apache
        createdBy: 0000000006743FDD
        modifiedAt: 2018-10-16T09:10:00Z
        isEnabled: true
        selector:
          names:
          - demo_macOS
          - demo_macOS
          tags:
          - - values:
              - value1
              - value1
              key: key1
            - values:
              - value1
              - value1
              key: key1
          - - values:
              - value1
              - value1
              key: key1
            - values:
              - value1
              - value1
              key: key1
        modifiedBy: 0000000006243FDD
        id: 0000000003343FDD
        inputJson: {}
        totalCollectorLinked: 0
        config: apache.yaml.example
        status: enable
      properties:
        schemaRef:
          $ref: '#/components/schemas/SchemaRef'
        id:
          description: id of source template.
          example: 0000000003343FDD
          type: string
        inputJson:
          additionalProperties: true
          description: inputJson of source template
          example: {}
          maxProperties: 1000
          type: object
        config:
          description: configuration of source template
          example: apache.yaml.example
          type: string
        selector:
          $ref: '#/components/schemas/Selector'
        totalCollectorLinked:
          default: 0
          description: count of total collector linked with this source template.
          format: int32
          type: integer
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        modifiedAt:
          description: "Modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        createdBy:
          description: Id of the user who created source template
          example: 0000000006743FDD
          type: string
        modifiedBy:
          description: Id of the user who last modified the source template
          example: 0000000006243FDD
          type: string
        status:
          description: Status of Source template
          enum:
          - enable
          - disable
          type: string
        isEnabled:
          default: true
          description: A boolean parameter to get if the source template is enabled.
          example: true
          type: boolean
      type: object
    SchemaRef:
      description: schema reference for source template.
      example:
        type: Apache
      properties:
        type:
          description: type of source template.
          example: Apache
          type: string
      required:
      - type
      type: object
    Selector:
      description: Agent selector conditions
      example:
        names:
        - demo_macOS
        - demo_macOS
        tags:
        - - values:
            - value1
            - value1
            key: key1
          - values:
            - value1
            - value1
            key: key1
        - - values:
            - value1
            - value1
            key: key1
          - values:
            - value1
            - value1
            key: key1
      properties:
        tags:
          description: tags filter for agents
          items:
            items:
              $ref: '#/components/schemas/OtTag'
            type: array
          type: array
        names:
          description: names to select custom agents
          items:
            example: demo_macOS
            type: string
          type: array
      type: object
    CollectorCompatibility:
      properties:
        os:
          description: Name of the Operating System.
          example: linux
          type: string
        collectorVersionRange:
          $ref: '#/components/schemas/CollectorVersionRange'
      type: object
    CollectorVersionRange:
      example:
        minVersion: v0.89.0
        maxVersion: v0.90.0
      properties:
        minVersion:
          description: Minimum compatible version of otCollector.
          type: string
        maxVersion:
          description: "Maximum compatible version of the otcollector. if this is\
            \ null, then latest otcollector is also compatible."
          nullable: true
          type: string
      type: object
    SourceTemplateRequest:
      description: request body for creating source template.
      example:
        schemaRef:
          type: Apache
        selector:
          names:
          - demo_macOS
          - demo_macOS
          tags:
          - - values:
              - value1
              - value1
              key: key1
            - values:
              - value1
              - value1
              key: key1
          - - values:
              - value1
              - value1
              key: key1
            - values:
              - value1
              - value1
              key: key1
        inputJson:
          receivers: {}
          name: apache_test_source_template
          description: Demo Description for Source Template
          processors: {}
      properties:
        schemaRef:
          $ref: '#/components/schemas/SchemaRef'
        inputJson:
          $ref: '#/components/schemas/SourceTemplateRequest_inputJson'
        selector:
          $ref: '#/components/schemas/Selector'
      required:
      - inputJson
      - schemaRef
      type: object
    SourceTemplateUpgradeRequest:
      description: request body for creating source template.
      example:
        schemaRef:
          type: Apache
          version: 1.0.0
        inputJson:
          receivers:
            hostmetrics:
              receiverType: hostmetrics
              collection_interval: 5m
          name: apache_test_source_template
          description: Demo Description for Source Template
          processors:
            resource:
              processorType: resource
      properties:
        schemaRef:
          $ref: '#/components/schemas/UpgradeSchemaRef'
        inputJson:
          $ref: '#/components/schemas/SourceTemplateUpgradeRequest_inputJson'
      required:
      - inputJson
      - schemaRef
      type: object
    UpgradeSchemaRef:
      description: schema reference for upgrade source template request.
      example:
        type: Apache
        version: 1.0.0
      properties:
        type:
          description: type of source template.
          example: Apache
          type: string
        version:
          description: version of source template.
          example: 1.0.0
          type: string
      required:
      - type
      - version
      type: object
    LinkedSourceTemplatesUpdateResponse:
      description: linked source template details based on the ot-collector tags user
        wants to update.
      example:
        collectorId: 00005AF3107BF0D6
        addedSourceTemplates:
        - sourceTemplateDefinition:
            createdAt: 2018-10-16T09:10:00Z
            schemaRef:
              type: Apache
            createdBy: 0000000006743FDD
            modifiedAt: 2018-10-16T09:10:00Z
            isEnabled: true
            selector:
              names:
              - demo_macOS
              - demo_macOS
              tags:
              - - values:
                  - value1
                  - value1
                  key: key1
                - values:
                  - value1
                  - value1
                  key: key1
              - - values:
                  - value1
                  - value1
                  key: key1
                - values:
                  - value1
                  - value1
                  key: key1
            modifiedBy: 0000000006243FDD
            id: 0000000003343FDD
            inputJson: {}
            totalCollectorLinked: 0
            config: apache.yaml.example
            status: enable
          reasonTags:
          - - value: value1
              key: key1
            - value: value1
              key: key1
          - - value: value1
              key: key1
            - value: value1
              key: key1
        - sourceTemplateDefinition:
            createdAt: 2018-10-16T09:10:00Z
            schemaRef:
              type: Apache
            createdBy: 0000000006743FDD
            modifiedAt: 2018-10-16T09:10:00Z
            isEnabled: true
            selector:
              names:
              - demo_macOS
              - demo_macOS
              tags:
              - - values:
                  - value1
                  - value1
                  key: key1
                - values:
                  - value1
                  - value1
                  key: key1
              - - values:
                  - value1
                  - value1
                  key: key1
                - values:
                  - value1
                  - value1
                  key: key1
            modifiedBy: 0000000006243FDD
            id: 0000000003343FDD
            inputJson: {}
            totalCollectorLinked: 0
            config: apache.yaml.example
            status: enable
          reasonTags:
          - - value: value1
              key: key1
            - value: value1
              key: key1
          - - value: value1
              key: key1
            - value: value1
              key: key1
        removedSourceTemplates:
        - sourceTemplateDefinition:
            createdAt: 2018-10-16T09:10:00Z
            schemaRef:
              type: Apache
            createdBy: 0000000006743FDD
            modifiedAt: 2018-10-16T09:10:00Z
            isEnabled: true
            selector:
              names:
              - demo_macOS
              - demo_macOS
              tags:
              - - values:
                  - value1
                  - value1
                  key: key1
                - values:
                  - value1
                  - value1
                  key: key1
              - - values:
                  - value1
                  - value1
                  key: key1
                - values:
                  - value1
                  - value1
                  key: key1
            modifiedBy: 0000000006243FDD
            id: 0000000003343FDD
            inputJson: {}
            totalCollectorLinked: 0
            config: apache.yaml.example
            status: enable
          reasonTags:
          - - value: value1
              key: key1
            - value: value1
              key: key1
          - - value: value1
              key: key1
            - value: value1
              key: key1
        - sourceTemplateDefinition:
            createdAt: 2018-10-16T09:10:00Z
            schemaRef:
              type: Apache
            createdBy: 0000000006743FDD
            modifiedAt: 2018-10-16T09:10:00Z
            isEnabled: true
            selector:
              names:
              - demo_macOS
              - demo_macOS
              tags:
              - - values:
                  - value1
                  - value1
                  key: key1
                - values:
                  - value1
                  - value1
                  key: key1
              - - values:
                  - value1
                  - value1
                  key: key1
                - values:
                  - value1
                  - value1
                  key: key1
            modifiedBy: 0000000006243FDD
            id: 0000000003343FDD
            inputJson: {}
            totalCollectorLinked: 0
            config: apache.yaml.example
            status: enable
          reasonTags:
          - - value: value1
              key: key1
            - value: value1
              key: key1
          - - value: value1
              key: key1
            - value: value1
              key: key1
      properties:
        collectorId:
          description: otCollector id for which tags are edited.
          example: 00005AF3107BF0D6
          type: string
        addedSourceTemplates:
          description: list of sourceTemplates which are linked to otCollector.
          items:
            $ref: '#/components/schemas/LinkingUpdatedSourceTemplateDetails'
          type: array
        removedSourceTemplates:
          description: list of sourceTemplates which are removed from otCollector
            linking.
          items:
            $ref: '#/components/schemas/LinkingUpdatedSourceTemplateDetails'
          type: array
      required:
      - collectorId
      type: object
    LinkingUpdatedSourceTemplateDetails:
      description: source template details with tags responsible for otCollector Linking
        update.
      example:
        sourceTemplateDefinition:
          createdAt: 2018-10-16T09:10:00Z
          schemaRef:
            type: Apache
          createdBy: 0000000006743FDD
          modifiedAt: 2018-10-16T09:10:00Z
          isEnabled: true
          selector:
            names:
            - demo_macOS
            - demo_macOS
            tags:
            - - values:
                - value1
                - value1
                key: key1
              - values:
                - value1
                - value1
                key: key1
            - - values:
                - value1
                - value1
                key: key1
              - values:
                - value1
                - value1
                key: key1
          modifiedBy: 0000000006243FDD
          id: 0000000003343FDD
          inputJson: {}
          totalCollectorLinked: 0
          config: apache.yaml.example
          status: enable
        reasonTags:
        - - value: value1
            key: key1
          - value: value1
            key: key1
        - - value: value1
            key: key1
          - value: value1
            key: key1
      properties:
        sourceTemplateDefinition:
          $ref: '#/components/schemas/SourceTemplateDefinition'
        reasonTags:
          description: tags which are responsible for source template and collector
            linking impact.
          items:
            items:
              $ref: '#/components/schemas/CollectorTag'
            type: array
          type: array
      required:
      - reasonTags
      - sourceTemplateDefinition
      type: object
    CollectorTag:
      example:
        value: value1
        key: key1
      properties:
        key:
          description: Key of the given tag.
          example: key1
          type: string
        value:
          description: Values of the given tag.
          example: value1
          type: string
      required:
      - key
      - values
      type: object
    LinkedSourceTemplatesUpdateRequest:
      example:
        collectorId: 00005AF3107BF0D6
        tags:
          environment: production
          location: us-west-2
      properties:
        collectorId:
          description: otCollector id for which tags are edited.
          example: 00005AF3107BF0D6
          type: string
        tags:
          additionalProperties:
            type: string
          default: {}
          description: JSON map of key-value metadata to apply to the otCollector.
          example:
            environment: production
            location: us-west-2
          maxProperties: 50
          type: object
      required:
      - collectorId
      type: object
    SourceTemplateStatusUpdateRequest:
      example:
        status: enable
      properties:
        status:
          description: status to set for the source template (enable or disable).
          enum:
          - enable
          - disable
          type: string
      required:
      - status
      type: object
    ListSchemaBaseTypeToVersionsResponse:
      example:
        data:
        - versions:
          - schema:
              key: ""
            createdAt: 2018-10-16T09:10:00Z
            templateYaml: example templateYaml
            manifest:
              key: ""
            modifiedAt: 2018-10-16T09:10:00Z
            description: An Okta integration that collects Okta event logs into Sumo
              Logic.
            id: id
            type: Okta
            family: OTC_Source_Template
            version: 1.0.0
          - schema:
              key: ""
            createdAt: 2018-10-16T09:10:00Z
            templateYaml: example templateYaml
            manifest:
              key: ""
            modifiedAt: 2018-10-16T09:10:00Z
            description: An Okta integration that collects Okta event logs into Sumo
              Logic.
            id: id
            type: Okta
            family: OTC_Source_Template
            version: 1.0.0
          type: Okta
        - versions:
          - schema:
              key: ""
            createdAt: 2018-10-16T09:10:00Z
            templateYaml: example templateYaml
            manifest:
              key: ""
            modifiedAt: 2018-10-16T09:10:00Z
            description: An Okta integration that collects Okta event logs into Sumo
              Logic.
            id: id
            type: Okta
            family: OTC_Source_Template
            version: 1.0.0
          - schema:
              key: ""
            createdAt: 2018-10-16T09:10:00Z
            templateYaml: example templateYaml
            manifest:
              key: ""
            modifiedAt: 2018-10-16T09:10:00Z
            description: An Okta integration that collects Okta event logs into Sumo
              Logic.
            id: id
            type: Okta
            family: OTC_Source_Template
            version: 1.0.0
          type: Okta
      properties:
        data:
          description: List of maps containing the mappings schema type -> versions.
          items:
            $ref: '#/components/schemas/SchemaBaseTypeToVersionsResponse'
          type: array
      required:
      - data
      type: object
    SchemaBaseTypeToVersionsResponse:
      description: Map of the schema base type to its list of schema base identities.
      example:
        versions:
        - schema:
            key: ""
          createdAt: 2018-10-16T09:10:00Z
          templateYaml: example templateYaml
          manifest:
            key: ""
          modifiedAt: 2018-10-16T09:10:00Z
          description: An Okta integration that collects Okta event logs into Sumo
            Logic.
          id: id
          type: Okta
          family: OTC_Source_Template
          version: 1.0.0
        - schema:
            key: ""
          createdAt: 2018-10-16T09:10:00Z
          templateYaml: example templateYaml
          manifest:
            key: ""
          modifiedAt: 2018-10-16T09:10:00Z
          description: An Okta integration that collects Okta event logs into Sumo
            Logic.
          id: id
          type: Okta
          family: OTC_Source_Template
          version: 1.0.0
        type: Okta
      properties:
        type:
          description: The type of the schema.
          example: Okta
          type: string
        versions:
          description: List of schema base identities sorted by latest version for
            a specific schema type.
          items:
            $ref: '#/components/schemas/SchemaBaseComplete'
          type: array
      required:
      - type
      - versions
      type: object
    SchemaBaseComplete:
      allOf:
      - $ref: '#/components/schemas/SchemaBaseIdentityWithMetadata'
      - $ref: '#/components/schemas/SchemaBaseTemplateYaml'
      example:
        schema:
          key: ""
        createdAt: 2018-10-16T09:10:00Z
        templateYaml: example templateYaml
        manifest:
          key: ""
        modifiedAt: 2018-10-16T09:10:00Z
        description: An Okta integration that collects Okta event logs into Sumo Logic.
        id: id
        type: Okta
        family: OTC_Source_Template
        version: 1.0.0
      type: object
    SchemaBaseIdentityWithMetadata:
      allOf:
      - $ref: '#/components/schemas/SchemaBaseIdentity'
      - properties:
          id:
            description: Unique identifier of the schema.
            type: string
          createdAt:
            description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
              \ format."
            example: 2018-10-16T09:10:00Z
            format: date-time
            type: string
          modifiedAt:
            description: Last modification timestamp in UTC.
            example: 2018-10-16T09:10:00Z
            format: date-time
            type: string
        required:
        - id
        - type
        - version
      type: object
    SchemaBaseIdentity:
      properties:
        type:
          description: The type of the integration.
          example: Okta
          maxLength: 128
          minLength: 1
          type: string
        version:
          description: The version (or image tag) of the integration. Follows the
            Major.Minor.Patch semantic versioning format.
          example: 1.0.0
          maxLength: 128
          minLength: 5
          pattern: "^([0-9]+)\\.([0-9]+)\\.([0-9]+)$"
          type: string
          x-pattern-message: "must follow semantic versioning: https://semver.org/"
        description:
          description: The description of the integration.
          example: An Okta integration that collects Okta event logs into Sumo Logic.
          maxLength: 1024
          minLength: 0
          type: string
        manifest:
          additionalProperties: true
          description: The manifest of the integration.
          maxProperties: 1000
          type: object
        schema:
          additionalProperties: true
          description: The schema in JSON Schema specification.
          maxProperties: 1000
          type: object
        family:
          description: The family to which schema belong.
          enum:
          - OTC_Source_Template
          type: string
      required:
      - family
      - schema
      - type
      - version
      type: object
    SchemaBaseTemplateYaml:
      properties:
        templateYaml:
          description: The template yaml of schema.
          example: example templateYaml
          maxLength: 10960
          minLength: 1
          type: string
      type: object
    EventContext:
      discriminator:
        mapping:
          SearchQueryContext: '#/components/schemas/SearchQueryContext'
        propertyName: eventContextType
      properties:
        eventContextType:
          description: Context for which correlated events are to be fetched.
          example: SearchQueryContext
          pattern: ^(SearchQueryContext)$
          type: string
      required:
      - eventContextType
      type: object
    CorrelatedEvents:
      properties:
        correlationFinished:
          description: Flag indicating correlation completion.
          example: true
          type: boolean
        events:
          description: List of events.
          items:
            $ref: '#/components/schemas/CorrelatedEvent'
          type: array
      required:
      - correlationFinished
      - events
      type: object
    CorrelatedEvent:
      description: Object specifying an event.
      properties:
        name:
          description: The name of the event.
          example: monitor-manager deployed.
          type: string
        description:
          description: Description of the events.
          example: 2 containers in monitor-manager were upgraded.
          type: string
        eventType:
          description: The type of event.
          example: Deploy
          type: string
        eventSource:
          description: The source of the event.
          example: Jenkins
          type: string
        startTimeMs:
          description: The start time of the event.
          example: 16794589390
          format: int64
          type: integer
        metadataJson:
          description: JSON string containing metadata of the event.
          type: string
      required:
      - eventSource
      - eventType
      - name
      - startTimeMs
      type: object
    EventExtractionRule:
      properties:
        name:
          description: Name of event extraction rule.
          example: foo
          type: string
        description:
          description: Description of event extraction rule.
          example: foo
          type: string
        query:
          description: Query String.
          example: _sourceCategory=eventSource
          type: string
        correlationExpression:
          $ref: '#/components/schemas/CorrelationExpression'
      required:
      - correlationExpression
      - name
      - query
      type: object
    CorrelationExpression:
      discriminator:
        mapping:
          StringMatch: '#/components/schemas/StringMatchCorrelationExpression'
          And: '#/components/schemas/AndCorrelationExpression'
          Or: '#/components/schemas/OrCorrelationExpression'
        propertyName: correlationExpressionType
      properties:
        correlationExpressionType:
          description: The type of correlation expression.
          example: StringMatch
          pattern: ^(StringMatch|And|Or)$
          type: string
      required:
      - correlationExpressionType
      type: object
    EventExtractionRuleWithDetails:
      allOf:
      - $ref: '#/components/schemas/EventExtractionRule'
      - properties:
          id:
            description: Id of the event extraction rule.
            example: "0000000001213227"
            type: string
          createdAt:
            description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
              \ format."
            format: date-time
            type: string
          createdBy:
            description: Identifier of the user who created the resource.
            type: string
          modifiedAt:
            description: Last modification timestamp in UTC.
            format: date-time
            type: string
          modifiedBy:
            description: Identifier of the user who last modified the resource.
            type: string
        required:
        - id
        type: object
      description: Event extraction rule object.
      type: object
    ScanBudgetList:
      example:
        next: next
        data:
        - budgetType: ScanBudget
          resetDateOfMonth: 17
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          groupBy: User
          orgId: orgId
          capacity: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          unit: GB
          resetDayOfWeek: MONDAY
          createdBy: createdBy
          scope:
            excludedRoles:
            - 00000000000001DF
            - 00000000000002D2
            excludedUsers:
            - 00000000000001DF
            - 00000000000002D2
            includedUsers:
            - 00000000000001DF
            - 00000000000002D2
            includedRoles:
            - 00000000000001DF
            - 00000000000002D2
          name: name
          action: Warn
          resetTimeZone: America/Los_Angeles
          modifiedBy: modifiedBy
          window: Query
          id: id
          resetTime: "1410"
          applicableOn: PerEntity
          status: active
        - budgetType: ScanBudget
          resetDateOfMonth: 17
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          groupBy: User
          orgId: orgId
          capacity: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          unit: GB
          resetDayOfWeek: MONDAY
          createdBy: createdBy
          scope:
            excludedRoles:
            - 00000000000001DF
            - 00000000000002D2
            excludedUsers:
            - 00000000000001DF
            - 00000000000002D2
            includedUsers:
            - 00000000000001DF
            - 00000000000002D2
            includedRoles:
            - 00000000000001DF
            - 00000000000002D2
          name: name
          action: Warn
          resetTimeZone: America/Los_Angeles
          modifiedBy: modifiedBy
          window: Query
          id: id
          resetTime: "1410"
          applicableOn: PerEntity
          status: active
      properties:
        data:
          description: List of scan budgets.
          items:
            $ref: '#/components/schemas/ScanBudget'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    ScanBudget:
      allOf:
      - $ref: '#/components/schemas/ScanBudgetDefinition'
      - properties:
          id:
            description: Id of the budget.
            type: string
          orgId:
            description: Org Id of the org for the budget.
            type: string
          resetTime:
            default: 00:00
            description: Reset time of the time based scan budget in HH:MM format
            example: "1410"
            maxLength: 5
            minLength: 5
            type: string
          resetTimeZone:
            default: Etc/UTC
            description: "Time zone of the reset time for the time based scan budget.\
              \ Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
            example: America/Los_Angeles
            type: string
          resetDayOfWeek:
            default: MONDAY
            description: "The day of the week when the budget resets, applicable for\
              \ time based budgets with a Weekly window. Must be a valid day of the\
              \ week."
            pattern: ^(MONDAY|TUESDAY|WEDNESDAY|THURSDAY|FRIDAY|SATURDAY|SUNDAY)$
            type: string
          resetDateOfMonth:
            default: 1
            description: "The date of the month when the budget resets, applicable\
              \ for time based budgets with a Monthly window. Must be a valid day\
              \ of the month (1-28)."
            format: int32
            maximum: 28
            minimum: 1
            type: integer
          createdAt:
            description: Date & time when budget was created.
            format: date-time
            type: string
          createdBy:
            description: Id of the user who created the budget.
            type: string
          modifiedAt:
            description: Date & time when budget was last modified.
            format: date-time
            type: string
          modifiedBy:
            description: Id of the user who last modified the budget.
            type: string
        required:
        - createdAt
        - createdBy
        - id
        - modifiedAt
        - modifiedBy
        - orgId
        - resetDateOfMonth
        - resetDayOfWeek
        - resetTime
        - resetTimeZone
        type: object
      example:
        budgetType: ScanBudget
        resetDateOfMonth: 17
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        groupBy: User
        orgId: orgId
        capacity: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        unit: GB
        resetDayOfWeek: MONDAY
        createdBy: createdBy
        scope:
          excludedRoles:
          - 00000000000001DF
          - 00000000000002D2
          excludedUsers:
          - 00000000000001DF
          - 00000000000002D2
          includedUsers:
          - 00000000000001DF
          - 00000000000002D2
          includedRoles:
          - 00000000000001DF
          - 00000000000002D2
        name: name
        action: Warn
        resetTimeZone: America/Los_Angeles
        modifiedBy: modifiedBy
        window: Query
        id: id
        resetTime: "1410"
        applicableOn: PerEntity
        status: active
    ScanBudgetDefinition:
      example:
        budgetType: ScanBudget
        unit: GB
        scope:
          excludedRoles:
          - 00000000000001DF
          - 00000000000002D2
          excludedUsers:
          - 00000000000001DF
          - 00000000000002D2
          includedUsers:
          - 00000000000001DF
          - 00000000000002D2
          includedRoles:
          - 00000000000001DF
          - 00000000000002D2
        name: name
        action: Warn
        window: Query
        groupBy: User
        applicableOn: PerEntity
        capacity: 0
        status: active
      properties:
        name:
          description: Name of the budget.
          type: string
        capacity:
          description: Capacity of the budget.
          format: int64
          type: integer
        unit:
          description: Unit of the budget.
          example: GB
          pattern: ^(GB|MB|TB|KB)$
          type: string
        budgetType:
          description: Type of the budget.
          example: ScanBudget
          pattern: ^(ScanBudget)$
          type: string
        scope:
          $ref: '#/components/schemas/ScanBudgetScope'
        window:
          description: Window of the budget. Use Daily/Weekly/Monthly for creating
            a time based budget (beta)
          example: Query
          pattern: ^(Query|Daily|Weekly|Monthly)$
          type: string
        applicableOn:
          description: Grouping of the budget.
          example: PerEntity
          pattern: ^(PerEntity|Sum)$
          type: string
        groupBy:
          description: Grouping Entity of the budget.
          example: User
          pattern: ^(User)$
          type: string
        action:
          description: Action to be taken if the budget is breached
          example: Warn
          pattern: ^(StopForeGroundScan|Warn)$
          type: string
        status:
          description: Signifies the state of the budget. (Active/Inactive)
          example: active
          pattern: ^(active|inactive)$
          type: string
      required:
      - action
      - applicableOn
      - budgetType
      - capacity
      - groupBy
      - name
      - scope
      - unit
      - window
      type: object
    BudgetType:
      description: Type of the budget.
      example: ScanBudget
      pattern: ^(ScanBudget)$
      type: string
    ScanBudgetScope:
      example:
        excludedRoles:
        - 00000000000001DF
        - 00000000000002D2
        excludedUsers:
        - 00000000000001DF
        - 00000000000002D2
        includedUsers:
        - 00000000000001DF
        - 00000000000002D2
        includedRoles:
        - 00000000000001DF
        - 00000000000002D2
      properties:
        includedUsers:
          description: List of userIds included in the budget.
          example:
          - 00000000000001DF
          - 00000000000002D2
          items:
            type: string
          type: array
        excludedUsers:
          description: List of userIds excluded in the budget.
          example:
          - 00000000000001DF
          - 00000000000002D2
          items:
            type: string
          type: array
        includedRoles:
          description: List of roleIds included in the budget.
          example:
          - 00000000000001DF
          - 00000000000002D2
          items:
            type: string
          type: array
        excludedRoles:
          description: List of roleIds excluded in the budget.
          example:
          - 00000000000001DF
          - 00000000000002D2
          items:
            type: string
          type: array
      required:
      - excludedRoles
      - excludedUsers
      - includedRoles
      - includedUsers
      type: object
    ScanBudgetUsageList:
      example:
        next: next
        data:
        - usage: 0
          usagePercentage: 6
          budgetId: budgetId
        - usage: 0
          usagePercentage: 6
          budgetId: budgetId
      properties:
        data:
          description: List of budget usages
          items:
            $ref: '#/components/schemas/ScanBudgetUsage'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    ScanBudgetUsage:
      example:
        usage: 0
        usagePercentage: 6
        budgetId: budgetId
      properties:
        budgetId:
          description: Budget id.
          type: string
        usage:
          description: Budget usage (in bytes).
          format: int64
          type: integer
        usagePercentage:
          description: Budget usage percentage.
          format: int64
          type: integer
      required:
      - budgetId
      - usage
      - usagePercentage
      type: object
    ContentSyncResponse:
      properties:
        jobId:
          description: Content Sync Job Id.
          example: 68B6D772B616DC06
          type: string
      required:
      - jobId
      type: object
    ContentSyncRequest:
      properties:
        sourceChildOrgInfo:
          $ref: '#/components/schemas/ChildOrgInfo'
        destinationChildOrgInfo:
          $ref: '#/components/schemas/DestinationChildOrgInfo'
        contentList:
          description: List of Content and Configuration Information.
          items:
            $ref: '#/components/schemas/Content_1'
          type: array
      required:
      - contentList
      - destinationChildOrgInfo
      - sourceChildOrgInfo
      type: object
    ChildOrgInfo:
      properties:
        orgId:
          description: Organization Identifier.
          example: us2-0000000000000006
          type: string
      required:
      - orgId
      type: object
    DestinationChildOrgInfo:
      properties:
        included:
          description: Organization Info which needs to be included in Destination
            Organisation List.
          items:
            $ref: '#/components/schemas/ChildOrgInfo'
          type: array
        excluded:
          description: Organization Info which needs to be excluded from Destination
            Organisation List.
          items:
            $ref: '#/components/schemas/ChildOrgInfo'
          type: array
      required:
      - excluded
      - included
      type: object
    Content_1:
      properties:
        id:
          description: Identifier of Content or Configuration
          example: MATCH-S00574
          type: string
        type:
          description: Type Of Content.
          enum:
          - CSE_RULE
          - CSE_TUNING_EXPRESSION
          example: CSE_RULE
          type: string
        options:
          additionalProperties:
            type: string
          default: {}
          description: Advance Settings required for syncing content or configuration.
          example:
            includeCSERule: true
          maxProperties: 100
          type: object
      required:
      - id
      - options
      - type
      type: object
    ContentSyncStatusResponse:
      properties:
        status:
          description: Content Sync Job status.
          example: Success
          type: string
        progress:
          description: Content Sync Job progress percentage.
          example: 100
          type: integer
      required:
      - progress
      - status
      type: object
    CreateJobResponse:
      properties:
        id:
          description: The search job identifier.
          type: string
        link:
          $ref: '#/components/schemas/Link'
      type: object
    Link:
      properties:
        rel:
          description: Relation.
          type: string
        href:
          description: URL of the search job.
          type: string
      type: object
    CreateJobRequest:
      properties:
        query:
          description: The actual search expression.
          example: _sourceCategory=service
          type: string
        from:
          description: |
            The ISO 8601 date and time of the time range to start the search.
          example: 2017-07-26T00:00:00
          maxLength: 20
          type: string
        to:
          description: |
            The ISO 8601 date and time of the time range to end the search.
          example: 2017-07-26T00:00:00
          maxLength: 20
          type: string
        timeZone:
          default: UTC
          description: The time zone of the from and to time.
          type: string
        byReceiptTime:
          default: "false"
          description: Flag to order the search results in the order collector received
            it.
          type: string
      required:
      - from
      - query
      - timezone
      - to
      type: object
    GetSearchJobStatusResponse:
      properties:
        state:
          description: Search job state.
          example: DONE GATHERING RESULTS
          type: string
        messageCount:
          description: Number of messages found or produced so far.
          type: integer
        recordCount:
          description: Number of records found or produced so far.
          type: integer
        histogramBuckets:
          description: Histogram buckets for the query.
          items:
            $ref: '#/components/schemas/HistogramBucket'
          type: array
        pendingErrors:
          description: Pending errors that have accumulated since the last time the
            status was requested.
          items:
            type: string
          type: array
        pendingWarnings:
          description: Pending warnings that have accumulated since the last time
            the status was requested.
          items:
            type: string
          type: array
      type: object
    HistogramBucket:
      properties:
        length:
          description: "Length is in milliseconds, tells the width of the bucket."
          format: int64
          type: integer
        count:
          description: Count of messages in this bucket.
          type: integer
        startTimestamp:
          description: Start time of the bucket.
          format: int64
          type: integer
      required:
      - count
      - length
      - startTimestamp
      type: object
    SearchQueryPaginatedResponse:
      properties:
        fields:
          description: List of all the fields defined for each of the messages returned.
          items:
            $ref: '#/components/schemas/Field'
          type: array
        messages:
          description: Map of the field names to the field values.
          items:
            $ref: '#/components/schemas/Message'
          type: array
      required:
      - fields
      - messages
      type: object
    Field:
      properties:
        name:
          description: Name of the field.
          type: string
        fieldType:
          description: Type of the field.
          example: long
          type: string
        keyField:
          description: Flag if the field is a key field.
          type: boolean
      required:
      - fieldType
      - keyField
      - name
      type: object
    Message:
      additionalProperties:
        type: string
      maxProperties: 1000
      type: object
    SearchQueryPaginatedRecords:
      properties:
        fields:
          description: List of all the fields defined for each of the records returned.
          items:
            $ref: '#/components/schemas/Field'
          type: array
        records:
          description: Map of the field names to the field values.
          items:
            $ref: '#/components/schemas/Record'
          type: array
      required:
      - fields
      - messages
      type: object
    Record:
      additionalProperties:
        type: string
      maxProperties: 1000
      type: object
    IdToMonitorsLibraryBaseResponseMap:
      additionalProperties:
        $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
      maxProperties: 1000
      type: object
    ListMonitorsLibraryItemWithPath:
      description: Multi-type list of types monitor or folder.
      items:
        $ref: '#/components/schemas/MonitorsLibraryItemWithPath'
      type: array
    MonitorsLibraryItemWithPath:
      example:
        path: /Monitors/SampleFolder/TestMonitor
        item:
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 0
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          permissions:
          - Read
          - Delete
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
      properties:
        item:
          $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
        path:
          description: Path of the monitor or folder.
          example: /Monitors/SampleFolder/TestMonitor
          type: string
      required:
      - item
      - path
      type: object
    IdToMutingSchedulesLibraryBaseResponseMap:
      additionalProperties:
        $ref: '#/components/schemas/MutingSchedulesLibraryBaseResponse'
      maxProperties: 1000
      type: object
    ListMutingSchedulesLibraryItemWithPath:
      description: Multi-type list of types mutingschedule or folder.
      items:
        $ref: '#/components/schemas/MutingSchedulesLibraryItemWithPath'
      type: array
    MutingSchedulesLibraryItemWithPath:
      example:
        path: /MutingSchedules/SampleFolder/TestMutingschedule
        item:
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 0
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          permissions:
          - Read
          - Delete
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
      properties:
        item:
          $ref: '#/components/schemas/MutingSchedulesLibraryBaseResponse'
        path:
          description: Path of the mutingschedule or folder.
          example: /MutingSchedules/SampleFolder/TestMutingschedule
          type: string
      required:
      - item
      - path
      type: object
    IdToAlertsLibraryBaseResponseMap:
      additionalProperties:
        $ref: '#/components/schemas/AlertsLibraryBaseResponse'
      maxProperties: 1000
      type: object
    ListAlertsLibraryItemWithPath:
      description: Multi-type list of types alert or folder.
      items:
        $ref: '#/components/schemas/AlertsLibraryItemWithPath'
      type: array
    AlertsLibraryItemWithPath:
      properties:
        item:
          $ref: '#/components/schemas/AlertsLibraryBaseResponse'
        path:
          description: Path of the alert or folder.
          example: /Alerts/SampleFolder/TestAlert
          type: string
      required:
      - item
      - path
      type: object
    IdToSlosLibraryBaseResponseMap:
      additionalProperties:
        $ref: '#/components/schemas/SlosLibraryBaseResponse'
      maxProperties: 1000
      type: object
    ListSlosLibraryItemWithPath:
      description: Multi-type list of types slo or folder.
      items:
        $ref: '#/components/schemas/SlosLibraryItemWithPath'
      type: array
    SlosLibraryItemWithPath:
      example:
        path: /Slos/SampleFolder/TestSlo
        item:
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          type: type
          version: 0
          parentId: parentId
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMutable: true
          createdBy: createdBy
          permissions:
          - Read
          - Delete
          name: name
          modifiedBy: modifiedBy
          id: id
          contentType: contentType
      properties:
        item:
          $ref: '#/components/schemas/SlosLibraryBaseResponse'
        path:
          description: Path of the slo or folder.
          example: /Slos/SampleFolder/TestSlo
          type: string
      required:
      - item
      - path
      type: object
    IdToMonitorTemplatesLibraryBaseResponseMap:
      additionalProperties:
        $ref: '#/components/schemas/MonitorTemplatesLibraryBaseResponse'
      maxProperties: 1000
      type: object
    ListMonitorTemplatesLibraryItemWithPath:
      description: Multi-type list of types monitortemplate or folder.
      items:
        $ref: '#/components/schemas/MonitorTemplatesLibraryItemWithPath'
      type: array
    MonitorTemplatesLibraryItemWithPath:
      properties:
        item:
          $ref: '#/components/schemas/MonitorTemplatesLibraryBaseResponse'
        path:
          description: Path of the monitortemplate or folder.
          example: /MonitorTemplates/SampleFolder/TestMonitortemplate
          type: string
      required:
      - item
      - path
      type: object
    ConnectionType:
      description: "Type of webhook connection. Valid values are `AWSLambda`, `Azure`,\
        \ `Datadog`, `HipChat`, `Jira`, `NewRelic`, `Opsgenie`, `PagerDuty`, `Slack`,\
        \ `MicrosoftTeams`, `ServiceNow`, `SumoCloudSOAR` and `Webhook`."
      pattern: ^(AWSLambda|Azure|Datadog|HipChat|PagerDuty|Slack|Webhook|NewRelic|Jira|Opsgenie|MicrosoftTeams|ServiceNow|SumoCloudSOAR)$
      type: string
      x-pattern-message: "must be `AWSLambda`, `Azure`, `Datadog`, `HipChat`, `PagerDuty`,\
        \ `Slack`, `Webhook`, `NewRelic`, `Jira`, `Opsgenie`, `MicrosoftTeams`, `ServiceNow`\
        \ or `SumoCloudSOAR`"
    OperatorData:
      description: The operator data for metrics query.
      example:
        operatorName: avg
        parameters:
        - key: aggregator
          value: max
        - key: operation
          value: ""
        - key: value
          value: 50
      properties:
        operatorName:
          description: The name of the metrics operator.
          example: avg
          type: string
        parameters:
          description: A list of operator parameters for the operator data.
          items:
            $ref: '#/components/schemas/OperatorParameter'
          type: array
      required:
      - operatorName
      - parameters
      type: object
    OperatorParameter:
      description: The operator parameter for operator data.
      example:
        key: aggregator
        value: max
      properties:
        key:
          description: The key of the operator parameter.
          example: operation
          type: string
        value:
          description: The value of the operator parameter.
          example: '>'
          type: string
      required:
      - key
      - value
      type: object
    TracesQueryData:
      description: The data format describing a basic traces query.
      example:
        filters:
        - type: FieldDescriptor
        - type: FieldDescriptor
      properties:
        filters:
          description: A list of filters for the traces query.
          items:
            $ref: '#/components/schemas/TracesFilter'
          type: array
      required:
      - filters
      type: object
    TracesFilter:
      description: The filter for traces query.
      discriminator:
        propertyName: type
      example:
        type: FieldDescriptor
      properties:
        type:
          description: The type of the filter.
          example: FieldDescriptor
          pattern: ^(FieldDescriptor|DurationMetricDescriptor|NumericMetricDescriptor|CPCOfFilterDescriptor|MaxCPCOfFilterDescriptor|MaxCPCFilterDescriptor)$|^$
          type: string
          x-pattern-message: "Must be `FieldDescriptor`, `DurationMetricDescriptor`,\
            \ `NumericMetricDescriptor`, `CPCOfFilterDescriptor`, `MaxCPCOfFilterDescriptor`\
            \ or `MaxCPCFilterDescriptor`"
      required:
      - type
      type: object
    SpansFilter:
      discriminator:
        mapping:
          StandaloneKey: '#/components/schemas/SpansFilterStandaloneKey'
          KeyValuePair: '#/components/schemas/SpansFilterKeyValuePair'
        propertyName: type
      example:
        fieldName: service
        type: StandaloneKey
      properties:
        type:
          description: The spans filter type.
          example: StandaloneKey
          pattern: ^(StandaloneKey|KeyValuePair)$
          type: string
          x-pattern-message: Must be `StandaloneKey` or `KeyValuePair`.
        fieldName:
          description: The name of the filtering field.
          example: service
          type: string
      required:
      - fieldName
      - type
      type: object
    SpansVisualization:
      discriminator:
        mapping:
          count: '#/components/schemas/SpansCountVisualization'
          calculation: '#/components/schemas/SpansCalculationVisualization'
        propertyName: type
      example:
        name: duration_pct_95
        type: count
      properties:
        type:
          description: The visualization type.
          example: count
          pattern: ^(count|calculation)$
          type: string
          x-pattern-message: Must be `count` or `calculation`
        name:
          description: A unique name of the visualization.
          example: duration_pct_95
          type: string
      required:
      - name
      - type
      type: object
    SpansGroupBy:
      discriminator:
        mapping:
          time: '#/components/schemas/SpansTimeGroupBy'
          field: '#/components/schemas/SpansFieldGroupBy'
        propertyName: type
      example:
        type: time
      properties:
        type:
          description: The type of the group-by clause.
          example: time
          pattern: ^(time|field)$
          type: string
          x-pattern-message: Must be `time` or `field`
      required:
      - type
      type: object
    SpansLimitItem:
      description: |
        A representation of the limit operator which reduces the number of aggregate results returned:  either the top k results or bottom k results.
      example:
        limitValue: 10
        direction: asc
      properties:
        direction:
          description: Describes whether the results should be sorted in an ascending
            or a descending order.
          example: asc
          pattern: ^(asc|desc)$
          type: string
          x-pattern-message: Must be `asc` or `desc`
        limitValue:
          description: |
            The number of aggregated results returned, e.g. if 10 is requested, then only the first 10 aggregated results are returned.
          example: 10
          format: int32
          type: integer
      required:
      - direction
      - limitValue
      type: object
    LinkedDashboard:
      properties:
        id:
          description: Identifier of the linked dashboard.
          example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          type: string
        relativePath:
          description: Relative path of the linked dashboard to the dashboard of the
            linking panel.
          example: ./subdirectory/LinkedDashboard
          type: string
        includeTimeRange:
          default: true
          description: Include time range from the current dashboard to the linked
            dashboard.
          example: true
          type: boolean
        includeVariables:
          default: true
          description: Include variables from the current dashboard to the linked
            dashboard.
          example: true
          type: boolean
      required:
      - id
      type: object
    VariableValuesData:
      description: "Variable values, status, type and errors for the variable values\
        \ search."
      example:
        variableValues:
        - myCluster
        variableType: LogQueryVariableSourceDefinition
        allowMultiSelect: false
        valueType: Any
        variableKey: _source
        errors:
        - code: auth:password_too_short
          meta:
            minLength: 12
            actualLength: 5
          detail: "Your password was 5 characters long, the minimum length is 12 characters.\
            \ See http://example.com/password for more information."
          message: Your password was too short.
        - code: auth:password_too_short
          meta:
            minLength: 12
            actualLength: 5
          detail: "Your password was 5 characters long, the minimum length is 12 characters.\
            \ See http://example.com/password for more information."
          message: Your password was too short.
        status:
          percentCompleted: 8
          state: state
      properties:
        variableValues:
          description: Values for the variable.
          example:
          - myCluster
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/DashboardSearchStatus'
        variableType:
          description: The type of the variable.
          example: LogQueryVariableSourceDefinition
          pattern: ^(LogQueryVariableSourceDefinition|MetadataVariableSourceDefinition|CsvVariableSourceDefinition|FilterSourceDefinition)$
          type: string
          x-pattern-message: "Must be `LogQueryVariableSourceDefinition`, `MetadataVariableSourceDefinition`\
            \ `CsvVariableSourceDefinition` or `FilterSourceDefinition`."
        valueType:
          default: Any
          description: |
            The type of value of the variable. Allowed values are `String`, Any`, `Numeric`, `Integer`, `Long`, `Double`, `Boolean`. - `String` considers as a single phrase and will wrap in double-quotes. - `Any` is all characters. - `Numeric` consists of a numeric value for variables, it will be displayed differently in the UI. - `Integer` is a variable with an `Int` value. - `Long` is a variable with a `Long` value. - `Double` is a variable with a `Double` value. - `Boolean` is a variable with a `Boolean` value.
          example: Any
          type: string
        allowMultiSelect:
          default: false
          description: Allow multiple selections in the values dropdown.
          example: false
          type: boolean
        variableKey:
          description: The key of the variable.
          example: _source
          type: string
        errors:
          description: Generic errors returned by backend from downstream assemblies.
            More specific errors will be thrown in the future.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - variableValues
      type: object
    ParameterAutoCompleteSyncDefinition:
      properties:
        autoCompleteType:
          description: |-
            The autocomplete parameter type. Supported values are:
              1. `SKIP_AUTOCOMPLETE`
              2. `CSV_AUTOCOMPLETE`
              3. `AUTOCOMPLETE_KEY`
              4. `VALUE_ONLY_AUTOCOMPLETE`
              5. `VALUE_ONLY_LOOKUP_AUTOCOMPLETE`
              6. `LABEL_VALUE_LOOKUP_AUTOCOMPLETE`
          type: string
        autoCompleteKey:
          description: The autocomplete key to be used to fetch autocomplete values.
          example: Ephemeral-3644138589235809747-1583470806220-parameter
          type: string
        autoCompleteValues:
          description: The array of values of the corresponding autocomplete parameter.
          items:
            $ref: '#/components/schemas/AutoCompleteValueSyncDefinition'
          type: array
        lookupFileName:
          description: The lookup file to use as a source for autocomplete values.
          type: string
        lookupLabelColumn:
          description: The column from the lookup file to use for autocomplete labels.
          type: string
        lookupValueColumn:
          description: The column from the lookup file to fill the actual value when
            a particular label is selected.
          type: string
      required:
      - autoCompleteType
      type: object
    AutoCompleteValueSyncDefinition:
      properties:
        label:
          description: The label of the autocomplete value.
          type: string
        value:
          description: The value of the autocomplete value.
          type: string
      required:
      - label
      - value
      type: object
    MetricsQuerySyncDefinition:
      properties:
        query:
          description: The text of a metrics query.
          type: string
        rowId:
          description: A label referring to the query; used if other metrics queries
            reference this one.
          type: string
      required:
      - query
      - rowId
      type: object
    ReportAutoParsingInfo:
      description: Auto-parsing information for the panel. This information tells
        us whether automatic field extraction from JSON log messages is enabled or
        not
      properties:
        mode:
          default: performance
          description: Can be `intelligent` or `performance`
          example: performance
          pattern: ^(intelligent|performance)$|^$
          type: string
      type: object
    SavedSearchSyncDefinitionBase:
      properties:
        queryText:
          description: The text of a Sumo Logic query.
          type: string
        byReceiptTime:
          default: false
          description: "Set it to true to run the search using receipt time. By default,\
            \ searches do not run by receipt time."
          type: boolean
        viewName:
          description: The name of the Scheduled View that has indexed the data you
            want to search.
          type: string
        viewStartTime:
          description: Start timestamp of the Scheduled View in UTC format.
          format: date-time
          type: string
        queryParameters:
          description: An array of search query parameter objects.
          items:
            $ref: '#/components/schemas/QueryParameterSyncDefinition'
          type: array
        parsingMode:
          default: Manual
          description: |-
            Define the parsing mode to scan the JSON format log messages. Possible values are:
              1. `AutoParse`
              2. `Manual`
            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
          example: AutoParse
          type: string
      required:
      - byReceiptTime
      - queryParameters
      - queryText
      type: object
    MetricsSavedSearchQuerySyncDefinition:
      description: Definition of a metrics query.
      properties:
        rowId:
          description: Row id. All rows ids are represented by subsequent upper case
            letters starting with `A`.
          example: A
          type: string
        query:
          description: Metrics query.
          example: my_metric | avg
          type: string
      required:
      - query
      - rowId
      type: object
    ResourceIdentity:
      discriminator:
        mapping:
          Collector: '#/components/schemas/CollectorResourceIdentity'
          Source: '#/components/schemas/SourceResourceIdentity'
          IngestBudget: '#/components/schemas/IngestBudgetResourceIdentity'
          Organisation: '#/components/schemas/OrgIdentity'
          LogsToMetricsRule: '#/components/schemas/LogsToMetricsRuleIdentity'
        propertyName: type
      example:
        name: "S3 Source, Scheduled View name."
        id: C03E086C137F38B4
        type: Collector
      properties:
        id:
          description: The unique identifier of the resource.
          example: C03E086C137F38B4
          type: string
        name:
          default: Unknown
          description: The name of the resource.
          example: "S3 Source, Scheduled View name."
          type: string
        type:
          description: "-> Resource type. Supported types are - `Collector`, `Source`,\
            \ `IngestBudget` and `Organisation`."
          example: Collector
          type: string
      required:
      - id
      - type
      type: object
    TrackerIdentity:
      discriminator:
        propertyName: description
      example:
        trackerId: trackerId
        description: S3 collection is not working as expected because of access issues.
        error: Access denied to Amazon S3 bucket
      properties:
        trackerId:
          description: Name that uniquely identifies the health event. It focuses
            on what happened rather than why.
          type: string
        error:
          description: Description of the underlying reason for the event change.
          example: Access denied to Amazon S3 bucket
          type: string
        description:
          description: A more elaborate description of why the event occurred.
          example: S3 collection is not working as expected because of access issues.
          type: string
      required:
      - description
      - error
      - trackerId
      type: object
    DataIngestAffectedTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    S3CollectionErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    FileCollectionErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    AwsCloudWatchCollectionErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    AwsInventoryCollectionErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    CSEWindowsErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    CSEWindowsAccessErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    CSEWindowsSensorOutOfStorageTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    CSEWindowsParsingErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    CSEWindowsExcessiveBacklogTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    MetricsMetadataKeyLengthLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataLimitsExceededTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    MetricsMetadataValueLengthLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataKeyValuePairsLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataTotalMetadataSizeLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricNameErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    OTCReceiverErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    OTCExporterErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    OTCProcessErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    Action:
      description: The base class of all connection types.
      discriminator:
        propertyName: connectionType
      properties:
        connectionType:
          description: |-
            Connection type of the connection. Valid values:
              1.  `Email`
              2.  `AWSLambda`
              3.  `AzureFunctions`
              4.  `Datadog`
              5.  `HipChat`
              6.  `Jira`
              7.  `NewRelic`
              8.  `Opsgenie`
              9.  `PagerDuty`
              10. `Slack`
              11. `MicrosoftTeams`
              12. `ServiceNow`
              13. `SumoCloudSOAR`
              14. `Webhook`
          pattern: ^(Email|AWSLambda|AzureFunctions|Datadog|HipChat|Jira|NewRelic|Opsgenie|PagerDuty|Slack|MicrosoftTeams|ServiceNow|SumoCloudSOAR|Webhook)$
          type: string
          x-pattern-message: "should be one of the following: 'Email', 'AWSLambda',\
            \ 'AzureFunctions', 'Datadog', 'HipChat', 'Jira', 'NewRelic', 'Opsgenie',\
            \ 'PagerDuty', 'Slack', 'MicrosoftTeams', 'ServiceNow', 'SumoCloudSOAR'\
            \ and 'Webhook'"
      required:
      - connectionType
      type: object
    StaticThreshold:
      default: 0.0
      description: The data value for the condition. This defines the threshold for
        when to trigger. Threshold value is not applicable for `MissingData` and `ResolvedMissingData`
        triggerTypes and will be ignored if specified.
      example: 50.0
      format: double
      type: number
    StaticThresholdType:
      default: GreaterThanOrEqual
      description: |-
        The comparison type for the `threshold` evaluation. This defines how you want the data value compared. Valid values:
          1. `LessThan`: Less than than the configured threshold.
          2. `GreaterThan`: Greater than the configured threshold.
          3. `LessThanOrEqual`: Less than or equal to the configured threshold.
          4. `GreaterThanOrEqual`: Greater than or equal to the configured threshold.
        ThresholdType value is not applicable for `MissingData` and `ResolvedMissingData` triggerTypes and will be ignored if specified.
      example: GreaterThanOrEqual
      pattern: ^(LessThan|GreaterThan|LessThanOrEqual|GreaterThanOrEqual)$
      type: string
      x-pattern-message: "should be one of the following: 'LessThan', 'GreaterThan',\
        \ 'LessThanOrEqual', or 'GreaterThanOrEqual'"
    OccurrenceType:
      description: |-
        The criteria to evaluate the threshold and thresholdType in the given time range. Valid values:
          1. `AtLeastOnce`: Trigger if the threshold is met at least once. (NOTE: This is the only valid value if monitorType is `Metrics`.)
          2. `Always`: Trigger if the threshold is met continuously. (NOTE: This is the only valid value if monitorType is `Metrics`.)
          3. `ResultCount`: Trigger if the threshold is met against the count of results. (NOTE: This is the only valid value if monitorType is `Logs`.)
          4. `MissingData`: Trigger if the data is missing. (NOTE: This is valid for both `Logs` and `Metrics` monitorTypes)
      example: ResultCount
      pattern: ^(AtLeastOnce|Always|ResultCount|MissingData)$
      type: string
      x-pattern-message: "should be one of the following: 'AtLeastOnce', 'Always',\
        \ 'ResultCount' or 'MissingData'"
    TriggerSource:
      description: |-
        Determines which time series from queries to use for Metrics MissingData and ResolvedMissingData triggers Valid values:
          1. `AllTimeSeries`: Evaluate the condition against all time series. (NOTE: This option is only valid if monitorType is `Metrics`)
          2. `AnyTimeSeries`: Evaluate the condition against any time series. (NOTE: This option is only valid if monitorType is `Metrics`)
          3. `AllResults`: Evaluate the condition against results from all queries. (NOTE: This option is only valid if monitorType is `Logs`)
      example: AllResults
      pattern: ^(AllTimeSeries|AnyTimeSeries|AllResults)$
      type: string
      x-pattern-message: "should be one of the following: 'AllTimeSeries', 'AnyTimeSeries',\
        \ or 'AllResults'"
    OutlierDirection_1:
      default: Both
      description: Specifies which direction should trigger violations.
      example: Up
      pattern: ^(Both|Up|Down)$
      type: string
      x-pattern-message: "should be one of the following: 'Both', 'Up', 'Down'"
    BurnRate:
      description: Object containing error budget depletion and alert time range.
      properties:
        burnRateThreshold:
          description: The error budget depletion percentage.
          example: 90
          format: double
          type: number
        timeRange:
          description: The relative time range for measuring error budget depletion.
          example: -2h
          type: string
      required:
      - burnRateThreshold
      - timeRange
      type: object
    OutlierDataValue:
      description: Data value and bounds of outlier data point.
      properties:
        baseline:
          $ref: '#/components/schemas/OutlierBound'
        critical:
          $ref: '#/components/schemas/OutlierBound'
        warning:
          $ref: '#/components/schemas/OutlierBound'
        value:
          description: The value of outlier data point.
          example: 70.0
          format: double
          type: number
        violation:
          description: The type of violation.
          example: CriticalUpperViolation
          pattern: ^(CriticalUpperViolation|CriticalLowerViolation|WarningUpperViolation|WarningLowerViolation|NoViolation)$
          type: string
          x-pattern-message: "should be one of the following: 'CriticalUpperViolation',\
            \ 'CriticalLowerViolation', 'WarningUpperViolation', 'WarningLowerViolation',\
            \ 'NoViolation'"
      type: object
    OutlierBound:
      description: The upper and lower bound of outlier/baseline.
      properties:
        lower:
          description: Lower bond value.
          example: 50.0
          format: double
          type: number
        upper:
          description: Upper bond value.
          example: 100.0
          format: double
          type: number
      type: object
    logs-data-forwarding-rule-management:
      type: object
    LogSearchScheduleSyncDefinition:
      example:
        cronExpression: 0 0/15 * * * ? *
        parseableTimeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
        notification:
          taskType: taskType
        muteErrorEmails: true
        scheduleType: scheduleType
        displayableTimeRange: -2h
        timeZone: timeZone
        threshold:
          count: 0
          thresholdType: thresholdType
          operator: operator
        parameters:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        cronExpression:
          description: "Cron-like expression specifying the search's schedule. Field\
            \ scheduleType must be set to \"Custom\", otherwise, scheduleType takes\
            \ precedence over cronExpression."
          example: 0 0/15 * * * ? *
          type: string
        displayableTimeRange:
          description: "A human-friendly text describing the query time range. For\
            \ e.g. \"-2h\", \"last three days\", \"team default time\". This value\
            \ can not be set via API."
          example: -2h
          type: string
        parseableTimeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        timeZone:
          description: "Time zone identifier for time specification. Either an abbreviation\
            \ such as \"PST\", a full name such as \"America/Los_Angeles\", or a custom\
            \ ID such as \"GMT-8:00\". Note that the support of abbreviations is for\
            \ JDK 1.1.x compatibility only and full names should be used. The GMT\
            \ time zone is chosen if the given time zone cannot be identified."
          type: string
        threshold:
          $ref: '#/components/schemas/LogSearchNotificationThresholdSyncDefinition'
        notification:
          $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
        scheduleType:
          description: |-
            Run schedule of the scheduled search. Set to "Custom" to specify the schedule with a CRON expression.Please note that with Custom, 1Day and 1Week schedule types you need to provide the corresponding cron expression to determine when to actually run the search. e.g. Sample Valid Cron for 1Day is "0 0 16 ? * 2-6 *". Possible schedule types are:
              - `RealTime`
              - `15Minutes`
              - `1Hour`
              - `2Hours`
              - `4Hours`
              - `6Hours`
              - `8Hours`
              - `12Hours`
              - `1Day`
              - `1Week`
              - `Custom`
          pattern: ^(RealTime|15Minutes|1Hour|2Hours|4Hours|6Hours|8Hours|12Hours|1Day|1Week|Custom)$
          type: string
        muteErrorEmails:
          description: "If enabled, emails are not sent out in case of errors with\
            \ the search."
          type: boolean
        parameters:
          description: "A list of scheduled search template parameters to be used\
            \ while executing the query. This is different from the queryParameters\
            \ field in parent object as this field will be  used for execution as\
            \  per the schedule. The parent object field is for search itself, not\
            \ part of execution.  Learn more about the search templates here :  https://help.sumologic.com/docs/search/get-started-with-search/build-search/search-templates/"
          items:
            $ref: '#/components/schemas/ScheduleSearchParameterSyncDefinition'
          maxLength: 50
          type: array
      required:
      - notification
      - parseableTimeRange
      - scheduleType
      - timeZone
      type: object
    LogSearchNotificationThresholdSyncDefinition:
      example:
        count: 0
        thresholdType: thresholdType
        operator: operator
      properties:
        thresholdType:
          description: |-
            This property is deprecated. The system will automatically infer the value of this field from the query going forward, so the user-specified value will no longer be honored.
            Threshold type. Possible values are:
             1. `message`
             2. `group`

            Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it to `message`.
          pattern: ^(message|group)$
          type: string
        operator:
          description: |-
            Criterion to be applied when comparing actual result count with expected count. Possible values are:
             1. `eq`
             2. `gt`
             3. `ge`
             4. `lt`
             5. `le`
          pattern: ^(eq|gt|ge|lt|le)$
          type: string
        count:
          description: Expected result count.
          type: integer
      required:
      - count
      - operator
      type: object
    Metadata:
      properties:
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: dateTime
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: dateTime
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
      required:
      - createdAt
      - createdBy
      - modifiedAt
      - modifiedBy
      type: object
    MetadataWithUserInfo:
      properties:
        createdAt:
          description: "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: date-time
          nullable: true
          type: string
        createdByUser:
          $ref: '#/components/schemas/UserInfo'
        modifiedAt:
          description: "Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format."
          format: date-time
          nullable: true
          type: string
        modifiedByUser:
          $ref: '#/components/schemas/UserInfo'
      required:
      - createdAt
      - createdByUser
      - modifiedAt
      - modifiedByUser
      type: object
    UserInfo:
      example:
        firstName: John
        lastName: Doe
        id: 0000000006743FDD
        email: johndoe@acme.com
      properties:
        id:
          description: User's identifier.
          example: 0000000006743FDD
          type: string
        email:
          description: User's email.
          example: johndoe@acme.com
          type: string
        firstName:
          description: User's first name.
          example: John
          type: string
        lastName:
          description: User's last name.
          example: Doe
          type: string
      required:
      - email
      - firstName
      - id
      - lastName
      type: object
    TopologyLabelMap:
      description: |
        Map of the topology labels. Each label has a key and a list of values. If a value is `*`, it means the label will match content for all values of its key.
      example:
        data:
          service:
          - kube-scheduler
          - kube-dns
      properties:
        data:
          additionalProperties:
            $ref: '#/components/schemas/TopologyLabelValuesList'
          description: Map from topology labels to `TopologyLabelValuesList`.
          maxProperties: 1000
          type: object
      required:
      - data
      type: object
    TopologyLabelValuesList:
      default: []
      description: List of values corresponding to a key of a label.
      example: kube-scheduler
      items:
        description: Value of the label.
        type: string
      type: array
    Iso8601TimeRange:
      description: |
        A simple time range class, where the start and end points are specified in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format
      example:
        start: 2018-10-16T09:10:00Z
        end: 2018-10-16T09:20:00Z
      properties:
        start:
          description: "Start time in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format"
          example: 2018-10-16T09:10:00Z
          format: date-time
          type: string
        end:
          description: "End time in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\
            \ format"
          example: 2018-10-16T09:20:00Z
          format: date-time
          type: string
      required:
      - end
      - start
      type: object
    uploadFile_request:
      properties:
        file:
          description: |-
            The CSV file to upload.
              - The size limit for the CSV file is 100MB.
              - Use Unix format, with newlines ("\n") separating rows.
              - The first row should contain headers that match the lookup table schema. Matching is
                case-insensitive.
          format: binary
          type: string
      required:
      - file
      type: object
    PaginatedOTCollectorsRequest_filters:
      description: parameter which is used for filtering.
      example:
        os: linux
        alive: true
        isRemotelyManaged: true
        collectorVersionRange:
          minVersion: minVersion
          rangeType: rangeType
          maxVersion: maxVersion
        tags:
        - - key: region
            values:
            - us2
            - mum
        - - key: key2
            values:
            - value2
      properties:
        tags:
          default: []
          description: tags associated with the OT collector
          example:
          - - key: region
              values:
              - us2
              - mum
          - - key: key2
              values:
              - value2
          items:
            items:
              $ref: '#/components/schemas/OtTag'
            type: array
          type: array
        os:
          description: Name of the Operating System.
          example: linux
          nullable: true
          type: string
          x-visibility: private
        collectorVersionRange:
          $ref: '#/components/schemas/VersionRange'
        alive:
          description: alive Status of the OT Collector based on heartbeat.
          example: true
          nullable: true
          type: boolean
        isRemotelyManaged:
          description: Management Status of the OT Collector based on if it is remotely
            or locally managed.
          example: true
          nullable: true
          type: boolean
      type: object
    MonitorsLibraryMonitor_allOf_runAs:
      type: object
    CapabilityDefinition_group:
      description: The group that the capability belongs to.
      properties:
        id:
          description: The backend name for the capability group
          example: CloudSiem
          type: string
        label:
          description: The label for the capability group
          example: Insights
          type: string
        parentId:
          description: The ID of the parent capability group
          example: Cloud Siem
          type: string
      required:
      - id
      - label
      type: object
    ScopeDefinition_group:
      description: The group that the scope belongs to.
      example:
        id: dataManagement
        label: Data Management
        parentId: parentId
      properties:
        id:
          description: The name of the scope group
          example: dataManagement
          type: string
        label:
          description: The label for the scope group
          example: Data Management
          type: string
        parentId:
          description: The ID of the parent scope group
          type: string
      required:
      - id
      - label
      type: object
    LogSearchEstimatedUsageRequestV3_allOf_emulateSearchContext:
      description: |
        Contains keys like "roleIds" with a list of role IDs or "userId" as a string.
      example:
        roleIds:
        - 000000000000000C
        userId: 000000000000019F
      properties:
        roleIds:
          example:
          - 000000000000000C
          items:
            type: string
          type: array
        userId:
          example: 000000000000019F
          type: string
      type: object
    ReportScheduleRequest_emailNotification:
      allOf:
      - $ref: '#/components/schemas/Email'
      - properties:
          timeZone:
            deprecated: true
            description: "This property is deprecated, please use the root-level timeZone\
              \ property instead."
            type: string
        type: object
      description: The email the dashboard report will be sent at the scheduled data
        and time.
      example:
        messageBody: Sample Email Message Body
        recipients:
        - john@doe.com
        - john@doe.com
        subject: Sample Email Subject
        timeZone: timeZone
        connectionType: connectionType
    SCIMCreateUserDefinition_emails_inner:
      properties:
        value:
          example: jdoe@example.com
          format: email
          type: string
        type:
          example: work
          type: string
        primary:
          default: true
          example: true
          type: boolean
      type: object
    SCIMCreateUserDefinition_roles_inner:
      properties:
        value:
          description: Role assigned to the user
          example: Administrator
          type: string
        primary:
          default: true
          description: Indicates if this is the primary role
          example: true
          type: boolean
      type: object
    SCIMPatchUserDefinition_Operations_inner_value:
      allOf:
      - properties:
          value:
            type: string
        type: object
      - properties:
          value:
            items:
              type: string
            type: array
        type: object
      type: object
    SCIMPatchUserDefinition_Operations_inner:
      properties:
        op:
          description: We will only support `replace` operation.
          example: replace
          pattern: ^(replace|add|remove)$
          type: string
          x-pattern-message: "`replace`, `add`, `remove`"
        path:
          description: Attribute path to modify
          example: name.familyName
          type: string
        value:
          $ref: '#/components/schemas/SCIMPatchUserDefinition_Operations_inner_value'
      type: object
    OTCollector_version:
      description: Version information of the OT Collector.
      example:
        currentVersion: currentVersion
      properties:
        currentVersion:
          description: Current version of the OT Collector.
          type: string
      required:
      - currentVersion
      type: object
    OTCollector_healthIncidentsTracker:
      description: Health incident information.
      example:
        errorsCount: 0
        warningsCount: 1
      properties:
        errorsCount:
          description: Number of errors associated with the OT Collector.
          example: 0
          format: int32
          type: integer
        warningsCount:
          description: Number of warnings associated with the OT Collector.
          example: 1
          format: int32
          type: integer
      type: object
    OTCollector_systemInfo:
      description: System information of the OT Collector.
      example:
        hostName: app.test.com
        hostOsName: Linux
        hostOsVersion: 5.4.144-69.257.amzn2.x86_64
        hostIpAddress: 19.123.24.66
        hostEnv: EKS-1.20.2
      properties:
        hostName:
          description: Host name of the OT Collector.
          example: app.test.com
          type: string
        hostOsName:
          description: Host OS name of the OT Collector.
          example: Linux
          type: string
        hostOsVersion:
          description: Host OS version of the OT Collector.
          example: 5.4.144-69.257.amzn2.x86_64
          type: string
        hostIpAddress:
          description: Host IP address of the OT Collector.
          example: 19.123.24.66
          type: string
        hostEnv:
          description: Host environment of the OT Collector.
          example: EKS-1.20.2
          type: string
      type: object
    SourceTemplateRequest_inputJson:
      additionalProperties: true
      description: inputJson of source template
      example:
        receivers: {}
        name: apache_test_source_template
        description: Demo Description for Source Template
        processors: {}
      maxProperties: 1000
      properties:
        name:
          description: name of source template.
          example: apache_test_source_template
          type: string
        receivers:
          description: receiver information of source template
          example: {}
          type: object
        description:
          description: description of source template
          example: Demo Description for Source Template
          type: string
        processors:
          description: processors for source template
          example: {}
          type: object
      required:
      - name
      - receivers
      type: object
    SourceTemplateUpgradeRequest_inputJson:
      additionalProperties: true
      description: inputJson of source template
      example:
        receivers:
          hostmetrics:
            receiverType: hostmetrics
            collection_interval: 5m
        name: apache_test_source_template
        description: Demo Description for Source Template
        processors:
          resource:
            processorType: resource
      maxProperties: 1000
      properties:
        name:
          description: name of source template.
          example: apache_test_source_template
          type: string
        receivers:
          description: receiver information of source template
          example:
            hostmetrics:
              receiverType: hostmetrics
              collection_interval: 5m
          type: object
        description:
          description: description of source template
          example: Demo Description for Source Template
          type: string
        processors:
          description: processors for source template
          example:
            resource:
              processorType: resource
          type: object
      required:
      - name
      - receivers
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
x-tagGroups:
- name: Archive Management
  tags:
  - archiveManagement
- name: Health Events
  tags:
  - healthEvents
- name: Infrequent Data Tier
  tags:
  - logSearchesEstimatedUsage
- name: Ingest Budgets Management
  tags:
  - ingestBudgetManagementV1
- name: Ingest Budgets Management V2
  tags:
  - ingestBudgetManagementV2
- name: Library Management
  tags:
  - appManagement
  - appManagementV2
  - contentManagement
  - dashboardManagement
  - folderManagement
  - lookupManagement
  - contentPermissions
  - logSearchesManagement
  - parsersLibraryManagement
- name: Metrics
  tags:
  - metricsSearchesManagement
  - transformationRuleManagement
  - metricsQuery
  - metricsSearchesManagementV2
- name: Security Management
  tags:
  - accessKeyManagement
  - accountManagement
  - passwordPolicy
  - policiesManagement
  - samlConfigurationManagement
  - serviceAllowlistManagement
- name: Organizations Management
  tags:
  - orgsManagement
- name: Settings Management
  tags:
  - connectionManagement
  - dynamicParsingRuleManagement
  - extractionRuleManagement
  - fieldManagementV1
  - partitionManagement
  - scheduledViewManagement
  - logsDataForwardingManagement
- name: Tokens Management
  tags:
  - tokensLibraryManagement
- name: Tracing
  tags:
  - traces
  - spanAnalytics
  - serviceMap
- name: Users and Roles Management
  tags:
  - roleManagement
  - roleManagementV2
  - userManagement
- name: Threat Intel Ingest Management
  tags:
  - threatIntelIngest
  - threatIntelIngestProducer
- name: OpenTelemetry Collector Management
  tags:
  - otCollectorManagementExternal
- name: Source Template Management
  tags:
  - sourceTemplateManagementExternal
- name: Schema Base Management
  tags:
  - schemaBaseManagement
- name: Budget Management
  tags:
  - budgetManagement
- name: Monitor Management
  tags:
  - monitorsLibraryManagement
- name: Muting Schedules Management
  tags:
  - mutingSchedulesLibraryManagement
- name: SLO Management
  tags:
  - slosLibraryManagement
