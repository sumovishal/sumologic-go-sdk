/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SpanQueryAggregateResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpanQueryAggregateResult{}

// SpanQueryAggregateResult struct for SpanQueryAggregateResult
type SpanQueryAggregateResult struct {
	// Status of the query. Possible values: `Processing`, `Finished`, `Error`, `Paused`.
	Status string `json:"status"`
	// Descriptive message of the status
	StatusMessage *string `json:"statusMessage,omitempty"`
	// The series returned from a search.
	Series []SpanQueryAggregateDataSeries `json:"series"`
}

// NewSpanQueryAggregateResult instantiates a new SpanQueryAggregateResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpanQueryAggregateResult(status string, series []SpanQueryAggregateDataSeries) *SpanQueryAggregateResult {
	this := SpanQueryAggregateResult{}
	this.Status = status
	this.Series = series
	return &this
}

// NewSpanQueryAggregateResultWithDefaults instantiates a new SpanQueryAggregateResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpanQueryAggregateResultWithDefaults() *SpanQueryAggregateResult {
	this := SpanQueryAggregateResult{}
	return &this
}

// GetStatus returns the Status field value
func (o *SpanQueryAggregateResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SpanQueryAggregateResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SpanQueryAggregateResult) SetStatus(v string) {
	o.Status = v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *SpanQueryAggregateResult) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanQueryAggregateResult) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *SpanQueryAggregateResult) HasStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *SpanQueryAggregateResult) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetSeries returns the Series field value
func (o *SpanQueryAggregateResult) GetSeries() []SpanQueryAggregateDataSeries {
	if o == nil {
		var ret []SpanQueryAggregateDataSeries
		return ret
	}

	return o.Series
}

// GetSeriesOk returns a tuple with the Series field value
// and a boolean to check if the value has been set.
func (o *SpanQueryAggregateResult) GetSeriesOk() ([]SpanQueryAggregateDataSeries, bool) {
	if o == nil {
		return nil, false
	}
	return o.Series, true
}

// SetSeries sets field value
func (o *SpanQueryAggregateResult) SetSeries(v []SpanQueryAggregateDataSeries) {
	o.Series = v
}

func (o SpanQueryAggregateResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpanQueryAggregateResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	toSerialize["series"] = o.Series
	return toSerialize, nil
}

type NullableSpanQueryAggregateResult struct {
	value *SpanQueryAggregateResult
	isSet bool
}

func (v NullableSpanQueryAggregateResult) Get() *SpanQueryAggregateResult {
	return v.value
}

func (v *NullableSpanQueryAggregateResult) Set(val *SpanQueryAggregateResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSpanQueryAggregateResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSpanQueryAggregateResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpanQueryAggregateResult(val *SpanQueryAggregateResult) *NullableSpanQueryAggregateResult {
	return &NullableSpanQueryAggregateResult{value: val, isSet: true}
}

func (v NullableSpanQueryAggregateResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpanQueryAggregateResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


