/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MonitorTemplatesLibraryFolderUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorTemplatesLibraryFolderUpdate{}

// MonitorTemplatesLibraryFolderUpdate struct for MonitorTemplatesLibraryFolderUpdate
type MonitorTemplatesLibraryFolderUpdate struct {
	MonitorTemplatesLibraryBaseUpdate
}

// NewMonitorTemplatesLibraryFolderUpdate instantiates a new MonitorTemplatesLibraryFolderUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorTemplatesLibraryFolderUpdate(name string, version int64, type_ string) *MonitorTemplatesLibraryFolderUpdate {
	this := MonitorTemplatesLibraryFolderUpdate{}
	this.Name = name
	var description string = ""
	this.Description = &description
	this.Version = version
	this.Type = type_
	return &this
}

// NewMonitorTemplatesLibraryFolderUpdateWithDefaults instantiates a new MonitorTemplatesLibraryFolderUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorTemplatesLibraryFolderUpdateWithDefaults() *MonitorTemplatesLibraryFolderUpdate {
	this := MonitorTemplatesLibraryFolderUpdate{}
	return &this
}

func (o MonitorTemplatesLibraryFolderUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorTemplatesLibraryFolderUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedMonitorTemplatesLibraryBaseUpdate, errMonitorTemplatesLibraryBaseUpdate := json.Marshal(o.MonitorTemplatesLibraryBaseUpdate)
	if errMonitorTemplatesLibraryBaseUpdate != nil {
		return map[string]interface{}{}, errMonitorTemplatesLibraryBaseUpdate
	}
	errMonitorTemplatesLibraryBaseUpdate = json.Unmarshal([]byte(serializedMonitorTemplatesLibraryBaseUpdate), &toSerialize)
	if errMonitorTemplatesLibraryBaseUpdate != nil {
		return map[string]interface{}{}, errMonitorTemplatesLibraryBaseUpdate
	}
	return toSerialize, nil
}

type NullableMonitorTemplatesLibraryFolderUpdate struct {
	value *MonitorTemplatesLibraryFolderUpdate
	isSet bool
}

func (v NullableMonitorTemplatesLibraryFolderUpdate) Get() *MonitorTemplatesLibraryFolderUpdate {
	return v.value
}

func (v *NullableMonitorTemplatesLibraryFolderUpdate) Set(val *MonitorTemplatesLibraryFolderUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorTemplatesLibraryFolderUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorTemplatesLibraryFolderUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorTemplatesLibraryFolderUpdate(val *MonitorTemplatesLibraryFolderUpdate) *NullableMonitorTemplatesLibraryFolderUpdate {
	return &NullableMonitorTemplatesLibraryFolderUpdate{value: val, isSet: true}
}

func (v NullableMonitorTemplatesLibraryFolderUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorTemplatesLibraryFolderUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


