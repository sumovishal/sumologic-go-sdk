/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// RelatedAlert An alert and how it is related to the given alert
type RelatedAlert struct {
	Alert *AlertsLibraryAlertResponse `json:"alert,omitempty"`
	// Tags describing the relationship between the two alerts.
	Relations []string `json:"relations,omitempty"`
}

// NewRelatedAlert instantiates a new RelatedAlert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelatedAlert() *RelatedAlert {
	this := RelatedAlert{}
	return &this
}

// NewRelatedAlertWithDefaults instantiates a new RelatedAlert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelatedAlertWithDefaults() *RelatedAlert {
	this := RelatedAlert{}
	return &this
}

// GetAlert returns the Alert field value if set, zero value otherwise.
func (o *RelatedAlert) GetAlert() AlertsLibraryAlertResponse {
	if o == nil || o.Alert == nil {
		var ret AlertsLibraryAlertResponse
		return ret
	}
	return *o.Alert
}

// GetAlertOk returns a tuple with the Alert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedAlert) GetAlertOk() (*AlertsLibraryAlertResponse, bool) {
	if o == nil || o.Alert == nil {
		return nil, false
	}
	return o.Alert, true
}

// HasAlert returns a boolean if a field has been set.
func (o *RelatedAlert) HasAlert() bool {
	if o != nil && o.Alert != nil {
		return true
	}

	return false
}

// SetAlert gets a reference to the given AlertsLibraryAlertResponse and assigns it to the Alert field.
func (o *RelatedAlert) SetAlert(v AlertsLibraryAlertResponse) {
	o.Alert = &v
}

// GetRelations returns the Relations field value if set, zero value otherwise.
func (o *RelatedAlert) GetRelations() []string {
	if o == nil || o.Relations == nil {
		var ret []string
		return ret
	}
	return o.Relations
}

// GetRelationsOk returns a tuple with the Relations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedAlert) GetRelationsOk() ([]string, bool) {
	if o == nil || o.Relations == nil {
		return nil, false
	}
	return o.Relations, true
}

// HasRelations returns a boolean if a field has been set.
func (o *RelatedAlert) HasRelations() bool {
	if o != nil && o.Relations != nil {
		return true
	}

	return false
}

// SetRelations gets a reference to the given []string and assigns it to the Relations field.
func (o *RelatedAlert) SetRelations(v []string) {
	o.Relations = v
}

func (o RelatedAlert) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Alert != nil {
		toSerialize["alert"] = o.Alert
	}
	if o.Relations != nil {
		toSerialize["relations"] = o.Relations
	}
	return json.Marshal(toSerialize)
}

type NullableRelatedAlert struct {
	value *RelatedAlert
	isSet bool
}

func (v NullableRelatedAlert) Get() *RelatedAlert {
	return v.value
}

func (v *NullableRelatedAlert) Set(val *RelatedAlert) {
	v.value = val
	v.isSet = true
}

func (v NullableRelatedAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableRelatedAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelatedAlert(val *RelatedAlert) *NullableRelatedAlert {
	return &NullableRelatedAlert{value: val, isSet: true}
}

func (v NullableRelatedAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelatedAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


