/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MonitorTemplatesLibraryBaseUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorTemplatesLibraryBaseUpdate{}

// MonitorTemplatesLibraryBaseUpdate struct for MonitorTemplatesLibraryBaseUpdate
type MonitorTemplatesLibraryBaseUpdate struct {
	// The name of the monitortemplate or folder.
	Name string `json:"name"`
	// The description of the monitortemplate or folder.
	Description *string `json:"description,omitempty"`
	// The version of the monitortemplate or folder.
	Version int64 `json:"version"`
	// Type of the object model.
	Type string `json:"type"`
}

// NewMonitorTemplatesLibraryBaseUpdate instantiates a new MonitorTemplatesLibraryBaseUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorTemplatesLibraryBaseUpdate(name string, version int64, type_ string) *MonitorTemplatesLibraryBaseUpdate {
	this := MonitorTemplatesLibraryBaseUpdate{}
	this.Name = name
	var description string = ""
	this.Description = &description
	this.Version = version
	this.Type = type_
	return &this
}

// NewMonitorTemplatesLibraryBaseUpdateWithDefaults instantiates a new MonitorTemplatesLibraryBaseUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorTemplatesLibraryBaseUpdateWithDefaults() *MonitorTemplatesLibraryBaseUpdate {
	this := MonitorTemplatesLibraryBaseUpdate{}
	var description string = ""
	this.Description = &description
	return &this
}

// GetName returns the Name field value
func (o *MonitorTemplatesLibraryBaseUpdate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MonitorTemplatesLibraryBaseUpdate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MonitorTemplatesLibraryBaseUpdate) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MonitorTemplatesLibraryBaseUpdate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorTemplatesLibraryBaseUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MonitorTemplatesLibraryBaseUpdate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MonitorTemplatesLibraryBaseUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetVersion returns the Version field value
func (o *MonitorTemplatesLibraryBaseUpdate) GetVersion() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *MonitorTemplatesLibraryBaseUpdate) GetVersionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *MonitorTemplatesLibraryBaseUpdate) SetVersion(v int64) {
	o.Version = v
}

// GetType returns the Type field value
func (o *MonitorTemplatesLibraryBaseUpdate) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MonitorTemplatesLibraryBaseUpdate) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MonitorTemplatesLibraryBaseUpdate) SetType(v string) {
	o.Type = v
}

func (o MonitorTemplatesLibraryBaseUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorTemplatesLibraryBaseUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["version"] = o.Version
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableMonitorTemplatesLibraryBaseUpdate struct {
	value *MonitorTemplatesLibraryBaseUpdate
	isSet bool
}

func (v NullableMonitorTemplatesLibraryBaseUpdate) Get() *MonitorTemplatesLibraryBaseUpdate {
	return v.value
}

func (v *NullableMonitorTemplatesLibraryBaseUpdate) Set(val *MonitorTemplatesLibraryBaseUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorTemplatesLibraryBaseUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorTemplatesLibraryBaseUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorTemplatesLibraryBaseUpdate(val *MonitorTemplatesLibraryBaseUpdate) *NullableMonitorTemplatesLibraryBaseUpdate {
	return &NullableMonitorTemplatesLibraryBaseUpdate{value: val, isSet: true}
}

func (v NullableMonitorTemplatesLibraryBaseUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorTemplatesLibraryBaseUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


