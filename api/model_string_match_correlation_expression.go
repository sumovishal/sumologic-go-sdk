/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StringMatchCorrelationExpression type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StringMatchCorrelationExpression{}

// StringMatchCorrelationExpression struct for StringMatchCorrelationExpression
type StringMatchCorrelationExpression struct {
	CorrelationExpression
	// Name of the query field returned by a log search query.
	QueryFieldName string `json:"queryFieldName"`
	// Name of the field from event query output.
	EventFieldName string `json:"eventFieldName"`
	// Type of string matching algorithm which tells how to match eventFieldName and queryFieldName.
	StringMatchingAlgorithm string `json:"stringMatchingAlgorithm" validate:"regexp=^(ExactMatch)$"`
}

type _StringMatchCorrelationExpression StringMatchCorrelationExpression

// NewStringMatchCorrelationExpression instantiates a new StringMatchCorrelationExpression object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStringMatchCorrelationExpression(queryFieldName string, eventFieldName string, stringMatchingAlgorithm string, correlationExpressionType string) *StringMatchCorrelationExpression {
	this := StringMatchCorrelationExpression{}
	this.CorrelationExpressionType = correlationExpressionType
	this.QueryFieldName = queryFieldName
	this.EventFieldName = eventFieldName
	this.StringMatchingAlgorithm = stringMatchingAlgorithm
	return &this
}

// NewStringMatchCorrelationExpressionWithDefaults instantiates a new StringMatchCorrelationExpression object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStringMatchCorrelationExpressionWithDefaults() *StringMatchCorrelationExpression {
	this := StringMatchCorrelationExpression{}
	return &this
}

// GetQueryFieldName returns the QueryFieldName field value
func (o *StringMatchCorrelationExpression) GetQueryFieldName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueryFieldName
}

// GetQueryFieldNameOk returns a tuple with the QueryFieldName field value
// and a boolean to check if the value has been set.
func (o *StringMatchCorrelationExpression) GetQueryFieldNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueryFieldName, true
}

// SetQueryFieldName sets field value
func (o *StringMatchCorrelationExpression) SetQueryFieldName(v string) {
	o.QueryFieldName = v
}

// GetEventFieldName returns the EventFieldName field value
func (o *StringMatchCorrelationExpression) GetEventFieldName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventFieldName
}

// GetEventFieldNameOk returns a tuple with the EventFieldName field value
// and a boolean to check if the value has been set.
func (o *StringMatchCorrelationExpression) GetEventFieldNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventFieldName, true
}

// SetEventFieldName sets field value
func (o *StringMatchCorrelationExpression) SetEventFieldName(v string) {
	o.EventFieldName = v
}

// GetStringMatchingAlgorithm returns the StringMatchingAlgorithm field value
func (o *StringMatchCorrelationExpression) GetStringMatchingAlgorithm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StringMatchingAlgorithm
}

// GetStringMatchingAlgorithmOk returns a tuple with the StringMatchingAlgorithm field value
// and a boolean to check if the value has been set.
func (o *StringMatchCorrelationExpression) GetStringMatchingAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StringMatchingAlgorithm, true
}

// SetStringMatchingAlgorithm sets field value
func (o *StringMatchCorrelationExpression) SetStringMatchingAlgorithm(v string) {
	o.StringMatchingAlgorithm = v
}

func (o StringMatchCorrelationExpression) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StringMatchCorrelationExpression) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedCorrelationExpression, errCorrelationExpression := json.Marshal(o.CorrelationExpression)
	if errCorrelationExpression != nil {
		return map[string]interface{}{}, errCorrelationExpression
	}
	errCorrelationExpression = json.Unmarshal([]byte(serializedCorrelationExpression), &toSerialize)
	if errCorrelationExpression != nil {
		return map[string]interface{}{}, errCorrelationExpression
	}
	toSerialize["queryFieldName"] = o.QueryFieldName
	toSerialize["eventFieldName"] = o.EventFieldName
	toSerialize["stringMatchingAlgorithm"] = o.StringMatchingAlgorithm
	return toSerialize, nil
}

func (o *StringMatchCorrelationExpression) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"queryFieldName",
		"eventFieldName",
		"stringMatchingAlgorithm",
		"correlationExpressionType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStringMatchCorrelationExpression := _StringMatchCorrelationExpression{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStringMatchCorrelationExpression)

	if err != nil {
		return err
	}

	*o = StringMatchCorrelationExpression(varStringMatchCorrelationExpression)

	return err
}

type NullableStringMatchCorrelationExpression struct {
	value *StringMatchCorrelationExpression
	isSet bool
}

func (v NullableStringMatchCorrelationExpression) Get() *StringMatchCorrelationExpression {
	return v.value
}

func (v *NullableStringMatchCorrelationExpression) Set(val *StringMatchCorrelationExpression) {
	v.value = val
	v.isSet = true
}

func (v NullableStringMatchCorrelationExpression) IsSet() bool {
	return v.isSet
}

func (v *NullableStringMatchCorrelationExpression) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStringMatchCorrelationExpression(val *StringMatchCorrelationExpression) *NullableStringMatchCorrelationExpression {
	return &NullableStringMatchCorrelationExpression{value: val, isSet: true}
}

func (v NullableStringMatchCorrelationExpression) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStringMatchCorrelationExpression) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


