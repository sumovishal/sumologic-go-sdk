/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UsageReportStatusResponseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsageReportStatusResponseAllOf{}

// UsageReportStatusResponseAllOf Status response containing status and downloadURL if successful
type UsageReportStatusResponseAllOf struct {
	// Status export
	Status *string `json:"status,omitempty"`
	// Status message export
	StatusMessage *string `json:"statusMessage,omitempty"`
	// S3 presigned download URL for the report. It is valid for 10 minutes.
	ReportDownloadURL *string `json:"reportDownloadURL,omitempty"`
}

// NewUsageReportStatusResponseAllOf instantiates a new UsageReportStatusResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageReportStatusResponseAllOf() *UsageReportStatusResponseAllOf {
	this := UsageReportStatusResponseAllOf{}
	return &this
}

// NewUsageReportStatusResponseAllOfWithDefaults instantiates a new UsageReportStatusResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageReportStatusResponseAllOfWithDefaults() *UsageReportStatusResponseAllOf {
	this := UsageReportStatusResponseAllOf{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UsageReportStatusResponseAllOf) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageReportStatusResponseAllOf) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UsageReportStatusResponseAllOf) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UsageReportStatusResponseAllOf) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *UsageReportStatusResponseAllOf) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageReportStatusResponseAllOf) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *UsageReportStatusResponseAllOf) HasStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *UsageReportStatusResponseAllOf) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetReportDownloadURL returns the ReportDownloadURL field value if set, zero value otherwise.
func (o *UsageReportStatusResponseAllOf) GetReportDownloadURL() string {
	if o == nil || IsNil(o.ReportDownloadURL) {
		var ret string
		return ret
	}
	return *o.ReportDownloadURL
}

// GetReportDownloadURLOk returns a tuple with the ReportDownloadURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageReportStatusResponseAllOf) GetReportDownloadURLOk() (*string, bool) {
	if o == nil || IsNil(o.ReportDownloadURL) {
		return nil, false
	}
	return o.ReportDownloadURL, true
}

// HasReportDownloadURL returns a boolean if a field has been set.
func (o *UsageReportStatusResponseAllOf) HasReportDownloadURL() bool {
	if o != nil && !IsNil(o.ReportDownloadURL) {
		return true
	}

	return false
}

// SetReportDownloadURL gets a reference to the given string and assigns it to the ReportDownloadURL field.
func (o *UsageReportStatusResponseAllOf) SetReportDownloadURL(v string) {
	o.ReportDownloadURL = &v
}

func (o UsageReportStatusResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsageReportStatusResponseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	if !IsNil(o.ReportDownloadURL) {
		toSerialize["reportDownloadURL"] = o.ReportDownloadURL
	}
	return toSerialize, nil
}

type NullableUsageReportStatusResponseAllOf struct {
	value *UsageReportStatusResponseAllOf
	isSet bool
}

func (v NullableUsageReportStatusResponseAllOf) Get() *UsageReportStatusResponseAllOf {
	return v.value
}

func (v *NullableUsageReportStatusResponseAllOf) Set(val *UsageReportStatusResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageReportStatusResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageReportStatusResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageReportStatusResponseAllOf(val *UsageReportStatusResponseAllOf) *NullableUsageReportStatusResponseAllOf {
	return &NullableUsageReportStatusResponseAllOf{value: val, isSet: true}
}

func (v NullableUsageReportStatusResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageReportStatusResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


