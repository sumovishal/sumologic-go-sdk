/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the SpanCalculationAvgAggregator type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpanCalculationAvgAggregator{}

// SpanCalculationAvgAggregator struct for SpanCalculationAvgAggregator
type SpanCalculationAvgAggregator struct {
	SpanCalculationAggregator
}

// NewSpanCalculationAvgAggregator instantiates a new SpanCalculationAvgAggregator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpanCalculationAvgAggregator(key string) *SpanCalculationAvgAggregator {
	this := SpanCalculationAvgAggregator{}
	this.Key = key
	return &this
}

// NewSpanCalculationAvgAggregatorWithDefaults instantiates a new SpanCalculationAvgAggregator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpanCalculationAvgAggregatorWithDefaults() *SpanCalculationAvgAggregator {
	this := SpanCalculationAvgAggregator{}
	return &this
}

func (o SpanCalculationAvgAggregator) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpanCalculationAvgAggregator) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedSpanCalculationAggregator, errSpanCalculationAggregator := json.Marshal(o.SpanCalculationAggregator)
	if errSpanCalculationAggregator != nil {
		return map[string]interface{}{}, errSpanCalculationAggregator
	}
	errSpanCalculationAggregator = json.Unmarshal([]byte(serializedSpanCalculationAggregator), &toSerialize)
	if errSpanCalculationAggregator != nil {
		return map[string]interface{}{}, errSpanCalculationAggregator
	}
	return toSerialize, nil
}

type NullableSpanCalculationAvgAggregator struct {
	value *SpanCalculationAvgAggregator
	isSet bool
}

func (v NullableSpanCalculationAvgAggregator) Get() *SpanCalculationAvgAggregator {
	return v.value
}

func (v *NullableSpanCalculationAvgAggregator) Set(val *SpanCalculationAvgAggregator) {
	v.value = val
	v.isSet = true
}

func (v NullableSpanCalculationAvgAggregator) IsSet() bool {
	return v.isSet
}

func (v *NullableSpanCalculationAvgAggregator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpanCalculationAvgAggregator(val *SpanCalculationAvgAggregator) *NullableSpanCalculationAvgAggregator {
	return &NullableSpanCalculationAvgAggregator{value: val, isSet: true}
}

func (v NullableSpanCalculationAvgAggregator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpanCalculationAvgAggregator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


