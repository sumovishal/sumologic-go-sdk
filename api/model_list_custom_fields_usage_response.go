/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListCustomFieldsUsageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCustomFieldsUsageResponse{}

// ListCustomFieldsUsageResponse struct for ListCustomFieldsUsageResponse
type ListCustomFieldsUsageResponse struct {
	// List of fields with their usages.
	Data []CustomFieldUsage `json:"data"`
}

// NewListCustomFieldsUsageResponse instantiates a new ListCustomFieldsUsageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCustomFieldsUsageResponse(data []CustomFieldUsage) *ListCustomFieldsUsageResponse {
	this := ListCustomFieldsUsageResponse{}
	this.Data = data
	return &this
}

// NewListCustomFieldsUsageResponseWithDefaults instantiates a new ListCustomFieldsUsageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCustomFieldsUsageResponseWithDefaults() *ListCustomFieldsUsageResponse {
	this := ListCustomFieldsUsageResponse{}
	return &this
}

// GetData returns the Data field value
func (o *ListCustomFieldsUsageResponse) GetData() []CustomFieldUsage {
	if o == nil {
		var ret []CustomFieldUsage
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ListCustomFieldsUsageResponse) GetDataOk() ([]CustomFieldUsage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ListCustomFieldsUsageResponse) SetData(v []CustomFieldUsage) {
	o.Data = v
}

func (o ListCustomFieldsUsageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCustomFieldsUsageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableListCustomFieldsUsageResponse struct {
	value *ListCustomFieldsUsageResponse
	isSet bool
}

func (v NullableListCustomFieldsUsageResponse) Get() *ListCustomFieldsUsageResponse {
	return v.value
}

func (v *NullableListCustomFieldsUsageResponse) Set(val *ListCustomFieldsUsageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListCustomFieldsUsageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListCustomFieldsUsageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCustomFieldsUsageResponse(val *ListCustomFieldsUsageResponse) *NullableListCustomFieldsUsageResponse {
	return &NullableListCustomFieldsUsageResponse{value: val, isSet: true}
}

func (v NullableListCustomFieldsUsageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCustomFieldsUsageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


