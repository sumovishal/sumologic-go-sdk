/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the TraceMetricDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TraceMetricDetail{}

// TraceMetricDetail struct for TraceMetricDetail
type TraceMetricDetail struct {
	// Trace metric name. In trace queries it can be used in `MetricTracingFilter.metric`.
	Metric string `json:"metric"`
	// Short description of the metric.
	Description *string `json:"description,omitempty"`
	// The type the values of this field will have. Possible values: `DoubleTracingValue`, `IntegerTracingValue`.
	Type string `json:"type"`
}

// NewTraceMetricDetail instantiates a new TraceMetricDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTraceMetricDetail(metric string, type_ string) *TraceMetricDetail {
	this := TraceMetricDetail{}
	this.Metric = metric
	this.Type = type_
	return &this
}

// NewTraceMetricDetailWithDefaults instantiates a new TraceMetricDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTraceMetricDetailWithDefaults() *TraceMetricDetail {
	this := TraceMetricDetail{}
	return &this
}

// GetMetric returns the Metric field value
func (o *TraceMetricDetail) GetMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *TraceMetricDetail) GetMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *TraceMetricDetail) SetMetric(v string) {
	o.Metric = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TraceMetricDetail) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceMetricDetail) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TraceMetricDetail) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TraceMetricDetail) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value
func (o *TraceMetricDetail) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TraceMetricDetail) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TraceMetricDetail) SetType(v string) {
	o.Type = v
}

func (o TraceMetricDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TraceMetricDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["metric"] = o.Metric
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableTraceMetricDetail struct {
	value *TraceMetricDetail
	isSet bool
}

func (v NullableTraceMetricDetail) Get() *TraceMetricDetail {
	return v.value
}

func (v *NullableTraceMetricDetail) Set(val *TraceMetricDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableTraceMetricDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableTraceMetricDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTraceMetricDetail(val *TraceMetricDetail) *NullableTraceMetricDetail {
	return &NullableTraceMetricDetail{value: val, isSet: true}
}

func (v NullableTraceMetricDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTraceMetricDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


