/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the SloScanEstimatesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloScanEstimatesResponse{}

// SloScanEstimatesResponse SLO scan estimates.
type SloScanEstimatesResponse struct {
	// Scan estimates by data tier for the SLO configuration.
	ScanEstimates []TierEstimate1 `json:"scanEstimates,omitempty"`
}

// NewSloScanEstimatesResponse instantiates a new SloScanEstimatesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloScanEstimatesResponse() *SloScanEstimatesResponse {
	this := SloScanEstimatesResponse{}
	return &this
}

// NewSloScanEstimatesResponseWithDefaults instantiates a new SloScanEstimatesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloScanEstimatesResponseWithDefaults() *SloScanEstimatesResponse {
	this := SloScanEstimatesResponse{}
	return &this
}

// GetScanEstimates returns the ScanEstimates field value if set, zero value otherwise.
func (o *SloScanEstimatesResponse) GetScanEstimates() []TierEstimate1 {
	if o == nil || IsNil(o.ScanEstimates) {
		var ret []TierEstimate1
		return ret
	}
	return o.ScanEstimates
}

// GetScanEstimatesOk returns a tuple with the ScanEstimates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloScanEstimatesResponse) GetScanEstimatesOk() ([]TierEstimate1, bool) {
	if o == nil || IsNil(o.ScanEstimates) {
		return nil, false
	}
	return o.ScanEstimates, true
}

// HasScanEstimates returns a boolean if a field has been set.
func (o *SloScanEstimatesResponse) HasScanEstimates() bool {
	if o != nil && !IsNil(o.ScanEstimates) {
		return true
	}

	return false
}

// SetScanEstimates gets a reference to the given []TierEstimate1 and assigns it to the ScanEstimates field.
func (o *SloScanEstimatesResponse) SetScanEstimates(v []TierEstimate1) {
	o.ScanEstimates = v
}

func (o SloScanEstimatesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloScanEstimatesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScanEstimates) {
		toSerialize["scanEstimates"] = o.ScanEstimates
	}
	return toSerialize, nil
}

type NullableSloScanEstimatesResponse struct {
	value *SloScanEstimatesResponse
	isSet bool
}

func (v NullableSloScanEstimatesResponse) Get() *SloScanEstimatesResponse {
	return v.value
}

func (v *NullableSloScanEstimatesResponse) Set(val *SloScanEstimatesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSloScanEstimatesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSloScanEstimatesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloScanEstimatesResponse(val *SloScanEstimatesResponse) *NullableSloScanEstimatesResponse {
	return &NullableSloScanEstimatesResponse{value: val, isSet: true}
}

func (v NullableSloScanEstimatesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloScanEstimatesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


