/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the AsyncInstallAppRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AsyncInstallAppRequest{}

// AsyncInstallAppRequest Install app request.
type AsyncInstallAppRequest struct {
	// Version of the app to install. You can either specify a specific version of the app or use `latest` to install the latest version of the app. _If version is not specified, the latest version of the app will be installed_. 
	Version *string `json:"version,omitempty"`
	// Map of additional parameters for the app installation.
	Parameters *map[string]string `json:"parameters,omitempty"`
}

// NewAsyncInstallAppRequest instantiates a new AsyncInstallAppRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAsyncInstallAppRequest() *AsyncInstallAppRequest {
	this := AsyncInstallAppRequest{}
	var version string = "latest"
	this.Version = &version
	return &this
}

// NewAsyncInstallAppRequestWithDefaults instantiates a new AsyncInstallAppRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAsyncInstallAppRequestWithDefaults() *AsyncInstallAppRequest {
	this := AsyncInstallAppRequest{}
	var version string = "latest"
	this.Version = &version
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AsyncInstallAppRequest) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncInstallAppRequest) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AsyncInstallAppRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AsyncInstallAppRequest) SetVersion(v string) {
	o.Version = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *AsyncInstallAppRequest) GetParameters() map[string]string {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]string
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsyncInstallAppRequest) GetParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *AsyncInstallAppRequest) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *AsyncInstallAppRequest) SetParameters(v map[string]string) {
	o.Parameters = &v
}

func (o AsyncInstallAppRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AsyncInstallAppRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableAsyncInstallAppRequest struct {
	value *AsyncInstallAppRequest
	isSet bool
}

func (v NullableAsyncInstallAppRequest) Get() *AsyncInstallAppRequest {
	return v.value
}

func (v *NullableAsyncInstallAppRequest) Set(val *AsyncInstallAppRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAsyncInstallAppRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAsyncInstallAppRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAsyncInstallAppRequest(val *AsyncInstallAppRequest) *NullableAsyncInstallAppRequest {
	return &NullableAsyncInstallAppRequest{value: val, isSet: true}
}

func (v NullableAsyncInstallAppRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAsyncInstallAppRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


