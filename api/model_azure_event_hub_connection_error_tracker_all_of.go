/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the AzureEventHubConnectionErrorTrackerAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureEventHubConnectionErrorTrackerAllOf{}

// AzureEventHubConnectionErrorTrackerAllOf struct for AzureEventHubConnectionErrorTrackerAllOf
type AzureEventHubConnectionErrorTrackerAllOf struct {
	// The specific reason of the connection error
	Reason *string `json:"reason,omitempty"`
}

// NewAzureEventHubConnectionErrorTrackerAllOf instantiates a new AzureEventHubConnectionErrorTrackerAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureEventHubConnectionErrorTrackerAllOf() *AzureEventHubConnectionErrorTrackerAllOf {
	this := AzureEventHubConnectionErrorTrackerAllOf{}
	return &this
}

// NewAzureEventHubConnectionErrorTrackerAllOfWithDefaults instantiates a new AzureEventHubConnectionErrorTrackerAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureEventHubConnectionErrorTrackerAllOfWithDefaults() *AzureEventHubConnectionErrorTrackerAllOf {
	this := AzureEventHubConnectionErrorTrackerAllOf{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *AzureEventHubConnectionErrorTrackerAllOf) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureEventHubConnectionErrorTrackerAllOf) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *AzureEventHubConnectionErrorTrackerAllOf) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *AzureEventHubConnectionErrorTrackerAllOf) SetReason(v string) {
	o.Reason = &v
}

func (o AzureEventHubConnectionErrorTrackerAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureEventHubConnectionErrorTrackerAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableAzureEventHubConnectionErrorTrackerAllOf struct {
	value *AzureEventHubConnectionErrorTrackerAllOf
	isSet bool
}

func (v NullableAzureEventHubConnectionErrorTrackerAllOf) Get() *AzureEventHubConnectionErrorTrackerAllOf {
	return v.value
}

func (v *NullableAzureEventHubConnectionErrorTrackerAllOf) Set(val *AzureEventHubConnectionErrorTrackerAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureEventHubConnectionErrorTrackerAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureEventHubConnectionErrorTrackerAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureEventHubConnectionErrorTrackerAllOf(val *AzureEventHubConnectionErrorTrackerAllOf) *NullableAzureEventHubConnectionErrorTrackerAllOf {
	return &NullableAzureEventHubConnectionErrorTrackerAllOf{value: val, isSet: true}
}

func (v NullableAzureEventHubConnectionErrorTrackerAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureEventHubConnectionErrorTrackerAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


