/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the CpcQueryResultResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CpcQueryResultResponse{}

// CpcQueryResultResponse struct for CpcQueryResultResponse
type CpcQueryResultResponse struct {
	// A list of CPC query results on a per time bucket basis.  Each bucket result corresponds to the aggregated CPC data from a sample of traces matching search criteria falling within a specific time slice.
	Buckets []CpcQueryBucketResult `json:"buckets"`
}

// NewCpcQueryResultResponse instantiates a new CpcQueryResultResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCpcQueryResultResponse(buckets []CpcQueryBucketResult) *CpcQueryResultResponse {
	this := CpcQueryResultResponse{}
	this.Buckets = buckets
	return &this
}

// NewCpcQueryResultResponseWithDefaults instantiates a new CpcQueryResultResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCpcQueryResultResponseWithDefaults() *CpcQueryResultResponse {
	this := CpcQueryResultResponse{}
	return &this
}

// GetBuckets returns the Buckets field value
func (o *CpcQueryResultResponse) GetBuckets() []CpcQueryBucketResult {
	if o == nil {
		var ret []CpcQueryBucketResult
		return ret
	}

	return o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field value
// and a boolean to check if the value has been set.
func (o *CpcQueryResultResponse) GetBucketsOk() ([]CpcQueryBucketResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Buckets, true
}

// SetBuckets sets field value
func (o *CpcQueryResultResponse) SetBuckets(v []CpcQueryBucketResult) {
	o.Buckets = v
}

func (o CpcQueryResultResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CpcQueryResultResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["buckets"] = o.Buckets
	return toSerialize, nil
}

type NullableCpcQueryResultResponse struct {
	value *CpcQueryResultResponse
	isSet bool
}

func (v NullableCpcQueryResultResponse) Get() *CpcQueryResultResponse {
	return v.value
}

func (v *NullableCpcQueryResultResponse) Set(val *CpcQueryResultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCpcQueryResultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCpcQueryResultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCpcQueryResultResponse(val *CpcQueryResultResponse) *NullableCpcQueryResultResponse {
	return &NullableCpcQueryResultResponse{value: val, isSet: true}
}

func (v NullableCpcQueryResultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCpcQueryResultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


