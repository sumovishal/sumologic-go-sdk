/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MetricsSearchV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsSearchV1{}

// MetricsSearchV1 Definition of a metrics search.
type MetricsSearchV1 struct {
	// Item title in the content library.
	Title string `json:"title" validate:"regexp=^[a-zA-Z0-9 +%-@.,_()]+$"`
	// Item description in the content library.
	Description string `json:"description"`
	TimeRange ResolvableTimeRange `json:"timeRange"`
	// Log query used to add an overlay to the chart.
	LogQuery *string `json:"logQuery,omitempty"`
	// Metrics queries, up to the maximum of six.
	MetricsQueries []MetricsSearchQuery `json:"metricsQueries"`
	// Desired quantization in seconds.
	DesiredQuantizationInSecs *int32 `json:"desiredQuantizationInSecs,omitempty"`
	// Chart properties, like line width, color palette, and the fill missing data method. Leave this field empty to use the defaults. This property contains JSON object encoded as a string. 
	Properties *string `json:"properties,omitempty"`
}

type _MetricsSearchV1 MetricsSearchV1

// NewMetricsSearchV1 instantiates a new MetricsSearchV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsSearchV1(title string, description string, timeRange ResolvableTimeRange, metricsQueries []MetricsSearchQuery) *MetricsSearchV1 {
	this := MetricsSearchV1{}
	this.Title = title
	this.Description = description
	this.TimeRange = timeRange
	this.MetricsQueries = metricsQueries
	var desiredQuantizationInSecs int32 = 0
	this.DesiredQuantizationInSecs = &desiredQuantizationInSecs
	return &this
}

// NewMetricsSearchV1WithDefaults instantiates a new MetricsSearchV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsSearchV1WithDefaults() *MetricsSearchV1 {
	this := MetricsSearchV1{}
	var desiredQuantizationInSecs int32 = 0
	this.DesiredQuantizationInSecs = &desiredQuantizationInSecs
	return &this
}

// GetTitle returns the Title field value
func (o *MetricsSearchV1) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchV1) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *MetricsSearchV1) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *MetricsSearchV1) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchV1) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *MetricsSearchV1) SetDescription(v string) {
	o.Description = v
}

// GetTimeRange returns the TimeRange field value
func (o *MetricsSearchV1) GetTimeRange() ResolvableTimeRange {
	if o == nil {
		var ret ResolvableTimeRange
		return ret
	}

	return o.TimeRange
}

// GetTimeRangeOk returns a tuple with the TimeRange field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchV1) GetTimeRangeOk() (*ResolvableTimeRange, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeRange, true
}

// SetTimeRange sets field value
func (o *MetricsSearchV1) SetTimeRange(v ResolvableTimeRange) {
	o.TimeRange = v
}

// GetLogQuery returns the LogQuery field value if set, zero value otherwise.
func (o *MetricsSearchV1) GetLogQuery() string {
	if o == nil || IsNil(o.LogQuery) {
		var ret string
		return ret
	}
	return *o.LogQuery
}

// GetLogQueryOk returns a tuple with the LogQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchV1) GetLogQueryOk() (*string, bool) {
	if o == nil || IsNil(o.LogQuery) {
		return nil, false
	}
	return o.LogQuery, true
}

// HasLogQuery returns a boolean if a field has been set.
func (o *MetricsSearchV1) HasLogQuery() bool {
	if o != nil && !IsNil(o.LogQuery) {
		return true
	}

	return false
}

// SetLogQuery gets a reference to the given string and assigns it to the LogQuery field.
func (o *MetricsSearchV1) SetLogQuery(v string) {
	o.LogQuery = &v
}

// GetMetricsQueries returns the MetricsQueries field value
func (o *MetricsSearchV1) GetMetricsQueries() []MetricsSearchQuery {
	if o == nil {
		var ret []MetricsSearchQuery
		return ret
	}

	return o.MetricsQueries
}

// GetMetricsQueriesOk returns a tuple with the MetricsQueries field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchV1) GetMetricsQueriesOk() ([]MetricsSearchQuery, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricsQueries, true
}

// SetMetricsQueries sets field value
func (o *MetricsSearchV1) SetMetricsQueries(v []MetricsSearchQuery) {
	o.MetricsQueries = v
}

// GetDesiredQuantizationInSecs returns the DesiredQuantizationInSecs field value if set, zero value otherwise.
func (o *MetricsSearchV1) GetDesiredQuantizationInSecs() int32 {
	if o == nil || IsNil(o.DesiredQuantizationInSecs) {
		var ret int32
		return ret
	}
	return *o.DesiredQuantizationInSecs
}

// GetDesiredQuantizationInSecsOk returns a tuple with the DesiredQuantizationInSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchV1) GetDesiredQuantizationInSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.DesiredQuantizationInSecs) {
		return nil, false
	}
	return o.DesiredQuantizationInSecs, true
}

// HasDesiredQuantizationInSecs returns a boolean if a field has been set.
func (o *MetricsSearchV1) HasDesiredQuantizationInSecs() bool {
	if o != nil && !IsNil(o.DesiredQuantizationInSecs) {
		return true
	}

	return false
}

// SetDesiredQuantizationInSecs gets a reference to the given int32 and assigns it to the DesiredQuantizationInSecs field.
func (o *MetricsSearchV1) SetDesiredQuantizationInSecs(v int32) {
	o.DesiredQuantizationInSecs = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *MetricsSearchV1) GetProperties() string {
	if o == nil || IsNil(o.Properties) {
		var ret string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchV1) GetPropertiesOk() (*string, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *MetricsSearchV1) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given string and assigns it to the Properties field.
func (o *MetricsSearchV1) SetProperties(v string) {
	o.Properties = &v
}

func (o MetricsSearchV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsSearchV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["description"] = o.Description
	toSerialize["timeRange"] = o.TimeRange
	if !IsNil(o.LogQuery) {
		toSerialize["logQuery"] = o.LogQuery
	}
	toSerialize["metricsQueries"] = o.MetricsQueries
	if !IsNil(o.DesiredQuantizationInSecs) {
		toSerialize["desiredQuantizationInSecs"] = o.DesiredQuantizationInSecs
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

func (o *MetricsSearchV1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"description",
		"timeRange",
		"metricsQueries",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetricsSearchV1 := _MetricsSearchV1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMetricsSearchV1)

	if err != nil {
		return err
	}

	*o = MetricsSearchV1(varMetricsSearchV1)

	return err
}

type NullableMetricsSearchV1 struct {
	value *MetricsSearchV1
	isSet bool
}

func (v NullableMetricsSearchV1) Get() *MetricsSearchV1 {
	return v.value
}

func (v *NullableMetricsSearchV1) Set(val *MetricsSearchV1) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsSearchV1) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsSearchV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsSearchV1(val *MetricsSearchV1) *NullableMetricsSearchV1 {
	return &NullableMetricsSearchV1{value: val, isSet: true}
}

func (v NullableMetricsSearchV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsSearchV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


