/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AppItemsList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppItemsList{}

// AppItemsList struct for AppItemsList
type AppItemsList struct {
	// Items associated with the app.
	Items []AppListItem `json:"items"`
}

// NewAppItemsList instantiates a new AppItemsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppItemsList(items []AppListItem) *AppItemsList {
	this := AppItemsList{}
	this.Items = items
	return &this
}

// NewAppItemsListWithDefaults instantiates a new AppItemsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppItemsListWithDefaults() *AppItemsList {
	this := AppItemsList{}
	return &this
}

// GetItems returns the Items field value
func (o *AppItemsList) GetItems() []AppListItem {
	if o == nil {
		var ret []AppListItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *AppItemsList) GetItemsOk() ([]AppListItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *AppItemsList) SetItems(v []AppListItem) {
	o.Items = v
}

func (o AppItemsList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppItemsList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

type NullableAppItemsList struct {
	value *AppItemsList
	isSet bool
}

func (v NullableAppItemsList) Get() *AppItemsList {
	return v.value
}

func (v *NullableAppItemsList) Set(val *AppItemsList) {
	v.value = val
	v.isSet = true
}

func (v NullableAppItemsList) IsSet() bool {
	return v.isSet
}

func (v *NullableAppItemsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppItemsList(val *AppItemsList) *NullableAppItemsList {
	return &NullableAppItemsList{value: val, isSet: true}
}

func (v NullableAppItemsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppItemsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


