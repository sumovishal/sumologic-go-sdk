/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// EpochTimeRangeBoundaryAllOf struct for EpochTimeRangeBoundaryAllOf
type EpochTimeRangeBoundaryAllOf struct {
	// Starting point in time as a number of milliseconds since the epoch. For example `1538392220000`
	EpochMillis int64 `json:"epochMillis"`
}

// NewEpochTimeRangeBoundaryAllOf instantiates a new EpochTimeRangeBoundaryAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEpochTimeRangeBoundaryAllOf(epochMillis int64) *EpochTimeRangeBoundaryAllOf {
	this := EpochTimeRangeBoundaryAllOf{}
	this.EpochMillis = epochMillis
	return &this
}

// NewEpochTimeRangeBoundaryAllOfWithDefaults instantiates a new EpochTimeRangeBoundaryAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEpochTimeRangeBoundaryAllOfWithDefaults() *EpochTimeRangeBoundaryAllOf {
	this := EpochTimeRangeBoundaryAllOf{}
	return &this
}

// GetEpochMillis returns the EpochMillis field value
func (o *EpochTimeRangeBoundaryAllOf) GetEpochMillis() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EpochMillis
}

// GetEpochMillisOk returns a tuple with the EpochMillis field value
// and a boolean to check if the value has been set.
func (o *EpochTimeRangeBoundaryAllOf) GetEpochMillisOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EpochMillis, true
}

// SetEpochMillis sets field value
func (o *EpochTimeRangeBoundaryAllOf) SetEpochMillis(v int64) {
	o.EpochMillis = v
}

func (o EpochTimeRangeBoundaryAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["epochMillis"] = o.EpochMillis
	}
	return json.Marshal(toSerialize)
}

type NullableEpochTimeRangeBoundaryAllOf struct {
	value *EpochTimeRangeBoundaryAllOf
	isSet bool
}

func (v NullableEpochTimeRangeBoundaryAllOf) Get() *EpochTimeRangeBoundaryAllOf {
	return v.value
}

func (v *NullableEpochTimeRangeBoundaryAllOf) Set(val *EpochTimeRangeBoundaryAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEpochTimeRangeBoundaryAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEpochTimeRangeBoundaryAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEpochTimeRangeBoundaryAllOf(val *EpochTimeRangeBoundaryAllOf) *NullableEpochTimeRangeBoundaryAllOf {
	return &NullableEpochTimeRangeBoundaryAllOf{value: val, isSet: true}
}

func (v NullableEpochTimeRangeBoundaryAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEpochTimeRangeBoundaryAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


