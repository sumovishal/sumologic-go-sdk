/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// DashboardTemplateAllOf Generate the report from a dashboard template.
type DashboardTemplateAllOf struct {
	// Id of the dashboard.
	Id string `json:"id"`
	// A map of panel to session id. The session id will be used to fetch data of the panel for the report. If not specified, a new session id will be created for the panel. 
	PanelToSessionIdMap *map[string]string `json:"panelToSessionIdMap,omitempty"`
	TimeRange *ResolvableTimeRange `json:"timeRange,omitempty"`
	VariableValues *VariablesValuesData `json:"variableValues,omitempty"`
}

// NewDashboardTemplateAllOf instantiates a new DashboardTemplateAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardTemplateAllOf(id string) *DashboardTemplateAllOf {
	this := DashboardTemplateAllOf{}
	this.Id = id
	return &this
}

// NewDashboardTemplateAllOfWithDefaults instantiates a new DashboardTemplateAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardTemplateAllOfWithDefaults() *DashboardTemplateAllOf {
	this := DashboardTemplateAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *DashboardTemplateAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DashboardTemplateAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DashboardTemplateAllOf) SetId(v string) {
	o.Id = v
}

// GetPanelToSessionIdMap returns the PanelToSessionIdMap field value if set, zero value otherwise.
func (o *DashboardTemplateAllOf) GetPanelToSessionIdMap() map[string]string {
	if o == nil || o.PanelToSessionIdMap == nil {
		var ret map[string]string
		return ret
	}
	return *o.PanelToSessionIdMap
}

// GetPanelToSessionIdMapOk returns a tuple with the PanelToSessionIdMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardTemplateAllOf) GetPanelToSessionIdMapOk() (*map[string]string, bool) {
	if o == nil || o.PanelToSessionIdMap == nil {
		return nil, false
	}
	return o.PanelToSessionIdMap, true
}

// HasPanelToSessionIdMap returns a boolean if a field has been set.
func (o *DashboardTemplateAllOf) HasPanelToSessionIdMap() bool {
	if o != nil && o.PanelToSessionIdMap != nil {
		return true
	}

	return false
}

// SetPanelToSessionIdMap gets a reference to the given map[string]string and assigns it to the PanelToSessionIdMap field.
func (o *DashboardTemplateAllOf) SetPanelToSessionIdMap(v map[string]string) {
	o.PanelToSessionIdMap = &v
}

// GetTimeRange returns the TimeRange field value if set, zero value otherwise.
func (o *DashboardTemplateAllOf) GetTimeRange() ResolvableTimeRange {
	if o == nil || o.TimeRange == nil {
		var ret ResolvableTimeRange
		return ret
	}
	return *o.TimeRange
}

// GetTimeRangeOk returns a tuple with the TimeRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardTemplateAllOf) GetTimeRangeOk() (*ResolvableTimeRange, bool) {
	if o == nil || o.TimeRange == nil {
		return nil, false
	}
	return o.TimeRange, true
}

// HasTimeRange returns a boolean if a field has been set.
func (o *DashboardTemplateAllOf) HasTimeRange() bool {
	if o != nil && o.TimeRange != nil {
		return true
	}

	return false
}

// SetTimeRange gets a reference to the given ResolvableTimeRange and assigns it to the TimeRange field.
func (o *DashboardTemplateAllOf) SetTimeRange(v ResolvableTimeRange) {
	o.TimeRange = &v
}

// GetVariableValues returns the VariableValues field value if set, zero value otherwise.
func (o *DashboardTemplateAllOf) GetVariableValues() VariablesValuesData {
	if o == nil || o.VariableValues == nil {
		var ret VariablesValuesData
		return ret
	}
	return *o.VariableValues
}

// GetVariableValuesOk returns a tuple with the VariableValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardTemplateAllOf) GetVariableValuesOk() (*VariablesValuesData, bool) {
	if o == nil || o.VariableValues == nil {
		return nil, false
	}
	return o.VariableValues, true
}

// HasVariableValues returns a boolean if a field has been set.
func (o *DashboardTemplateAllOf) HasVariableValues() bool {
	if o != nil && o.VariableValues != nil {
		return true
	}

	return false
}

// SetVariableValues gets a reference to the given VariablesValuesData and assigns it to the VariableValues field.
func (o *DashboardTemplateAllOf) SetVariableValues(v VariablesValuesData) {
	o.VariableValues = &v
}

func (o DashboardTemplateAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.PanelToSessionIdMap != nil {
		toSerialize["panelToSessionIdMap"] = o.PanelToSessionIdMap
	}
	if o.TimeRange != nil {
		toSerialize["timeRange"] = o.TimeRange
	}
	if o.VariableValues != nil {
		toSerialize["variableValues"] = o.VariableValues
	}
	return json.Marshal(toSerialize)
}

type NullableDashboardTemplateAllOf struct {
	value *DashboardTemplateAllOf
	isSet bool
}

func (v NullableDashboardTemplateAllOf) Get() *DashboardTemplateAllOf {
	return v.value
}

func (v *NullableDashboardTemplateAllOf) Set(val *DashboardTemplateAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardTemplateAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardTemplateAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardTemplateAllOf(val *DashboardTemplateAllOf) *NullableDashboardTemplateAllOf {
	return &NullableDashboardTemplateAllOf{value: val, isSet: true}
}

func (v NullableDashboardTemplateAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardTemplateAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


