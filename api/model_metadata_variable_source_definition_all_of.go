/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// MetadataVariableSourceDefinitionAllOf Variable with values that are powered by a metadata search.
type MetadataVariableSourceDefinitionAllOf struct {
	// A metrics query to filter the metadata catalog.
	Filter string `json:"filter"`
	// Return the values for this given key.
	Key string `json:"key"`
}

// NewMetadataVariableSourceDefinitionAllOf instantiates a new MetadataVariableSourceDefinitionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataVariableSourceDefinitionAllOf(filter string, key string) *MetadataVariableSourceDefinitionAllOf {
	this := MetadataVariableSourceDefinitionAllOf{}
	this.Filter = filter
	this.Key = key
	return &this
}

// NewMetadataVariableSourceDefinitionAllOfWithDefaults instantiates a new MetadataVariableSourceDefinitionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataVariableSourceDefinitionAllOfWithDefaults() *MetadataVariableSourceDefinitionAllOf {
	this := MetadataVariableSourceDefinitionAllOf{}
	return &this
}

// GetFilter returns the Filter field value
func (o *MetadataVariableSourceDefinitionAllOf) GetFilter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *MetadataVariableSourceDefinitionAllOf) GetFilterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *MetadataVariableSourceDefinitionAllOf) SetFilter(v string) {
	o.Filter = v
}

// GetKey returns the Key field value
func (o *MetadataVariableSourceDefinitionAllOf) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *MetadataVariableSourceDefinitionAllOf) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *MetadataVariableSourceDefinitionAllOf) SetKey(v string) {
	o.Key = v
}

func (o MetadataVariableSourceDefinitionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableMetadataVariableSourceDefinitionAllOf struct {
	value *MetadataVariableSourceDefinitionAllOf
	isSet bool
}

func (v NullableMetadataVariableSourceDefinitionAllOf) Get() *MetadataVariableSourceDefinitionAllOf {
	return v.value
}

func (v *NullableMetadataVariableSourceDefinitionAllOf) Set(val *MetadataVariableSourceDefinitionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataVariableSourceDefinitionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataVariableSourceDefinitionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataVariableSourceDefinitionAllOf(val *MetadataVariableSourceDefinitionAllOf) *NullableMetadataVariableSourceDefinitionAllOf {
	return &NullableMetadataVariableSourceDefinitionAllOf{value: val, isSet: true}
}

func (v NullableMetadataVariableSourceDefinitionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataVariableSourceDefinitionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


