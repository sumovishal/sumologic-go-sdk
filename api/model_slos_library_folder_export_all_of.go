/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the SlosLibraryFolderExportAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlosLibraryFolderExportAllOf{}

// SlosLibraryFolderExportAllOf struct for SlosLibraryFolderExportAllOf
type SlosLibraryFolderExportAllOf struct {
	// The items in the folder. A multi-type list of types slo or folder.
	Children []SlosLibraryBaseExport `json:"children,omitempty"`
}

// NewSlosLibraryFolderExportAllOf instantiates a new SlosLibraryFolderExportAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlosLibraryFolderExportAllOf() *SlosLibraryFolderExportAllOf {
	this := SlosLibraryFolderExportAllOf{}
	return &this
}

// NewSlosLibraryFolderExportAllOfWithDefaults instantiates a new SlosLibraryFolderExportAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlosLibraryFolderExportAllOfWithDefaults() *SlosLibraryFolderExportAllOf {
	this := SlosLibraryFolderExportAllOf{}
	return &this
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *SlosLibraryFolderExportAllOf) GetChildren() []SlosLibraryBaseExport {
	if o == nil || IsNil(o.Children) {
		var ret []SlosLibraryBaseExport
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlosLibraryFolderExportAllOf) GetChildrenOk() ([]SlosLibraryBaseExport, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *SlosLibraryFolderExportAllOf) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []SlosLibraryBaseExport and assigns it to the Children field.
func (o *SlosLibraryFolderExportAllOf) SetChildren(v []SlosLibraryBaseExport) {
	o.Children = v
}

func (o SlosLibraryFolderExportAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlosLibraryFolderExportAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	return toSerialize, nil
}

type NullableSlosLibraryFolderExportAllOf struct {
	value *SlosLibraryFolderExportAllOf
	isSet bool
}

func (v NullableSlosLibraryFolderExportAllOf) Get() *SlosLibraryFolderExportAllOf {
	return v.value
}

func (v *NullableSlosLibraryFolderExportAllOf) Set(val *SlosLibraryFolderExportAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSlosLibraryFolderExportAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSlosLibraryFolderExportAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlosLibraryFolderExportAllOf(val *SlosLibraryFolderExportAllOf) *NullableSlosLibraryFolderExportAllOf {
	return &NullableSlosLibraryFolderExportAllOf{value: val, isSet: true}
}

func (v NullableSlosLibraryFolderExportAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlosLibraryFolderExportAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


