/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the TraceSpanStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TraceSpanStatus{}

// TraceSpanStatus struct for TraceSpanStatus
type TraceSpanStatus struct {
	// Status code of the span. Possible values: `OK`, `ERROR`, `UNKNOWN`.
	Code string `json:"code"`
	// Optional descriptive message about the status, could be an http status code or the kind of an error, e.g. OSError.
	Message *string `json:"message,omitempty"`
}

// NewTraceSpanStatus instantiates a new TraceSpanStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTraceSpanStatus(code string) *TraceSpanStatus {
	this := TraceSpanStatus{}
	this.Code = code
	return &this
}

// NewTraceSpanStatusWithDefaults instantiates a new TraceSpanStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTraceSpanStatusWithDefaults() *TraceSpanStatus {
	this := TraceSpanStatus{}
	return &this
}

// GetCode returns the Code field value
func (o *TraceSpanStatus) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *TraceSpanStatus) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *TraceSpanStatus) SetCode(v string) {
	o.Code = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *TraceSpanStatus) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceSpanStatus) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *TraceSpanStatus) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *TraceSpanStatus) SetMessage(v string) {
	o.Message = &v
}

func (o TraceSpanStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TraceSpanStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableTraceSpanStatus struct {
	value *TraceSpanStatus
	isSet bool
}

func (v NullableTraceSpanStatus) Get() *TraceSpanStatus {
	return v.value
}

func (v *NullableTraceSpanStatus) Set(val *TraceSpanStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableTraceSpanStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableTraceSpanStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTraceSpanStatus(val *TraceSpanStatus) *NullableTraceSpanStatus {
	return &NullableTraceSpanStatus{value: val, isSet: true}
}

func (v NullableTraceSpanStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTraceSpanStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


