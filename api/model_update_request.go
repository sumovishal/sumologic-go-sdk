/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRequest{}

// UpdateRequest Update request for the account.
type UpdateRequest struct {
	// Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite` 
	ProductId string `json:"productId" validate:"regexp=^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$"`
	// Identifier for the plans billing term. Valid values are:  1. Monthly  2. Annually 
	BillingFrequency string `json:"billingFrequency" validate:"regexp=^(Monthly|Annually)$"`
	Baselines SelfServiceCreditsBaselines `json:"baselines"`
	// true in case the subscription baselines need to be updated immediately(only for monthly customers who are staying on the monthly plan)
	Immediate *bool `json:"immediate,omitempty"`
}

type _UpdateRequest UpdateRequest

// NewUpdateRequest instantiates a new UpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRequest(productId string, billingFrequency string, baselines SelfServiceCreditsBaselines) *UpdateRequest {
	this := UpdateRequest{}
	this.ProductId = productId
	this.BillingFrequency = billingFrequency
	this.Baselines = baselines
	var immediate bool = false
	this.Immediate = &immediate
	return &this
}

// NewUpdateRequestWithDefaults instantiates a new UpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRequestWithDefaults() *UpdateRequest {
	this := UpdateRequest{}
	var immediate bool = false
	this.Immediate = &immediate
	return &this
}

// GetProductId returns the ProductId field value
func (o *UpdateRequest) GetProductId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *UpdateRequest) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *UpdateRequest) SetProductId(v string) {
	o.ProductId = v
}

// GetBillingFrequency returns the BillingFrequency field value
func (o *UpdateRequest) GetBillingFrequency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingFrequency
}

// GetBillingFrequencyOk returns a tuple with the BillingFrequency field value
// and a boolean to check if the value has been set.
func (o *UpdateRequest) GetBillingFrequencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingFrequency, true
}

// SetBillingFrequency sets field value
func (o *UpdateRequest) SetBillingFrequency(v string) {
	o.BillingFrequency = v
}

// GetBaselines returns the Baselines field value
func (o *UpdateRequest) GetBaselines() SelfServiceCreditsBaselines {
	if o == nil {
		var ret SelfServiceCreditsBaselines
		return ret
	}

	return o.Baselines
}

// GetBaselinesOk returns a tuple with the Baselines field value
// and a boolean to check if the value has been set.
func (o *UpdateRequest) GetBaselinesOk() (*SelfServiceCreditsBaselines, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Baselines, true
}

// SetBaselines sets field value
func (o *UpdateRequest) SetBaselines(v SelfServiceCreditsBaselines) {
	o.Baselines = v
}

// GetImmediate returns the Immediate field value if set, zero value otherwise.
func (o *UpdateRequest) GetImmediate() bool {
	if o == nil || IsNil(o.Immediate) {
		var ret bool
		return ret
	}
	return *o.Immediate
}

// GetImmediateOk returns a tuple with the Immediate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRequest) GetImmediateOk() (*bool, bool) {
	if o == nil || IsNil(o.Immediate) {
		return nil, false
	}
	return o.Immediate, true
}

// HasImmediate returns a boolean if a field has been set.
func (o *UpdateRequest) HasImmediate() bool {
	if o != nil && !IsNil(o.Immediate) {
		return true
	}

	return false
}

// SetImmediate gets a reference to the given bool and assigns it to the Immediate field.
func (o *UpdateRequest) SetImmediate(v bool) {
	o.Immediate = &v
}

func (o UpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["productId"] = o.ProductId
	toSerialize["billingFrequency"] = o.BillingFrequency
	toSerialize["baselines"] = o.Baselines
	if !IsNil(o.Immediate) {
		toSerialize["immediate"] = o.Immediate
	}
	return toSerialize, nil
}

func (o *UpdateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"productId",
		"billingFrequency",
		"baselines",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateRequest := _UpdateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateRequest)

	if err != nil {
		return err
	}

	*o = UpdateRequest(varUpdateRequest)

	return err
}

type NullableUpdateRequest struct {
	value *UpdateRequest
	isSet bool
}

func (v NullableUpdateRequest) Get() *UpdateRequest {
	return v.value
}

func (v *NullableUpdateRequest) Set(val *UpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRequest(val *UpdateRequest) *NullableUpdateRequest {
	return &NullableUpdateRequest{value: val, isSet: true}
}

func (v NullableUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


