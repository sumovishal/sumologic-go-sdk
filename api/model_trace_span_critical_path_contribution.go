/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TraceSpanCriticalPathContribution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TraceSpanCriticalPathContribution{}

// TraceSpanCriticalPathContribution struct for TraceSpanCriticalPathContribution
type TraceSpanCriticalPathContribution struct {
	// Overall processing time in nanoseconds consumed by this span in the critical path of its trace (a sum of the duration times of this span's critical path segments).
	Duration int64 `json:"duration"`
	// The total fraction (value between 0.0 and 1.0) of the trace duration time consumed by this span in the critical path of its trace.
	Fraction float64 `json:"fraction"`
}

type _TraceSpanCriticalPathContribution TraceSpanCriticalPathContribution

// NewTraceSpanCriticalPathContribution instantiates a new TraceSpanCriticalPathContribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTraceSpanCriticalPathContribution(duration int64, fraction float64) *TraceSpanCriticalPathContribution {
	this := TraceSpanCriticalPathContribution{}
	this.Duration = duration
	this.Fraction = fraction
	return &this
}

// NewTraceSpanCriticalPathContributionWithDefaults instantiates a new TraceSpanCriticalPathContribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTraceSpanCriticalPathContributionWithDefaults() *TraceSpanCriticalPathContribution {
	this := TraceSpanCriticalPathContribution{}
	return &this
}

// GetDuration returns the Duration field value
func (o *TraceSpanCriticalPathContribution) GetDuration() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *TraceSpanCriticalPathContribution) GetDurationOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *TraceSpanCriticalPathContribution) SetDuration(v int64) {
	o.Duration = v
}

// GetFraction returns the Fraction field value
func (o *TraceSpanCriticalPathContribution) GetFraction() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Fraction
}

// GetFractionOk returns a tuple with the Fraction field value
// and a boolean to check if the value has been set.
func (o *TraceSpanCriticalPathContribution) GetFractionOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fraction, true
}

// SetFraction sets field value
func (o *TraceSpanCriticalPathContribution) SetFraction(v float64) {
	o.Fraction = v
}

func (o TraceSpanCriticalPathContribution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TraceSpanCriticalPathContribution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duration"] = o.Duration
	toSerialize["fraction"] = o.Fraction
	return toSerialize, nil
}

func (o *TraceSpanCriticalPathContribution) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"duration",
		"fraction",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTraceSpanCriticalPathContribution := _TraceSpanCriticalPathContribution{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTraceSpanCriticalPathContribution)

	if err != nil {
		return err
	}

	*o = TraceSpanCriticalPathContribution(varTraceSpanCriticalPathContribution)

	return err
}

type NullableTraceSpanCriticalPathContribution struct {
	value *TraceSpanCriticalPathContribution
	isSet bool
}

func (v NullableTraceSpanCriticalPathContribution) Get() *TraceSpanCriticalPathContribution {
	return v.value
}

func (v *NullableTraceSpanCriticalPathContribution) Set(val *TraceSpanCriticalPathContribution) {
	v.value = val
	v.isSet = true
}

func (v NullableTraceSpanCriticalPathContribution) IsSet() bool {
	return v.isSet
}

func (v *NullableTraceSpanCriticalPathContribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTraceSpanCriticalPathContribution(val *TraceSpanCriticalPathContribution) *NullableTraceSpanCriticalPathContribution {
	return &NullableTraceSpanCriticalPathContribution{value: val, isSet: true}
}

func (v NullableTraceSpanCriticalPathContribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTraceSpanCriticalPathContribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


