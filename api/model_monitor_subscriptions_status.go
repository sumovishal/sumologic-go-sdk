/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MonitorSubscriptionsStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorSubscriptionsStatus{}

// MonitorSubscriptionsStatus Subscription status of the element.
type MonitorSubscriptionsStatus struct {
	// Id of the subscription target.
	TargetId string `json:"targetId"`
	// Status of the subscription.
	Status string `json:"status"`
}

// NewMonitorSubscriptionsStatus instantiates a new MonitorSubscriptionsStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorSubscriptionsStatus(targetId string, status string) *MonitorSubscriptionsStatus {
	this := MonitorSubscriptionsStatus{}
	this.TargetId = targetId
	this.Status = status
	return &this
}

// NewMonitorSubscriptionsStatusWithDefaults instantiates a new MonitorSubscriptionsStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorSubscriptionsStatusWithDefaults() *MonitorSubscriptionsStatus {
	this := MonitorSubscriptionsStatus{}
	return &this
}

// GetTargetId returns the TargetId field value
func (o *MonitorSubscriptionsStatus) GetTargetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value
// and a boolean to check if the value has been set.
func (o *MonitorSubscriptionsStatus) GetTargetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetId, true
}

// SetTargetId sets field value
func (o *MonitorSubscriptionsStatus) SetTargetId(v string) {
	o.TargetId = v
}

// GetStatus returns the Status field value
func (o *MonitorSubscriptionsStatus) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MonitorSubscriptionsStatus) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MonitorSubscriptionsStatus) SetStatus(v string) {
	o.Status = v
}

func (o MonitorSubscriptionsStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorSubscriptionsStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["targetId"] = o.TargetId
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableMonitorSubscriptionsStatus struct {
	value *MonitorSubscriptionsStatus
	isSet bool
}

func (v NullableMonitorSubscriptionsStatus) Get() *MonitorSubscriptionsStatus {
	return v.value
}

func (v *NullableMonitorSubscriptionsStatus) Set(val *MonitorSubscriptionsStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorSubscriptionsStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorSubscriptionsStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorSubscriptionsStatus(val *MonitorSubscriptionsStatus) *NullableMonitorSubscriptionsStatus {
	return &NullableMonitorSubscriptionsStatus{value: val, isSet: true}
}

func (v NullableMonitorSubscriptionsStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorSubscriptionsStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


