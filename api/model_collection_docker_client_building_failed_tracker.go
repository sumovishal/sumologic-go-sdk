/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CollectionDockerClientBuildingFailedTracker type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionDockerClientBuildingFailedTracker{}

// CollectionDockerClientBuildingFailedTracker struct for CollectionDockerClientBuildingFailedTracker
type CollectionDockerClientBuildingFailedTracker struct {
	TrackerIdentity
}

type _CollectionDockerClientBuildingFailedTracker CollectionDockerClientBuildingFailedTracker

// NewCollectionDockerClientBuildingFailedTracker instantiates a new CollectionDockerClientBuildingFailedTracker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionDockerClientBuildingFailedTracker(trackerId string, error_ string, description string) *CollectionDockerClientBuildingFailedTracker {
	this := CollectionDockerClientBuildingFailedTracker{}
	this.TrackerId = trackerId
	this.Error = error_
	this.Description = description
	return &this
}

// NewCollectionDockerClientBuildingFailedTrackerWithDefaults instantiates a new CollectionDockerClientBuildingFailedTracker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionDockerClientBuildingFailedTrackerWithDefaults() *CollectionDockerClientBuildingFailedTracker {
	this := CollectionDockerClientBuildingFailedTracker{}
	return &this
}

func (o CollectionDockerClientBuildingFailedTracker) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionDockerClientBuildingFailedTracker) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedTrackerIdentity, errTrackerIdentity := json.Marshal(o.TrackerIdentity)
	if errTrackerIdentity != nil {
		return map[string]interface{}{}, errTrackerIdentity
	}
	errTrackerIdentity = json.Unmarshal([]byte(serializedTrackerIdentity), &toSerialize)
	if errTrackerIdentity != nil {
		return map[string]interface{}{}, errTrackerIdentity
	}
	return toSerialize, nil
}

func (o *CollectionDockerClientBuildingFailedTracker) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"trackerId",
		"error",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCollectionDockerClientBuildingFailedTracker := _CollectionDockerClientBuildingFailedTracker{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCollectionDockerClientBuildingFailedTracker)

	if err != nil {
		return err
	}

	*o = CollectionDockerClientBuildingFailedTracker(varCollectionDockerClientBuildingFailedTracker)

	return err
}

type NullableCollectionDockerClientBuildingFailedTracker struct {
	value *CollectionDockerClientBuildingFailedTracker
	isSet bool
}

func (v NullableCollectionDockerClientBuildingFailedTracker) Get() *CollectionDockerClientBuildingFailedTracker {
	return v.value
}

func (v *NullableCollectionDockerClientBuildingFailedTracker) Set(val *CollectionDockerClientBuildingFailedTracker) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionDockerClientBuildingFailedTracker) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionDockerClientBuildingFailedTracker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionDockerClientBuildingFailedTracker(val *CollectionDockerClientBuildingFailedTracker) *NullableCollectionDockerClientBuildingFailedTracker {
	return &NullableCollectionDockerClientBuildingFailedTracker{value: val, isSet: true}
}

func (v NullableCollectionDockerClientBuildingFailedTracker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionDockerClientBuildingFailedTracker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


