/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TagReversedIndex type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagReversedIndex{}

// TagReversedIndex struct for TagReversedIndex
type TagReversedIndex struct {
	// Name of the tag.
	TagName string `json:"tagName"`
	// List of value statistics of the given tag.
	TagValueStatistics []TagValueReversedIndex `json:"tagValueStatistics"`
}

type _TagReversedIndex TagReversedIndex

// NewTagReversedIndex instantiates a new TagReversedIndex object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagReversedIndex(tagName string, tagValueStatistics []TagValueReversedIndex) *TagReversedIndex {
	this := TagReversedIndex{}
	this.TagName = tagName
	this.TagValueStatistics = tagValueStatistics
	return &this
}

// NewTagReversedIndexWithDefaults instantiates a new TagReversedIndex object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagReversedIndexWithDefaults() *TagReversedIndex {
	this := TagReversedIndex{}
	return &this
}

// GetTagName returns the TagName field value
func (o *TagReversedIndex) GetTagName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TagName
}

// GetTagNameOk returns a tuple with the TagName field value
// and a boolean to check if the value has been set.
func (o *TagReversedIndex) GetTagNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagName, true
}

// SetTagName sets field value
func (o *TagReversedIndex) SetTagName(v string) {
	o.TagName = v
}

// GetTagValueStatistics returns the TagValueStatistics field value
func (o *TagReversedIndex) GetTagValueStatistics() []TagValueReversedIndex {
	if o == nil {
		var ret []TagValueReversedIndex
		return ret
	}

	return o.TagValueStatistics
}

// GetTagValueStatisticsOk returns a tuple with the TagValueStatistics field value
// and a boolean to check if the value has been set.
func (o *TagReversedIndex) GetTagValueStatisticsOk() ([]TagValueReversedIndex, bool) {
	if o == nil {
		return nil, false
	}
	return o.TagValueStatistics, true
}

// SetTagValueStatistics sets field value
func (o *TagReversedIndex) SetTagValueStatistics(v []TagValueReversedIndex) {
	o.TagValueStatistics = v
}

func (o TagReversedIndex) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagReversedIndex) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tagName"] = o.TagName
	toSerialize["tagValueStatistics"] = o.TagValueStatistics
	return toSerialize, nil
}

func (o *TagReversedIndex) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tagName",
		"tagValueStatistics",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTagReversedIndex := _TagReversedIndex{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTagReversedIndex)

	if err != nil {
		return err
	}

	*o = TagReversedIndex(varTagReversedIndex)

	return err
}

type NullableTagReversedIndex struct {
	value *TagReversedIndex
	isSet bool
}

func (v NullableTagReversedIndex) Get() *TagReversedIndex {
	return v.value
}

func (v *NullableTagReversedIndex) Set(val *TagReversedIndex) {
	v.value = val
	v.isSet = true
}

func (v NullableTagReversedIndex) IsSet() bool {
	return v.isSet
}

func (v *NullableTagReversedIndex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagReversedIndex(val *TagReversedIndex) *NullableTagReversedIndex {
	return &NullableTagReversedIndex{value: val, isSet: true}
}

func (v NullableTagReversedIndex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagReversedIndex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


