/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RangeTracingValueAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RangeTracingValueAllOf{}

// RangeTracingValueAllOf struct for RangeTracingValueAllOf
type RangeTracingValueAllOf struct {
	From TracingValue `json:"from"`
	To TracingValue `json:"to"`
}

// NewRangeTracingValueAllOf instantiates a new RangeTracingValueAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRangeTracingValueAllOf(from TracingValue, to TracingValue) *RangeTracingValueAllOf {
	this := RangeTracingValueAllOf{}
	this.From = from
	this.To = to
	return &this
}

// NewRangeTracingValueAllOfWithDefaults instantiates a new RangeTracingValueAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRangeTracingValueAllOfWithDefaults() *RangeTracingValueAllOf {
	this := RangeTracingValueAllOf{}
	return &this
}

// GetFrom returns the From field value
func (o *RangeTracingValueAllOf) GetFrom() TracingValue {
	if o == nil {
		var ret TracingValue
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *RangeTracingValueAllOf) GetFromOk() (*TracingValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *RangeTracingValueAllOf) SetFrom(v TracingValue) {
	o.From = v
}

// GetTo returns the To field value
func (o *RangeTracingValueAllOf) GetTo() TracingValue {
	if o == nil {
		var ret TracingValue
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *RangeTracingValueAllOf) GetToOk() (*TracingValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *RangeTracingValueAllOf) SetTo(v TracingValue) {
	o.To = v
}

func (o RangeTracingValueAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RangeTracingValueAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["from"] = o.From
	toSerialize["to"] = o.To
	return toSerialize, nil
}

type NullableRangeTracingValueAllOf struct {
	value *RangeTracingValueAllOf
	isSet bool
}

func (v NullableRangeTracingValueAllOf) Get() *RangeTracingValueAllOf {
	return v.value
}

func (v *NullableRangeTracingValueAllOf) Set(val *RangeTracingValueAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRangeTracingValueAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRangeTracingValueAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRangeTracingValueAllOf(val *RangeTracingValueAllOf) *NullableRangeTracingValueAllOf {
	return &NullableRangeTracingValueAllOf{value: val, isSet: true}
}

func (v NullableRangeTracingValueAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRangeTracingValueAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


