/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the PlaybookExecutionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaybookExecutionResponse{}

// PlaybookExecutionResponse The response for executing the playbook.
type PlaybookExecutionResponse struct {
	// The id of the playbook which is running.
	RunningId *string `json:"runningId,omitempty"`
	// The id of the playbook when it is executed.
	PlaybookExecutedId *string `json:"playbookExecutedId,omitempty"`
}

// NewPlaybookExecutionResponse instantiates a new PlaybookExecutionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaybookExecutionResponse() *PlaybookExecutionResponse {
	this := PlaybookExecutionResponse{}
	return &this
}

// NewPlaybookExecutionResponseWithDefaults instantiates a new PlaybookExecutionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaybookExecutionResponseWithDefaults() *PlaybookExecutionResponse {
	this := PlaybookExecutionResponse{}
	return &this
}

// GetRunningId returns the RunningId field value if set, zero value otherwise.
func (o *PlaybookExecutionResponse) GetRunningId() string {
	if o == nil || IsNil(o.RunningId) {
		var ret string
		return ret
	}
	return *o.RunningId
}

// GetRunningIdOk returns a tuple with the RunningId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaybookExecutionResponse) GetRunningIdOk() (*string, bool) {
	if o == nil || IsNil(o.RunningId) {
		return nil, false
	}
	return o.RunningId, true
}

// HasRunningId returns a boolean if a field has been set.
func (o *PlaybookExecutionResponse) HasRunningId() bool {
	if o != nil && !IsNil(o.RunningId) {
		return true
	}

	return false
}

// SetRunningId gets a reference to the given string and assigns it to the RunningId field.
func (o *PlaybookExecutionResponse) SetRunningId(v string) {
	o.RunningId = &v
}

// GetPlaybookExecutedId returns the PlaybookExecutedId field value if set, zero value otherwise.
func (o *PlaybookExecutionResponse) GetPlaybookExecutedId() string {
	if o == nil || IsNil(o.PlaybookExecutedId) {
		var ret string
		return ret
	}
	return *o.PlaybookExecutedId
}

// GetPlaybookExecutedIdOk returns a tuple with the PlaybookExecutedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaybookExecutionResponse) GetPlaybookExecutedIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlaybookExecutedId) {
		return nil, false
	}
	return o.PlaybookExecutedId, true
}

// HasPlaybookExecutedId returns a boolean if a field has been set.
func (o *PlaybookExecutionResponse) HasPlaybookExecutedId() bool {
	if o != nil && !IsNil(o.PlaybookExecutedId) {
		return true
	}

	return false
}

// SetPlaybookExecutedId gets a reference to the given string and assigns it to the PlaybookExecutedId field.
func (o *PlaybookExecutionResponse) SetPlaybookExecutedId(v string) {
	o.PlaybookExecutedId = &v
}

func (o PlaybookExecutionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaybookExecutionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RunningId) {
		toSerialize["runningId"] = o.RunningId
	}
	if !IsNil(o.PlaybookExecutedId) {
		toSerialize["playbookExecutedId"] = o.PlaybookExecutedId
	}
	return toSerialize, nil
}

type NullablePlaybookExecutionResponse struct {
	value *PlaybookExecutionResponse
	isSet bool
}

func (v NullablePlaybookExecutionResponse) Get() *PlaybookExecutionResponse {
	return v.value
}

func (v *NullablePlaybookExecutionResponse) Set(val *PlaybookExecutionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaybookExecutionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaybookExecutionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaybookExecutionResponse(val *PlaybookExecutionResponse) *NullablePlaybookExecutionResponse {
	return &NullablePlaybookExecutionResponse{value: val, isSet: true}
}

func (v NullablePlaybookExecutionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaybookExecutionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


