/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SpanQueryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpanQueryResponse{}

// SpanQueryResponse struct for SpanQueryResponse
type SpanQueryResponse struct {
	// Id of the created query
	QueryId string `json:"queryId"`
	// A list of row responses with details about individual queries.
	QueryRows []SpanQueryRowResponse `json:"queryRows"`
	// Indicates whether there was an error while executing the query.
	HasErrors *bool `json:"hasErrors,omitempty"`
	TimeRange *BeginBoundedTimeRange `json:"timeRange,omitempty"`
}

// NewSpanQueryResponse instantiates a new SpanQueryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpanQueryResponse(queryId string, queryRows []SpanQueryRowResponse) *SpanQueryResponse {
	this := SpanQueryResponse{}
	this.QueryId = queryId
	this.QueryRows = queryRows
	var hasErrors bool = false
	this.HasErrors = &hasErrors
	return &this
}

// NewSpanQueryResponseWithDefaults instantiates a new SpanQueryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpanQueryResponseWithDefaults() *SpanQueryResponse {
	this := SpanQueryResponse{}
	var hasErrors bool = false
	this.HasErrors = &hasErrors
	return &this
}

// GetQueryId returns the QueryId field value
func (o *SpanQueryResponse) GetQueryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueryId
}

// GetQueryIdOk returns a tuple with the QueryId field value
// and a boolean to check if the value has been set.
func (o *SpanQueryResponse) GetQueryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueryId, true
}

// SetQueryId sets field value
func (o *SpanQueryResponse) SetQueryId(v string) {
	o.QueryId = v
}

// GetQueryRows returns the QueryRows field value
func (o *SpanQueryResponse) GetQueryRows() []SpanQueryRowResponse {
	if o == nil {
		var ret []SpanQueryRowResponse
		return ret
	}

	return o.QueryRows
}

// GetQueryRowsOk returns a tuple with the QueryRows field value
// and a boolean to check if the value has been set.
func (o *SpanQueryResponse) GetQueryRowsOk() ([]SpanQueryRowResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.QueryRows, true
}

// SetQueryRows sets field value
func (o *SpanQueryResponse) SetQueryRows(v []SpanQueryRowResponse) {
	o.QueryRows = v
}

// GetHasErrors returns the HasErrors field value if set, zero value otherwise.
func (o *SpanQueryResponse) GetHasErrors() bool {
	if o == nil || IsNil(o.HasErrors) {
		var ret bool
		return ret
	}
	return *o.HasErrors
}

// GetHasErrorsOk returns a tuple with the HasErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanQueryResponse) GetHasErrorsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasErrors) {
		return nil, false
	}
	return o.HasErrors, true
}

// HasHasErrors returns a boolean if a field has been set.
func (o *SpanQueryResponse) HasHasErrors() bool {
	if o != nil && !IsNil(o.HasErrors) {
		return true
	}

	return false
}

// SetHasErrors gets a reference to the given bool and assigns it to the HasErrors field.
func (o *SpanQueryResponse) SetHasErrors(v bool) {
	o.HasErrors = &v
}

// GetTimeRange returns the TimeRange field value if set, zero value otherwise.
func (o *SpanQueryResponse) GetTimeRange() BeginBoundedTimeRange {
	if o == nil || IsNil(o.TimeRange) {
		var ret BeginBoundedTimeRange
		return ret
	}
	return *o.TimeRange
}

// GetTimeRangeOk returns a tuple with the TimeRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanQueryResponse) GetTimeRangeOk() (*BeginBoundedTimeRange, bool) {
	if o == nil || IsNil(o.TimeRange) {
		return nil, false
	}
	return o.TimeRange, true
}

// HasTimeRange returns a boolean if a field has been set.
func (o *SpanQueryResponse) HasTimeRange() bool {
	if o != nil && !IsNil(o.TimeRange) {
		return true
	}

	return false
}

// SetTimeRange gets a reference to the given BeginBoundedTimeRange and assigns it to the TimeRange field.
func (o *SpanQueryResponse) SetTimeRange(v BeginBoundedTimeRange) {
	o.TimeRange = &v
}

func (o SpanQueryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpanQueryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["queryId"] = o.QueryId
	toSerialize["queryRows"] = o.QueryRows
	if !IsNil(o.HasErrors) {
		toSerialize["hasErrors"] = o.HasErrors
	}
	if !IsNil(o.TimeRange) {
		toSerialize["timeRange"] = o.TimeRange
	}
	return toSerialize, nil
}

type NullableSpanQueryResponse struct {
	value *SpanQueryResponse
	isSet bool
}

func (v NullableSpanQueryResponse) Get() *SpanQueryResponse {
	return v.value
}

func (v *NullableSpanQueryResponse) Set(val *SpanQueryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSpanQueryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSpanQueryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpanQueryResponse(val *SpanQueryResponse) *NullableSpanQueryResponse {
	return &NullableSpanQueryResponse{value: val, isSet: true}
}

func (v NullableSpanQueryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpanQueryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


