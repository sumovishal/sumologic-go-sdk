/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"time"
)

// checks if the MetadataWithUserInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataWithUserInfo{}

// MetadataWithUserInfo struct for MetadataWithUserInfo
type MetadataWithUserInfo struct {
	// Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
	CreatedAt NullableTime `json:"createdAt"`
	CreatedByUser UserInfo `json:"createdByUser"`
	// Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
	ModifiedAt NullableTime `json:"modifiedAt"`
	ModifiedByUser UserInfo `json:"modifiedByUser"`
}

// NewMetadataWithUserInfo instantiates a new MetadataWithUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataWithUserInfo(createdAt NullableTime, createdByUser UserInfo, modifiedAt NullableTime, modifiedByUser UserInfo) *MetadataWithUserInfo {
	this := MetadataWithUserInfo{}
	this.CreatedAt = createdAt
	this.CreatedByUser = createdByUser
	this.ModifiedAt = modifiedAt
	this.ModifiedByUser = modifiedByUser
	return &this
}

// NewMetadataWithUserInfoWithDefaults instantiates a new MetadataWithUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataWithUserInfoWithDefaults() *MetadataWithUserInfo {
	this := MetadataWithUserInfo{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *MetadataWithUserInfo) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataWithUserInfo) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *MetadataWithUserInfo) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// GetCreatedByUser returns the CreatedByUser field value
func (o *MetadataWithUserInfo) GetCreatedByUser() UserInfo {
	if o == nil {
		var ret UserInfo
		return ret
	}

	return o.CreatedByUser
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value
// and a boolean to check if the value has been set.
func (o *MetadataWithUserInfo) GetCreatedByUserOk() (*UserInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedByUser, true
}

// SetCreatedByUser sets field value
func (o *MetadataWithUserInfo) SetCreatedByUser(v UserInfo) {
	o.CreatedByUser = v
}

// GetModifiedAt returns the ModifiedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *MetadataWithUserInfo) GetModifiedAt() time.Time {
	if o == nil || o.ModifiedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.ModifiedAt.Get()
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataWithUserInfo) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedAt.Get(), o.ModifiedAt.IsSet()
}

// SetModifiedAt sets field value
func (o *MetadataWithUserInfo) SetModifiedAt(v time.Time) {
	o.ModifiedAt.Set(&v)
}

// GetModifiedByUser returns the ModifiedByUser field value
func (o *MetadataWithUserInfo) GetModifiedByUser() UserInfo {
	if o == nil {
		var ret UserInfo
		return ret
	}

	return o.ModifiedByUser
}

// GetModifiedByUserOk returns a tuple with the ModifiedByUser field value
// and a boolean to check if the value has been set.
func (o *MetadataWithUserInfo) GetModifiedByUserOk() (*UserInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedByUser, true
}

// SetModifiedByUser sets field value
func (o *MetadataWithUserInfo) SetModifiedByUser(v UserInfo) {
	o.ModifiedByUser = v
}

func (o MetadataWithUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataWithUserInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt.Get()
	toSerialize["createdByUser"] = o.CreatedByUser
	toSerialize["modifiedAt"] = o.ModifiedAt.Get()
	toSerialize["modifiedByUser"] = o.ModifiedByUser
	return toSerialize, nil
}

type NullableMetadataWithUserInfo struct {
	value *MetadataWithUserInfo
	isSet bool
}

func (v NullableMetadataWithUserInfo) Get() *MetadataWithUserInfo {
	return v.value
}

func (v *NullableMetadataWithUserInfo) Set(val *MetadataWithUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataWithUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataWithUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataWithUserInfo(val *MetadataWithUserInfo) *NullableMetadataWithUserInfo {
	return &NullableMetadataWithUserInfo{value: val, isSet: true}
}

func (v NullableMetadataWithUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataWithUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


