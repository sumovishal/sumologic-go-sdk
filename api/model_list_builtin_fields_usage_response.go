/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// ListBuiltinFieldsUsageResponse struct for ListBuiltinFieldsUsageResponse
type ListBuiltinFieldsUsageResponse struct {
	// List of fields with their usages.
	Data []BuiltinFieldUsage `json:"data"`
}

// NewListBuiltinFieldsUsageResponse instantiates a new ListBuiltinFieldsUsageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBuiltinFieldsUsageResponse(data []BuiltinFieldUsage) *ListBuiltinFieldsUsageResponse {
	this := ListBuiltinFieldsUsageResponse{}
	this.Data = data
	return &this
}

// NewListBuiltinFieldsUsageResponseWithDefaults instantiates a new ListBuiltinFieldsUsageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBuiltinFieldsUsageResponseWithDefaults() *ListBuiltinFieldsUsageResponse {
	this := ListBuiltinFieldsUsageResponse{}
	return &this
}

// GetData returns the Data field value
func (o *ListBuiltinFieldsUsageResponse) GetData() []BuiltinFieldUsage {
	if o == nil {
		var ret []BuiltinFieldUsage
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ListBuiltinFieldsUsageResponse) GetDataOk() ([]BuiltinFieldUsage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ListBuiltinFieldsUsageResponse) SetData(v []BuiltinFieldUsage) {
	o.Data = v
}

func (o ListBuiltinFieldsUsageResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableListBuiltinFieldsUsageResponse struct {
	value *ListBuiltinFieldsUsageResponse
	isSet bool
}

func (v NullableListBuiltinFieldsUsageResponse) Get() *ListBuiltinFieldsUsageResponse {
	return v.value
}

func (v *NullableListBuiltinFieldsUsageResponse) Set(val *ListBuiltinFieldsUsageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListBuiltinFieldsUsageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListBuiltinFieldsUsageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBuiltinFieldsUsageResponse(val *ListBuiltinFieldsUsageResponse) *NullableListBuiltinFieldsUsageResponse {
	return &NullableListBuiltinFieldsUsageResponse{value: val, isSet: true}
}

func (v NullableListBuiltinFieldsUsageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBuiltinFieldsUsageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


