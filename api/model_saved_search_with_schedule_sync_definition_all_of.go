/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// SavedSearchWithScheduleSyncDefinitionAllOf struct for SavedSearchWithScheduleSyncDefinitionAllOf
type SavedSearchWithScheduleSyncDefinitionAllOf struct {
	Search SavedSearchSyncDefinition `json:"search"`
	SearchSchedule *SearchScheduleSyncDefinition `json:"searchSchedule,omitempty"`
	// Description of the saved search.
	Description string `json:"description"`
}

// NewSavedSearchWithScheduleSyncDefinitionAllOf instantiates a new SavedSearchWithScheduleSyncDefinitionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSavedSearchWithScheduleSyncDefinitionAllOf(search SavedSearchSyncDefinition, description string) *SavedSearchWithScheduleSyncDefinitionAllOf {
	this := SavedSearchWithScheduleSyncDefinitionAllOf{}
	this.Search = search
	this.Description = description
	return &this
}

// NewSavedSearchWithScheduleSyncDefinitionAllOfWithDefaults instantiates a new SavedSearchWithScheduleSyncDefinitionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSavedSearchWithScheduleSyncDefinitionAllOfWithDefaults() *SavedSearchWithScheduleSyncDefinitionAllOf {
	this := SavedSearchWithScheduleSyncDefinitionAllOf{}
	return &this
}

// GetSearch returns the Search field value
func (o *SavedSearchWithScheduleSyncDefinitionAllOf) GetSearch() SavedSearchSyncDefinition {
	if o == nil {
		var ret SavedSearchSyncDefinition
		return ret
	}

	return o.Search
}

// GetSearchOk returns a tuple with the Search field value
// and a boolean to check if the value has been set.
func (o *SavedSearchWithScheduleSyncDefinitionAllOf) GetSearchOk() (*SavedSearchSyncDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Search, true
}

// SetSearch sets field value
func (o *SavedSearchWithScheduleSyncDefinitionAllOf) SetSearch(v SavedSearchSyncDefinition) {
	o.Search = v
}

// GetSearchSchedule returns the SearchSchedule field value if set, zero value otherwise.
func (o *SavedSearchWithScheduleSyncDefinitionAllOf) GetSearchSchedule() SearchScheduleSyncDefinition {
	if o == nil || o.SearchSchedule == nil {
		var ret SearchScheduleSyncDefinition
		return ret
	}
	return *o.SearchSchedule
}

// GetSearchScheduleOk returns a tuple with the SearchSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedSearchWithScheduleSyncDefinitionAllOf) GetSearchScheduleOk() (*SearchScheduleSyncDefinition, bool) {
	if o == nil || o.SearchSchedule == nil {
		return nil, false
	}
	return o.SearchSchedule, true
}

// HasSearchSchedule returns a boolean if a field has been set.
func (o *SavedSearchWithScheduleSyncDefinitionAllOf) HasSearchSchedule() bool {
	if o != nil && o.SearchSchedule != nil {
		return true
	}

	return false
}

// SetSearchSchedule gets a reference to the given SearchScheduleSyncDefinition and assigns it to the SearchSchedule field.
func (o *SavedSearchWithScheduleSyncDefinitionAllOf) SetSearchSchedule(v SearchScheduleSyncDefinition) {
	o.SearchSchedule = &v
}

// GetDescription returns the Description field value
func (o *SavedSearchWithScheduleSyncDefinitionAllOf) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SavedSearchWithScheduleSyncDefinitionAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SavedSearchWithScheduleSyncDefinitionAllOf) SetDescription(v string) {
	o.Description = v
}

func (o SavedSearchWithScheduleSyncDefinitionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["search"] = o.Search
	}
	if o.SearchSchedule != nil {
		toSerialize["searchSchedule"] = o.SearchSchedule
	}
	if true {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableSavedSearchWithScheduleSyncDefinitionAllOf struct {
	value *SavedSearchWithScheduleSyncDefinitionAllOf
	isSet bool
}

func (v NullableSavedSearchWithScheduleSyncDefinitionAllOf) Get() *SavedSearchWithScheduleSyncDefinitionAllOf {
	return v.value
}

func (v *NullableSavedSearchWithScheduleSyncDefinitionAllOf) Set(val *SavedSearchWithScheduleSyncDefinitionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSavedSearchWithScheduleSyncDefinitionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSavedSearchWithScheduleSyncDefinitionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSavedSearchWithScheduleSyncDefinitionAllOf(val *SavedSearchWithScheduleSyncDefinitionAllOf) *NullableSavedSearchWithScheduleSyncDefinitionAllOf {
	return &NullableSavedSearchWithScheduleSyncDefinitionAllOf{value: val, isSet: true}
}

func (v NullableSavedSearchWithScheduleSyncDefinitionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSavedSearchWithScheduleSyncDefinitionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


