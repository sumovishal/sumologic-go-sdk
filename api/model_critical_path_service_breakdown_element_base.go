/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CriticalPathServiceBreakdownElementBase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CriticalPathServiceBreakdownElementBase{}

// CriticalPathServiceBreakdownElementBase struct for CriticalPathServiceBreakdownElementBase
type CriticalPathServiceBreakdownElementBase struct {
	// The name of the service.
	Service *string `json:"service,omitempty"`
	// Color hex code assigned to the service.
	ServiceColor *string `json:"serviceColor,omitempty"`
	// Overall processing time in nanoseconds consumed by the spans belonging to this service in the critical path (a sum of the duration times of the spans' critical path segments).
	Duration int64 `json:"duration"`
}

type _CriticalPathServiceBreakdownElementBase CriticalPathServiceBreakdownElementBase

// NewCriticalPathServiceBreakdownElementBase instantiates a new CriticalPathServiceBreakdownElementBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCriticalPathServiceBreakdownElementBase(duration int64) *CriticalPathServiceBreakdownElementBase {
	this := CriticalPathServiceBreakdownElementBase{}
	this.Duration = duration
	return &this
}

// NewCriticalPathServiceBreakdownElementBaseWithDefaults instantiates a new CriticalPathServiceBreakdownElementBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCriticalPathServiceBreakdownElementBaseWithDefaults() *CriticalPathServiceBreakdownElementBase {
	this := CriticalPathServiceBreakdownElementBase{}
	return &this
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *CriticalPathServiceBreakdownElementBase) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CriticalPathServiceBreakdownElementBase) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *CriticalPathServiceBreakdownElementBase) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *CriticalPathServiceBreakdownElementBase) SetService(v string) {
	o.Service = &v
}

// GetServiceColor returns the ServiceColor field value if set, zero value otherwise.
func (o *CriticalPathServiceBreakdownElementBase) GetServiceColor() string {
	if o == nil || IsNil(o.ServiceColor) {
		var ret string
		return ret
	}
	return *o.ServiceColor
}

// GetServiceColorOk returns a tuple with the ServiceColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CriticalPathServiceBreakdownElementBase) GetServiceColorOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceColor) {
		return nil, false
	}
	return o.ServiceColor, true
}

// HasServiceColor returns a boolean if a field has been set.
func (o *CriticalPathServiceBreakdownElementBase) HasServiceColor() bool {
	if o != nil && !IsNil(o.ServiceColor) {
		return true
	}

	return false
}

// SetServiceColor gets a reference to the given string and assigns it to the ServiceColor field.
func (o *CriticalPathServiceBreakdownElementBase) SetServiceColor(v string) {
	o.ServiceColor = &v
}

// GetDuration returns the Duration field value
func (o *CriticalPathServiceBreakdownElementBase) GetDuration() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *CriticalPathServiceBreakdownElementBase) GetDurationOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *CriticalPathServiceBreakdownElementBase) SetDuration(v int64) {
	o.Duration = v
}

func (o CriticalPathServiceBreakdownElementBase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CriticalPathServiceBreakdownElementBase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.ServiceColor) {
		toSerialize["serviceColor"] = o.ServiceColor
	}
	toSerialize["duration"] = o.Duration
	return toSerialize, nil
}

func (o *CriticalPathServiceBreakdownElementBase) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"duration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCriticalPathServiceBreakdownElementBase := _CriticalPathServiceBreakdownElementBase{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCriticalPathServiceBreakdownElementBase)

	if err != nil {
		return err
	}

	*o = CriticalPathServiceBreakdownElementBase(varCriticalPathServiceBreakdownElementBase)

	return err
}

type NullableCriticalPathServiceBreakdownElementBase struct {
	value *CriticalPathServiceBreakdownElementBase
	isSet bool
}

func (v NullableCriticalPathServiceBreakdownElementBase) Get() *CriticalPathServiceBreakdownElementBase {
	return v.value
}

func (v *NullableCriticalPathServiceBreakdownElementBase) Set(val *CriticalPathServiceBreakdownElementBase) {
	v.value = val
	v.isSet = true
}

func (v NullableCriticalPathServiceBreakdownElementBase) IsSet() bool {
	return v.isSet
}

func (v *NullableCriticalPathServiceBreakdownElementBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCriticalPathServiceBreakdownElementBase(val *CriticalPathServiceBreakdownElementBase) *NullableCriticalPathServiceBreakdownElementBase {
	return &NullableCriticalPathServiceBreakdownElementBase{value: val, isSet: true}
}

func (v NullableCriticalPathServiceBreakdownElementBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCriticalPathServiceBreakdownElementBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


