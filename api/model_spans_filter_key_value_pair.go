/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// SpansFilterKeyValuePair struct for SpansFilterKeyValuePair
type SpansFilterKeyValuePair struct {
	SpansFilter
	// A symbol that indicates an operation to be performed between a `fieldName` and `fieldValue`.
	Operator string `json:"operator"`
	// The second argument of the operation applied to a `fieldName`.
	FieldValue string `json:"fieldValue"`
}

// NewSpansFilterKeyValuePair instantiates a new SpansFilterKeyValuePair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpansFilterKeyValuePair(operator string, fieldValue string, type_ string, fieldName string) *SpansFilterKeyValuePair {
	this := SpansFilterKeyValuePair{}
	this.Type = type_
	this.FieldName = fieldName
	this.Operator = operator
	this.FieldValue = fieldValue
	return &this
}

// NewSpansFilterKeyValuePairWithDefaults instantiates a new SpansFilterKeyValuePair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpansFilterKeyValuePairWithDefaults() *SpansFilterKeyValuePair {
	this := SpansFilterKeyValuePair{}
	return &this
}

// GetOperator returns the Operator field value
func (o *SpansFilterKeyValuePair) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *SpansFilterKeyValuePair) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *SpansFilterKeyValuePair) SetOperator(v string) {
	o.Operator = v
}

// GetFieldValue returns the FieldValue field value
func (o *SpansFilterKeyValuePair) GetFieldValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldValue
}

// GetFieldValueOk returns a tuple with the FieldValue field value
// and a boolean to check if the value has been set.
func (o *SpansFilterKeyValuePair) GetFieldValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldValue, true
}

// SetFieldValue sets field value
func (o *SpansFilterKeyValuePair) SetFieldValue(v string) {
	o.FieldValue = v
}

func (o SpansFilterKeyValuePair) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedSpansFilter, errSpansFilter := json.Marshal(o.SpansFilter)
	if errSpansFilter != nil {
		return []byte{}, errSpansFilter
	}
	errSpansFilter = json.Unmarshal([]byte(serializedSpansFilter), &toSerialize)
	if errSpansFilter != nil {
		return []byte{}, errSpansFilter
	}
	if true {
		toSerialize["operator"] = o.Operator
	}
	if true {
		toSerialize["fieldValue"] = o.FieldValue
	}
	return json.Marshal(toSerialize)
}

type NullableSpansFilterKeyValuePair struct {
	value *SpansFilterKeyValuePair
	isSet bool
}

func (v NullableSpansFilterKeyValuePair) Get() *SpansFilterKeyValuePair {
	return v.value
}

func (v *NullableSpansFilterKeyValuePair) Set(val *SpansFilterKeyValuePair) {
	v.value = val
	v.isSet = true
}

func (v NullableSpansFilterKeyValuePair) IsSet() bool {
	return v.isSet
}

func (v *NullableSpansFilterKeyValuePair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpansFilterKeyValuePair(val *SpansFilterKeyValuePair) *NullableSpansFilterKeyValuePair {
	return &NullableSpansFilterKeyValuePair{value: val, isSet: true}
}

func (v NullableSpansFilterKeyValuePair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpansFilterKeyValuePair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


