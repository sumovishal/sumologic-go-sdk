/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// VariableValuesLogQueryRequest The request to get a log query to populate variable values.
type VariableValuesLogQueryRequest struct {
	// The original log query of the variable.
	Query string `json:"query"`
	// A field in log query to populate the variable values.
	Field string `json:"field"`
	VariablesValues *VariablesValuesData `json:"variablesValues,omitempty"`
}

// NewVariableValuesLogQueryRequest instantiates a new VariableValuesLogQueryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableValuesLogQueryRequest(query string, field string) *VariableValuesLogQueryRequest {
	this := VariableValuesLogQueryRequest{}
	this.Query = query
	this.Field = field
	return &this
}

// NewVariableValuesLogQueryRequestWithDefaults instantiates a new VariableValuesLogQueryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableValuesLogQueryRequestWithDefaults() *VariableValuesLogQueryRequest {
	this := VariableValuesLogQueryRequest{}
	return &this
}

// GetQuery returns the Query field value
func (o *VariableValuesLogQueryRequest) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *VariableValuesLogQueryRequest) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *VariableValuesLogQueryRequest) SetQuery(v string) {
	o.Query = v
}

// GetField returns the Field field value
func (o *VariableValuesLogQueryRequest) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *VariableValuesLogQueryRequest) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *VariableValuesLogQueryRequest) SetField(v string) {
	o.Field = v
}

// GetVariablesValues returns the VariablesValues field value if set, zero value otherwise.
func (o *VariableValuesLogQueryRequest) GetVariablesValues() VariablesValuesData {
	if o == nil || o.VariablesValues == nil {
		var ret VariablesValuesData
		return ret
	}
	return *o.VariablesValues
}

// GetVariablesValuesOk returns a tuple with the VariablesValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableValuesLogQueryRequest) GetVariablesValuesOk() (*VariablesValuesData, bool) {
	if o == nil || o.VariablesValues == nil {
		return nil, false
	}
	return o.VariablesValues, true
}

// HasVariablesValues returns a boolean if a field has been set.
func (o *VariableValuesLogQueryRequest) HasVariablesValues() bool {
	if o != nil && o.VariablesValues != nil {
		return true
	}

	return false
}

// SetVariablesValues gets a reference to the given VariablesValuesData and assigns it to the VariablesValues field.
func (o *VariableValuesLogQueryRequest) SetVariablesValues(v VariablesValuesData) {
	o.VariablesValues = &v
}

func (o VariableValuesLogQueryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["query"] = o.Query
	}
	if true {
		toSerialize["field"] = o.Field
	}
	if o.VariablesValues != nil {
		toSerialize["variablesValues"] = o.VariablesValues
	}
	return json.Marshal(toSerialize)
}

type NullableVariableValuesLogQueryRequest struct {
	value *VariableValuesLogQueryRequest
	isSet bool
}

func (v NullableVariableValuesLogQueryRequest) Get() *VariableValuesLogQueryRequest {
	return v.value
}

func (v *NullableVariableValuesLogQueryRequest) Set(val *VariableValuesLogQueryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableValuesLogQueryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableValuesLogQueryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableValuesLogQueryRequest(val *VariableValuesLogQueryRequest) *NullableVariableValuesLogQueryRequest {
	return &NullableVariableValuesLogQueryRequest{value: val, isSet: true}
}

func (v NullableVariableValuesLogQueryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableValuesLogQueryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


