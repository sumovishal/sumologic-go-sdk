/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// ListPartitionsResponse struct for ListPartitionsResponse
type ListPartitionsResponse struct {
	// List of partitions.
	Data []Partition `json:"data"`
	// Next continuation token.
	Next *string `json:"next,omitempty"`
}

// NewListPartitionsResponse instantiates a new ListPartitionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPartitionsResponse(data []Partition) *ListPartitionsResponse {
	this := ListPartitionsResponse{}
	this.Data = data
	return &this
}

// NewListPartitionsResponseWithDefaults instantiates a new ListPartitionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPartitionsResponseWithDefaults() *ListPartitionsResponse {
	this := ListPartitionsResponse{}
	return &this
}

// GetData returns the Data field value
func (o *ListPartitionsResponse) GetData() []Partition {
	if o == nil {
		var ret []Partition
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ListPartitionsResponse) GetDataOk() ([]Partition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ListPartitionsResponse) SetData(v []Partition) {
	o.Data = v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *ListPartitionsResponse) GetNext() string {
	if o == nil || o.Next == nil {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPartitionsResponse) GetNextOk() (*string, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *ListPartitionsResponse) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *ListPartitionsResponse) SetNext(v string) {
	o.Next = &v
}

func (o ListPartitionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	return json.Marshal(toSerialize)
}

type NullableListPartitionsResponse struct {
	value *ListPartitionsResponse
	isSet bool
}

func (v NullableListPartitionsResponse) Get() *ListPartitionsResponse {
	return v.value
}

func (v *NullableListPartitionsResponse) Set(val *ListPartitionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListPartitionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListPartitionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPartitionsResponse(val *ListPartitionsResponse) *NullableListPartitionsResponse {
	return &NullableListPartitionsResponse{value: val, isSet: true}
}

func (v NullableListPartitionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPartitionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


