/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the GetSourcesUsageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSourcesUsageResponse{}

// GetSourcesUsageResponse struct for GetSourcesUsageResponse
type GetSourcesUsageResponse struct {
	// List of sources.
	Data []Source `json:"data"`
	// Next continuation token.
	Next *string `json:"next,omitempty"`
}

// NewGetSourcesUsageResponse instantiates a new GetSourcesUsageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSourcesUsageResponse(data []Source) *GetSourcesUsageResponse {
	this := GetSourcesUsageResponse{}
	this.Data = data
	return &this
}

// NewGetSourcesUsageResponseWithDefaults instantiates a new GetSourcesUsageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSourcesUsageResponseWithDefaults() *GetSourcesUsageResponse {
	this := GetSourcesUsageResponse{}
	return &this
}

// GetData returns the Data field value
func (o *GetSourcesUsageResponse) GetData() []Source {
	if o == nil {
		var ret []Source
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetSourcesUsageResponse) GetDataOk() ([]Source, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *GetSourcesUsageResponse) SetData(v []Source) {
	o.Data = v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *GetSourcesUsageResponse) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSourcesUsageResponse) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *GetSourcesUsageResponse) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *GetSourcesUsageResponse) SetNext(v string) {
	o.Next = &v
}

func (o GetSourcesUsageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSourcesUsageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	return toSerialize, nil
}

type NullableGetSourcesUsageResponse struct {
	value *GetSourcesUsageResponse
	isSet bool
}

func (v NullableGetSourcesUsageResponse) Get() *GetSourcesUsageResponse {
	return v.value
}

func (v *NullableGetSourcesUsageResponse) Set(val *GetSourcesUsageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSourcesUsageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSourcesUsageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSourcesUsageResponse(val *GetSourcesUsageResponse) *NullableGetSourcesUsageResponse {
	return &NullableGetSourcesUsageResponse{value: val, isSet: true}
}

func (v NullableGetSourcesUsageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSourcesUsageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


