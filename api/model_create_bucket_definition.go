/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateBucketDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBucketDefinition{}

// CreateBucketDefinition struct for CreateBucketDefinition
type CreateBucketDefinition struct {
	// Name of the S3 data forwarding destination.
	DestinationName string `json:"destinationName"`
	// Description of the S3 data forwarding destination.
	Description *string `json:"description,omitempty"`
	// AWS IAM authentication method used for access. Possible values are: 1. `AccessKey` 2. `RoleBased`
	AuthenticationMode string `json:"authenticationMode"`
	// The AWS Access ID to access the S3 bucket.
	AccessKeyId *string `json:"accessKeyId,omitempty"`
	// The AWS Secret Key to access the S3 bucket.
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`
	// The AWS Role ARN to access the S3 bucket.
	RoleArn *string `json:"roleArn,omitempty"`
	// The region where the S3 bucket is located.
	Region *string `json:"region,omitempty"`
	// Enable S3 server-side encryption.
	Encrypted *bool `json:"encrypted,omitempty"`
	// True if the destination is Active.
	Enabled *bool `json:"enabled,omitempty"`
	// The name of the Amazon S3 bucket.
	BucketName string `json:"bucketName" validate:"regexp=(?!(^xn--|-s3alias$))^[a-z0-9][a-z0-9-.]{1,61}[a-z0-9]$"`
}

type _CreateBucketDefinition CreateBucketDefinition

// NewCreateBucketDefinition instantiates a new CreateBucketDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBucketDefinition(destinationName string, authenticationMode string, bucketName string) *CreateBucketDefinition {
	this := CreateBucketDefinition{}
	this.DestinationName = destinationName
	this.AuthenticationMode = authenticationMode
	this.BucketName = bucketName
	return &this
}

// NewCreateBucketDefinitionWithDefaults instantiates a new CreateBucketDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBucketDefinitionWithDefaults() *CreateBucketDefinition {
	this := CreateBucketDefinition{}
	return &this
}

// GetDestinationName returns the DestinationName field value
func (o *CreateBucketDefinition) GetDestinationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationName
}

// GetDestinationNameOk returns a tuple with the DestinationName field value
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinition) GetDestinationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationName, true
}

// SetDestinationName sets field value
func (o *CreateBucketDefinition) SetDestinationName(v string) {
	o.DestinationName = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateBucketDefinition) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinition) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateBucketDefinition) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateBucketDefinition) SetDescription(v string) {
	o.Description = &v
}

// GetAuthenticationMode returns the AuthenticationMode field value
func (o *CreateBucketDefinition) GetAuthenticationMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationMode
}

// GetAuthenticationModeOk returns a tuple with the AuthenticationMode field value
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinition) GetAuthenticationModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationMode, true
}

// SetAuthenticationMode sets field value
func (o *CreateBucketDefinition) SetAuthenticationMode(v string) {
	o.AuthenticationMode = v
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *CreateBucketDefinition) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId) {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinition) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeyId) {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *CreateBucketDefinition) HasAccessKeyId() bool {
	if o != nil && !IsNil(o.AccessKeyId) {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *CreateBucketDefinition) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *CreateBucketDefinition) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinition) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretAccessKey) {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *CreateBucketDefinition) HasSecretAccessKey() bool {
	if o != nil && !IsNil(o.SecretAccessKey) {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *CreateBucketDefinition) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *CreateBucketDefinition) GetRoleArn() string {
	if o == nil || IsNil(o.RoleArn) {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinition) GetRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.RoleArn) {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *CreateBucketDefinition) HasRoleArn() bool {
	if o != nil && !IsNil(o.RoleArn) {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *CreateBucketDefinition) SetRoleArn(v string) {
	o.RoleArn = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CreateBucketDefinition) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinition) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CreateBucketDefinition) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *CreateBucketDefinition) SetRegion(v string) {
	o.Region = &v
}

// GetEncrypted returns the Encrypted field value if set, zero value otherwise.
func (o *CreateBucketDefinition) GetEncrypted() bool {
	if o == nil || IsNil(o.Encrypted) {
		var ret bool
		return ret
	}
	return *o.Encrypted
}

// GetEncryptedOk returns a tuple with the Encrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinition) GetEncryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.Encrypted) {
		return nil, false
	}
	return o.Encrypted, true
}

// HasEncrypted returns a boolean if a field has been set.
func (o *CreateBucketDefinition) HasEncrypted() bool {
	if o != nil && !IsNil(o.Encrypted) {
		return true
	}

	return false
}

// SetEncrypted gets a reference to the given bool and assigns it to the Encrypted field.
func (o *CreateBucketDefinition) SetEncrypted(v bool) {
	o.Encrypted = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CreateBucketDefinition) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinition) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CreateBucketDefinition) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CreateBucketDefinition) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetBucketName returns the BucketName field value
func (o *CreateBucketDefinition) GetBucketName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value
// and a boolean to check if the value has been set.
func (o *CreateBucketDefinition) GetBucketNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketName, true
}

// SetBucketName sets field value
func (o *CreateBucketDefinition) SetBucketName(v string) {
	o.BucketName = v
}

func (o CreateBucketDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBucketDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destinationName"] = o.DestinationName
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["authenticationMode"] = o.AuthenticationMode
	if !IsNil(o.AccessKeyId) {
		toSerialize["accessKeyId"] = o.AccessKeyId
	}
	if !IsNil(o.SecretAccessKey) {
		toSerialize["secretAccessKey"] = o.SecretAccessKey
	}
	if !IsNil(o.RoleArn) {
		toSerialize["roleArn"] = o.RoleArn
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Encrypted) {
		toSerialize["encrypted"] = o.Encrypted
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["bucketName"] = o.BucketName
	return toSerialize, nil
}

func (o *CreateBucketDefinition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destinationName",
		"authenticationMode",
		"bucketName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateBucketDefinition := _CreateBucketDefinition{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateBucketDefinition)

	if err != nil {
		return err
	}

	*o = CreateBucketDefinition(varCreateBucketDefinition)

	return err
}

type NullableCreateBucketDefinition struct {
	value *CreateBucketDefinition
	isSet bool
}

func (v NullableCreateBucketDefinition) Get() *CreateBucketDefinition {
	return v.value
}

func (v *NullableCreateBucketDefinition) Set(val *CreateBucketDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBucketDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBucketDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBucketDefinition(val *CreateBucketDefinition) *NullableCreateBucketDefinition {
	return &NullableCreateBucketDefinition{value: val, isSet: true}
}

func (v NullableCreateBucketDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBucketDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


