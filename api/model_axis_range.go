/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// AxisRange The min and max of the x,y axis of the monitor chart.
type AxisRange struct {
	// minimum limit of x or y axis.
	Min *int64 `json:"min,omitempty"`
	// maximum limit of x or y axis.
	Max *int64 `json:"max,omitempty"`
}

// NewAxisRange instantiates a new AxisRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAxisRange() *AxisRange {
	this := AxisRange{}
	return &this
}

// NewAxisRangeWithDefaults instantiates a new AxisRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAxisRangeWithDefaults() *AxisRange {
	this := AxisRange{}
	return &this
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *AxisRange) GetMin() int64 {
	if o == nil || o.Min == nil {
		var ret int64
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AxisRange) GetMinOk() (*int64, bool) {
	if o == nil || o.Min == nil {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *AxisRange) HasMin() bool {
	if o != nil && o.Min != nil {
		return true
	}

	return false
}

// SetMin gets a reference to the given int64 and assigns it to the Min field.
func (o *AxisRange) SetMin(v int64) {
	o.Min = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *AxisRange) GetMax() int64 {
	if o == nil || o.Max == nil {
		var ret int64
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AxisRange) GetMaxOk() (*int64, bool) {
	if o == nil || o.Max == nil {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *AxisRange) HasMax() bool {
	if o != nil && o.Max != nil {
		return true
	}

	return false
}

// SetMax gets a reference to the given int64 and assigns it to the Max field.
func (o *AxisRange) SetMax(v int64) {
	o.Max = &v
}

func (o AxisRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Min != nil {
		toSerialize["min"] = o.Min
	}
	if o.Max != nil {
		toSerialize["max"] = o.Max
	}
	return json.Marshal(toSerialize)
}

type NullableAxisRange struct {
	value *AxisRange
	isSet bool
}

func (v NullableAxisRange) Get() *AxisRange {
	return v.value
}

func (v *NullableAxisRange) Set(val *AxisRange) {
	v.value = val
	v.isSet = true
}

func (v NullableAxisRange) IsSet() bool {
	return v.isSet
}

func (v *NullableAxisRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAxisRange(val *AxisRange) *NullableAxisRange {
	return &NullableAxisRange{value: val, isSet: true}
}

func (v NullableAxisRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAxisRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


