/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PermissionSummaryBySubjects type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionSummaryBySubjects{}

// PermissionSummaryBySubjects A list of PermissionSubjects and PermissionSummaryMeta(s) associated with each subject.
type PermissionSummaryBySubjects struct {
	// Type of subject for the permission. Valid values are: `user` or `role` or `org`.
	SubjectType string `json:"subjectType"`
	// The identifier that belongs to the subject type chosen above. For e.g. if the subjectType is set to `user`, subjectId should be the identifier of a user (same goes for `role` or `org` subjectType).
	SubjectId string `json:"subjectId"`
	PermissionSummaries []PermissionSummaryMeta `json:"permissionSummaries"`
}

// NewPermissionSummaryBySubjects instantiates a new PermissionSummaryBySubjects object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionSummaryBySubjects(subjectType string, subjectId string, permissionSummaries []PermissionSummaryMeta) *PermissionSummaryBySubjects {
	this := PermissionSummaryBySubjects{}
	this.SubjectType = subjectType
	this.SubjectId = subjectId
	this.PermissionSummaries = permissionSummaries
	return &this
}

// NewPermissionSummaryBySubjectsWithDefaults instantiates a new PermissionSummaryBySubjects object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionSummaryBySubjectsWithDefaults() *PermissionSummaryBySubjects {
	this := PermissionSummaryBySubjects{}
	return &this
}

// GetSubjectType returns the SubjectType field value
func (o *PermissionSummaryBySubjects) GetSubjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectType
}

// GetSubjectTypeOk returns a tuple with the SubjectType field value
// and a boolean to check if the value has been set.
func (o *PermissionSummaryBySubjects) GetSubjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubjectType, true
}

// SetSubjectType sets field value
func (o *PermissionSummaryBySubjects) SetSubjectType(v string) {
	o.SubjectType = v
}

// GetSubjectId returns the SubjectId field value
func (o *PermissionSummaryBySubjects) GetSubjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectId
}

// GetSubjectIdOk returns a tuple with the SubjectId field value
// and a boolean to check if the value has been set.
func (o *PermissionSummaryBySubjects) GetSubjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubjectId, true
}

// SetSubjectId sets field value
func (o *PermissionSummaryBySubjects) SetSubjectId(v string) {
	o.SubjectId = v
}

// GetPermissionSummaries returns the PermissionSummaries field value
func (o *PermissionSummaryBySubjects) GetPermissionSummaries() []PermissionSummaryMeta {
	if o == nil {
		var ret []PermissionSummaryMeta
		return ret
	}

	return o.PermissionSummaries
}

// GetPermissionSummariesOk returns a tuple with the PermissionSummaries field value
// and a boolean to check if the value has been set.
func (o *PermissionSummaryBySubjects) GetPermissionSummariesOk() ([]PermissionSummaryMeta, bool) {
	if o == nil {
		return nil, false
	}
	return o.PermissionSummaries, true
}

// SetPermissionSummaries sets field value
func (o *PermissionSummaryBySubjects) SetPermissionSummaries(v []PermissionSummaryMeta) {
	o.PermissionSummaries = v
}

func (o PermissionSummaryBySubjects) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionSummaryBySubjects) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subjectType"] = o.SubjectType
	toSerialize["subjectId"] = o.SubjectId
	toSerialize["permissionSummaries"] = o.PermissionSummaries
	return toSerialize, nil
}

type NullablePermissionSummaryBySubjects struct {
	value *PermissionSummaryBySubjects
	isSet bool
}

func (v NullablePermissionSummaryBySubjects) Get() *PermissionSummaryBySubjects {
	return v.value
}

func (v *NullablePermissionSummaryBySubjects) Set(val *PermissionSummaryBySubjects) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionSummaryBySubjects) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionSummaryBySubjects) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionSummaryBySubjects(val *PermissionSummaryBySubjects) *NullablePermissionSummaryBySubjects {
	return &NullablePermissionSummaryBySubjects{value: val, isSet: true}
}

func (v NullablePermissionSummaryBySubjects) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionSummaryBySubjects) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


