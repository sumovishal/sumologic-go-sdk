/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MutingSchedulesLibraryFolderResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MutingSchedulesLibraryFolderResponse{}

// MutingSchedulesLibraryFolderResponse struct for MutingSchedulesLibraryFolderResponse
type MutingSchedulesLibraryFolderResponse struct {
	MutingSchedulesLibraryBaseResponse
	// Aggregated permission summary for the calling user. If detailed permission statements are required, please call list permissions endpoint.
	Permissions []string `json:"permissions"`
	// Children of the folder. NOTE: Permissions field will not be filled (empty list) for children.
	Children []MutingSchedulesLibraryBaseResponse `json:"children"`
}

type _MutingSchedulesLibraryFolderResponse MutingSchedulesLibraryFolderResponse

// NewMutingSchedulesLibraryFolderResponse instantiates a new MutingSchedulesLibraryFolderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMutingSchedulesLibraryFolderResponse(permissions []string, children []MutingSchedulesLibraryBaseResponse, id string, name string, description string, version int64, createdAt time.Time, createdBy string, modifiedAt time.Time, modifiedBy string, parentId string, contentType string, type_ string, isSystem bool, isMutable bool) *MutingSchedulesLibraryFolderResponse {
	this := MutingSchedulesLibraryFolderResponse{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.Version = version
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.ParentId = parentId
	this.ContentType = contentType
	this.Type = type_
	this.IsSystem = isSystem
	this.IsMutable = isMutable
	this.Permissions = permissions
	this.Children = children
	return &this
}

// NewMutingSchedulesLibraryFolderResponseWithDefaults instantiates a new MutingSchedulesLibraryFolderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMutingSchedulesLibraryFolderResponseWithDefaults() *MutingSchedulesLibraryFolderResponse {
	this := MutingSchedulesLibraryFolderResponse{}
	return &this
}

// GetPermissions returns the Permissions field value
func (o *MutingSchedulesLibraryFolderResponse) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *MutingSchedulesLibraryFolderResponse) GetPermissionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *MutingSchedulesLibraryFolderResponse) SetPermissions(v []string) {
	o.Permissions = v
}

// GetChildren returns the Children field value
func (o *MutingSchedulesLibraryFolderResponse) GetChildren() []MutingSchedulesLibraryBaseResponse {
	if o == nil {
		var ret []MutingSchedulesLibraryBaseResponse
		return ret
	}

	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value
// and a boolean to check if the value has been set.
func (o *MutingSchedulesLibraryFolderResponse) GetChildrenOk() ([]MutingSchedulesLibraryBaseResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Children, true
}

// SetChildren sets field value
func (o *MutingSchedulesLibraryFolderResponse) SetChildren(v []MutingSchedulesLibraryBaseResponse) {
	o.Children = v
}

func (o MutingSchedulesLibraryFolderResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MutingSchedulesLibraryFolderResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedMutingSchedulesLibraryBaseResponse, errMutingSchedulesLibraryBaseResponse := json.Marshal(o.MutingSchedulesLibraryBaseResponse)
	if errMutingSchedulesLibraryBaseResponse != nil {
		return map[string]interface{}{}, errMutingSchedulesLibraryBaseResponse
	}
	errMutingSchedulesLibraryBaseResponse = json.Unmarshal([]byte(serializedMutingSchedulesLibraryBaseResponse), &toSerialize)
	if errMutingSchedulesLibraryBaseResponse != nil {
		return map[string]interface{}{}, errMutingSchedulesLibraryBaseResponse
	}
	toSerialize["permissions"] = o.Permissions
	toSerialize["children"] = o.Children
	return toSerialize, nil
}

func (o *MutingSchedulesLibraryFolderResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"permissions",
		"children",
		"id",
		"name",
		"description",
		"version",
		"createdAt",
		"createdBy",
		"modifiedAt",
		"modifiedBy",
		"parentId",
		"contentType",
		"type",
		"isSystem",
		"isMutable",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMutingSchedulesLibraryFolderResponse := _MutingSchedulesLibraryFolderResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMutingSchedulesLibraryFolderResponse)

	if err != nil {
		return err
	}

	*o = MutingSchedulesLibraryFolderResponse(varMutingSchedulesLibraryFolderResponse)

	return err
}

type NullableMutingSchedulesLibraryFolderResponse struct {
	value *MutingSchedulesLibraryFolderResponse
	isSet bool
}

func (v NullableMutingSchedulesLibraryFolderResponse) Get() *MutingSchedulesLibraryFolderResponse {
	return v.value
}

func (v *NullableMutingSchedulesLibraryFolderResponse) Set(val *MutingSchedulesLibraryFolderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMutingSchedulesLibraryFolderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMutingSchedulesLibraryFolderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutingSchedulesLibraryFolderResponse(val *MutingSchedulesLibraryFolderResponse) *NullableMutingSchedulesLibraryFolderResponse {
	return &NullableMutingSchedulesLibraryFolderResponse{value: val, isSet: true}
}

func (v NullableMutingSchedulesLibraryFolderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutingSchedulesLibraryFolderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


