/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// PaginatedDashboards struct for PaginatedDashboards
type PaginatedDashboards struct {
	// List of dashboards.
	Dashboards []Dashboard `json:"dashboards"`
	// Next continuation token. `token` is set to null when no more pages are left.
	Next *string `json:"next,omitempty"`
}

// NewPaginatedDashboards instantiates a new PaginatedDashboards object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedDashboards(dashboards []Dashboard) *PaginatedDashboards {
	this := PaginatedDashboards{}
	this.Dashboards = dashboards
	return &this
}

// NewPaginatedDashboardsWithDefaults instantiates a new PaginatedDashboards object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedDashboardsWithDefaults() *PaginatedDashboards {
	this := PaginatedDashboards{}
	return &this
}

// GetDashboards returns the Dashboards field value
func (o *PaginatedDashboards) GetDashboards() []Dashboard {
	if o == nil {
		var ret []Dashboard
		return ret
	}

	return o.Dashboards
}

// GetDashboardsOk returns a tuple with the Dashboards field value
// and a boolean to check if the value has been set.
func (o *PaginatedDashboards) GetDashboardsOk() ([]Dashboard, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dashboards, true
}

// SetDashboards sets field value
func (o *PaginatedDashboards) SetDashboards(v []Dashboard) {
	o.Dashboards = v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *PaginatedDashboards) GetNext() string {
	if o == nil || o.Next == nil {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedDashboards) GetNextOk() (*string, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *PaginatedDashboards) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *PaginatedDashboards) SetNext(v string) {
	o.Next = &v
}

func (o PaginatedDashboards) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dashboards"] = o.Dashboards
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	return json.Marshal(toSerialize)
}

type NullablePaginatedDashboards struct {
	value *PaginatedDashboards
	isSet bool
}

func (v NullablePaginatedDashboards) Get() *PaginatedDashboards {
	return v.value
}

func (v *NullablePaginatedDashboards) Set(val *PaginatedDashboards) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedDashboards) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedDashboards) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedDashboards(val *PaginatedDashboards) *NullablePaginatedDashboards {
	return &NullablePaginatedDashboards{value: val, isSet: true}
}

func (v NullablePaginatedDashboards) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedDashboards) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


