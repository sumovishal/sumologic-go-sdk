/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// FolderSyncDefinition struct for FolderSyncDefinition
type FolderSyncDefinition struct {
	ContentSyncDefinition
	// An optional description for the folder.
	Description *string `json:"description,omitempty"`
	// The items in the folder, a list of Dashboard and/or Folder items.
	Children []ContentSyncDefinition `json:"children"`
}

// NewFolderSyncDefinition instantiates a new FolderSyncDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolderSyncDefinition(children []ContentSyncDefinition, type_ string, name string) *FolderSyncDefinition {
	this := FolderSyncDefinition{}
	this.Type = type_
	this.Name = name
	this.Children = children
	return &this
}

// NewFolderSyncDefinitionWithDefaults instantiates a new FolderSyncDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolderSyncDefinitionWithDefaults() *FolderSyncDefinition {
	this := FolderSyncDefinition{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FolderSyncDefinition) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderSyncDefinition) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FolderSyncDefinition) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FolderSyncDefinition) SetDescription(v string) {
	o.Description = &v
}

// GetChildren returns the Children field value
func (o *FolderSyncDefinition) GetChildren() []ContentSyncDefinition {
	if o == nil {
		var ret []ContentSyncDefinition
		return ret
	}

	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value
// and a boolean to check if the value has been set.
func (o *FolderSyncDefinition) GetChildrenOk() ([]ContentSyncDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Children, true
}

// SetChildren sets field value
func (o *FolderSyncDefinition) SetChildren(v []ContentSyncDefinition) {
	o.Children = v
}

func (o FolderSyncDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedContentSyncDefinition, errContentSyncDefinition := json.Marshal(o.ContentSyncDefinition)
	if errContentSyncDefinition != nil {
		return []byte{}, errContentSyncDefinition
	}
	errContentSyncDefinition = json.Unmarshal([]byte(serializedContentSyncDefinition), &toSerialize)
	if errContentSyncDefinition != nil {
		return []byte{}, errContentSyncDefinition
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["children"] = o.Children
	}
	return json.Marshal(toSerialize)
}

type NullableFolderSyncDefinition struct {
	value *FolderSyncDefinition
	isSet bool
}

func (v NullableFolderSyncDefinition) Get() *FolderSyncDefinition {
	return v.value
}

func (v *NullableFolderSyncDefinition) Set(val *FolderSyncDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableFolderSyncDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableFolderSyncDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolderSyncDefinition(val *FolderSyncDefinition) *NullableFolderSyncDefinition {
	return &NullableFolderSyncDefinition{value: val, isSet: true}
}

func (v NullableFolderSyncDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolderSyncDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


