/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AttributeValueReversedIndex type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeValueReversedIndex{}

// AttributeValueReversedIndex struct for AttributeValueReversedIndex
type AttributeValueReversedIndex struct {
	// Value of the attribute.
	AttributeValue string `json:"attributeValue"`
	// List of span ids which have the given attribute and value.
	SpanIds []string `json:"spanIds"`
}

type _AttributeValueReversedIndex AttributeValueReversedIndex

// NewAttributeValueReversedIndex instantiates a new AttributeValueReversedIndex object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeValueReversedIndex(attributeValue string, spanIds []string) *AttributeValueReversedIndex {
	this := AttributeValueReversedIndex{}
	this.AttributeValue = attributeValue
	this.SpanIds = spanIds
	return &this
}

// NewAttributeValueReversedIndexWithDefaults instantiates a new AttributeValueReversedIndex object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeValueReversedIndexWithDefaults() *AttributeValueReversedIndex {
	this := AttributeValueReversedIndex{}
	return &this
}

// GetAttributeValue returns the AttributeValue field value
func (o *AttributeValueReversedIndex) GetAttributeValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeValue
}

// GetAttributeValueOk returns a tuple with the AttributeValue field value
// and a boolean to check if the value has been set.
func (o *AttributeValueReversedIndex) GetAttributeValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeValue, true
}

// SetAttributeValue sets field value
func (o *AttributeValueReversedIndex) SetAttributeValue(v string) {
	o.AttributeValue = v
}

// GetSpanIds returns the SpanIds field value
func (o *AttributeValueReversedIndex) GetSpanIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SpanIds
}

// GetSpanIdsOk returns a tuple with the SpanIds field value
// and a boolean to check if the value has been set.
func (o *AttributeValueReversedIndex) GetSpanIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpanIds, true
}

// SetSpanIds sets field value
func (o *AttributeValueReversedIndex) SetSpanIds(v []string) {
	o.SpanIds = v
}

func (o AttributeValueReversedIndex) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeValueReversedIndex) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributeValue"] = o.AttributeValue
	toSerialize["spanIds"] = o.SpanIds
	return toSerialize, nil
}

func (o *AttributeValueReversedIndex) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attributeValue",
		"spanIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAttributeValueReversedIndex := _AttributeValueReversedIndex{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAttributeValueReversedIndex)

	if err != nil {
		return err
	}

	*o = AttributeValueReversedIndex(varAttributeValueReversedIndex)

	return err
}

type NullableAttributeValueReversedIndex struct {
	value *AttributeValueReversedIndex
	isSet bool
}

func (v NullableAttributeValueReversedIndex) Get() *AttributeValueReversedIndex {
	return v.value
}

func (v *NullableAttributeValueReversedIndex) Set(val *AttributeValueReversedIndex) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeValueReversedIndex) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeValueReversedIndex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeValueReversedIndex(val *AttributeValueReversedIndex) *NullableAttributeValueReversedIndex {
	return &NullableAttributeValueReversedIndex{value: val, isSet: true}
}

func (v NullableAttributeValueReversedIndex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeValueReversedIndex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


