/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the AllowlistingStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllowlistingStatus{}

// AllowlistingStatus The status of service allowlisting for Content and Login.
type AllowlistingStatus struct {
	// Whether service allowlisting is enabled for Content.
	ContentEnabled bool `json:"contentEnabled"`
	// Whether service allowlisting is enabled for Login.
	LoginEnabled bool `json:"loginEnabled"`
}

// NewAllowlistingStatus instantiates a new AllowlistingStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowlistingStatus(contentEnabled bool, loginEnabled bool) *AllowlistingStatus {
	this := AllowlistingStatus{}
	this.ContentEnabled = contentEnabled
	this.LoginEnabled = loginEnabled
	return &this
}

// NewAllowlistingStatusWithDefaults instantiates a new AllowlistingStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowlistingStatusWithDefaults() *AllowlistingStatus {
	this := AllowlistingStatus{}
	return &this
}

// GetContentEnabled returns the ContentEnabled field value
func (o *AllowlistingStatus) GetContentEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ContentEnabled
}

// GetContentEnabledOk returns a tuple with the ContentEnabled field value
// and a boolean to check if the value has been set.
func (o *AllowlistingStatus) GetContentEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentEnabled, true
}

// SetContentEnabled sets field value
func (o *AllowlistingStatus) SetContentEnabled(v bool) {
	o.ContentEnabled = v
}

// GetLoginEnabled returns the LoginEnabled field value
func (o *AllowlistingStatus) GetLoginEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LoginEnabled
}

// GetLoginEnabledOk returns a tuple with the LoginEnabled field value
// and a boolean to check if the value has been set.
func (o *AllowlistingStatus) GetLoginEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginEnabled, true
}

// SetLoginEnabled sets field value
func (o *AllowlistingStatus) SetLoginEnabled(v bool) {
	o.LoginEnabled = v
}

func (o AllowlistingStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllowlistingStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contentEnabled"] = o.ContentEnabled
	toSerialize["loginEnabled"] = o.LoginEnabled
	return toSerialize, nil
}

type NullableAllowlistingStatus struct {
	value *AllowlistingStatus
	isSet bool
}

func (v NullableAllowlistingStatus) Get() *AllowlistingStatus {
	return v.value
}

func (v *NullableAllowlistingStatus) Set(val *AllowlistingStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowlistingStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowlistingStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowlistingStatus(val *AllowlistingStatus) *NullableAllowlistingStatus {
	return &NullableAllowlistingStatus{value: val, isSet: true}
}

func (v NullableAllowlistingStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowlistingStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


