/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// IngestBudgetDefinitionV2 struct for IngestBudgetDefinitionV2
type IngestBudgetDefinitionV2 struct {
	// Display name of the ingest budget.
	Name string `json:"name"`
	// A scope is a constraint that will be used to identify the messages on which budget needs to be applied. A scope is consists of key and value separated by =. The field must be enabled in the fields table. Value supports wildcard. e.g. _sourceCategory=*prod*payment*, cluster=kafka. If the scope is defined _sourceCategory=*nginx* in this budget will be applied on messages having fields _sourceCategory=prod/nginx, _sourceCategory=dev/nginx, or _sourceCategory=dev/nginx/error
	Scope string `json:"scope"`
	// Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit.
	CapacityBytes int64 `json:"capacityBytes"`
	// Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
	Timezone string `json:"timezone"`
	// Reset time of the ingest budget in HH:MM format.
	ResetTime string `json:"resetTime"`
	// Description of the ingest budget.
	Description *string `json:"description,omitempty"`
	// Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:   * `stopCollecting`   * `keepCollecting`
	Action string `json:"action"`
	// The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index.
	AuditThreshold *int32 `json:"auditThreshold,omitempty"`
}

// NewIngestBudgetDefinitionV2 instantiates a new IngestBudgetDefinitionV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestBudgetDefinitionV2(name string, scope string, capacityBytes int64, timezone string, resetTime string, action string) *IngestBudgetDefinitionV2 {
	this := IngestBudgetDefinitionV2{}
	this.Name = name
	this.Scope = scope
	this.CapacityBytes = capacityBytes
	this.Timezone = timezone
	this.ResetTime = resetTime
	this.Action = action
	return &this
}

// NewIngestBudgetDefinitionV2WithDefaults instantiates a new IngestBudgetDefinitionV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestBudgetDefinitionV2WithDefaults() *IngestBudgetDefinitionV2 {
	this := IngestBudgetDefinitionV2{}
	return &this
}

// GetName returns the Name field value
func (o *IngestBudgetDefinitionV2) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IngestBudgetDefinitionV2) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IngestBudgetDefinitionV2) SetName(v string) {
	o.Name = v
}

// GetScope returns the Scope field value
func (o *IngestBudgetDefinitionV2) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *IngestBudgetDefinitionV2) GetScopeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *IngestBudgetDefinitionV2) SetScope(v string) {
	o.Scope = v
}

// GetCapacityBytes returns the CapacityBytes field value
func (o *IngestBudgetDefinitionV2) GetCapacityBytes() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CapacityBytes
}

// GetCapacityBytesOk returns a tuple with the CapacityBytes field value
// and a boolean to check if the value has been set.
func (o *IngestBudgetDefinitionV2) GetCapacityBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CapacityBytes, true
}

// SetCapacityBytes sets field value
func (o *IngestBudgetDefinitionV2) SetCapacityBytes(v int64) {
	o.CapacityBytes = v
}

// GetTimezone returns the Timezone field value
func (o *IngestBudgetDefinitionV2) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *IngestBudgetDefinitionV2) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *IngestBudgetDefinitionV2) SetTimezone(v string) {
	o.Timezone = v
}

// GetResetTime returns the ResetTime field value
func (o *IngestBudgetDefinitionV2) GetResetTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResetTime
}

// GetResetTimeOk returns a tuple with the ResetTime field value
// and a boolean to check if the value has been set.
func (o *IngestBudgetDefinitionV2) GetResetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResetTime, true
}

// SetResetTime sets field value
func (o *IngestBudgetDefinitionV2) SetResetTime(v string) {
	o.ResetTime = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IngestBudgetDefinitionV2) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestBudgetDefinitionV2) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IngestBudgetDefinitionV2) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IngestBudgetDefinitionV2) SetDescription(v string) {
	o.Description = &v
}

// GetAction returns the Action field value
func (o *IngestBudgetDefinitionV2) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *IngestBudgetDefinitionV2) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *IngestBudgetDefinitionV2) SetAction(v string) {
	o.Action = v
}

// GetAuditThreshold returns the AuditThreshold field value if set, zero value otherwise.
func (o *IngestBudgetDefinitionV2) GetAuditThreshold() int32 {
	if o == nil || o.AuditThreshold == nil {
		var ret int32
		return ret
	}
	return *o.AuditThreshold
}

// GetAuditThresholdOk returns a tuple with the AuditThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestBudgetDefinitionV2) GetAuditThresholdOk() (*int32, bool) {
	if o == nil || o.AuditThreshold == nil {
		return nil, false
	}
	return o.AuditThreshold, true
}

// HasAuditThreshold returns a boolean if a field has been set.
func (o *IngestBudgetDefinitionV2) HasAuditThreshold() bool {
	if o != nil && o.AuditThreshold != nil {
		return true
	}

	return false
}

// SetAuditThreshold gets a reference to the given int32 and assigns it to the AuditThreshold field.
func (o *IngestBudgetDefinitionV2) SetAuditThreshold(v int32) {
	o.AuditThreshold = &v
}

func (o IngestBudgetDefinitionV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["scope"] = o.Scope
	}
	if true {
		toSerialize["capacityBytes"] = o.CapacityBytes
	}
	if true {
		toSerialize["timezone"] = o.Timezone
	}
	if true {
		toSerialize["resetTime"] = o.ResetTime
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["action"] = o.Action
	}
	if o.AuditThreshold != nil {
		toSerialize["auditThreshold"] = o.AuditThreshold
	}
	return json.Marshal(toSerialize)
}

type NullableIngestBudgetDefinitionV2 struct {
	value *IngestBudgetDefinitionV2
	isSet bool
}

func (v NullableIngestBudgetDefinitionV2) Get() *IngestBudgetDefinitionV2 {
	return v.value
}

func (v *NullableIngestBudgetDefinitionV2) Set(val *IngestBudgetDefinitionV2) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestBudgetDefinitionV2) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestBudgetDefinitionV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestBudgetDefinitionV2(val *IngestBudgetDefinitionV2) *NullableIngestBudgetDefinitionV2 {
	return &NullableIngestBudgetDefinitionV2{value: val, isSet: true}
}

func (v NullableIngestBudgetDefinitionV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestBudgetDefinitionV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


