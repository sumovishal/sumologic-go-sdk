/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the IntegerTracingValueAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegerTracingValueAllOf{}

// IntegerTracingValueAllOf struct for IntegerTracingValueAllOf
type IntegerTracingValueAllOf struct {
	Value int64 `json:"value"`
}

// NewIntegerTracingValueAllOf instantiates a new IntegerTracingValueAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegerTracingValueAllOf(value int64) *IntegerTracingValueAllOf {
	this := IntegerTracingValueAllOf{}
	this.Value = value
	return &this
}

// NewIntegerTracingValueAllOfWithDefaults instantiates a new IntegerTracingValueAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegerTracingValueAllOfWithDefaults() *IntegerTracingValueAllOf {
	this := IntegerTracingValueAllOf{}
	return &this
}

// GetValue returns the Value field value
func (o *IntegerTracingValueAllOf) GetValue() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *IntegerTracingValueAllOf) GetValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *IntegerTracingValueAllOf) SetValue(v int64) {
	o.Value = v
}

func (o IntegerTracingValueAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegerTracingValueAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableIntegerTracingValueAllOf struct {
	value *IntegerTracingValueAllOf
	isSet bool
}

func (v NullableIntegerTracingValueAllOf) Get() *IntegerTracingValueAllOf {
	return v.value
}

func (v *NullableIntegerTracingValueAllOf) Set(val *IntegerTracingValueAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegerTracingValueAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegerTracingValueAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegerTracingValueAllOf(val *IntegerTracingValueAllOf) *NullableIntegerTracingValueAllOf {
	return &NullableIntegerTracingValueAllOf{value: val, isSet: true}
}

func (v NullableIntegerTracingValueAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegerTracingValueAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


