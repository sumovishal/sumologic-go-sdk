/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the PaginatedOTCollectorsRequestFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedOTCollectorsRequestFilters{}

// PaginatedOTCollectorsRequestFilters parameter which is used for filtering.
type PaginatedOTCollectorsRequestFilters struct {
	// tags associated with the OT collector
	Tags [][]OtTag `json:"tags,omitempty"`
	// Name of the Operating System.
	Os NullableString `json:"os,omitempty"`
	VersionRange *VersionRange `json:"versionRange,omitempty"`
	// alive Status of the OT Collector based on heartbeat.
	Alive NullableBool `json:"alive,omitempty"`
	// Management Status of the OT Collector based on if it is remotely or locally managed.
	IsRemotelyManaged NullableBool `json:"isRemotelyManaged,omitempty"`
}

// NewPaginatedOTCollectorsRequestFilters instantiates a new PaginatedOTCollectorsRequestFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedOTCollectorsRequestFilters() *PaginatedOTCollectorsRequestFilters {
	this := PaginatedOTCollectorsRequestFilters{}
	return &this
}

// NewPaginatedOTCollectorsRequestFiltersWithDefaults instantiates a new PaginatedOTCollectorsRequestFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedOTCollectorsRequestFiltersWithDefaults() *PaginatedOTCollectorsRequestFilters {
	this := PaginatedOTCollectorsRequestFilters{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PaginatedOTCollectorsRequestFilters) GetTags() [][]OtTag {
	if o == nil || IsNil(o.Tags) {
		var ret [][]OtTag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedOTCollectorsRequestFilters) GetTagsOk() ([][]OtTag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PaginatedOTCollectorsRequestFilters) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given [][]OtTag and assigns it to the Tags field.
func (o *PaginatedOTCollectorsRequestFilters) SetTags(v [][]OtTag) {
	o.Tags = v
}

// GetOs returns the Os field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginatedOTCollectorsRequestFilters) GetOs() string {
	if o == nil || IsNil(o.Os.Get()) {
		var ret string
		return ret
	}
	return *o.Os.Get()
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginatedOTCollectorsRequestFilters) GetOsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Os.Get(), o.Os.IsSet()
}

// HasOs returns a boolean if a field has been set.
func (o *PaginatedOTCollectorsRequestFilters) HasOs() bool {
	if o != nil && o.Os.IsSet() {
		return true
	}

	return false
}

// SetOs gets a reference to the given NullableString and assigns it to the Os field.
func (o *PaginatedOTCollectorsRequestFilters) SetOs(v string) {
	o.Os.Set(&v)
}
// SetOsNil sets the value for Os to be an explicit nil
func (o *PaginatedOTCollectorsRequestFilters) SetOsNil() {
	o.Os.Set(nil)
}

// UnsetOs ensures that no value is present for Os, not even an explicit nil
func (o *PaginatedOTCollectorsRequestFilters) UnsetOs() {
	o.Os.Unset()
}

// GetVersionRange returns the VersionRange field value if set, zero value otherwise.
func (o *PaginatedOTCollectorsRequestFilters) GetVersionRange() VersionRange {
	if o == nil || IsNil(o.VersionRange) {
		var ret VersionRange
		return ret
	}
	return *o.VersionRange
}

// GetVersionRangeOk returns a tuple with the VersionRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedOTCollectorsRequestFilters) GetVersionRangeOk() (*VersionRange, bool) {
	if o == nil || IsNil(o.VersionRange) {
		return nil, false
	}
	return o.VersionRange, true
}

// HasVersionRange returns a boolean if a field has been set.
func (o *PaginatedOTCollectorsRequestFilters) HasVersionRange() bool {
	if o != nil && !IsNil(o.VersionRange) {
		return true
	}

	return false
}

// SetVersionRange gets a reference to the given VersionRange and assigns it to the VersionRange field.
func (o *PaginatedOTCollectorsRequestFilters) SetVersionRange(v VersionRange) {
	o.VersionRange = &v
}

// GetAlive returns the Alive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginatedOTCollectorsRequestFilters) GetAlive() bool {
	if o == nil || IsNil(o.Alive.Get()) {
		var ret bool
		return ret
	}
	return *o.Alive.Get()
}

// GetAliveOk returns a tuple with the Alive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginatedOTCollectorsRequestFilters) GetAliveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Alive.Get(), o.Alive.IsSet()
}

// HasAlive returns a boolean if a field has been set.
func (o *PaginatedOTCollectorsRequestFilters) HasAlive() bool {
	if o != nil && o.Alive.IsSet() {
		return true
	}

	return false
}

// SetAlive gets a reference to the given NullableBool and assigns it to the Alive field.
func (o *PaginatedOTCollectorsRequestFilters) SetAlive(v bool) {
	o.Alive.Set(&v)
}
// SetAliveNil sets the value for Alive to be an explicit nil
func (o *PaginatedOTCollectorsRequestFilters) SetAliveNil() {
	o.Alive.Set(nil)
}

// UnsetAlive ensures that no value is present for Alive, not even an explicit nil
func (o *PaginatedOTCollectorsRequestFilters) UnsetAlive() {
	o.Alive.Unset()
}

// GetIsRemotelyManaged returns the IsRemotelyManaged field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginatedOTCollectorsRequestFilters) GetIsRemotelyManaged() bool {
	if o == nil || IsNil(o.IsRemotelyManaged.Get()) {
		var ret bool
		return ret
	}
	return *o.IsRemotelyManaged.Get()
}

// GetIsRemotelyManagedOk returns a tuple with the IsRemotelyManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginatedOTCollectorsRequestFilters) GetIsRemotelyManagedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsRemotelyManaged.Get(), o.IsRemotelyManaged.IsSet()
}

// HasIsRemotelyManaged returns a boolean if a field has been set.
func (o *PaginatedOTCollectorsRequestFilters) HasIsRemotelyManaged() bool {
	if o != nil && o.IsRemotelyManaged.IsSet() {
		return true
	}

	return false
}

// SetIsRemotelyManaged gets a reference to the given NullableBool and assigns it to the IsRemotelyManaged field.
func (o *PaginatedOTCollectorsRequestFilters) SetIsRemotelyManaged(v bool) {
	o.IsRemotelyManaged.Set(&v)
}
// SetIsRemotelyManagedNil sets the value for IsRemotelyManaged to be an explicit nil
func (o *PaginatedOTCollectorsRequestFilters) SetIsRemotelyManagedNil() {
	o.IsRemotelyManaged.Set(nil)
}

// UnsetIsRemotelyManaged ensures that no value is present for IsRemotelyManaged, not even an explicit nil
func (o *PaginatedOTCollectorsRequestFilters) UnsetIsRemotelyManaged() {
	o.IsRemotelyManaged.Unset()
}

func (o PaginatedOTCollectorsRequestFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedOTCollectorsRequestFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if o.Os.IsSet() {
		toSerialize["os"] = o.Os.Get()
	}
	if !IsNil(o.VersionRange) {
		toSerialize["versionRange"] = o.VersionRange
	}
	if o.Alive.IsSet() {
		toSerialize["alive"] = o.Alive.Get()
	}
	if o.IsRemotelyManaged.IsSet() {
		toSerialize["isRemotelyManaged"] = o.IsRemotelyManaged.Get()
	}
	return toSerialize, nil
}

type NullablePaginatedOTCollectorsRequestFilters struct {
	value *PaginatedOTCollectorsRequestFilters
	isSet bool
}

func (v NullablePaginatedOTCollectorsRequestFilters) Get() *PaginatedOTCollectorsRequestFilters {
	return v.value
}

func (v *NullablePaginatedOTCollectorsRequestFilters) Set(val *PaginatedOTCollectorsRequestFilters) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedOTCollectorsRequestFilters) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedOTCollectorsRequestFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedOTCollectorsRequestFilters(val *PaginatedOTCollectorsRequestFilters) *NullablePaginatedOTCollectorsRequestFilters {
	return &NullablePaginatedOTCollectorsRequestFilters{value: val, isSet: true}
}

func (v NullablePaginatedOTCollectorsRequestFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedOTCollectorsRequestFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


