/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ScheduledViewAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledViewAllOf{}

// ScheduledViewAllOf struct for ScheduledViewAllOf
type ScheduledViewAllOf struct {
	// Identifier for the scheduled view.
	Id string `json:"id"`
	// The `id` of the Index where the output from Scheduled view is stored.
	IndexId *string `json:"indexId,omitempty"`
	// Creation timestamp in UTC.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
	ModifiedAt *time.Time `json:"modifiedAt,omitempty"`
	// If the scheduled view is created by OptimizeIt.
	CreatedByOptimizeIt *bool `json:"createdByOptimizeIt,omitempty"`
	// Errors related to the scheduled view.
	Error *string `json:"error,omitempty"`
	// Status of the scheduled view.
	Status *string `json:"status,omitempty"`
	// Total storage consumed by the scheduled view.
	TotalBytes *int64 `json:"totalBytes,omitempty"`
	// Total number of messages for the scheduled view.
	TotalMessageCount *int64 `json:"totalMessageCount,omitempty"`
	// Identifier of the user who created the scheduled view.
	CreatedBy *string `json:"createdBy,omitempty"`
	// Identifier of the user who last modified the resource.
	ModifiedBy *string `json:"modifiedBy,omitempty"`
	// List of the different units of filled ranges since the autoview has been created.
	FilledRanges []FilledRange `json:"filledRanges,omitempty"`
}

// NewScheduledViewAllOf instantiates a new ScheduledViewAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledViewAllOf(id string) *ScheduledViewAllOf {
	this := ScheduledViewAllOf{}
	this.Id = id
	return &this
}

// NewScheduledViewAllOfWithDefaults instantiates a new ScheduledViewAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledViewAllOfWithDefaults() *ScheduledViewAllOf {
	this := ScheduledViewAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *ScheduledViewAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ScheduledViewAllOf) SetId(v string) {
	o.Id = v
}

// GetIndexId returns the IndexId field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetIndexId() string {
	if o == nil || IsNil(o.IndexId) {
		var ret string
		return ret
	}
	return *o.IndexId
}

// GetIndexIdOk returns a tuple with the IndexId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetIndexIdOk() (*string, bool) {
	if o == nil || IsNil(o.IndexId) {
		return nil, false
	}
	return o.IndexId, true
}

// HasIndexId returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasIndexId() bool {
	if o != nil && !IsNil(o.IndexId) {
		return true
	}

	return false
}

// SetIndexId gets a reference to the given string and assigns it to the IndexId field.
func (o *ScheduledViewAllOf) SetIndexId(v string) {
	o.IndexId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ScheduledViewAllOf) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetModifiedAt() time.Time {
	if o == nil || IsNil(o.ModifiedAt) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedAt) {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasModifiedAt() bool {
	if o != nil && !IsNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *ScheduledViewAllOf) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

// GetCreatedByOptimizeIt returns the CreatedByOptimizeIt field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetCreatedByOptimizeIt() bool {
	if o == nil || IsNil(o.CreatedByOptimizeIt) {
		var ret bool
		return ret
	}
	return *o.CreatedByOptimizeIt
}

// GetCreatedByOptimizeItOk returns a tuple with the CreatedByOptimizeIt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetCreatedByOptimizeItOk() (*bool, bool) {
	if o == nil || IsNil(o.CreatedByOptimizeIt) {
		return nil, false
	}
	return o.CreatedByOptimizeIt, true
}

// HasCreatedByOptimizeIt returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasCreatedByOptimizeIt() bool {
	if o != nil && !IsNil(o.CreatedByOptimizeIt) {
		return true
	}

	return false
}

// SetCreatedByOptimizeIt gets a reference to the given bool and assigns it to the CreatedByOptimizeIt field.
func (o *ScheduledViewAllOf) SetCreatedByOptimizeIt(v bool) {
	o.CreatedByOptimizeIt = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ScheduledViewAllOf) SetError(v string) {
	o.Error = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ScheduledViewAllOf) SetStatus(v string) {
	o.Status = &v
}

// GetTotalBytes returns the TotalBytes field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetTotalBytes() int64 {
	if o == nil || IsNil(o.TotalBytes) {
		var ret int64
		return ret
	}
	return *o.TotalBytes
}

// GetTotalBytesOk returns a tuple with the TotalBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetTotalBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalBytes) {
		return nil, false
	}
	return o.TotalBytes, true
}

// HasTotalBytes returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasTotalBytes() bool {
	if o != nil && !IsNil(o.TotalBytes) {
		return true
	}

	return false
}

// SetTotalBytes gets a reference to the given int64 and assigns it to the TotalBytes field.
func (o *ScheduledViewAllOf) SetTotalBytes(v int64) {
	o.TotalBytes = &v
}

// GetTotalMessageCount returns the TotalMessageCount field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetTotalMessageCount() int64 {
	if o == nil || IsNil(o.TotalMessageCount) {
		var ret int64
		return ret
	}
	return *o.TotalMessageCount
}

// GetTotalMessageCountOk returns a tuple with the TotalMessageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetTotalMessageCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalMessageCount) {
		return nil, false
	}
	return o.TotalMessageCount, true
}

// HasTotalMessageCount returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasTotalMessageCount() bool {
	if o != nil && !IsNil(o.TotalMessageCount) {
		return true
	}

	return false
}

// SetTotalMessageCount gets a reference to the given int64 and assigns it to the TotalMessageCount field.
func (o *ScheduledViewAllOf) SetTotalMessageCount(v int64) {
	o.TotalMessageCount = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *ScheduledViewAllOf) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *ScheduledViewAllOf) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetFilledRanges returns the FilledRanges field value if set, zero value otherwise.
func (o *ScheduledViewAllOf) GetFilledRanges() []FilledRange {
	if o == nil || IsNil(o.FilledRanges) {
		var ret []FilledRange
		return ret
	}
	return o.FilledRanges
}

// GetFilledRangesOk returns a tuple with the FilledRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledViewAllOf) GetFilledRangesOk() ([]FilledRange, bool) {
	if o == nil || IsNil(o.FilledRanges) {
		return nil, false
	}
	return o.FilledRanges, true
}

// HasFilledRanges returns a boolean if a field has been set.
func (o *ScheduledViewAllOf) HasFilledRanges() bool {
	if o != nil && !IsNil(o.FilledRanges) {
		return true
	}

	return false
}

// SetFilledRanges gets a reference to the given []FilledRange and assigns it to the FilledRanges field.
func (o *ScheduledViewAllOf) SetFilledRanges(v []FilledRange) {
	o.FilledRanges = v
}

func (o ScheduledViewAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledViewAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.IndexId) {
		toSerialize["indexId"] = o.IndexId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.ModifiedAt) {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	if !IsNil(o.CreatedByOptimizeIt) {
		toSerialize["createdByOptimizeIt"] = o.CreatedByOptimizeIt
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TotalBytes) {
		toSerialize["totalBytes"] = o.TotalBytes
	}
	if !IsNil(o.TotalMessageCount) {
		toSerialize["totalMessageCount"] = o.TotalMessageCount
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if !IsNil(o.FilledRanges) {
		toSerialize["filledRanges"] = o.FilledRanges
	}
	return toSerialize, nil
}

type NullableScheduledViewAllOf struct {
	value *ScheduledViewAllOf
	isSet bool
}

func (v NullableScheduledViewAllOf) Get() *ScheduledViewAllOf {
	return v.value
}

func (v *NullableScheduledViewAllOf) Set(val *ScheduledViewAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledViewAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledViewAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledViewAllOf(val *ScheduledViewAllOf) *NullableScheduledViewAllOf {
	return &NullableScheduledViewAllOf{value: val, isSet: true}
}

func (v NullableScheduledViewAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledViewAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


