/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the AnomalyDataPointsCountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnomalyDataPointsCountRequest{}

// AnomalyDataPointsCountRequest Monitor query and time range to calculate the number of data points.
type AnomalyDataPointsCountRequest struct {
	// The relative time range of the monitor. Valid values of time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`, `-12h`, or `-24h`.
	RelativeTimeRange string `json:"relativeTimeRange"`
	// All queries from the monitor.
	Queries []MonitorQuery `json:"queries"`
}

// NewAnomalyDataPointsCountRequest instantiates a new AnomalyDataPointsCountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnomalyDataPointsCountRequest(relativeTimeRange string, queries []MonitorQuery) *AnomalyDataPointsCountRequest {
	this := AnomalyDataPointsCountRequest{}
	this.RelativeTimeRange = relativeTimeRange
	this.Queries = queries
	return &this
}

// NewAnomalyDataPointsCountRequestWithDefaults instantiates a new AnomalyDataPointsCountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnomalyDataPointsCountRequestWithDefaults() *AnomalyDataPointsCountRequest {
	this := AnomalyDataPointsCountRequest{}
	return &this
}

// GetRelativeTimeRange returns the RelativeTimeRange field value
func (o *AnomalyDataPointsCountRequest) GetRelativeTimeRange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelativeTimeRange
}

// GetRelativeTimeRangeOk returns a tuple with the RelativeTimeRange field value
// and a boolean to check if the value has been set.
func (o *AnomalyDataPointsCountRequest) GetRelativeTimeRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelativeTimeRange, true
}

// SetRelativeTimeRange sets field value
func (o *AnomalyDataPointsCountRequest) SetRelativeTimeRange(v string) {
	o.RelativeTimeRange = v
}

// GetQueries returns the Queries field value
func (o *AnomalyDataPointsCountRequest) GetQueries() []MonitorQuery {
	if o == nil {
		var ret []MonitorQuery
		return ret
	}

	return o.Queries
}

// GetQueriesOk returns a tuple with the Queries field value
// and a boolean to check if the value has been set.
func (o *AnomalyDataPointsCountRequest) GetQueriesOk() ([]MonitorQuery, bool) {
	if o == nil {
		return nil, false
	}
	return o.Queries, true
}

// SetQueries sets field value
func (o *AnomalyDataPointsCountRequest) SetQueries(v []MonitorQuery) {
	o.Queries = v
}

func (o AnomalyDataPointsCountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnomalyDataPointsCountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["relativeTimeRange"] = o.RelativeTimeRange
	toSerialize["queries"] = o.Queries
	return toSerialize, nil
}

type NullableAnomalyDataPointsCountRequest struct {
	value *AnomalyDataPointsCountRequest
	isSet bool
}

func (v NullableAnomalyDataPointsCountRequest) Get() *AnomalyDataPointsCountRequest {
	return v.value
}

func (v *NullableAnomalyDataPointsCountRequest) Set(val *AnomalyDataPointsCountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAnomalyDataPointsCountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAnomalyDataPointsCountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnomalyDataPointsCountRequest(val *AnomalyDataPointsCountRequest) *NullableAnomalyDataPointsCountRequest {
	return &NullableAnomalyDataPointsCountRequest{value: val, isSet: true}
}

func (v NullableAnomalyDataPointsCountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnomalyDataPointsCountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


