/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the AggregationQueryStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AggregationQueryStatusResponse{}

// AggregationQueryStatusResponse struct for AggregationQueryStatusResponse
type AggregationQueryStatusResponse struct {
	// A list of statuses on a per query row basis.
	QueryRows []AggregationQueryRowStatus `json:"queryRows"`
	// Status of the query. Possible values: `Processing`, `Finished`, `Error`, `Canceled`.
	Status string `json:"status"`
	// Descriptive message of the status.
	StatusMessage *string `json:"statusMessage,omitempty"`
}

// NewAggregationQueryStatusResponse instantiates a new AggregationQueryStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregationQueryStatusResponse(queryRows []AggregationQueryRowStatus, status string) *AggregationQueryStatusResponse {
	this := AggregationQueryStatusResponse{}
	this.QueryRows = queryRows
	this.Status = status
	return &this
}

// NewAggregationQueryStatusResponseWithDefaults instantiates a new AggregationQueryStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregationQueryStatusResponseWithDefaults() *AggregationQueryStatusResponse {
	this := AggregationQueryStatusResponse{}
	return &this
}

// GetQueryRows returns the QueryRows field value
func (o *AggregationQueryStatusResponse) GetQueryRows() []AggregationQueryRowStatus {
	if o == nil {
		var ret []AggregationQueryRowStatus
		return ret
	}

	return o.QueryRows
}

// GetQueryRowsOk returns a tuple with the QueryRows field value
// and a boolean to check if the value has been set.
func (o *AggregationQueryStatusResponse) GetQueryRowsOk() ([]AggregationQueryRowStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.QueryRows, true
}

// SetQueryRows sets field value
func (o *AggregationQueryStatusResponse) SetQueryRows(v []AggregationQueryRowStatus) {
	o.QueryRows = v
}

// GetStatus returns the Status field value
func (o *AggregationQueryStatusResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AggregationQueryStatusResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AggregationQueryStatusResponse) SetStatus(v string) {
	o.Status = v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *AggregationQueryStatusResponse) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregationQueryStatusResponse) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *AggregationQueryStatusResponse) HasStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *AggregationQueryStatusResponse) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

func (o AggregationQueryStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AggregationQueryStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["queryRows"] = o.QueryRows
	toSerialize["status"] = o.Status
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	return toSerialize, nil
}

type NullableAggregationQueryStatusResponse struct {
	value *AggregationQueryStatusResponse
	isSet bool
}

func (v NullableAggregationQueryStatusResponse) Get() *AggregationQueryStatusResponse {
	return v.value
}

func (v *NullableAggregationQueryStatusResponse) Set(val *AggregationQueryStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregationQueryStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregationQueryStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregationQueryStatusResponse(val *AggregationQueryStatusResponse) *NullableAggregationQueryStatusResponse {
	return &NullableAggregationQueryStatusResponse{value: val, isSet: true}
}

func (v NullableAggregationQueryStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregationQueryStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


