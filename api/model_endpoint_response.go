/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// EndpointResponse Endpoint response object.
type EndpointResponse struct {
	// Identifier of endpoint.
	Id string `json:"id"`
	// Unique name of endpoint.
	Name string `json:"name"`
	// Address of endpoint.
	Url string `json:"url"`
	// Schema of the input table to endpoint.
	InputSchema string `json:"inputSchema"`
	// Schema of the output table from endpoint.
	OutputSchema string `json:"outputSchema"`
}

// NewEndpointResponse instantiates a new EndpointResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointResponse(id string, name string, url string, inputSchema string, outputSchema string) *EndpointResponse {
	this := EndpointResponse{}
	this.Id = id
	this.Name = name
	this.Url = url
	this.InputSchema = inputSchema
	this.OutputSchema = outputSchema
	return &this
}

// NewEndpointResponseWithDefaults instantiates a new EndpointResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointResponseWithDefaults() *EndpointResponse {
	this := EndpointResponse{}
	return &this
}

// GetId returns the Id field value
func (o *EndpointResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EndpointResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EndpointResponse) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *EndpointResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EndpointResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EndpointResponse) SetName(v string) {
	o.Name = v
}

// GetUrl returns the Url field value
func (o *EndpointResponse) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *EndpointResponse) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *EndpointResponse) SetUrl(v string) {
	o.Url = v
}

// GetInputSchema returns the InputSchema field value
func (o *EndpointResponse) GetInputSchema() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InputSchema
}

// GetInputSchemaOk returns a tuple with the InputSchema field value
// and a boolean to check if the value has been set.
func (o *EndpointResponse) GetInputSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputSchema, true
}

// SetInputSchema sets field value
func (o *EndpointResponse) SetInputSchema(v string) {
	o.InputSchema = v
}

// GetOutputSchema returns the OutputSchema field value
func (o *EndpointResponse) GetOutputSchema() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputSchema
}

// GetOutputSchemaOk returns a tuple with the OutputSchema field value
// and a boolean to check if the value has been set.
func (o *EndpointResponse) GetOutputSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputSchema, true
}

// SetOutputSchema sets field value
func (o *EndpointResponse) SetOutputSchema(v string) {
	o.OutputSchema = v
}

func (o EndpointResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["inputSchema"] = o.InputSchema
	}
	if true {
		toSerialize["outputSchema"] = o.OutputSchema
	}
	return json.Marshal(toSerialize)
}

type NullableEndpointResponse struct {
	value *EndpointResponse
	isSet bool
}

func (v NullableEndpointResponse) Get() *EndpointResponse {
	return v.value
}

func (v *NullableEndpointResponse) Set(val *EndpointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointResponse(val *EndpointResponse) *NullableEndpointResponse {
	return &NullableEndpointResponse{value: val, isSet: true}
}

func (v NullableEndpointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


