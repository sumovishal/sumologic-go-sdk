/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the EventExtractionRuleWithDetailsAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventExtractionRuleWithDetailsAllOf{}

// EventExtractionRuleWithDetailsAllOf struct for EventExtractionRuleWithDetailsAllOf
type EventExtractionRuleWithDetailsAllOf struct {
	// Id of the event extraction rule.
	Id string `json:"id"`
	// Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Identifier of the user who created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`
	// Last modification timestamp in UTC.
	ModifiedAt *time.Time `json:"modifiedAt,omitempty"`
	// Identifier of the user who last modified the resource.
	ModifiedBy *string `json:"modifiedBy,omitempty"`
}

// NewEventExtractionRuleWithDetailsAllOf instantiates a new EventExtractionRuleWithDetailsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventExtractionRuleWithDetailsAllOf(id string) *EventExtractionRuleWithDetailsAllOf {
	this := EventExtractionRuleWithDetailsAllOf{}
	this.Id = id
	return &this
}

// NewEventExtractionRuleWithDetailsAllOfWithDefaults instantiates a new EventExtractionRuleWithDetailsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventExtractionRuleWithDetailsAllOfWithDefaults() *EventExtractionRuleWithDetailsAllOf {
	this := EventExtractionRuleWithDetailsAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *EventExtractionRuleWithDetailsAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EventExtractionRuleWithDetailsAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EventExtractionRuleWithDetailsAllOf) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *EventExtractionRuleWithDetailsAllOf) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventExtractionRuleWithDetailsAllOf) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *EventExtractionRuleWithDetailsAllOf) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *EventExtractionRuleWithDetailsAllOf) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *EventExtractionRuleWithDetailsAllOf) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventExtractionRuleWithDetailsAllOf) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *EventExtractionRuleWithDetailsAllOf) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *EventExtractionRuleWithDetailsAllOf) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *EventExtractionRuleWithDetailsAllOf) GetModifiedAt() time.Time {
	if o == nil || IsNil(o.ModifiedAt) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventExtractionRuleWithDetailsAllOf) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedAt) {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *EventExtractionRuleWithDetailsAllOf) HasModifiedAt() bool {
	if o != nil && !IsNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *EventExtractionRuleWithDetailsAllOf) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *EventExtractionRuleWithDetailsAllOf) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventExtractionRuleWithDetailsAllOf) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *EventExtractionRuleWithDetailsAllOf) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *EventExtractionRuleWithDetailsAllOf) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

func (o EventExtractionRuleWithDetailsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventExtractionRuleWithDetailsAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.ModifiedAt) {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	return toSerialize, nil
}

type NullableEventExtractionRuleWithDetailsAllOf struct {
	value *EventExtractionRuleWithDetailsAllOf
	isSet bool
}

func (v NullableEventExtractionRuleWithDetailsAllOf) Get() *EventExtractionRuleWithDetailsAllOf {
	return v.value
}

func (v *NullableEventExtractionRuleWithDetailsAllOf) Set(val *EventExtractionRuleWithDetailsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEventExtractionRuleWithDetailsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEventExtractionRuleWithDetailsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventExtractionRuleWithDetailsAllOf(val *EventExtractionRuleWithDetailsAllOf) *NullableEventExtractionRuleWithDetailsAllOf {
	return &NullableEventExtractionRuleWithDetailsAllOf{value: val, isSet: true}
}

func (v NullableEventExtractionRuleWithDetailsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventExtractionRuleWithDetailsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


