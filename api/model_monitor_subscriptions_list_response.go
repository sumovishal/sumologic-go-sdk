/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MonitorSubscriptionsListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorSubscriptionsListResponse{}

// MonitorSubscriptionsListResponse List of existing subscriptions.
type MonitorSubscriptionsListResponse struct {
	// List of existing subscriptions.
	Subscriptions []MonitorSubscription `json:"subscriptions"`
	// If true, the list contains all existing subscriptions.
	Exhaustive bool `json:"exhaustive"`
}

// NewMonitorSubscriptionsListResponse instantiates a new MonitorSubscriptionsListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorSubscriptionsListResponse(subscriptions []MonitorSubscription, exhaustive bool) *MonitorSubscriptionsListResponse {
	this := MonitorSubscriptionsListResponse{}
	this.Subscriptions = subscriptions
	this.Exhaustive = exhaustive
	return &this
}

// NewMonitorSubscriptionsListResponseWithDefaults instantiates a new MonitorSubscriptionsListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorSubscriptionsListResponseWithDefaults() *MonitorSubscriptionsListResponse {
	this := MonitorSubscriptionsListResponse{}
	return &this
}

// GetSubscriptions returns the Subscriptions field value
func (o *MonitorSubscriptionsListResponse) GetSubscriptions() []MonitorSubscription {
	if o == nil {
		var ret []MonitorSubscription
		return ret
	}

	return o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value
// and a boolean to check if the value has been set.
func (o *MonitorSubscriptionsListResponse) GetSubscriptionsOk() ([]MonitorSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subscriptions, true
}

// SetSubscriptions sets field value
func (o *MonitorSubscriptionsListResponse) SetSubscriptions(v []MonitorSubscription) {
	o.Subscriptions = v
}

// GetExhaustive returns the Exhaustive field value
func (o *MonitorSubscriptionsListResponse) GetExhaustive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Exhaustive
}

// GetExhaustiveOk returns a tuple with the Exhaustive field value
// and a boolean to check if the value has been set.
func (o *MonitorSubscriptionsListResponse) GetExhaustiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Exhaustive, true
}

// SetExhaustive sets field value
func (o *MonitorSubscriptionsListResponse) SetExhaustive(v bool) {
	o.Exhaustive = v
}

func (o MonitorSubscriptionsListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorSubscriptionsListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscriptions"] = o.Subscriptions
	toSerialize["exhaustive"] = o.Exhaustive
	return toSerialize, nil
}

type NullableMonitorSubscriptionsListResponse struct {
	value *MonitorSubscriptionsListResponse
	isSet bool
}

func (v NullableMonitorSubscriptionsListResponse) Get() *MonitorSubscriptionsListResponse {
	return v.value
}

func (v *NullableMonitorSubscriptionsListResponse) Set(val *MonitorSubscriptionsListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorSubscriptionsListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorSubscriptionsListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorSubscriptionsListResponse(val *MonitorSubscriptionsListResponse) *NullableMonitorSubscriptionsListResponse {
	return &NullableMonitorSubscriptionsListResponse{value: val, isSet: true}
}

func (v NullableMonitorSubscriptionsListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorSubscriptionsListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


