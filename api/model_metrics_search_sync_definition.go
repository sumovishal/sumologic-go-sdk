/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// MetricsSearchSyncDefinition struct for MetricsSearchSyncDefinition
type MetricsSearchSyncDefinition struct {
	ContentSyncDefinition
	TimeRange ResolvableTimeRange `json:"timeRange"`
	// Description of the metrics search page.
	Description *string `json:"description,omitempty"`
	// Queries of the metrics search page.
	Queries []Query `json:"queries"`
	// Visual settings of the metrics search page. Must be a string representing a valid JSON object. 
	VisualSettings *string `json:"visualSettings,omitempty"`
}

// NewMetricsSearchSyncDefinition instantiates a new MetricsSearchSyncDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsSearchSyncDefinition(timeRange ResolvableTimeRange, queries []Query, type_ string, name string) *MetricsSearchSyncDefinition {
	this := MetricsSearchSyncDefinition{}
	this.Type = type_
	this.Name = name
	this.TimeRange = timeRange
	this.Queries = queries
	return &this
}

// NewMetricsSearchSyncDefinitionWithDefaults instantiates a new MetricsSearchSyncDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsSearchSyncDefinitionWithDefaults() *MetricsSearchSyncDefinition {
	this := MetricsSearchSyncDefinition{}
	return &this
}

// GetTimeRange returns the TimeRange field value
func (o *MetricsSearchSyncDefinition) GetTimeRange() ResolvableTimeRange {
	if o == nil {
		var ret ResolvableTimeRange
		return ret
	}

	return o.TimeRange
}

// GetTimeRangeOk returns a tuple with the TimeRange field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchSyncDefinition) GetTimeRangeOk() (*ResolvableTimeRange, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeRange, true
}

// SetTimeRange sets field value
func (o *MetricsSearchSyncDefinition) SetTimeRange(v ResolvableTimeRange) {
	o.TimeRange = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MetricsSearchSyncDefinition) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchSyncDefinition) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MetricsSearchSyncDefinition) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MetricsSearchSyncDefinition) SetDescription(v string) {
	o.Description = &v
}

// GetQueries returns the Queries field value
func (o *MetricsSearchSyncDefinition) GetQueries() []Query {
	if o == nil {
		var ret []Query
		return ret
	}

	return o.Queries
}

// GetQueriesOk returns a tuple with the Queries field value
// and a boolean to check if the value has been set.
func (o *MetricsSearchSyncDefinition) GetQueriesOk() ([]Query, bool) {
	if o == nil {
		return nil, false
	}
	return o.Queries, true
}

// SetQueries sets field value
func (o *MetricsSearchSyncDefinition) SetQueries(v []Query) {
	o.Queries = v
}

// GetVisualSettings returns the VisualSettings field value if set, zero value otherwise.
func (o *MetricsSearchSyncDefinition) GetVisualSettings() string {
	if o == nil || o.VisualSettings == nil {
		var ret string
		return ret
	}
	return *o.VisualSettings
}

// GetVisualSettingsOk returns a tuple with the VisualSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSearchSyncDefinition) GetVisualSettingsOk() (*string, bool) {
	if o == nil || o.VisualSettings == nil {
		return nil, false
	}
	return o.VisualSettings, true
}

// HasVisualSettings returns a boolean if a field has been set.
func (o *MetricsSearchSyncDefinition) HasVisualSettings() bool {
	if o != nil && o.VisualSettings != nil {
		return true
	}

	return false
}

// SetVisualSettings gets a reference to the given string and assigns it to the VisualSettings field.
func (o *MetricsSearchSyncDefinition) SetVisualSettings(v string) {
	o.VisualSettings = &v
}

func (o MetricsSearchSyncDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedContentSyncDefinition, errContentSyncDefinition := json.Marshal(o.ContentSyncDefinition)
	if errContentSyncDefinition != nil {
		return []byte{}, errContentSyncDefinition
	}
	errContentSyncDefinition = json.Unmarshal([]byte(serializedContentSyncDefinition), &toSerialize)
	if errContentSyncDefinition != nil {
		return []byte{}, errContentSyncDefinition
	}
	if true {
		toSerialize["timeRange"] = o.TimeRange
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["queries"] = o.Queries
	}
	if o.VisualSettings != nil {
		toSerialize["visualSettings"] = o.VisualSettings
	}
	return json.Marshal(toSerialize)
}

type NullableMetricsSearchSyncDefinition struct {
	value *MetricsSearchSyncDefinition
	isSet bool
}

func (v NullableMetricsSearchSyncDefinition) Get() *MetricsSearchSyncDefinition {
	return v.value
}

func (v *NullableMetricsSearchSyncDefinition) Set(val *MetricsSearchSyncDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsSearchSyncDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsSearchSyncDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsSearchSyncDefinition(val *MetricsSearchSyncDefinition) *NullableMetricsSearchSyncDefinition {
	return &NullableMetricsSearchSyncDefinition{value: val, isSet: true}
}

func (v NullableMetricsSearchSyncDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsSearchSyncDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


