/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the AggregationQueryRow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AggregationQueryRow{}

// AggregationQueryRow struct for AggregationQueryRow
type AggregationQueryRow struct {
	Query TraceQueryExpression `json:"query"`
	// An identifier used to reference this particular row of the query request while fetching a query result. Within a query, row ids must have distinct values.
	RowId string `json:"rowId"`
}

// NewAggregationQueryRow instantiates a new AggregationQueryRow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregationQueryRow(query TraceQueryExpression, rowId string) *AggregationQueryRow {
	this := AggregationQueryRow{}
	this.Query = query
	this.RowId = rowId
	return &this
}

// NewAggregationQueryRowWithDefaults instantiates a new AggregationQueryRow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregationQueryRowWithDefaults() *AggregationQueryRow {
	this := AggregationQueryRow{}
	return &this
}

// GetQuery returns the Query field value
func (o *AggregationQueryRow) GetQuery() TraceQueryExpression {
	if o == nil {
		var ret TraceQueryExpression
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *AggregationQueryRow) GetQueryOk() (*TraceQueryExpression, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *AggregationQueryRow) SetQuery(v TraceQueryExpression) {
	o.Query = v
}

// GetRowId returns the RowId field value
func (o *AggregationQueryRow) GetRowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RowId
}

// GetRowIdOk returns a tuple with the RowId field value
// and a boolean to check if the value has been set.
func (o *AggregationQueryRow) GetRowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RowId, true
}

// SetRowId sets field value
func (o *AggregationQueryRow) SetRowId(v string) {
	o.RowId = v
}

func (o AggregationQueryRow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AggregationQueryRow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["query"] = o.Query
	toSerialize["rowId"] = o.RowId
	return toSerialize, nil
}

type NullableAggregationQueryRow struct {
	value *AggregationQueryRow
	isSet bool
}

func (v NullableAggregationQueryRow) Get() *AggregationQueryRow {
	return v.value
}

func (v *NullableAggregationQueryRow) Set(val *AggregationQueryRow) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregationQueryRow) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregationQueryRow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregationQueryRow(val *AggregationQueryRow) *NullableAggregationQueryRow {
	return &NullableAggregationQueryRow{value: val, isSet: true}
}

func (v NullableAggregationQueryRow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregationQueryRow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


