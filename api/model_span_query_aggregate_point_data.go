/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// checks if the SpanQueryAggregatePointData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpanQueryAggregatePointData{}

// SpanQueryAggregatePointData struct for SpanQueryAggregatePointData
type SpanQueryAggregatePointData struct {
	// Value that represents a point on the x axis.
	X *float64 `json:"x,omitempty"`
	// Value that represents a point on the y axis.
	Y string `json:"y"`
	// Values that represents a point on the x axis.
	XAxisValues *map[string]string `json:"xAxisValues,omitempty"`
}

// NewSpanQueryAggregatePointData instantiates a new SpanQueryAggregatePointData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpanQueryAggregatePointData(y string) *SpanQueryAggregatePointData {
	this := SpanQueryAggregatePointData{}
	this.Y = y
	return &this
}

// NewSpanQueryAggregatePointDataWithDefaults instantiates a new SpanQueryAggregatePointData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpanQueryAggregatePointDataWithDefaults() *SpanQueryAggregatePointData {
	this := SpanQueryAggregatePointData{}
	return &this
}

// GetX returns the X field value if set, zero value otherwise.
func (o *SpanQueryAggregatePointData) GetX() float64 {
	if o == nil || IsNil(o.X) {
		var ret float64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanQueryAggregatePointData) GetXOk() (*float64, bool) {
	if o == nil || IsNil(o.X) {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *SpanQueryAggregatePointData) HasX() bool {
	if o != nil && !IsNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given float64 and assigns it to the X field.
func (o *SpanQueryAggregatePointData) SetX(v float64) {
	o.X = &v
}

// GetY returns the Y field value
func (o *SpanQueryAggregatePointData) GetY() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Y
}

// GetYOk returns a tuple with the Y field value
// and a boolean to check if the value has been set.
func (o *SpanQueryAggregatePointData) GetYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Y, true
}

// SetY sets field value
func (o *SpanQueryAggregatePointData) SetY(v string) {
	o.Y = v
}

// GetXAxisValues returns the XAxisValues field value if set, zero value otherwise.
func (o *SpanQueryAggregatePointData) GetXAxisValues() map[string]string {
	if o == nil || IsNil(o.XAxisValues) {
		var ret map[string]string
		return ret
	}
	return *o.XAxisValues
}

// GetXAxisValuesOk returns a tuple with the XAxisValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanQueryAggregatePointData) GetXAxisValuesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.XAxisValues) {
		return nil, false
	}
	return o.XAxisValues, true
}

// HasXAxisValues returns a boolean if a field has been set.
func (o *SpanQueryAggregatePointData) HasXAxisValues() bool {
	if o != nil && !IsNil(o.XAxisValues) {
		return true
	}

	return false
}

// SetXAxisValues gets a reference to the given map[string]string and assigns it to the XAxisValues field.
func (o *SpanQueryAggregatePointData) SetXAxisValues(v map[string]string) {
	o.XAxisValues = &v
}

func (o SpanQueryAggregatePointData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpanQueryAggregatePointData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.X) {
		toSerialize["x"] = o.X
	}
	toSerialize["y"] = o.Y
	if !IsNil(o.XAxisValues) {
		toSerialize["xAxisValues"] = o.XAxisValues
	}
	return toSerialize, nil
}

type NullableSpanQueryAggregatePointData struct {
	value *SpanQueryAggregatePointData
	isSet bool
}

func (v NullableSpanQueryAggregatePointData) Get() *SpanQueryAggregatePointData {
	return v.value
}

func (v *NullableSpanQueryAggregatePointData) Set(val *SpanQueryAggregatePointData) {
	v.value = val
	v.isSet = true
}

func (v NullableSpanQueryAggregatePointData) IsSet() bool {
	return v.isSet
}

func (v *NullableSpanQueryAggregatePointData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpanQueryAggregatePointData(val *SpanQueryAggregatePointData) *NullableSpanQueryAggregatePointData {
	return &NullableSpanQueryAggregatePointData{value: val, isSet: true}
}

func (v NullableSpanQueryAggregatePointData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpanQueryAggregatePointData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


