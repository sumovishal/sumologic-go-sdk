/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// ContentPermissionResult struct for ContentPermissionResult
type ContentPermissionResult struct {
	// Explicitly assigned content permissions.
	ExplicitPermissions []ContentPermissionAssignment `json:"explicitPermissions"`
	// Implicitly inherited content permissions.
	ImplicitPermissions []ContentPermissionAssignment `json:"implicitPermissions,omitempty"`
}

// NewContentPermissionResult instantiates a new ContentPermissionResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentPermissionResult(explicitPermissions []ContentPermissionAssignment) *ContentPermissionResult {
	this := ContentPermissionResult{}
	this.ExplicitPermissions = explicitPermissions
	return &this
}

// NewContentPermissionResultWithDefaults instantiates a new ContentPermissionResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentPermissionResultWithDefaults() *ContentPermissionResult {
	this := ContentPermissionResult{}
	return &this
}

// GetExplicitPermissions returns the ExplicitPermissions field value
func (o *ContentPermissionResult) GetExplicitPermissions() []ContentPermissionAssignment {
	if o == nil {
		var ret []ContentPermissionAssignment
		return ret
	}

	return o.ExplicitPermissions
}

// GetExplicitPermissionsOk returns a tuple with the ExplicitPermissions field value
// and a boolean to check if the value has been set.
func (o *ContentPermissionResult) GetExplicitPermissionsOk() ([]ContentPermissionAssignment, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExplicitPermissions, true
}

// SetExplicitPermissions sets field value
func (o *ContentPermissionResult) SetExplicitPermissions(v []ContentPermissionAssignment) {
	o.ExplicitPermissions = v
}

// GetImplicitPermissions returns the ImplicitPermissions field value if set, zero value otherwise.
func (o *ContentPermissionResult) GetImplicitPermissions() []ContentPermissionAssignment {
	if o == nil || o.ImplicitPermissions == nil {
		var ret []ContentPermissionAssignment
		return ret
	}
	return o.ImplicitPermissions
}

// GetImplicitPermissionsOk returns a tuple with the ImplicitPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentPermissionResult) GetImplicitPermissionsOk() ([]ContentPermissionAssignment, bool) {
	if o == nil || o.ImplicitPermissions == nil {
		return nil, false
	}
	return o.ImplicitPermissions, true
}

// HasImplicitPermissions returns a boolean if a field has been set.
func (o *ContentPermissionResult) HasImplicitPermissions() bool {
	if o != nil && o.ImplicitPermissions != nil {
		return true
	}

	return false
}

// SetImplicitPermissions gets a reference to the given []ContentPermissionAssignment and assigns it to the ImplicitPermissions field.
func (o *ContentPermissionResult) SetImplicitPermissions(v []ContentPermissionAssignment) {
	o.ImplicitPermissions = v
}

func (o ContentPermissionResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["explicitPermissions"] = o.ExplicitPermissions
	}
	if o.ImplicitPermissions != nil {
		toSerialize["implicitPermissions"] = o.ImplicitPermissions
	}
	return json.Marshal(toSerialize)
}

type NullableContentPermissionResult struct {
	value *ContentPermissionResult
	isSet bool
}

func (v NullableContentPermissionResult) Get() *ContentPermissionResult {
	return v.value
}

func (v *NullableContentPermissionResult) Set(val *ContentPermissionResult) {
	v.value = val
	v.isSet = true
}

func (v NullableContentPermissionResult) IsSet() bool {
	return v.isSet
}

func (v *NullableContentPermissionResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentPermissionResult(val *ContentPermissionResult) *NullableContentPermissionResult {
	return &NullableContentPermissionResult{value: val, isSet: true}
}

func (v NullableContentPermissionResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentPermissionResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


