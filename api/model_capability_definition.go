/*
Sumo Logic API

Go client for Sumo Logic API. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CapabilityDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CapabilityDefinition{}

// CapabilityDefinition struct for CapabilityDefinition
type CapabilityDefinition struct {
	// The name of the capability
	Id string `json:"id"`
	// The UI label for the capability.
	Label string `json:"label"`
	// Any capabilities that are required for this capability to be enabled.
	DependsOn []string `json:"dependsOn"`
	Group CapabilityDefinitionGroup `json:"group"`
	// Warning message that appears when this capability is enabled.
	Message *string `json:"message,omitempty"`
}

// NewCapabilityDefinition instantiates a new CapabilityDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapabilityDefinition(id string, label string, dependsOn []string, group CapabilityDefinitionGroup) *CapabilityDefinition {
	this := CapabilityDefinition{}
	this.Id = id
	this.Label = label
	this.DependsOn = dependsOn
	this.Group = group
	return &this
}

// NewCapabilityDefinitionWithDefaults instantiates a new CapabilityDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapabilityDefinitionWithDefaults() *CapabilityDefinition {
	this := CapabilityDefinition{}
	return &this
}

// GetId returns the Id field value
func (o *CapabilityDefinition) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CapabilityDefinition) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CapabilityDefinition) SetId(v string) {
	o.Id = v
}

// GetLabel returns the Label field value
func (o *CapabilityDefinition) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *CapabilityDefinition) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *CapabilityDefinition) SetLabel(v string) {
	o.Label = v
}

// GetDependsOn returns the DependsOn field value
func (o *CapabilityDefinition) GetDependsOn() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DependsOn
}

// GetDependsOnOk returns a tuple with the DependsOn field value
// and a boolean to check if the value has been set.
func (o *CapabilityDefinition) GetDependsOnOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DependsOn, true
}

// SetDependsOn sets field value
func (o *CapabilityDefinition) SetDependsOn(v []string) {
	o.DependsOn = v
}

// GetGroup returns the Group field value
func (o *CapabilityDefinition) GetGroup() CapabilityDefinitionGroup {
	if o == nil {
		var ret CapabilityDefinitionGroup
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *CapabilityDefinition) GetGroupOk() (*CapabilityDefinitionGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *CapabilityDefinition) SetGroup(v CapabilityDefinitionGroup) {
	o.Group = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CapabilityDefinition) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapabilityDefinition) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CapabilityDefinition) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CapabilityDefinition) SetMessage(v string) {
	o.Message = &v
}

func (o CapabilityDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CapabilityDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["label"] = o.Label
	toSerialize["dependsOn"] = o.DependsOn
	toSerialize["group"] = o.Group
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableCapabilityDefinition struct {
	value *CapabilityDefinition
	isSet bool
}

func (v NullableCapabilityDefinition) Get() *CapabilityDefinition {
	return v.value
}

func (v *NullableCapabilityDefinition) Set(val *CapabilityDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableCapabilityDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableCapabilityDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapabilityDefinition(val *CapabilityDefinition) *NullableCapabilityDefinition {
	return &NullableCapabilityDefinition{value: val, isSet: true}
}

func (v NullableCapabilityDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapabilityDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


