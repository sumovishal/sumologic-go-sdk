/*
Sumo Logic API

Go client for Sumo Logic API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologic

import (
	"encoding/json"
)

// LinkedDashboard struct for LinkedDashboard
type LinkedDashboard struct {
	// Identifier of the linked dashboard.
	Id string `json:"id"`
	// Relative path of the linked dashboard to the dashboard of the linking panel.
	RelativePath *string `json:"relativePath,omitempty"`
	// Include time range from the current dashboard to the linked dashboard.
	IncludeTimeRange *bool `json:"includeTimeRange,omitempty"`
	// Include variables from the current dashboard to the linked dashboard.
	IncludeVariables *bool `json:"includeVariables,omitempty"`
}

// NewLinkedDashboard instantiates a new LinkedDashboard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkedDashboard(id string) *LinkedDashboard {
	this := LinkedDashboard{}
	this.Id = id
	var includeTimeRange bool = true
	this.IncludeTimeRange = &includeTimeRange
	var includeVariables bool = true
	this.IncludeVariables = &includeVariables
	return &this
}

// NewLinkedDashboardWithDefaults instantiates a new LinkedDashboard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkedDashboardWithDefaults() *LinkedDashboard {
	this := LinkedDashboard{}
	var includeTimeRange bool = true
	this.IncludeTimeRange = &includeTimeRange
	var includeVariables bool = true
	this.IncludeVariables = &includeVariables
	return &this
}

// GetId returns the Id field value
func (o *LinkedDashboard) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LinkedDashboard) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LinkedDashboard) SetId(v string) {
	o.Id = v
}

// GetRelativePath returns the RelativePath field value if set, zero value otherwise.
func (o *LinkedDashboard) GetRelativePath() string {
	if o == nil || o.RelativePath == nil {
		var ret string
		return ret
	}
	return *o.RelativePath
}

// GetRelativePathOk returns a tuple with the RelativePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedDashboard) GetRelativePathOk() (*string, bool) {
	if o == nil || o.RelativePath == nil {
		return nil, false
	}
	return o.RelativePath, true
}

// HasRelativePath returns a boolean if a field has been set.
func (o *LinkedDashboard) HasRelativePath() bool {
	if o != nil && o.RelativePath != nil {
		return true
	}

	return false
}

// SetRelativePath gets a reference to the given string and assigns it to the RelativePath field.
func (o *LinkedDashboard) SetRelativePath(v string) {
	o.RelativePath = &v
}

// GetIncludeTimeRange returns the IncludeTimeRange field value if set, zero value otherwise.
func (o *LinkedDashboard) GetIncludeTimeRange() bool {
	if o == nil || o.IncludeTimeRange == nil {
		var ret bool
		return ret
	}
	return *o.IncludeTimeRange
}

// GetIncludeTimeRangeOk returns a tuple with the IncludeTimeRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedDashboard) GetIncludeTimeRangeOk() (*bool, bool) {
	if o == nil || o.IncludeTimeRange == nil {
		return nil, false
	}
	return o.IncludeTimeRange, true
}

// HasIncludeTimeRange returns a boolean if a field has been set.
func (o *LinkedDashboard) HasIncludeTimeRange() bool {
	if o != nil && o.IncludeTimeRange != nil {
		return true
	}

	return false
}

// SetIncludeTimeRange gets a reference to the given bool and assigns it to the IncludeTimeRange field.
func (o *LinkedDashboard) SetIncludeTimeRange(v bool) {
	o.IncludeTimeRange = &v
}

// GetIncludeVariables returns the IncludeVariables field value if set, zero value otherwise.
func (o *LinkedDashboard) GetIncludeVariables() bool {
	if o == nil || o.IncludeVariables == nil {
		var ret bool
		return ret
	}
	return *o.IncludeVariables
}

// GetIncludeVariablesOk returns a tuple with the IncludeVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedDashboard) GetIncludeVariablesOk() (*bool, bool) {
	if o == nil || o.IncludeVariables == nil {
		return nil, false
	}
	return o.IncludeVariables, true
}

// HasIncludeVariables returns a boolean if a field has been set.
func (o *LinkedDashboard) HasIncludeVariables() bool {
	if o != nil && o.IncludeVariables != nil {
		return true
	}

	return false
}

// SetIncludeVariables gets a reference to the given bool and assigns it to the IncludeVariables field.
func (o *LinkedDashboard) SetIncludeVariables(v bool) {
	o.IncludeVariables = &v
}

func (o LinkedDashboard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.RelativePath != nil {
		toSerialize["relativePath"] = o.RelativePath
	}
	if o.IncludeTimeRange != nil {
		toSerialize["includeTimeRange"] = o.IncludeTimeRange
	}
	if o.IncludeVariables != nil {
		toSerialize["includeVariables"] = o.IncludeVariables
	}
	return json.Marshal(toSerialize)
}

type NullableLinkedDashboard struct {
	value *LinkedDashboard
	isSet bool
}

func (v NullableLinkedDashboard) Get() *LinkedDashboard {
	return v.value
}

func (v *NullableLinkedDashboard) Set(val *LinkedDashboard) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkedDashboard) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkedDashboard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkedDashboard(val *LinkedDashboard) *NullableLinkedDashboard {
	return &NullableLinkedDashboard{value: val, isSet: true}
}

func (v NullableLinkedDashboard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkedDashboard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


